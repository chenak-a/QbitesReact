var e = require("graphql");

var r = require("wonka");

function rehydrateGraphQlError(r) {
  if ("string" == typeof r) {
    return new e.GraphQLError(r);
  } else if ("object" == typeof r && r.message) {
    return new e.GraphQLError(r.message, r.nodes, r.source, r.positions, r.path, r, r.extensions || {});
  } else {
    return r;
  }
}

var t = function(e) {
  function CombinedError(r) {
    var t = r.networkError;
    var n = r.response;
    var o = (r.graphQLErrors || []).map(rehydrateGraphQlError);
    var i = function generateErrorMessage(e, r) {
      var t = "";
      if (void 0 !== e) {
        return t = "[Network] " + e.message;
      }
      if (void 0 !== r) {
        r.forEach((function(e) {
          t += "[GraphQL] " + e.message + "\n";
        }));
      }
      return t.trim();
    }(t, o);
    e.call(this, i);
    this.name = "CombinedError";
    this.message = i;
    this.graphQLErrors = o;
    this.networkError = t;
    this.response = n;
  }
  if (e) {
    CombinedError.__proto__ = e;
  }
  (CombinedError.prototype = Object.create(e && e.prototype)).constructor = CombinedError;
  CombinedError.prototype.toString = function toString() {
    return this.message;
  };
  return CombinedError;
}(Error);

function phash(e, r) {
  e |= 0;
  for (var t = 0, n = 0 | r.length; t < n; t++) {
    e = (e << 5) + e + r.charCodeAt(t);
  }
  return e;
}

function hash(e) {
  return phash(5381, e) >>> 0;
}

var n = new Set;

var o = new WeakMap;

function stringify(e) {
  if (null === e || n.has(e)) {
    return "null";
  } else if ("object" != typeof e) {
    return JSON.stringify(e) || "";
  } else if (e.toJSON) {
    return stringify(e.toJSON());
  } else if (Array.isArray(e)) {
    var r = "[";
    for (var t = 0, i = e.length; t < i; t++) {
      if (t > 0) {
        r += ",";
      }
      var s = stringify(e[t]);
      r += s.length > 0 ? s : "null";
    }
    return r += "]";
  }
  var a = Object.keys(e).sort();
  if (!a.length && e.constructor && e.constructor !== Object) {
    var u = o.get(e) || Math.random().toString(36).slice(2);
    o.set(e, u);
    return '{"__key":"' + u + '"}';
  }
  n.add(e);
  var f = "{";
  for (var c = 0, p = a.length; c < p; c++) {
    var l = a[c];
    var h = stringify(e[l]);
    if (h) {
      if (f.length > 1) {
        f += ",";
      }
      f += stringify(l) + ":" + h;
    }
  }
  n.delete(e);
  return f += "}";
}

function stringifyVariables(e) {
  n.clear();
  return stringify(e);
}

function stringifyDocument(r) {
  var t = ("string" != typeof r ? r.loc && r.loc.source.body || e.print(r) : r).replace(/([\s,]|#[^\n\r]+)+/g, " ").trim();
  if ("string" != typeof r) {
    var n = "definitions" in r && getOperationName(r);
    if (n) {
      t = "# " + n + "\n" + t;
    }
    if (!r.loc) {
      r.loc = {
        start: 0,
        end: t.length,
        source: {
          body: t,
          name: "gql",
          locationOffset: {
            line: 1,
            column: 1
          }
        }
      };
    }
  }
  return t;
}

var i = new Map;

function keyDocument(r) {
  var t;
  var n;
  if ("string" == typeof r) {
    t = hash(stringifyDocument(r));
    n = i.get(t) || e.parse(r, {
      noLocation: !0
    });
  } else {
    t = r.__key || hash(stringifyDocument(r));
    n = i.get(t) || r;
  }
  if (!n.loc) {
    stringifyDocument(n);
  }
  n.__key = t;
  i.set(t, n);
  return n;
}

function getOperationName(r) {
  for (var t = 0, n = r.definitions.length; t < n; t++) {
    var o = r.definitions[t];
    if (o.kind === e.Kind.OPERATION_DEFINITION && o.name) {
      return o.name.value;
    }
  }
}

function makeResult(e, r, n) {
  return {
    operation: e,
    data: r.data,
    error: Array.isArray(r.errors) ? new t({
      graphQLErrors: r.errors,
      response: n
    }) : void 0,
    extensions: "object" == typeof r.extensions && r.extensions || void 0
  };
}

function makeErrorResult(e, r, n) {
  return {
    operation: e,
    data: void 0,
    error: new t({
      networkError: r,
      response: n
    }),
    extensions: void 0
  };
}

function _extends() {
  return (_extends = Object.assign || function(e) {
    for (var r = 1; r < arguments.length; r++) {
      var t = arguments[r];
      for (var n in t) {
        if (Object.prototype.hasOwnProperty.call(t, n)) {
          e[n] = t[n];
        }
      }
    }
    return e;
  }).apply(this, arguments);
}

function shouldUseGet(e) {
  return "query" === e.kind && !!e.context.preferGetMethod;
}

exports.CombinedError = t;

exports._extends = _extends;

exports.createRequest = function createRequest(e, r) {
  if (!r) {
    r = {};
  }
  var t = keyDocument(e);
  return {
    key: phash(t.__key, stringifyVariables(r)) >>> 0,
    query: t,
    variables: r
  };
};

exports.getOperationName = getOperationName;

exports.keyDocument = keyDocument;

exports.makeErrorResult = makeErrorResult;

exports.makeFetchBody = function makeFetchBody(r) {
  return {
    query: e.print(r.query),
    operationName: getOperationName(r.query),
    variables: r.variables || void 0,
    extensions: void 0
  };
};

exports.makeFetchOptions = function makeFetchOptions(e, r) {
  var t = shouldUseGet(e);
  var n = "function" == typeof e.context.fetchOptions ? e.context.fetchOptions() : e.context.fetchOptions || {};
  return _extends({}, n, {
    body: !t && r ? JSON.stringify(r) : void 0,
    method: t ? "GET" : "POST",
    headers: t ? n.headers : _extends({}, {
      "content-type": "application/json"
    }, n.headers)
  });
};

exports.makeFetchSource = function makeFetchSource(e, t, n) {
  return r.make((function(r) {
    var o = r.next;
    var i = r.complete;
    var s = "undefined" != typeof AbortController ? new AbortController : null;
    var a = !1;
    Promise.resolve().then((function() {
      if (a) {
        return;
      } else if (s) {
        n.signal = s.signal;
      }
      return function executeFetch(e, r, t) {
        var n = !1;
        var o;
        return (e.context.fetch || fetch)(r, t).then((function(e) {
          o = e;
          n = e.status < 200 || e.status >= ("manual" === t.redirect ? 400 : 300);
          return e.json();
        })).then((function(r) {
          if (!("data" in r) && !("errors" in r)) {
            throw new Error("No Content");
          }
          return makeResult(e, r, o);
        })).catch((function(r) {
          if ("AbortError" !== r.name) {
            return makeErrorResult(e, n ? new Error(o.statusText) : r, o);
          }
        }));
      }(e, t, n);
    })).then((function(e) {
      if (!a) {
        a = !0;
        if (e) {
          o(e);
        }
        i();
      }
    }));
    return function() {
      a = !0;
      if (s) {
        s.abort();
      }
    };
  }));
};

exports.makeFetchURL = function makeFetchURL(e, r) {
  var t = shouldUseGet(e);
  var n = e.context.url;
  if (!t || !r) {
    return n;
  }
  var o = [];
  if (r.operationName) {
    o.push("operationName=" + encodeURIComponent(r.operationName));
  }
  if (r.query) {
    o.push("query=" + encodeURIComponent(r.query.replace(/([\s,]|#[^\n\r]+)+/g, " ").trim()));
  }
  if (r.variables) {
    o.push("variables=" + encodeURIComponent(stringifyVariables(r.variables)));
  }
  if (r.extensions) {
    o.push("extensions=" + encodeURIComponent(stringifyVariables(r.extensions)));
  }
  return n + "?" + o.join("&");
};

exports.makeResult = makeResult;

exports.stringifyDocument = stringifyDocument;

exports.stringifyVariables = stringifyVariables;
//# sourceMappingURL=b4631212.js.map
