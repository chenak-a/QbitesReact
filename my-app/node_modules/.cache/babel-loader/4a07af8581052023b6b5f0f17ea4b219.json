{"ast":null,"code":"import { bisector, tickStep } from \"d3-array\";\nimport { interpolateNumber as reinterpolate } from \"d3-interpolate\";\nimport { timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond } from \"d3-time\";\nimport { timeFormat } from \"d3-time-format\";\nimport { map } from \"./array\";\nimport { default as continuous, copy, deinterpolateLinear as deinterpolate } from \"./continuous\";\nimport nice from \"./nice\";\nvar durationSecond = 1000,\n    durationMinute = durationSecond * 60,\n    durationHour = durationMinute * 60,\n    durationDay = durationHour * 24,\n    durationWeek = durationDay * 7,\n    durationMonth = durationDay * 30,\n    durationYear = durationDay * 365;\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nexport function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n  var scale = continuous(deinterpolate, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n  var tickIntervals = [[second, 1, durationSecond], [second, 5, 5 * durationSecond], [second, 15, 15 * durationSecond], [second, 30, 30 * durationSecond], [minute, 1, durationMinute], [minute, 5, 5 * durationMinute], [minute, 15, 15 * durationMinute], [minute, 30, 30 * durationMinute], [hour, 1, durationHour], [hour, 3, 3 * durationHour], [hour, 6, 6 * durationHour], [hour, 12, 12 * durationHour], [day, 1, durationDay], [day, 2, 2 * durationDay], [week, 1, durationWeek], [month, 1, durationMonth], [month, 3, 3 * durationMonth], [year, 1, durationYear]];\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond : minute(date) < date ? formatSecond : hour(date) < date ? formatMinute : day(date) < date ? formatHour : month(date) < date ? week(date) < date ? formatDay : formatWeek : year(date) < date ? formatMonth : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10; // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function (i) {\n        return i[2];\n      }).right(tickIntervals, target);\n\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = Math.max(tickStep(start, stop, interval), 1);\n        interval = millisecond;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function (y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function (_) {\n    return arguments.length ? domain(map.call(_, number)) : domain().map(date);\n  };\n\n  scale.ticks = function (interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function (count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function (interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step)) ? domain(nice(d, interval)) : scale;\n  };\n\n  scale.copy = function () {\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n  };\n\n  return scale;\n}\nexport default function () {\n  return calendar(timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n}","map":{"version":3,"names":["bisector","tickStep","interpolateNumber","reinterpolate","timeYear","timeMonth","timeWeek","timeDay","timeHour","timeMinute","timeSecond","timeMillisecond","timeFormat","map","default","continuous","copy","deinterpolateLinear","deinterpolate","nice","durationSecond","durationMinute","durationHour","durationDay","durationWeek","durationMonth","durationYear","date","t","Date","number","calendar","year","month","week","day","hour","minute","second","millisecond","format","scale","invert","domain","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","formatMonth","formatYear","tickIntervals","tickFormat","tickInterval","interval","start","stop","step","target","Math","abs","i","right","length","max","every","y","_","arguments","call","ticks","d","t0","t1","r","range","reverse","count","specifier"],"sources":["/home/chenak/QbitesReact/my-app/node_modules/d3-scale/src/time.js"],"sourcesContent":["import {bisector, tickStep} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond} from \"d3-time\";\nimport {timeFormat} from \"d3-time-format\";\nimport {map} from \"./array\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport nice from \"./nice\";\n\nvar durationSecond = 1000,\n    durationMinute = durationSecond * 60,\n    durationHour = durationMinute * 60,\n    durationDay = durationHour * 24,\n    durationWeek = durationDay * 7,\n    durationMonth = durationDay * 30,\n    durationYear = durationDay * 365;\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nexport function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n  var scale = continuous(deinterpolate, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = Math.max(tickStep(start, stop, interval), 1);\n        interval = millisecond;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map.call(_, number)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n  };\n\n  return scale;\n}\n\nexport default function() {\n  return calendar(timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}