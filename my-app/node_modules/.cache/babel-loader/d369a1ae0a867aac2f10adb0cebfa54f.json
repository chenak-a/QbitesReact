{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport useMemo from \"rc-util/es/hooks/useMemo\";\nimport Tree from 'rc-tree';\nimport { SelectContext } from './Context';\nimport useKeyValueMapping from './hooks/useKeyValueMapping';\nimport useKeyValueMap from './hooks/useKeyValueMap';\nvar HIDDEN_STYLE = {\n  width: 0,\n  height: 0,\n  display: 'flex',\n  overflow: 'hidden',\n  opacity: 0,\n  border: 0,\n  padding: 0,\n  margin: 0\n};\n\nvar OptionList = function OptionList(props, ref) {\n  var prefixCls = props.prefixCls,\n      height = props.height,\n      itemHeight = props.itemHeight,\n      virtual = props.virtual,\n      options = props.options,\n      flattenOptions = props.flattenOptions,\n      multiple = props.multiple,\n      searchValue = props.searchValue,\n      onSelect = props.onSelect,\n      onToggleOpen = props.onToggleOpen,\n      open = props.open,\n      notFoundContent = props.notFoundContent,\n      onMouseEnter = props.onMouseEnter;\n\n  var _React$useContext = React.useContext(SelectContext),\n      checkable = _React$useContext.checkable,\n      checkedKeys = _React$useContext.checkedKeys,\n      halfCheckedKeys = _React$useContext.halfCheckedKeys,\n      treeExpandedKeys = _React$useContext.treeExpandedKeys,\n      treeDefaultExpandAll = _React$useContext.treeDefaultExpandAll,\n      treeDefaultExpandedKeys = _React$useContext.treeDefaultExpandedKeys,\n      onTreeExpand = _React$useContext.onTreeExpand,\n      treeIcon = _React$useContext.treeIcon,\n      showTreeIcon = _React$useContext.showTreeIcon,\n      switcherIcon = _React$useContext.switcherIcon,\n      treeLine = _React$useContext.treeLine,\n      treeNodeFilterProp = _React$useContext.treeNodeFilterProp,\n      loadData = _React$useContext.loadData,\n      treeLoadedKeys = _React$useContext.treeLoadedKeys,\n      treeMotion = _React$useContext.treeMotion,\n      onTreeLoad = _React$useContext.onTreeLoad;\n\n  var treeRef = React.useRef();\n  var memoOptions = useMemo(function () {\n    return options;\n  }, [open, options], function (prev, next) {\n    return next[0] && prev[1] !== next[1];\n  });\n\n  var _useKeyValueMap = useKeyValueMap(flattenOptions),\n      _useKeyValueMap2 = _slicedToArray(_useKeyValueMap, 2),\n      cacheKeyMap = _useKeyValueMap2[0],\n      cacheValueMap = _useKeyValueMap2[1];\n\n  var _useKeyValueMapping = useKeyValueMapping(cacheKeyMap, cacheValueMap),\n      _useKeyValueMapping2 = _slicedToArray(_useKeyValueMapping, 2),\n      getEntityByKey = _useKeyValueMapping2[0],\n      getEntityByValue = _useKeyValueMapping2[1]; // ========================== Values ==========================\n\n\n  var valueKeys = React.useMemo(function () {\n    return checkedKeys.map(function (val) {\n      var entity = getEntityByValue(val);\n      return entity ? entity.key : null;\n    });\n  }, [checkedKeys, getEntityByValue]);\n  var mergedCheckedKeys = React.useMemo(function () {\n    if (!checkable) {\n      return null;\n    }\n\n    return {\n      checked: valueKeys,\n      halfChecked: halfCheckedKeys\n    };\n  }, [valueKeys, halfCheckedKeys, checkable]); // ========================== Scroll ==========================\n\n  React.useEffect(function () {\n    // Single mode should scroll to current key\n    if (open && !multiple && valueKeys.length) {\n      var _treeRef$current;\n\n      (_treeRef$current = treeRef.current) === null || _treeRef$current === void 0 ? void 0 : _treeRef$current.scrollTo({\n        key: valueKeys[0]\n      });\n    }\n  }, [open]); // ========================== Search ==========================\n\n  var lowerSearchValue = String(searchValue).toLowerCase();\n\n  var filterTreeNode = function filterTreeNode(treeNode) {\n    if (!lowerSearchValue) {\n      return false;\n    }\n\n    return String(treeNode[treeNodeFilterProp]).toLowerCase().includes(lowerSearchValue);\n  }; // =========================== Keys ===========================\n\n\n  var _React$useState = React.useState(treeDefaultExpandedKeys),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      expandedKeys = _React$useState2[0],\n      setExpandedKeys = _React$useState2[1];\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      searchExpandedKeys = _React$useState4[0],\n      setSearchExpandedKeys = _React$useState4[1];\n\n  var mergedExpandedKeys = React.useMemo(function () {\n    if (treeExpandedKeys) {\n      return _toConsumableArray(treeExpandedKeys);\n    }\n\n    return searchValue ? searchExpandedKeys : expandedKeys;\n  }, [expandedKeys, searchExpandedKeys, lowerSearchValue, treeExpandedKeys]);\n  React.useEffect(function () {\n    if (searchValue) {\n      setSearchExpandedKeys(flattenOptions.map(function (o) {\n        return o.key;\n      }));\n    }\n  }, [searchValue]);\n\n  var onInternalExpand = function onInternalExpand(keys) {\n    setExpandedKeys(keys);\n    setSearchExpandedKeys(keys);\n\n    if (onTreeExpand) {\n      onTreeExpand(keys);\n    }\n  }; // ========================== Events ==========================\n\n\n  var onListMouseDown = function onListMouseDown(event) {\n    event.preventDefault();\n  };\n\n  var onInternalSelect = function onInternalSelect(_, _ref) {\n    var key = _ref.node.key;\n    var entity = getEntityByKey(key, checkable ? 'checkbox' : 'select');\n\n    if (entity !== null) {\n      onSelect(entity.data.value, {\n        selected: !checkedKeys.includes(entity.data.value)\n      });\n    }\n\n    if (!multiple) {\n      onToggleOpen(false);\n    }\n  }; // ========================= Keyboard =========================\n\n\n  var _React$useState5 = React.useState(null),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      activeKey = _React$useState6[0],\n      setActiveKey = _React$useState6[1];\n\n  var activeEntity = getEntityByKey(activeKey);\n  React.useImperativeHandle(ref, function () {\n    var _treeRef$current2;\n\n    return {\n      scrollTo: (_treeRef$current2 = treeRef.current) === null || _treeRef$current2 === void 0 ? void 0 : _treeRef$current2.scrollTo,\n      onKeyDown: function onKeyDown(event) {\n        var _treeRef$current3;\n\n        var which = event.which;\n\n        switch (which) {\n          // >>> Arrow keys\n          case KeyCode.UP:\n          case KeyCode.DOWN:\n          case KeyCode.LEFT:\n          case KeyCode.RIGHT:\n            (_treeRef$current3 = treeRef.current) === null || _treeRef$current3 === void 0 ? void 0 : _treeRef$current3.onKeyDown(event);\n            break;\n          // >>> Select item\n\n          case KeyCode.ENTER:\n            {\n              var _ref2 = (activeEntity === null || activeEntity === void 0 ? void 0 : activeEntity.data) || {},\n                  selectable = _ref2.selectable,\n                  value = _ref2.value;\n\n              if (selectable !== false) {\n                onInternalSelect(null, {\n                  node: {\n                    key: activeKey\n                  },\n                  selected: !checkedKeys.includes(value)\n                });\n              }\n\n              break;\n            }\n          // >>> Close\n\n          case KeyCode.ESC:\n            {\n              onToggleOpen(false);\n            }\n        }\n      },\n      onKeyUp: function onKeyUp() {}\n    };\n  }); // ========================== Render ==========================\n\n  if (memoOptions.length === 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      role: \"listbox\",\n      className: \"\".concat(prefixCls, \"-empty\"),\n      onMouseDown: onListMouseDown\n    }, notFoundContent);\n  }\n\n  var treeProps = {};\n\n  if (treeLoadedKeys) {\n    treeProps.loadedKeys = treeLoadedKeys;\n  }\n\n  if (mergedExpandedKeys) {\n    treeProps.expandedKeys = mergedExpandedKeys;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    onMouseDown: onListMouseDown,\n    onMouseEnter: onMouseEnter\n  }, activeEntity && open && /*#__PURE__*/React.createElement(\"span\", {\n    style: HIDDEN_STYLE,\n    \"aria-live\": \"assertive\"\n  }, activeEntity.data.value), /*#__PURE__*/React.createElement(Tree, _extends({\n    ref: treeRef,\n    focusable: false,\n    prefixCls: \"\".concat(prefixCls, \"-tree\"),\n    treeData: memoOptions,\n    height: height,\n    itemHeight: itemHeight,\n    virtual: virtual,\n    multiple: multiple,\n    icon: treeIcon,\n    showIcon: showTreeIcon,\n    switcherIcon: switcherIcon,\n    showLine: treeLine,\n    loadData: searchValue ? null : loadData,\n    motion: treeMotion // We handle keys by out instead tree self\n    ,\n    checkable: checkable,\n    checkStrictly: true,\n    checkedKeys: mergedCheckedKeys,\n    selectedKeys: !checkable ? valueKeys : [],\n    defaultExpandAll: treeDefaultExpandAll\n  }, treeProps, {\n    // Proxy event out\n    onActiveChange: setActiveKey,\n    onSelect: onInternalSelect,\n    onCheck: onInternalSelect,\n    onExpand: onInternalExpand,\n    onLoad: onTreeLoad,\n    filterTreeNode: filterTreeNode\n  })));\n};\n\nvar RefOptionList = /*#__PURE__*/React.forwardRef(OptionList);\nRefOptionList.displayName = 'OptionList';\nexport default RefOptionList;","map":{"version":3,"names":["_extends","_toConsumableArray","_slicedToArray","React","KeyCode","useMemo","Tree","SelectContext","useKeyValueMapping","useKeyValueMap","HIDDEN_STYLE","width","height","display","overflow","opacity","border","padding","margin","OptionList","props","ref","prefixCls","itemHeight","virtual","options","flattenOptions","multiple","searchValue","onSelect","onToggleOpen","open","notFoundContent","onMouseEnter","_React$useContext","useContext","checkable","checkedKeys","halfCheckedKeys","treeExpandedKeys","treeDefaultExpandAll","treeDefaultExpandedKeys","onTreeExpand","treeIcon","showTreeIcon","switcherIcon","treeLine","treeNodeFilterProp","loadData","treeLoadedKeys","treeMotion","onTreeLoad","treeRef","useRef","memoOptions","prev","next","_useKeyValueMap","_useKeyValueMap2","cacheKeyMap","cacheValueMap","_useKeyValueMapping","_useKeyValueMapping2","getEntityByKey","getEntityByValue","valueKeys","map","val","entity","key","mergedCheckedKeys","checked","halfChecked","useEffect","length","_treeRef$current","current","scrollTo","lowerSearchValue","String","toLowerCase","filterTreeNode","treeNode","includes","_React$useState","useState","_React$useState2","expandedKeys","setExpandedKeys","_React$useState3","_React$useState4","searchExpandedKeys","setSearchExpandedKeys","mergedExpandedKeys","o","onInternalExpand","keys","onListMouseDown","event","preventDefault","onInternalSelect","_","_ref","node","data","value","selected","_React$useState5","_React$useState6","activeKey","setActiveKey","activeEntity","useImperativeHandle","_treeRef$current2","onKeyDown","_treeRef$current3","which","UP","DOWN","LEFT","RIGHT","ENTER","_ref2","selectable","ESC","onKeyUp","createElement","role","className","concat","onMouseDown","treeProps","loadedKeys","style","focusable","treeData","icon","showIcon","showLine","motion","checkStrictly","selectedKeys","defaultExpandAll","onActiveChange","onCheck","onExpand","onLoad","RefOptionList","forwardRef","displayName"],"sources":["/home/chenak/QbitesReact/my-app/node_modules/rc-tree-select/es/OptionList.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport useMemo from \"rc-util/es/hooks/useMemo\";\nimport Tree from 'rc-tree';\nimport { SelectContext } from './Context';\nimport useKeyValueMapping from './hooks/useKeyValueMapping';\nimport useKeyValueMap from './hooks/useKeyValueMap';\nvar HIDDEN_STYLE = {\n  width: 0,\n  height: 0,\n  display: 'flex',\n  overflow: 'hidden',\n  opacity: 0,\n  border: 0,\n  padding: 0,\n  margin: 0\n};\n\nvar OptionList = function OptionList(props, ref) {\n  var prefixCls = props.prefixCls,\n      height = props.height,\n      itemHeight = props.itemHeight,\n      virtual = props.virtual,\n      options = props.options,\n      flattenOptions = props.flattenOptions,\n      multiple = props.multiple,\n      searchValue = props.searchValue,\n      onSelect = props.onSelect,\n      onToggleOpen = props.onToggleOpen,\n      open = props.open,\n      notFoundContent = props.notFoundContent,\n      onMouseEnter = props.onMouseEnter;\n\n  var _React$useContext = React.useContext(SelectContext),\n      checkable = _React$useContext.checkable,\n      checkedKeys = _React$useContext.checkedKeys,\n      halfCheckedKeys = _React$useContext.halfCheckedKeys,\n      treeExpandedKeys = _React$useContext.treeExpandedKeys,\n      treeDefaultExpandAll = _React$useContext.treeDefaultExpandAll,\n      treeDefaultExpandedKeys = _React$useContext.treeDefaultExpandedKeys,\n      onTreeExpand = _React$useContext.onTreeExpand,\n      treeIcon = _React$useContext.treeIcon,\n      showTreeIcon = _React$useContext.showTreeIcon,\n      switcherIcon = _React$useContext.switcherIcon,\n      treeLine = _React$useContext.treeLine,\n      treeNodeFilterProp = _React$useContext.treeNodeFilterProp,\n      loadData = _React$useContext.loadData,\n      treeLoadedKeys = _React$useContext.treeLoadedKeys,\n      treeMotion = _React$useContext.treeMotion,\n      onTreeLoad = _React$useContext.onTreeLoad;\n\n  var treeRef = React.useRef();\n  var memoOptions = useMemo(function () {\n    return options;\n  }, [open, options], function (prev, next) {\n    return next[0] && prev[1] !== next[1];\n  });\n\n  var _useKeyValueMap = useKeyValueMap(flattenOptions),\n      _useKeyValueMap2 = _slicedToArray(_useKeyValueMap, 2),\n      cacheKeyMap = _useKeyValueMap2[0],\n      cacheValueMap = _useKeyValueMap2[1];\n\n  var _useKeyValueMapping = useKeyValueMapping(cacheKeyMap, cacheValueMap),\n      _useKeyValueMapping2 = _slicedToArray(_useKeyValueMapping, 2),\n      getEntityByKey = _useKeyValueMapping2[0],\n      getEntityByValue = _useKeyValueMapping2[1]; // ========================== Values ==========================\n\n\n  var valueKeys = React.useMemo(function () {\n    return checkedKeys.map(function (val) {\n      var entity = getEntityByValue(val);\n      return entity ? entity.key : null;\n    });\n  }, [checkedKeys, getEntityByValue]);\n  var mergedCheckedKeys = React.useMemo(function () {\n    if (!checkable) {\n      return null;\n    }\n\n    return {\n      checked: valueKeys,\n      halfChecked: halfCheckedKeys\n    };\n  }, [valueKeys, halfCheckedKeys, checkable]); // ========================== Scroll ==========================\n\n  React.useEffect(function () {\n    // Single mode should scroll to current key\n    if (open && !multiple && valueKeys.length) {\n      var _treeRef$current;\n\n      (_treeRef$current = treeRef.current) === null || _treeRef$current === void 0 ? void 0 : _treeRef$current.scrollTo({\n        key: valueKeys[0]\n      });\n    }\n  }, [open]); // ========================== Search ==========================\n\n  var lowerSearchValue = String(searchValue).toLowerCase();\n\n  var filterTreeNode = function filterTreeNode(treeNode) {\n    if (!lowerSearchValue) {\n      return false;\n    }\n\n    return String(treeNode[treeNodeFilterProp]).toLowerCase().includes(lowerSearchValue);\n  }; // =========================== Keys ===========================\n\n\n  var _React$useState = React.useState(treeDefaultExpandedKeys),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      expandedKeys = _React$useState2[0],\n      setExpandedKeys = _React$useState2[1];\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      searchExpandedKeys = _React$useState4[0],\n      setSearchExpandedKeys = _React$useState4[1];\n\n  var mergedExpandedKeys = React.useMemo(function () {\n    if (treeExpandedKeys) {\n      return _toConsumableArray(treeExpandedKeys);\n    }\n\n    return searchValue ? searchExpandedKeys : expandedKeys;\n  }, [expandedKeys, searchExpandedKeys, lowerSearchValue, treeExpandedKeys]);\n  React.useEffect(function () {\n    if (searchValue) {\n      setSearchExpandedKeys(flattenOptions.map(function (o) {\n        return o.key;\n      }));\n    }\n  }, [searchValue]);\n\n  var onInternalExpand = function onInternalExpand(keys) {\n    setExpandedKeys(keys);\n    setSearchExpandedKeys(keys);\n\n    if (onTreeExpand) {\n      onTreeExpand(keys);\n    }\n  }; // ========================== Events ==========================\n\n\n  var onListMouseDown = function onListMouseDown(event) {\n    event.preventDefault();\n  };\n\n  var onInternalSelect = function onInternalSelect(_, _ref) {\n    var key = _ref.node.key;\n    var entity = getEntityByKey(key, checkable ? 'checkbox' : 'select');\n\n    if (entity !== null) {\n      onSelect(entity.data.value, {\n        selected: !checkedKeys.includes(entity.data.value)\n      });\n    }\n\n    if (!multiple) {\n      onToggleOpen(false);\n    }\n  }; // ========================= Keyboard =========================\n\n\n  var _React$useState5 = React.useState(null),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      activeKey = _React$useState6[0],\n      setActiveKey = _React$useState6[1];\n\n  var activeEntity = getEntityByKey(activeKey);\n  React.useImperativeHandle(ref, function () {\n    var _treeRef$current2;\n\n    return {\n      scrollTo: (_treeRef$current2 = treeRef.current) === null || _treeRef$current2 === void 0 ? void 0 : _treeRef$current2.scrollTo,\n      onKeyDown: function onKeyDown(event) {\n        var _treeRef$current3;\n\n        var which = event.which;\n\n        switch (which) {\n          // >>> Arrow keys\n          case KeyCode.UP:\n          case KeyCode.DOWN:\n          case KeyCode.LEFT:\n          case KeyCode.RIGHT:\n            (_treeRef$current3 = treeRef.current) === null || _treeRef$current3 === void 0 ? void 0 : _treeRef$current3.onKeyDown(event);\n            break;\n          // >>> Select item\n\n          case KeyCode.ENTER:\n            {\n              var _ref2 = (activeEntity === null || activeEntity === void 0 ? void 0 : activeEntity.data) || {},\n                  selectable = _ref2.selectable,\n                  value = _ref2.value;\n\n              if (selectable !== false) {\n                onInternalSelect(null, {\n                  node: {\n                    key: activeKey\n                  },\n                  selected: !checkedKeys.includes(value)\n                });\n              }\n\n              break;\n            }\n          // >>> Close\n\n          case KeyCode.ESC:\n            {\n              onToggleOpen(false);\n            }\n        }\n      },\n      onKeyUp: function onKeyUp() {}\n    };\n  }); // ========================== Render ==========================\n\n  if (memoOptions.length === 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      role: \"listbox\",\n      className: \"\".concat(prefixCls, \"-empty\"),\n      onMouseDown: onListMouseDown\n    }, notFoundContent);\n  }\n\n  var treeProps = {};\n\n  if (treeLoadedKeys) {\n    treeProps.loadedKeys = treeLoadedKeys;\n  }\n\n  if (mergedExpandedKeys) {\n    treeProps.expandedKeys = mergedExpandedKeys;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    onMouseDown: onListMouseDown,\n    onMouseEnter: onMouseEnter\n  }, activeEntity && open && /*#__PURE__*/React.createElement(\"span\", {\n    style: HIDDEN_STYLE,\n    \"aria-live\": \"assertive\"\n  }, activeEntity.data.value), /*#__PURE__*/React.createElement(Tree, _extends({\n    ref: treeRef,\n    focusable: false,\n    prefixCls: \"\".concat(prefixCls, \"-tree\"),\n    treeData: memoOptions,\n    height: height,\n    itemHeight: itemHeight,\n    virtual: virtual,\n    multiple: multiple,\n    icon: treeIcon,\n    showIcon: showTreeIcon,\n    switcherIcon: switcherIcon,\n    showLine: treeLine,\n    loadData: searchValue ? null : loadData,\n    motion: treeMotion // We handle keys by out instead tree self\n    ,\n    checkable: checkable,\n    checkStrictly: true,\n    checkedKeys: mergedCheckedKeys,\n    selectedKeys: !checkable ? valueKeys : [],\n    defaultExpandAll: treeDefaultExpandAll\n  }, treeProps, {\n    // Proxy event out\n    onActiveChange: setActiveKey,\n    onSelect: onInternalSelect,\n    onCheck: onInternalSelect,\n    onExpand: onInternalExpand,\n    onLoad: onTreeLoad,\n    filterTreeNode: filterTreeNode\n  })));\n};\n\nvar RefOptionList = /*#__PURE__*/React.forwardRef(OptionList);\nRefOptionList.displayName = 'OptionList';\nexport default RefOptionList;"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,kBAAP,MAA+B,8CAA/B;AACA,OAAOC,cAAP,MAA2B,0CAA3B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,SAASC,aAAT,QAA8B,WAA9B;AACA,OAAOC,kBAAP,MAA+B,4BAA/B;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,IAAIC,YAAY,GAAG;EACjBC,KAAK,EAAE,CADU;EAEjBC,MAAM,EAAE,CAFS;EAGjBC,OAAO,EAAE,MAHQ;EAIjBC,QAAQ,EAAE,QAJO;EAKjBC,OAAO,EAAE,CALQ;EAMjBC,MAAM,EAAE,CANS;EAOjBC,OAAO,EAAE,CAPQ;EAQjBC,MAAM,EAAE;AARS,CAAnB;;AAWA,IAAIC,UAAU,GAAG,SAASA,UAAT,CAAoBC,KAApB,EAA2BC,GAA3B,EAAgC;EAC/C,IAAIC,SAAS,GAAGF,KAAK,CAACE,SAAtB;EAAA,IACIV,MAAM,GAAGQ,KAAK,CAACR,MADnB;EAAA,IAEIW,UAAU,GAAGH,KAAK,CAACG,UAFvB;EAAA,IAGIC,OAAO,GAAGJ,KAAK,CAACI,OAHpB;EAAA,IAIIC,OAAO,GAAGL,KAAK,CAACK,OAJpB;EAAA,IAKIC,cAAc,GAAGN,KAAK,CAACM,cAL3B;EAAA,IAMIC,QAAQ,GAAGP,KAAK,CAACO,QANrB;EAAA,IAOIC,WAAW,GAAGR,KAAK,CAACQ,WAPxB;EAAA,IAQIC,QAAQ,GAAGT,KAAK,CAACS,QARrB;EAAA,IASIC,YAAY,GAAGV,KAAK,CAACU,YATzB;EAAA,IAUIC,IAAI,GAAGX,KAAK,CAACW,IAVjB;EAAA,IAWIC,eAAe,GAAGZ,KAAK,CAACY,eAX5B;EAAA,IAYIC,YAAY,GAAGb,KAAK,CAACa,YAZzB;;EAcA,IAAIC,iBAAiB,GAAG/B,KAAK,CAACgC,UAAN,CAAiB5B,aAAjB,CAAxB;EAAA,IACI6B,SAAS,GAAGF,iBAAiB,CAACE,SADlC;EAAA,IAEIC,WAAW,GAAGH,iBAAiB,CAACG,WAFpC;EAAA,IAGIC,eAAe,GAAGJ,iBAAiB,CAACI,eAHxC;EAAA,IAIIC,gBAAgB,GAAGL,iBAAiB,CAACK,gBAJzC;EAAA,IAKIC,oBAAoB,GAAGN,iBAAiB,CAACM,oBAL7C;EAAA,IAMIC,uBAAuB,GAAGP,iBAAiB,CAACO,uBANhD;EAAA,IAOIC,YAAY,GAAGR,iBAAiB,CAACQ,YAPrC;EAAA,IAQIC,QAAQ,GAAGT,iBAAiB,CAACS,QARjC;EAAA,IASIC,YAAY,GAAGV,iBAAiB,CAACU,YATrC;EAAA,IAUIC,YAAY,GAAGX,iBAAiB,CAACW,YAVrC;EAAA,IAWIC,QAAQ,GAAGZ,iBAAiB,CAACY,QAXjC;EAAA,IAYIC,kBAAkB,GAAGb,iBAAiB,CAACa,kBAZ3C;EAAA,IAaIC,QAAQ,GAAGd,iBAAiB,CAACc,QAbjC;EAAA,IAcIC,cAAc,GAAGf,iBAAiB,CAACe,cAdvC;EAAA,IAeIC,UAAU,GAAGhB,iBAAiB,CAACgB,UAfnC;EAAA,IAgBIC,UAAU,GAAGjB,iBAAiB,CAACiB,UAhBnC;;EAkBA,IAAIC,OAAO,GAAGjD,KAAK,CAACkD,MAAN,EAAd;EACA,IAAIC,WAAW,GAAGjD,OAAO,CAAC,YAAY;IACpC,OAAOoB,OAAP;EACD,CAFwB,EAEtB,CAACM,IAAD,EAAON,OAAP,CAFsB,EAEL,UAAU8B,IAAV,EAAgBC,IAAhB,EAAsB;IACxC,OAAOA,IAAI,CAAC,CAAD,CAAJ,IAAWD,IAAI,CAAC,CAAD,CAAJ,KAAYC,IAAI,CAAC,CAAD,CAAlC;EACD,CAJwB,CAAzB;;EAMA,IAAIC,eAAe,GAAGhD,cAAc,CAACiB,cAAD,CAApC;EAAA,IACIgC,gBAAgB,GAAGxD,cAAc,CAACuD,eAAD,EAAkB,CAAlB,CADrC;EAAA,IAEIE,WAAW,GAAGD,gBAAgB,CAAC,CAAD,CAFlC;EAAA,IAGIE,aAAa,GAAGF,gBAAgB,CAAC,CAAD,CAHpC;;EAKA,IAAIG,mBAAmB,GAAGrD,kBAAkB,CAACmD,WAAD,EAAcC,aAAd,CAA5C;EAAA,IACIE,oBAAoB,GAAG5D,cAAc,CAAC2D,mBAAD,EAAsB,CAAtB,CADzC;EAAA,IAEIE,cAAc,GAAGD,oBAAoB,CAAC,CAAD,CAFzC;EAAA,IAGIE,gBAAgB,GAAGF,oBAAoB,CAAC,CAAD,CAH3C,CA7C+C,CAgDC;;;EAGhD,IAAIG,SAAS,GAAG9D,KAAK,CAACE,OAAN,CAAc,YAAY;IACxC,OAAOgC,WAAW,CAAC6B,GAAZ,CAAgB,UAAUC,GAAV,EAAe;MACpC,IAAIC,MAAM,GAAGJ,gBAAgB,CAACG,GAAD,CAA7B;MACA,OAAOC,MAAM,GAAGA,MAAM,CAACC,GAAV,GAAgB,IAA7B;IACD,CAHM,CAAP;EAID,CALe,EAKb,CAAChC,WAAD,EAAc2B,gBAAd,CALa,CAAhB;EAMA,IAAIM,iBAAiB,GAAGnE,KAAK,CAACE,OAAN,CAAc,YAAY;IAChD,IAAI,CAAC+B,SAAL,EAAgB;MACd,OAAO,IAAP;IACD;;IAED,OAAO;MACLmC,OAAO,EAAEN,SADJ;MAELO,WAAW,EAAElC;IAFR,CAAP;EAID,CATuB,EASrB,CAAC2B,SAAD,EAAY3B,eAAZ,EAA6BF,SAA7B,CATqB,CAAxB,CAzD+C,CAkEF;;EAE7CjC,KAAK,CAACsE,SAAN,CAAgB,YAAY;IAC1B;IACA,IAAI1C,IAAI,IAAI,CAACJ,QAAT,IAAqBsC,SAAS,CAACS,MAAnC,EAA2C;MACzC,IAAIC,gBAAJ;;MAEA,CAACA,gBAAgB,GAAGvB,OAAO,CAACwB,OAA5B,MAAyC,IAAzC,IAAiDD,gBAAgB,KAAK,KAAK,CAA3E,GAA+E,KAAK,CAApF,GAAwFA,gBAAgB,CAACE,QAAjB,CAA0B;QAChHR,GAAG,EAAEJ,SAAS,CAAC,CAAD;MADkG,CAA1B,CAAxF;IAGD;EACF,CATD,EASG,CAAClC,IAAD,CATH,EApE+C,CA6EnC;;EAEZ,IAAI+C,gBAAgB,GAAGC,MAAM,CAACnD,WAAD,CAAN,CAAoBoD,WAApB,EAAvB;;EAEA,IAAIC,cAAc,GAAG,SAASA,cAAT,CAAwBC,QAAxB,EAAkC;IACrD,IAAI,CAACJ,gBAAL,EAAuB;MACrB,OAAO,KAAP;IACD;;IAED,OAAOC,MAAM,CAACG,QAAQ,CAACnC,kBAAD,CAAT,CAAN,CAAqCiC,WAArC,GAAmDG,QAAnD,CAA4DL,gBAA5D,CAAP;EACD,CAND,CAjF+C,CAuF5C;;;EAGH,IAAIM,eAAe,GAAGjF,KAAK,CAACkF,QAAN,CAAe5C,uBAAf,CAAtB;EAAA,IACI6C,gBAAgB,GAAGpF,cAAc,CAACkF,eAAD,EAAkB,CAAlB,CADrC;EAAA,IAEIG,YAAY,GAAGD,gBAAgB,CAAC,CAAD,CAFnC;EAAA,IAGIE,eAAe,GAAGF,gBAAgB,CAAC,CAAD,CAHtC;;EAKA,IAAIG,gBAAgB,GAAGtF,KAAK,CAACkF,QAAN,CAAe,IAAf,CAAvB;EAAA,IACIK,gBAAgB,GAAGxF,cAAc,CAACuF,gBAAD,EAAmB,CAAnB,CADrC;EAAA,IAEIE,kBAAkB,GAAGD,gBAAgB,CAAC,CAAD,CAFzC;EAAA,IAGIE,qBAAqB,GAAGF,gBAAgB,CAAC,CAAD,CAH5C;;EAKA,IAAIG,kBAAkB,GAAG1F,KAAK,CAACE,OAAN,CAAc,YAAY;IACjD,IAAIkC,gBAAJ,EAAsB;MACpB,OAAOtC,kBAAkB,CAACsC,gBAAD,CAAzB;IACD;;IAED,OAAOX,WAAW,GAAG+D,kBAAH,GAAwBJ,YAA1C;EACD,CANwB,EAMtB,CAACA,YAAD,EAAeI,kBAAf,EAAmCb,gBAAnC,EAAqDvC,gBAArD,CANsB,CAAzB;EAOApC,KAAK,CAACsE,SAAN,CAAgB,YAAY;IAC1B,IAAI7C,WAAJ,EAAiB;MACfgE,qBAAqB,CAAClE,cAAc,CAACwC,GAAf,CAAmB,UAAU4B,CAAV,EAAa;QACpD,OAAOA,CAAC,CAACzB,GAAT;MACD,CAFqB,CAAD,CAArB;IAGD;EACF,CAND,EAMG,CAACzC,WAAD,CANH;;EAQA,IAAImE,gBAAgB,GAAG,SAASA,gBAAT,CAA0BC,IAA1B,EAAgC;IACrDR,eAAe,CAACQ,IAAD,CAAf;IACAJ,qBAAqB,CAACI,IAAD,CAArB;;IAEA,IAAItD,YAAJ,EAAkB;MAChBA,YAAY,CAACsD,IAAD,CAAZ;IACD;EACF,CAPD,CAnH+C,CA0H5C;;;EAGH,IAAIC,eAAe,GAAG,SAASA,eAAT,CAAyBC,KAAzB,EAAgC;IACpDA,KAAK,CAACC,cAAN;EACD,CAFD;;EAIA,IAAIC,gBAAgB,GAAG,SAASA,gBAAT,CAA0BC,CAA1B,EAA6BC,IAA7B,EAAmC;IACxD,IAAIjC,GAAG,GAAGiC,IAAI,CAACC,IAAL,CAAUlC,GAApB;IACA,IAAID,MAAM,GAAGL,cAAc,CAACM,GAAD,EAAMjC,SAAS,GAAG,UAAH,GAAgB,QAA/B,CAA3B;;IAEA,IAAIgC,MAAM,KAAK,IAAf,EAAqB;MACnBvC,QAAQ,CAACuC,MAAM,CAACoC,IAAP,CAAYC,KAAb,EAAoB;QAC1BC,QAAQ,EAAE,CAACrE,WAAW,CAAC8C,QAAZ,CAAqBf,MAAM,CAACoC,IAAP,CAAYC,KAAjC;MADe,CAApB,CAAR;IAGD;;IAED,IAAI,CAAC9E,QAAL,EAAe;MACbG,YAAY,CAAC,KAAD,CAAZ;IACD;EACF,CAbD,CAjI+C,CA8I5C;;;EAGH,IAAI6E,gBAAgB,GAAGxG,KAAK,CAACkF,QAAN,CAAe,IAAf,CAAvB;EAAA,IACIuB,gBAAgB,GAAG1G,cAAc,CAACyG,gBAAD,EAAmB,CAAnB,CADrC;EAAA,IAEIE,SAAS,GAAGD,gBAAgB,CAAC,CAAD,CAFhC;EAAA,IAGIE,YAAY,GAAGF,gBAAgB,CAAC,CAAD,CAHnC;;EAKA,IAAIG,YAAY,GAAGhD,cAAc,CAAC8C,SAAD,CAAjC;EACA1G,KAAK,CAAC6G,mBAAN,CAA0B3F,GAA1B,EAA+B,YAAY;IACzC,IAAI4F,iBAAJ;;IAEA,OAAO;MACLpC,QAAQ,EAAE,CAACoC,iBAAiB,GAAG7D,OAAO,CAACwB,OAA7B,MAA0C,IAA1C,IAAkDqC,iBAAiB,KAAK,KAAK,CAA7E,GAAiF,KAAK,CAAtF,GAA0FA,iBAAiB,CAACpC,QADjH;MAELqC,SAAS,EAAE,SAASA,SAAT,CAAmBhB,KAAnB,EAA0B;QACnC,IAAIiB,iBAAJ;;QAEA,IAAIC,KAAK,GAAGlB,KAAK,CAACkB,KAAlB;;QAEA,QAAQA,KAAR;UACE;UACA,KAAKhH,OAAO,CAACiH,EAAb;UACA,KAAKjH,OAAO,CAACkH,IAAb;UACA,KAAKlH,OAAO,CAACmH,IAAb;UACA,KAAKnH,OAAO,CAACoH,KAAb;YACE,CAACL,iBAAiB,GAAG/D,OAAO,CAACwB,OAA7B,MAA0C,IAA1C,IAAkDuC,iBAAiB,KAAK,KAAK,CAA7E,GAAiF,KAAK,CAAtF,GAA0FA,iBAAiB,CAACD,SAAlB,CAA4BhB,KAA5B,CAA1F;YACA;UACF;;UAEA,KAAK9F,OAAO,CAACqH,KAAb;YACE;cACE,IAAIC,KAAK,GAAG,CAACX,YAAY,KAAK,IAAjB,IAAyBA,YAAY,KAAK,KAAK,CAA/C,GAAmD,KAAK,CAAxD,GAA4DA,YAAY,CAACP,IAA1E,KAAmF,EAA/F;cAAA,IACImB,UAAU,GAAGD,KAAK,CAACC,UADvB;cAAA,IAEIlB,KAAK,GAAGiB,KAAK,CAACjB,KAFlB;;cAIA,IAAIkB,UAAU,KAAK,KAAnB,EAA0B;gBACxBvB,gBAAgB,CAAC,IAAD,EAAO;kBACrBG,IAAI,EAAE;oBACJlC,GAAG,EAAEwC;kBADD,CADe;kBAIrBH,QAAQ,EAAE,CAACrE,WAAW,CAAC8C,QAAZ,CAAqBsB,KAArB;gBAJU,CAAP,CAAhB;cAMD;;cAED;YACD;UACH;;UAEA,KAAKrG,OAAO,CAACwH,GAAb;YACE;cACE9F,YAAY,CAAC,KAAD,CAAZ;YACD;QAhCL;MAkCD,CAzCI;MA0CL+F,OAAO,EAAE,SAASA,OAAT,GAAmB,CAAE;IA1CzB,CAAP;EA4CD,CA/CD,EAvJ+C,CAsM3C;;EAEJ,IAAIvE,WAAW,CAACoB,MAAZ,KAAuB,CAA3B,EAA8B;IAC5B,OAAO,aAAavE,KAAK,CAAC2H,aAAN,CAAoB,KAApB,EAA2B;MAC7CC,IAAI,EAAE,SADuC;MAE7CC,SAAS,EAAE,GAAGC,MAAH,CAAU3G,SAAV,EAAqB,QAArB,CAFkC;MAG7C4G,WAAW,EAAEjC;IAHgC,CAA3B,EAIjBjE,eAJiB,CAApB;EAKD;;EAED,IAAImG,SAAS,GAAG,EAAhB;;EAEA,IAAIlF,cAAJ,EAAoB;IAClBkF,SAAS,CAACC,UAAV,GAAuBnF,cAAvB;EACD;;EAED,IAAI4C,kBAAJ,EAAwB;IACtBsC,SAAS,CAAC5C,YAAV,GAAyBM,kBAAzB;EACD;;EAED,OAAO,aAAa1F,KAAK,CAAC2H,aAAN,CAAoB,KAApB,EAA2B;IAC7CI,WAAW,EAAEjC,eADgC;IAE7ChE,YAAY,EAAEA;EAF+B,CAA3B,EAGjB8E,YAAY,IAAIhF,IAAhB,IAAwB,aAAa5B,KAAK,CAAC2H,aAAN,CAAoB,MAApB,EAA4B;IAClEO,KAAK,EAAE3H,YAD2D;IAElE,aAAa;EAFqD,CAA5B,EAGrCqG,YAAY,CAACP,IAAb,CAAkBC,KAHmB,CAHpB,EAMS,aAAatG,KAAK,CAAC2H,aAAN,CAAoBxH,IAApB,EAA0BN,QAAQ,CAAC;IAC3EqB,GAAG,EAAE+B,OADsE;IAE3EkF,SAAS,EAAE,KAFgE;IAG3EhH,SAAS,EAAE,GAAG2G,MAAH,CAAU3G,SAAV,EAAqB,OAArB,CAHgE;IAI3EiH,QAAQ,EAAEjF,WAJiE;IAK3E1C,MAAM,EAAEA,MALmE;IAM3EW,UAAU,EAAEA,UAN+D;IAO3EC,OAAO,EAAEA,OAPkE;IAQ3EG,QAAQ,EAAEA,QARiE;IAS3E6G,IAAI,EAAE7F,QATqE;IAU3E8F,QAAQ,EAAE7F,YAViE;IAW3EC,YAAY,EAAEA,YAX6D;IAY3E6F,QAAQ,EAAE5F,QAZiE;IAa3EE,QAAQ,EAAEpB,WAAW,GAAG,IAAH,GAAUoB,QAb4C;IAc3E2F,MAAM,EAAEzF,UAdmE,CAcxD;IAdwD;IAgB3Ed,SAAS,EAAEA,SAhBgE;IAiB3EwG,aAAa,EAAE,IAjB4D;IAkB3EvG,WAAW,EAAEiC,iBAlB8D;IAmB3EuE,YAAY,EAAE,CAACzG,SAAD,GAAa6B,SAAb,GAAyB,EAnBoC;IAoB3E6E,gBAAgB,EAAEtG;EApByD,CAAD,EAqBzE2F,SArByE,EAqB9D;IACZ;IACAY,cAAc,EAAEjC,YAFJ;IAGZjF,QAAQ,EAAEuE,gBAHE;IAIZ4C,OAAO,EAAE5C,gBAJG;IAKZ6C,QAAQ,EAAElD,gBALE;IAMZmD,MAAM,EAAE/F,UANI;IAOZ8B,cAAc,EAAEA;EAPJ,CArB8D,CAAlC,CANtB,CAApB;AAoCD,CA9PD;;AAgQA,IAAIkE,aAAa,GAAG,aAAahJ,KAAK,CAACiJ,UAAN,CAAiBjI,UAAjB,CAAjC;AACAgI,aAAa,CAACE,WAAd,GAA4B,YAA5B;AACA,eAAeF,aAAf"},"metadata":{},"sourceType":"module"}