{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _GenericChartComponent = require(\"../../GenericChartComponent\");\n\nvar _GenericChartComponent2 = _interopRequireDefault(_GenericChartComponent);\n\nvar _GenericComponent = require(\"../../GenericComponent\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Text = function (_Component) {\n  _inherits(Text, _Component);\n\n  function Text(props) {\n    _classCallCheck(this, Text);\n\n    var _this = _possibleConstructorReturn(this, (Text.__proto__ || Object.getPrototypeOf(Text)).call(this, props));\n\n    _this.renderSVG = _this.renderSVG.bind(_this);\n    _this.drawOnCanvas = _this.drawOnCanvas.bind(_this);\n    _this.isHover = _this.isHover.bind(_this);\n    return _this;\n  }\n\n  _createClass(Text, [{\n    key: \"isHover\",\n    value: function isHover() {\n      return false;\n    }\n  }, {\n    key: \"drawOnCanvas\",\n    value: function drawOnCanvas(ctx, moreProps) {\n      var _props = this.props,\n          xyProvider = _props.xyProvider,\n          fontFamily = _props.fontFamily,\n          fontSize = _props.fontSize,\n          fill = _props.fill,\n          children = _props.children;\n\n      var _xyProvider = xyProvider(moreProps),\n          _xyProvider2 = _slicedToArray(_xyProvider, 2),\n          x = _xyProvider2[0],\n          y = _xyProvider2[1];\n\n      ctx.font = fontSize + \"px \" + fontFamily;\n      ctx.fillStyle = fill;\n      ctx.beginPath();\n      ctx.fillText(children, x, y);\n    }\n  }, {\n    key: \"renderSVG\",\n    value: function renderSVG(moreProps) {\n      var _props2 = this.props,\n          xyProvider = _props2.xyProvider,\n          fontFamily = _props2.fontFamily,\n          fontSize = _props2.fontSize,\n          fill = _props2.fill,\n          children = _props2.children;\n\n      var _xyProvider3 = xyProvider(moreProps),\n          _xyProvider4 = _slicedToArray(_xyProvider3, 2),\n          x = _xyProvider4[0],\n          y = _xyProvider4[1];\n\n      return _react2.default.createElement(\"text\", {\n        x: x,\n        y: y,\n        fontFamily: fontFamily,\n        fontSize: fontSize,\n        fill: fill\n      }, children);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var selected = this.props.selected;\n      return _react2.default.createElement(_GenericChartComponent2.default, {\n        selected: selected,\n        svgDraw: this.renderSVG,\n        canvasToDraw: _GenericComponent.getMouseCanvas,\n        canvasDraw: this.drawOnCanvas,\n        drawOn: [\"mousemove\", \"pan\", \"drag\"]\n      });\n    }\n  }]);\n\n  return Text;\n}(_react.Component);\n\nText.propTypes = {\n  xyProvider: _propTypes2.default.func.isRequired,\n  fontFamily: _propTypes2.default.string.isRequired,\n  fontSize: _propTypes2.default.number.isRequired,\n  fill: _propTypes2.default.string.isRequired,\n  children: _propTypes2.default.string.isRequired,\n  selected: _propTypes2.default.bool.isRequired\n};\nText.defaultProps = {\n  selected: false\n};\nexports.default = Text;","map":{"version":3,"sources":["../../../../src/lib/interactive/components/Text.js"],"names":["Text","ctx","moreProps","xyProvider","fontFamily","fontSize","fill","children","x","y","selected","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport GenericChartComponent from \"../../GenericChartComponent\";\nimport { getMouseCanvas } from \"../../GenericComponent\";\n\nclass Text extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.renderSVG = this.renderSVG.bind(this);\n\t\tthis.drawOnCanvas = this.drawOnCanvas.bind(this);\n\t\tthis.isHover = this.isHover.bind(this);\n\t}\n\tisHover() {\n\t\treturn false;\n\t}\n\tdrawOnCanvas(ctx, moreProps) {\n\t\tconst {\n\t\t\txyProvider,\n\t\t\tfontFamily,\n\t\t\tfontSize,\n\t\t\tfill,\n\t\t\tchildren,\n\t\t} = this.props;\n\t\tconst [x, y] = xyProvider(moreProps);\n\n\t\tctx.font = `${ fontSize }px ${fontFamily}`;\n\t\tctx.fillStyle = fill;\n\n\t\tctx.beginPath();\n\t\tctx.fillText(children, x, y);\n\t}\n\trenderSVG(moreProps) {\n\t\tconst {\n\t\t\txyProvider,\n\t\t\tfontFamily,\n\t\t\tfontSize,\n\t\t\tfill,\n\t\t\tchildren,\n\t\t} = this.props;\n\t\tconst [x, y] = xyProvider(moreProps);\n\n\t\treturn <text\n\t\t\tx={x}\n\t\t\ty={y}\n\t\t\tfontFamily={fontFamily}\n\t\t\tfontSize={fontSize}\n\t\t\tfill={fill}>{children}</text>;\n\t}\n\trender() {\n\t\tconst { selected } = this.props;\n\n\t\treturn <GenericChartComponent\n\t\t\tselected={selected}\n\n\t\t\tsvgDraw={this.renderSVG}\n\n\t\t\tcanvasToDraw={getMouseCanvas}\n\t\t\tcanvasDraw={this.drawOnCanvas}\n\n\t\t\tdrawOn={[\"mousemove\", \"pan\", \"drag\"]}\n\t\t/>;\n\t}\n}\n\nText.propTypes = {\n\txyProvider: PropTypes.func.isRequired,\n\tfontFamily: PropTypes.string.isRequired,\n\tfontSize: PropTypes.number.isRequired,\n\tfill: PropTypes.string.isRequired,\n\tchildren: PropTypes.string.isRequired,\n\tselected: PropTypes.bool.isRequired,\n};\n\nText.defaultProps = {\n\tselected: false,\n};\n\nexport default Text;\n"]},"metadata":{},"sourceType":"script"}