{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _d3Shape = require(\"d3-shape\");\n\nvar _GenericChartComponent = require(\"../GenericChartComponent\");\n\nvar _GenericChartComponent2 = _interopRequireDefault(_GenericChartComponent);\n\nvar _GenericComponent = require(\"../GenericComponent\");\n\nvar _utils = require(\"../utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar KagiSeries = function (_Component) {\n  _inherits(KagiSeries, _Component);\n\n  function KagiSeries(props) {\n    _classCallCheck(this, KagiSeries);\n\n    var _this = _possibleConstructorReturn(this, (KagiSeries.__proto__ || Object.getPrototypeOf(KagiSeries)).call(this, props));\n\n    _this.renderSVG = _this.renderSVG.bind(_this);\n    _this.drawOnCanvas = _this.drawOnCanvas.bind(_this);\n    return _this;\n  }\n\n  _createClass(KagiSeries, [{\n    key: \"drawOnCanvas\",\n    value: function drawOnCanvas(ctx, moreProps) {\n      var xAccessor = moreProps.xAccessor;\n\n      _drawOnCanvas(ctx, this.props, moreProps, xAccessor);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _react2.default.createElement(_GenericChartComponent2.default, {\n        svgDraw: this.renderSVG,\n        canvasToDraw: _GenericComponent.getAxisCanvas,\n        canvasDraw: this.drawOnCanvas,\n        drawOn: [\"pan\"]\n      });\n    }\n  }, {\n    key: \"renderSVG\",\n    value: function renderSVG(moreProps) {\n      var xAccessor = moreProps.xAccessor;\n      var xScale = moreProps.xScale,\n          yScale = moreProps.chartConfig.yScale,\n          plotData = moreProps.plotData;\n      var _props = this.props,\n          className = _props.className,\n          stroke = _props.stroke,\n          fill = _props.fill,\n          strokeWidth = _props.strokeWidth;\n      var paths = helper(plotData, xAccessor).map(function (each, i) {\n        var dataSeries = (0, _d3Shape.line)().x(function (item) {\n          return xScale(item[0]);\n        }).y(function (item) {\n          return yScale(item[1]);\n        }).curve(_d3Shape.curveStepBefore);\n        dataSeries(each.plot);\n        return _react2.default.createElement(\"path\", {\n          key: i,\n          d: dataSeries(each.plot),\n          className: each.type,\n          stroke: stroke[each.type],\n          fill: fill[each.type],\n          strokeWidth: strokeWidth\n        });\n      });\n      return _react2.default.createElement(\"g\", {\n        className: className\n      }, paths);\n    }\n  }]);\n\n  return KagiSeries;\n}(_react.Component);\n\nKagiSeries.propTypes = {\n  className: _propTypes2.default.string,\n  stroke: _propTypes2.default.object,\n  fill: _propTypes2.default.object,\n  strokeWidth: _propTypes2.default.number.isRequired\n};\nKagiSeries.defaultProps = {\n  className: \"react-stockcharts-kagi\",\n  strokeWidth: 2,\n  stroke: {\n    yang: \"#6BA583\",\n    yin: \"#E60000\"\n  },\n  fill: {\n    yang: \"none\",\n    yin: \"none\"\n  },\n  currentValueStroke: \"#000000\"\n};\n\nfunction _drawOnCanvas(ctx, props, moreProps, xAccessor) {\n  var stroke = props.stroke,\n      strokeWidth = props.strokeWidth,\n      currentValueStroke = props.currentValueStroke;\n  var xScale = moreProps.xScale,\n      yScale = moreProps.chartConfig.yScale,\n      plotData = moreProps.plotData;\n  var paths = helper(plotData, xAccessor);\n  var begin = true;\n  paths.forEach(function (each) {\n    ctx.strokeStyle = stroke[each.type];\n    ctx.lineWidth = strokeWidth;\n    ctx.beginPath();\n    var prevX = void 0;\n    each.plot.forEach(function (d) {\n      var _ref = [xScale(d[0]), yScale(d[1])],\n          x = _ref[0],\n          y = _ref[1];\n\n      if (begin) {\n        ctx.moveTo(x, y);\n        begin = false;\n      } else {\n        if ((0, _utils.isDefined)(prevX)) {\n          ctx.lineTo(prevX, y);\n        }\n\n        ctx.lineTo(x, y);\n      }\n\n      prevX = x; // console.log(d);\n    });\n    ctx.stroke();\n  });\n  var lastPlot = paths[paths.length - 1].plot;\n  var last = lastPlot[lastPlot.length - 1];\n  ctx.beginPath(); // ctx.strokeStyle = \"black\";\n\n  ctx.lineWidth = 1;\n  var _ref2 = [xScale(last[0]), yScale(last[2]), yScale(last[3])],\n      x = _ref2[0],\n      y1 = _ref2[1],\n      y2 = _ref2[2]; // console.log(last, x, y);\n\n  ctx.moveTo(x, y1);\n  ctx.lineTo(x + 10, y1);\n  ctx.stroke();\n  ctx.beginPath();\n  ctx.strokeStyle = currentValueStroke;\n  ctx.moveTo(x - 10, y2);\n  ctx.lineTo(x, y2);\n  ctx.stroke();\n}\n\nfunction helper(plotData, xAccessor) {\n  var kagiLine = [];\n  var kagi = {};\n  var d = plotData[0];\n  var idx = xAccessor(d);\n\n  for (var i = 0; i < plotData.length; i++) {\n    d = plotData[i];\n    if ((0, _utils.isNotDefined)(d.close)) continue;\n    if ((0, _utils.isNotDefined)(kagi.type)) kagi.type = d.startAs;\n    if ((0, _utils.isNotDefined)(kagi.plot)) kagi.plot = [];\n    idx = xAccessor(d);\n    kagi.plot.push([idx, d.open]);\n\n    if ((0, _utils.isDefined)(d.changeTo)) {\n      kagi.plot.push([idx, d.changePoint]);\n      kagi.added = true;\n      kagiLine.push(kagi);\n      kagi = {\n        type: d.changeTo,\n        plot: [],\n        added: false\n      };\n      kagi.plot.push([idx, d.changePoint]);\n    }\n  }\n\n  if (!kagi.added) {\n    kagi.plot.push([idx, d.close, d.current, d.reverseAt]);\n    kagiLine.push(kagi);\n  } // console.log(d.reverseAt);\n\n\n  return kagiLine;\n}\n\nexports.default = KagiSeries;","map":{"version":3,"mappings":"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","names":["KagiSeries","props","_classCallCheck","_this","renderSVG","bind","drawOnCanvas","ctx","moreProps","xAccessor","_react2","svgDraw","canvasToDraw","canvasDraw","drawOn","xScale","yScale","chartConfig","plotData","className","stroke","fill","strokeWidth","paths","helper","map","each","i","dataSeries","x","item","y","curve","plot","key","d","type","propTypes","_propTypes2","string","object","number","isRequired","defaultProps","yang","yin","currentValueStroke","begin","forEach","strokeStyle","lineWidth","beginPath","prevX","moveTo","lineTo","lastPlot","length","last","y1","y2","kagiLine","kagi","idx","close","startAs","push","open","changeTo","changePoint","added","current","reverseAt"],"sources":["../../../src/lib/series/KagiSeries.js"],"sourcesContent":["\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { line, curveStepBefore } from \"d3-shape\";\n\nimport GenericChartComponent from \"../GenericChartComponent\";\nimport { getAxisCanvas } from \"../GenericComponent\";\nimport { isDefined, isNotDefined } from \"../utils\";\n\nclass KagiSeries extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.renderSVG = this.renderSVG.bind(this);\n\t\tthis.drawOnCanvas = this.drawOnCanvas.bind(this);\n\t}\n\tdrawOnCanvas(ctx, moreProps) {\n\t\tconst { xAccessor } = moreProps;\n\n\t\tdrawOnCanvas(ctx, this.props, moreProps, xAccessor);\n\t}\n\trender() {\n\t\treturn <GenericChartComponent\n\t\t\tsvgDraw={this.renderSVG}\n\t\t\tcanvasToDraw={getAxisCanvas}\n\t\t\tcanvasDraw={this.drawOnCanvas}\n\t\t\tdrawOn={[\"pan\"]}\n\t\t/>;\n\t}\n\trenderSVG(moreProps) {\n\t\tconst { xAccessor } = moreProps;\n\t\tconst { xScale, chartConfig: { yScale }, plotData } = moreProps;\n\n\t\tconst { className, stroke, fill, strokeWidth } = this.props;\n\n\t\tconst paths = helper(plotData, xAccessor).map((each, i) => {\n\t\t\tconst dataSeries = line()\n\t\t\t\t.x((item) => xScale(item[0]))\n\t\t\t\t.y((item) => yScale(item[1]))\n\t\t\t\t.curve(curveStepBefore);\n\n\t\t\tdataSeries(each.plot);\n\n\t\t\treturn (<path key={i} d={dataSeries(each.plot)} className={each.type}\n\t\t\t\tstroke={stroke[each.type]} fill={fill[each.type]} strokeWidth={strokeWidth} />);\n\t\t});\n\t\treturn (\n\t\t\t<g className={className}>\n\t\t\t\t{paths}\n\t\t\t</g>\n\t\t);\n\t}\n}\nKagiSeries.propTypes = {\n\tclassName: PropTypes.string,\n\tstroke: PropTypes.object,\n\tfill: PropTypes.object,\n\tstrokeWidth: PropTypes.number.isRequired,\n};\n\nKagiSeries.defaultProps = {\n\tclassName: \"react-stockcharts-kagi\",\n\tstrokeWidth: 2,\n\tstroke: {\n\t\tyang: \"#6BA583\",\n\t\tyin: \"#E60000\"\n\t},\n\tfill: {\n\t\tyang: \"none\",\n\t\tyin: \"none\"\n\t},\n\tcurrentValueStroke: \"#000000\",\n};\n\nfunction drawOnCanvas(ctx, props, moreProps, xAccessor) {\n\tconst { stroke, strokeWidth, currentValueStroke } = props;\n\tconst { xScale, chartConfig: { yScale }, plotData } = moreProps;\n\n\tconst paths = helper(plotData, xAccessor);\n\n\tlet begin = true;\n\n\tpaths.forEach((each) => {\n\t\tctx.strokeStyle = stroke[each.type];\n\t\tctx.lineWidth = strokeWidth;\n\n\t\tctx.beginPath();\n\t\tlet prevX;\n\t\teach.plot.forEach(d => {\n\t\t\tconst [x, y] = [xScale(d[0]), yScale(d[1])];\n\t\t\tif (begin) {\n\t\t\t\tctx.moveTo(x, y);\n\t\t\t\tbegin = false;\n\t\t\t} else {\n\t\t\t\tif (isDefined(prevX)) {\n\t\t\t\t\tctx.lineTo(prevX, y);\n\t\t\t\t}\n\t\t\t\tctx.lineTo(x, y);\n\t\t\t}\n\t\t\tprevX = x;\n\t\t\t// console.log(d);\n\n\t\t});\n\t\tctx.stroke();\n\t});\n\tconst lastPlot = paths[paths.length - 1].plot;\n\tconst last = lastPlot[lastPlot.length - 1];\n\tctx.beginPath();\n\t// ctx.strokeStyle = \"black\";\n\tctx.lineWidth = 1;\n\n\tconst [x, y1, y2] = [xScale(last[0]), yScale(last[2]), yScale(last[3])];\n\t// console.log(last, x, y);\n\tctx.moveTo(x, y1);\n\tctx.lineTo(x + 10, y1);\n\tctx.stroke();\n\n\tctx.beginPath();\n\tctx.strokeStyle = currentValueStroke;\n\tctx.moveTo(x - 10, y2);\n\tctx.lineTo(x, y2);\n\tctx.stroke();\n}\n\nfunction helper(plotData, xAccessor) {\n\tconst kagiLine = [];\n\tlet kagi = {};\n\tlet d = plotData[0];\n\tlet idx = xAccessor(d);\n\n\tfor (let i = 0; i < plotData.length; i++) {\n\t\td = plotData[i];\n\n\t\tif (isNotDefined(d.close)) continue;\n\t\tif (isNotDefined(kagi.type)) kagi.type = d.startAs;\n\t\tif (isNotDefined(kagi.plot)) kagi.plot = [];\n\n\t\tidx = xAccessor(d);\n\t\tkagi.plot.push([idx, d.open]);\n\n\t\tif (isDefined(d.changeTo)) {\n\t\t\tkagi.plot.push([idx, d.changePoint]);\n\t\t\tkagi.added = true;\n\t\t\tkagiLine.push(kagi);\n\n\t\t\tkagi = {\n\t\t\t\ttype: d.changeTo,\n\t\t\t\tplot: [],\n\t\t\t\tadded: false,\n\t\t\t};\n\t\t\tkagi.plot.push([idx, d.changePoint]);\n\t\t}\n\t}\n\n\tif (!kagi.added) {\n\t\tkagi.plot.push([idx, d.close, d.current, d.reverseAt]);\n\t\tkagiLine.push(kagi);\n\t}\n\n\t// console.log(d.reverseAt);\n\n\treturn kagiLine;\n}\n\nexport default KagiSeries;\n"]},"metadata":{},"sourceType":"script"}