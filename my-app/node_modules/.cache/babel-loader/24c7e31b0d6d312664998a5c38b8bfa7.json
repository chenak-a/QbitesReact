{"ast":null,"code":"import { epsilon, splitter, resulterrbound, estimate, vec, sum, sum_three, scale } from './util.js';\nconst iccerrboundA = (10 + 96 * epsilon) * epsilon;\nconst iccerrboundB = (4 + 48 * epsilon) * epsilon;\nconst iccerrboundC = (44 + 576 * epsilon) * epsilon * epsilon;\nconst bc = vec(4);\nconst ca = vec(4);\nconst ab = vec(4);\nconst aa = vec(4);\nconst bb = vec(4);\nconst cc = vec(4);\nconst u = vec(4);\nconst v = vec(4);\nconst axtbc = vec(8);\nconst aytbc = vec(8);\nconst bxtca = vec(8);\nconst bytca = vec(8);\nconst cxtab = vec(8);\nconst cytab = vec(8);\nconst abt = vec(8);\nconst bct = vec(8);\nconst cat = vec(8);\nconst abtt = vec(4);\nconst bctt = vec(4);\nconst catt = vec(4);\n\nconst _8 = vec(8);\n\nconst _16 = vec(16);\n\nconst _16b = vec(16);\n\nconst _16c = vec(16);\n\nconst _32 = vec(32);\n\nconst _32b = vec(32);\n\nconst _48 = vec(48);\n\nconst _64 = vec(64);\n\nlet fin = vec(1152);\nlet fin2 = vec(1152);\n\nfunction finadd(finlen, a, alen) {\n  finlen = sum(finlen, fin, a, alen, fin2);\n  const tmp = fin;\n  fin = fin2;\n  fin2 = tmp;\n  return finlen;\n}\n\nfunction incircleadapt(ax, ay, bx, by, cx, cy, dx, dy, permanent) {\n  let finlen;\n  let adxtail, bdxtail, cdxtail, adytail, bdytail, cdytail;\n  let axtbclen, aytbclen, bxtcalen, bytcalen, cxtablen, cytablen;\n  let abtlen, bctlen, catlen;\n  let abttlen, bcttlen, cattlen;\n  let n1, n0;\n\n  let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0, u3;\n\n  const adx = ax - dx;\n  const bdx = bx - dx;\n  const cdx = cx - dx;\n  const ady = ay - dy;\n  const bdy = by - dy;\n  const cdy = cy - dy;\n  s1 = bdx * cdy;\n  c = splitter * bdx;\n  ahi = c - (c - bdx);\n  alo = bdx - ahi;\n  c = splitter * cdy;\n  bhi = c - (c - cdy);\n  blo = cdy - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = cdx * bdy;\n  c = splitter * cdx;\n  ahi = c - (c - cdx);\n  alo = cdx - ahi;\n  c = splitter * bdy;\n  bhi = c - (c - bdy);\n  blo = bdy - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  bc[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  bc[3] = u3;\n  s1 = cdx * ady;\n  c = splitter * cdx;\n  ahi = c - (c - cdx);\n  alo = cdx - ahi;\n  c = splitter * ady;\n  bhi = c - (c - ady);\n  blo = ady - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = adx * cdy;\n  c = splitter * adx;\n  ahi = c - (c - adx);\n  alo = adx - ahi;\n  c = splitter * cdy;\n  bhi = c - (c - cdy);\n  blo = cdy - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  ca[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  ca[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  ca[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  ca[3] = u3;\n  s1 = adx * bdy;\n  c = splitter * adx;\n  ahi = c - (c - adx);\n  alo = adx - ahi;\n  c = splitter * bdy;\n  bhi = c - (c - bdy);\n  blo = bdy - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = bdx * ady;\n  c = splitter * bdx;\n  ahi = c - (c - bdx);\n  alo = bdx - ahi;\n  c = splitter * ady;\n  bhi = c - (c - ady);\n  blo = ady - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  ab[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  ab[3] = u3;\n  finlen = sum(sum(sum(scale(scale(4, bc, adx, _8), _8, adx, _16), _16, scale(scale(4, bc, ady, _8), _8, ady, _16b), _16b, _32), _32, sum(scale(scale(4, ca, bdx, _8), _8, bdx, _16), _16, scale(scale(4, ca, bdy, _8), _8, bdy, _16b), _16b, _32b), _32b, _64), _64, sum(scale(scale(4, ab, cdx, _8), _8, cdx, _16), _16, scale(scale(4, ab, cdy, _8), _8, cdy, _16b), _16b, _32), _32, fin);\n  let det = estimate(finlen, fin);\n  let errbound = iccerrboundB * permanent;\n\n  if (det >= errbound || -det >= errbound) {\n    return det;\n  }\n\n  bvirt = ax - adx;\n  adxtail = ax - (adx + bvirt) + (bvirt - dx);\n  bvirt = ay - ady;\n  adytail = ay - (ady + bvirt) + (bvirt - dy);\n  bvirt = bx - bdx;\n  bdxtail = bx - (bdx + bvirt) + (bvirt - dx);\n  bvirt = by - bdy;\n  bdytail = by - (bdy + bvirt) + (bvirt - dy);\n  bvirt = cx - cdx;\n  cdxtail = cx - (cdx + bvirt) + (bvirt - dx);\n  bvirt = cy - cdy;\n  cdytail = cy - (cdy + bvirt) + (bvirt - dy);\n\n  if (adxtail === 0 && bdxtail === 0 && cdxtail === 0 && adytail === 0 && bdytail === 0 && cdytail === 0) {\n    return det;\n  }\n\n  errbound = iccerrboundC * permanent + resulterrbound * Math.abs(det);\n  det += (adx * adx + ady * ady) * (bdx * cdytail + cdy * bdxtail - (bdy * cdxtail + cdx * bdytail)) + 2 * (adx * adxtail + ady * adytail) * (bdx * cdy - bdy * cdx) + ((bdx * bdx + bdy * bdy) * (cdx * adytail + ady * cdxtail - (cdy * adxtail + adx * cdytail)) + 2 * (bdx * bdxtail + bdy * bdytail) * (cdx * ady - cdy * adx)) + ((cdx * cdx + cdy * cdy) * (adx * bdytail + bdy * adxtail - (ady * bdxtail + bdx * adytail)) + 2 * (cdx * cdxtail + cdy * cdytail) * (adx * bdy - ady * bdx));\n\n  if (det >= errbound || -det >= errbound) {\n    return det;\n  }\n\n  if (bdxtail !== 0 || bdytail !== 0 || cdxtail !== 0 || cdytail !== 0) {\n    s1 = adx * adx;\n    c = splitter * adx;\n    ahi = c - (c - adx);\n    alo = adx - ahi;\n    s0 = alo * alo - (s1 - ahi * ahi - (ahi + ahi) * alo);\n    t1 = ady * ady;\n    c = splitter * ady;\n    ahi = c - (c - ady);\n    alo = ady - ahi;\n    t0 = alo * alo - (t1 - ahi * ahi - (ahi + ahi) * alo);\n    _i = s0 + t0;\n    bvirt = _i - s0;\n    aa[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 + t1;\n    bvirt = _i - _0;\n    aa[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    aa[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    aa[3] = u3;\n  }\n\n  if (cdxtail !== 0 || cdytail !== 0 || adxtail !== 0 || adytail !== 0) {\n    s1 = bdx * bdx;\n    c = splitter * bdx;\n    ahi = c - (c - bdx);\n    alo = bdx - ahi;\n    s0 = alo * alo - (s1 - ahi * ahi - (ahi + ahi) * alo);\n    t1 = bdy * bdy;\n    c = splitter * bdy;\n    ahi = c - (c - bdy);\n    alo = bdy - ahi;\n    t0 = alo * alo - (t1 - ahi * ahi - (ahi + ahi) * alo);\n    _i = s0 + t0;\n    bvirt = _i - s0;\n    bb[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 + t1;\n    bvirt = _i - _0;\n    bb[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    bb[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    bb[3] = u3;\n  }\n\n  if (adxtail !== 0 || adytail !== 0 || bdxtail !== 0 || bdytail !== 0) {\n    s1 = cdx * cdx;\n    c = splitter * cdx;\n    ahi = c - (c - cdx);\n    alo = cdx - ahi;\n    s0 = alo * alo - (s1 - ahi * ahi - (ahi + ahi) * alo);\n    t1 = cdy * cdy;\n    c = splitter * cdy;\n    ahi = c - (c - cdy);\n    alo = cdy - ahi;\n    t0 = alo * alo - (t1 - ahi * ahi - (ahi + ahi) * alo);\n    _i = s0 + t0;\n    bvirt = _i - s0;\n    cc[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 + t1;\n    bvirt = _i - _0;\n    cc[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    cc[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    cc[3] = u3;\n  }\n\n  if (adxtail !== 0) {\n    axtbclen = scale(4, bc, adxtail, axtbc);\n    finlen = finadd(finlen, sum_three(scale(axtbclen, axtbc, 2 * adx, _16), _16, scale(scale(4, cc, adxtail, _8), _8, bdy, _16b), _16b, scale(scale(4, bb, adxtail, _8), _8, -cdy, _16c), _16c, _32, _48), _48);\n  }\n\n  if (adytail !== 0) {\n    aytbclen = scale(4, bc, adytail, aytbc);\n    finlen = finadd(finlen, sum_three(scale(aytbclen, aytbc, 2 * ady, _16), _16, scale(scale(4, bb, adytail, _8), _8, cdx, _16b), _16b, scale(scale(4, cc, adytail, _8), _8, -bdx, _16c), _16c, _32, _48), _48);\n  }\n\n  if (bdxtail !== 0) {\n    bxtcalen = scale(4, ca, bdxtail, bxtca);\n    finlen = finadd(finlen, sum_three(scale(bxtcalen, bxtca, 2 * bdx, _16), _16, scale(scale(4, aa, bdxtail, _8), _8, cdy, _16b), _16b, scale(scale(4, cc, bdxtail, _8), _8, -ady, _16c), _16c, _32, _48), _48);\n  }\n\n  if (bdytail !== 0) {\n    bytcalen = scale(4, ca, bdytail, bytca);\n    finlen = finadd(finlen, sum_three(scale(bytcalen, bytca, 2 * bdy, _16), _16, scale(scale(4, cc, bdytail, _8), _8, adx, _16b), _16b, scale(scale(4, aa, bdytail, _8), _8, -cdx, _16c), _16c, _32, _48), _48);\n  }\n\n  if (cdxtail !== 0) {\n    cxtablen = scale(4, ab, cdxtail, cxtab);\n    finlen = finadd(finlen, sum_three(scale(cxtablen, cxtab, 2 * cdx, _16), _16, scale(scale(4, bb, cdxtail, _8), _8, ady, _16b), _16b, scale(scale(4, aa, cdxtail, _8), _8, -bdy, _16c), _16c, _32, _48), _48);\n  }\n\n  if (cdytail !== 0) {\n    cytablen = scale(4, ab, cdytail, cytab);\n    finlen = finadd(finlen, sum_three(scale(cytablen, cytab, 2 * cdy, _16), _16, scale(scale(4, aa, cdytail, _8), _8, bdx, _16b), _16b, scale(scale(4, bb, cdytail, _8), _8, -adx, _16c), _16c, _32, _48), _48);\n  }\n\n  if (adxtail !== 0 || adytail !== 0) {\n    if (bdxtail !== 0 || bdytail !== 0 || cdxtail !== 0 || cdytail !== 0) {\n      s1 = bdxtail * cdy;\n      c = splitter * bdxtail;\n      ahi = c - (c - bdxtail);\n      alo = bdxtail - ahi;\n      c = splitter * cdy;\n      bhi = c - (c - cdy);\n      blo = cdy - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = bdx * cdytail;\n      c = splitter * bdx;\n      ahi = c - (c - bdx);\n      alo = bdx - ahi;\n      c = splitter * cdytail;\n      bhi = c - (c - cdytail);\n      blo = cdytail - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 + t0;\n      bvirt = _i - s0;\n      u[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 + t1;\n      bvirt = _i - _0;\n      u[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      u[3] = u3;\n      s1 = cdxtail * -bdy;\n      c = splitter * cdxtail;\n      ahi = c - (c - cdxtail);\n      alo = cdxtail - ahi;\n      c = splitter * -bdy;\n      bhi = c - (c - -bdy);\n      blo = -bdy - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = cdx * -bdytail;\n      c = splitter * cdx;\n      ahi = c - (c - cdx);\n      alo = cdx - ahi;\n      c = splitter * -bdytail;\n      bhi = c - (c - -bdytail);\n      blo = -bdytail - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 + t0;\n      bvirt = _i - s0;\n      v[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 + t1;\n      bvirt = _i - _0;\n      v[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      v[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      v[3] = u3;\n      bctlen = sum(4, u, 4, v, bct);\n      s1 = bdxtail * cdytail;\n      c = splitter * bdxtail;\n      ahi = c - (c - bdxtail);\n      alo = bdxtail - ahi;\n      c = splitter * cdytail;\n      bhi = c - (c - cdytail);\n      blo = cdytail - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = cdxtail * bdytail;\n      c = splitter * cdxtail;\n      ahi = c - (c - cdxtail);\n      alo = cdxtail - ahi;\n      c = splitter * bdytail;\n      bhi = c - (c - bdytail);\n      blo = bdytail - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 - t0;\n      bvirt = s0 - _i;\n      bctt[0] = s0 - (_i + bvirt) + (bvirt - t0);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 - t1;\n      bvirt = _0 - _i;\n      bctt[1] = _0 - (_i + bvirt) + (bvirt - t1);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      bctt[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      bctt[3] = u3;\n      bcttlen = 4;\n    } else {\n      bct[0] = 0;\n      bctlen = 1;\n      bctt[0] = 0;\n      bcttlen = 1;\n    }\n\n    if (adxtail !== 0) {\n      const len = scale(bctlen, bct, adxtail, _16c);\n      finlen = finadd(finlen, sum(scale(axtbclen, axtbc, adxtail, _16), _16, scale(len, _16c, 2 * adx, _32), _32, _48), _48);\n      const len2 = scale(bcttlen, bctt, adxtail, _8);\n      finlen = finadd(finlen, sum_three(scale(len2, _8, 2 * adx, _16), _16, scale(len2, _8, adxtail, _16b), _16b, scale(len, _16c, adxtail, _32), _32, _32b, _64), _64);\n\n      if (bdytail !== 0) {\n        finlen = finadd(finlen, scale(scale(4, cc, adxtail, _8), _8, bdytail, _16), _16);\n      }\n\n      if (cdytail !== 0) {\n        finlen = finadd(finlen, scale(scale(4, bb, -adxtail, _8), _8, cdytail, _16), _16);\n      }\n    }\n\n    if (adytail !== 0) {\n      const len = scale(bctlen, bct, adytail, _16c);\n      finlen = finadd(finlen, sum(scale(aytbclen, aytbc, adytail, _16), _16, scale(len, _16c, 2 * ady, _32), _32, _48), _48);\n      const len2 = scale(bcttlen, bctt, adytail, _8);\n      finlen = finadd(finlen, sum_three(scale(len2, _8, 2 * ady, _16), _16, scale(len2, _8, adytail, _16b), _16b, scale(len, _16c, adytail, _32), _32, _32b, _64), _64);\n    }\n  }\n\n  if (bdxtail !== 0 || bdytail !== 0) {\n    if (cdxtail !== 0 || cdytail !== 0 || adxtail !== 0 || adytail !== 0) {\n      s1 = cdxtail * ady;\n      c = splitter * cdxtail;\n      ahi = c - (c - cdxtail);\n      alo = cdxtail - ahi;\n      c = splitter * ady;\n      bhi = c - (c - ady);\n      blo = ady - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = cdx * adytail;\n      c = splitter * cdx;\n      ahi = c - (c - cdx);\n      alo = cdx - ahi;\n      c = splitter * adytail;\n      bhi = c - (c - adytail);\n      blo = adytail - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 + t0;\n      bvirt = _i - s0;\n      u[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 + t1;\n      bvirt = _i - _0;\n      u[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      u[3] = u3;\n      n1 = -cdy;\n      n0 = -cdytail;\n      s1 = adxtail * n1;\n      c = splitter * adxtail;\n      ahi = c - (c - adxtail);\n      alo = adxtail - ahi;\n      c = splitter * n1;\n      bhi = c - (c - n1);\n      blo = n1 - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = adx * n0;\n      c = splitter * adx;\n      ahi = c - (c - adx);\n      alo = adx - ahi;\n      c = splitter * n0;\n      bhi = c - (c - n0);\n      blo = n0 - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 + t0;\n      bvirt = _i - s0;\n      v[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 + t1;\n      bvirt = _i - _0;\n      v[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      v[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      v[3] = u3;\n      catlen = sum(4, u, 4, v, cat);\n      s1 = cdxtail * adytail;\n      c = splitter * cdxtail;\n      ahi = c - (c - cdxtail);\n      alo = cdxtail - ahi;\n      c = splitter * adytail;\n      bhi = c - (c - adytail);\n      blo = adytail - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = adxtail * cdytail;\n      c = splitter * adxtail;\n      ahi = c - (c - adxtail);\n      alo = adxtail - ahi;\n      c = splitter * cdytail;\n      bhi = c - (c - cdytail);\n      blo = cdytail - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 - t0;\n      bvirt = s0 - _i;\n      catt[0] = s0 - (_i + bvirt) + (bvirt - t0);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 - t1;\n      bvirt = _0 - _i;\n      catt[1] = _0 - (_i + bvirt) + (bvirt - t1);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      catt[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      catt[3] = u3;\n      cattlen = 4;\n    } else {\n      cat[0] = 0;\n      catlen = 1;\n      catt[0] = 0;\n      cattlen = 1;\n    }\n\n    if (bdxtail !== 0) {\n      const len = scale(catlen, cat, bdxtail, _16c);\n      finlen = finadd(finlen, sum(scale(bxtcalen, bxtca, bdxtail, _16), _16, scale(len, _16c, 2 * bdx, _32), _32, _48), _48);\n      const len2 = scale(cattlen, catt, bdxtail, _8);\n      finlen = finadd(finlen, sum_three(scale(len2, _8, 2 * bdx, _16), _16, scale(len2, _8, bdxtail, _16b), _16b, scale(len, _16c, bdxtail, _32), _32, _32b, _64), _64);\n\n      if (cdytail !== 0) {\n        finlen = finadd(finlen, scale(scale(4, aa, bdxtail, _8), _8, cdytail, _16), _16);\n      }\n\n      if (adytail !== 0) {\n        finlen = finadd(finlen, scale(scale(4, cc, -bdxtail, _8), _8, adytail, _16), _16);\n      }\n    }\n\n    if (bdytail !== 0) {\n      const len = scale(catlen, cat, bdytail, _16c);\n      finlen = finadd(finlen, sum(scale(bytcalen, bytca, bdytail, _16), _16, scale(len, _16c, 2 * bdy, _32), _32, _48), _48);\n      const len2 = scale(cattlen, catt, bdytail, _8);\n      finlen = finadd(finlen, sum_three(scale(len2, _8, 2 * bdy, _16), _16, scale(len2, _8, bdytail, _16b), _16b, scale(len, _16c, bdytail, _32), _32, _32b, _64), _64);\n    }\n  }\n\n  if (cdxtail !== 0 || cdytail !== 0) {\n    if (adxtail !== 0 || adytail !== 0 || bdxtail !== 0 || bdytail !== 0) {\n      s1 = adxtail * bdy;\n      c = splitter * adxtail;\n      ahi = c - (c - adxtail);\n      alo = adxtail - ahi;\n      c = splitter * bdy;\n      bhi = c - (c - bdy);\n      blo = bdy - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = adx * bdytail;\n      c = splitter * adx;\n      ahi = c - (c - adx);\n      alo = adx - ahi;\n      c = splitter * bdytail;\n      bhi = c - (c - bdytail);\n      blo = bdytail - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 + t0;\n      bvirt = _i - s0;\n      u[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 + t1;\n      bvirt = _i - _0;\n      u[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      u[3] = u3;\n      n1 = -ady;\n      n0 = -adytail;\n      s1 = bdxtail * n1;\n      c = splitter * bdxtail;\n      ahi = c - (c - bdxtail);\n      alo = bdxtail - ahi;\n      c = splitter * n1;\n      bhi = c - (c - n1);\n      blo = n1 - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = bdx * n0;\n      c = splitter * bdx;\n      ahi = c - (c - bdx);\n      alo = bdx - ahi;\n      c = splitter * n0;\n      bhi = c - (c - n0);\n      blo = n0 - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 + t0;\n      bvirt = _i - s0;\n      v[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 + t1;\n      bvirt = _i - _0;\n      v[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      v[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      v[3] = u3;\n      abtlen = sum(4, u, 4, v, abt);\n      s1 = adxtail * bdytail;\n      c = splitter * adxtail;\n      ahi = c - (c - adxtail);\n      alo = adxtail - ahi;\n      c = splitter * bdytail;\n      bhi = c - (c - bdytail);\n      blo = bdytail - bhi;\n      s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n      t1 = bdxtail * adytail;\n      c = splitter * bdxtail;\n      ahi = c - (c - bdxtail);\n      alo = bdxtail - ahi;\n      c = splitter * adytail;\n      bhi = c - (c - adytail);\n      blo = adytail - bhi;\n      t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n      _i = s0 - t0;\n      bvirt = s0 - _i;\n      abtt[0] = s0 - (_i + bvirt) + (bvirt - t0);\n      _j = s1 + _i;\n      bvirt = _j - s1;\n      _0 = s1 - (_j - bvirt) + (_i - bvirt);\n      _i = _0 - t1;\n      bvirt = _0 - _i;\n      abtt[1] = _0 - (_i + bvirt) + (bvirt - t1);\n      u3 = _j + _i;\n      bvirt = u3 - _j;\n      abtt[2] = _j - (u3 - bvirt) + (_i - bvirt);\n      abtt[3] = u3;\n      abttlen = 4;\n    } else {\n      abt[0] = 0;\n      abtlen = 1;\n      abtt[0] = 0;\n      abttlen = 1;\n    }\n\n    if (cdxtail !== 0) {\n      const len = scale(abtlen, abt, cdxtail, _16c);\n      finlen = finadd(finlen, sum(scale(cxtablen, cxtab, cdxtail, _16), _16, scale(len, _16c, 2 * cdx, _32), _32, _48), _48);\n      const len2 = scale(abttlen, abtt, cdxtail, _8);\n      finlen = finadd(finlen, sum_three(scale(len2, _8, 2 * cdx, _16), _16, scale(len2, _8, cdxtail, _16b), _16b, scale(len, _16c, cdxtail, _32), _32, _32b, _64), _64);\n\n      if (adytail !== 0) {\n        finlen = finadd(finlen, scale(scale(4, bb, cdxtail, _8), _8, adytail, _16), _16);\n      }\n\n      if (bdytail !== 0) {\n        finlen = finadd(finlen, scale(scale(4, aa, -cdxtail, _8), _8, bdytail, _16), _16);\n      }\n    }\n\n    if (cdytail !== 0) {\n      const len = scale(abtlen, abt, cdytail, _16c);\n      finlen = finadd(finlen, sum(scale(cytablen, cytab, cdytail, _16), _16, scale(len, _16c, 2 * cdy, _32), _32, _48), _48);\n      const len2 = scale(abttlen, abtt, cdytail, _8);\n      finlen = finadd(finlen, sum_three(scale(len2, _8, 2 * cdy, _16), _16, scale(len2, _8, cdytail, _16b), _16b, scale(len, _16c, cdytail, _32), _32, _32b, _64), _64);\n    }\n  }\n\n  return fin[finlen - 1];\n}\n\nexport function incircle(ax, ay, bx, by, cx, cy, dx, dy) {\n  const adx = ax - dx;\n  const bdx = bx - dx;\n  const cdx = cx - dx;\n  const ady = ay - dy;\n  const bdy = by - dy;\n  const cdy = cy - dy;\n  const bdxcdy = bdx * cdy;\n  const cdxbdy = cdx * bdy;\n  const alift = adx * adx + ady * ady;\n  const cdxady = cdx * ady;\n  const adxcdy = adx * cdy;\n  const blift = bdx * bdx + bdy * bdy;\n  const adxbdy = adx * bdy;\n  const bdxady = bdx * ady;\n  const clift = cdx * cdx + cdy * cdy;\n  const det = alift * (bdxcdy - cdxbdy) + blift * (cdxady - adxcdy) + clift * (adxbdy - bdxady);\n  const permanent = (Math.abs(bdxcdy) + Math.abs(cdxbdy)) * alift + (Math.abs(cdxady) + Math.abs(adxcdy)) * blift + (Math.abs(adxbdy) + Math.abs(bdxady)) * clift;\n  const errbound = iccerrboundA * permanent;\n\n  if (det > errbound || -det > errbound) {\n    return det;\n  }\n\n  return incircleadapt(ax, ay, bx, by, cx, cy, dx, dy, permanent);\n}\nexport function incirclefast(ax, ay, bx, by, cx, cy, dx, dy) {\n  const adx = ax - dx;\n  const ady = ay - dy;\n  const bdx = bx - dx;\n  const bdy = by - dy;\n  const cdx = cx - dx;\n  const cdy = cy - dy;\n  const abdet = adx * bdy - bdx * ady;\n  const bcdet = bdx * cdy - cdx * bdy;\n  const cadet = cdx * ady - adx * cdy;\n  const alift = adx * adx + ady * ady;\n  const blift = bdx * bdx + bdy * bdy;\n  const clift = cdx * cdx + cdy * cdy;\n  return alift * bcdet + blift * cadet + clift * abdet;\n}","map":{"version":3,"names":["epsilon","splitter","resulterrbound","estimate","vec","sum","sum_three","scale","iccerrboundA","iccerrboundB","iccerrboundC","bc","ca","ab","aa","bb","cc","u","v","axtbc","aytbc","bxtca","bytca","cxtab","cytab","abt","bct","cat","abtt","bctt","catt","_8","_16","_16b","_16c","_32","_32b","_48","_64","fin","fin2","finadd","finlen","a","alen","tmp","incircleadapt","ax","ay","bx","by","cx","cy","dx","dy","permanent","adxtail","bdxtail","cdxtail","adytail","bdytail","cdytail","axtbclen","aytbclen","bxtcalen","bytcalen","cxtablen","cytablen","abtlen","bctlen","catlen","abttlen","bcttlen","cattlen","n1","n0","bvirt","c","ahi","alo","bhi","blo","_i","_j","_0","s1","s0","t1","t0","u3","adx","bdx","cdx","ady","bdy","cdy","det","errbound","Math","abs","len","len2","incircle","bdxcdy","cdxbdy","alift","cdxady","adxcdy","blift","adxbdy","bdxady","clift","incirclefast","abdet","bcdet","cadet"],"sources":["/home/chenak/QbitesReact/my-app/node_modules/robust-predicates/esm/incircle.js"],"sourcesContent":["import {epsilon, splitter, resulterrbound, estimate, vec, sum, sum_three, scale} from './util.js';\n\nconst iccerrboundA = (10 + 96 * epsilon) * epsilon;\nconst iccerrboundB = (4 + 48 * epsilon) * epsilon;\nconst iccerrboundC = (44 + 576 * epsilon) * epsilon * epsilon;\n\nconst bc = vec(4);\nconst ca = vec(4);\nconst ab = vec(4);\nconst aa = vec(4);\nconst bb = vec(4);\nconst cc = vec(4);\nconst u = vec(4);\nconst v = vec(4);\nconst axtbc = vec(8);\nconst aytbc = vec(8);\nconst bxtca = vec(8);\nconst bytca = vec(8);\nconst cxtab = vec(8);\nconst cytab = vec(8);\nconst abt = vec(8);\nconst bct = vec(8);\nconst cat = vec(8);\nconst abtt = vec(4);\nconst bctt = vec(4);\nconst catt = vec(4);\n\nconst _8 = vec(8);\nconst _16 = vec(16);\nconst _16b = vec(16);\nconst _16c = vec(16);\nconst _32 = vec(32);\nconst _32b = vec(32);\nconst _48 = vec(48);\nconst _64 = vec(64);\n\nlet fin = vec(1152);\nlet fin2 = vec(1152);\n\nfunction finadd(finlen, a, alen) {\n    finlen = sum(finlen, fin, a, alen, fin2);\n    const tmp = fin; fin = fin2; fin2 = tmp;\n    return finlen;\n}\n\nfunction incircleadapt(ax, ay, bx, by, cx, cy, dx, dy, permanent) {\n    let finlen;\n    let adxtail, bdxtail, cdxtail, adytail, bdytail, cdytail;\n    let axtbclen, aytbclen, bxtcalen, bytcalen, cxtablen, cytablen;\n    let abtlen, bctlen, catlen;\n    let abttlen, bcttlen, cattlen;\n    let n1, n0;\n\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0, u3;\n\n    const adx = ax - dx;\n    const bdx = bx - dx;\n    const cdx = cx - dx;\n    const ady = ay - dy;\n    const bdy = by - dy;\n    const cdy = cy - dy;\n\n    s1 = bdx * cdy;\n    c = splitter * bdx;\n    ahi = c - (c - bdx);\n    alo = bdx - ahi;\n    c = splitter * cdy;\n    bhi = c - (c - cdy);\n    blo = cdy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = cdx * bdy;\n    c = splitter * cdx;\n    ahi = c - (c - cdx);\n    alo = cdx - ahi;\n    c = splitter * bdy;\n    bhi = c - (c - bdy);\n    blo = bdy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    bc[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    bc[3] = u3;\n    s1 = cdx * ady;\n    c = splitter * cdx;\n    ahi = c - (c - cdx);\n    alo = cdx - ahi;\n    c = splitter * ady;\n    bhi = c - (c - ady);\n    blo = ady - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = adx * cdy;\n    c = splitter * adx;\n    ahi = c - (c - adx);\n    alo = adx - ahi;\n    c = splitter * cdy;\n    bhi = c - (c - cdy);\n    blo = cdy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ca[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ca[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ca[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ca[3] = u3;\n    s1 = adx * bdy;\n    c = splitter * adx;\n    ahi = c - (c - adx);\n    alo = adx - ahi;\n    c = splitter * bdy;\n    bhi = c - (c - bdy);\n    blo = bdy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = bdx * ady;\n    c = splitter * bdx;\n    ahi = c - (c - bdx);\n    alo = bdx - ahi;\n    c = splitter * ady;\n    bhi = c - (c - ady);\n    blo = ady - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ab[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ab[3] = u3;\n\n    finlen = sum(\n        sum(\n            sum(\n                scale(scale(4, bc, adx, _8), _8, adx, _16), _16,\n                scale(scale(4, bc, ady, _8), _8, ady, _16b), _16b, _32), _32,\n            sum(\n                scale(scale(4, ca, bdx, _8), _8, bdx, _16), _16,\n                scale(scale(4, ca, bdy, _8), _8, bdy, _16b), _16b, _32b), _32b, _64), _64,\n        sum(\n            scale(scale(4, ab, cdx, _8), _8, cdx, _16), _16,\n            scale(scale(4, ab, cdy, _8), _8, cdy, _16b), _16b, _32), _32, fin);\n\n    let det = estimate(finlen, fin);\n    let errbound = iccerrboundB * permanent;\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    bvirt = ax - adx;\n    adxtail = ax - (adx + bvirt) + (bvirt - dx);\n    bvirt = ay - ady;\n    adytail = ay - (ady + bvirt) + (bvirt - dy);\n    bvirt = bx - bdx;\n    bdxtail = bx - (bdx + bvirt) + (bvirt - dx);\n    bvirt = by - bdy;\n    bdytail = by - (bdy + bvirt) + (bvirt - dy);\n    bvirt = cx - cdx;\n    cdxtail = cx - (cdx + bvirt) + (bvirt - dx);\n    bvirt = cy - cdy;\n    cdytail = cy - (cdy + bvirt) + (bvirt - dy);\n    if (adxtail === 0 && bdxtail === 0 && cdxtail === 0 && adytail === 0 && bdytail === 0 && cdytail === 0) {\n        return det;\n    }\n\n    errbound = iccerrboundC * permanent + resulterrbound * Math.abs(det);\n    det += ((adx * adx + ady * ady) * ((bdx * cdytail + cdy * bdxtail) - (bdy * cdxtail + cdx * bdytail)) +\n        2 * (adx * adxtail + ady * adytail) * (bdx * cdy - bdy * cdx)) +\n        ((bdx * bdx + bdy * bdy) * ((cdx * adytail + ady * cdxtail) - (cdy * adxtail + adx * cdytail)) +\n        2 * (bdx * bdxtail + bdy * bdytail) * (cdx * ady - cdy * adx)) +\n        ((cdx * cdx + cdy * cdy) * ((adx * bdytail + bdy * adxtail) - (ady * bdxtail + bdx * adytail)) +\n        2 * (cdx * cdxtail + cdy * cdytail) * (adx * bdy - ady * bdx));\n\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    if (bdxtail !== 0 || bdytail !== 0 || cdxtail !== 0 || cdytail !== 0) {\n        s1 = adx * adx;\n        c = splitter * adx;\n        ahi = c - (c - adx);\n        alo = adx - ahi;\n        s0 = alo * alo - (s1 - ahi * ahi - (ahi + ahi) * alo);\n        t1 = ady * ady;\n        c = splitter * ady;\n        ahi = c - (c - ady);\n        alo = ady - ahi;\n        t0 = alo * alo - (t1 - ahi * ahi - (ahi + ahi) * alo);\n        _i = s0 + t0;\n        bvirt = _i - s0;\n        aa[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n        _j = s1 + _i;\n        bvirt = _j - s1;\n        _0 = s1 - (_j - bvirt) + (_i - bvirt);\n        _i = _0 + t1;\n        bvirt = _i - _0;\n        aa[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n        u3 = _j + _i;\n        bvirt = u3 - _j;\n        aa[2] = _j - (u3 - bvirt) + (_i - bvirt);\n        aa[3] = u3;\n    }\n    if (cdxtail !== 0 || cdytail !== 0 || adxtail !== 0 || adytail !== 0) {\n        s1 = bdx * bdx;\n        c = splitter * bdx;\n        ahi = c - (c - bdx);\n        alo = bdx - ahi;\n        s0 = alo * alo - (s1 - ahi * ahi - (ahi + ahi) * alo);\n        t1 = bdy * bdy;\n        c = splitter * bdy;\n        ahi = c - (c - bdy);\n        alo = bdy - ahi;\n        t0 = alo * alo - (t1 - ahi * ahi - (ahi + ahi) * alo);\n        _i = s0 + t0;\n        bvirt = _i - s0;\n        bb[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n        _j = s1 + _i;\n        bvirt = _j - s1;\n        _0 = s1 - (_j - bvirt) + (_i - bvirt);\n        _i = _0 + t1;\n        bvirt = _i - _0;\n        bb[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n        u3 = _j + _i;\n        bvirt = u3 - _j;\n        bb[2] = _j - (u3 - bvirt) + (_i - bvirt);\n        bb[3] = u3;\n    }\n    if (adxtail !== 0 || adytail !== 0 || bdxtail !== 0 || bdytail !== 0) {\n        s1 = cdx * cdx;\n        c = splitter * cdx;\n        ahi = c - (c - cdx);\n        alo = cdx - ahi;\n        s0 = alo * alo - (s1 - ahi * ahi - (ahi + ahi) * alo);\n        t1 = cdy * cdy;\n        c = splitter * cdy;\n        ahi = c - (c - cdy);\n        alo = cdy - ahi;\n        t0 = alo * alo - (t1 - ahi * ahi - (ahi + ahi) * alo);\n        _i = s0 + t0;\n        bvirt = _i - s0;\n        cc[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n        _j = s1 + _i;\n        bvirt = _j - s1;\n        _0 = s1 - (_j - bvirt) + (_i - bvirt);\n        _i = _0 + t1;\n        bvirt = _i - _0;\n        cc[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n        u3 = _j + _i;\n        bvirt = u3 - _j;\n        cc[2] = _j - (u3 - bvirt) + (_i - bvirt);\n        cc[3] = u3;\n    }\n\n    if (adxtail !== 0) {\n        axtbclen = scale(4, bc, adxtail, axtbc);\n        finlen = finadd(finlen, sum_three(\n            scale(axtbclen, axtbc, 2 * adx, _16), _16,\n            scale(scale(4, cc, adxtail, _8), _8, bdy, _16b), _16b,\n            scale(scale(4, bb, adxtail, _8), _8, -cdy, _16c), _16c, _32, _48), _48);\n    }\n    if (adytail !== 0) {\n        aytbclen = scale(4, bc, adytail, aytbc);\n        finlen = finadd(finlen, sum_three(\n            scale(aytbclen, aytbc, 2 * ady, _16), _16,\n            scale(scale(4, bb, adytail, _8), _8, cdx, _16b), _16b,\n            scale(scale(4, cc, adytail, _8), _8, -bdx, _16c), _16c, _32, _48), _48);\n    }\n    if (bdxtail !== 0) {\n        bxtcalen = scale(4, ca, bdxtail, bxtca);\n        finlen = finadd(finlen, sum_three(\n            scale(bxtcalen, bxtca, 2 * bdx, _16), _16,\n            scale(scale(4, aa, bdxtail, _8), _8, cdy, _16b), _16b,\n            scale(scale(4, cc, bdxtail, _8), _8, -ady, _16c), _16c, _32, _48), _48);\n    }\n    if (bdytail !== 0) {\n        bytcalen = scale(4, ca, bdytail, bytca);\n        finlen = finadd(finlen, sum_three(\n            scale(bytcalen, bytca, 2 * bdy, _16), _16,\n            scale(scale(4, cc, bdytail, _8), _8, adx, _16b), _16b,\n            scale(scale(4, aa, bdytail, _8), _8, -cdx, _16c), _16c, _32, _48), _48);\n    }\n    if (cdxtail !== 0) {\n        cxtablen = scale(4, ab, cdxtail, cxtab);\n        finlen = finadd(finlen, sum_three(\n            scale(cxtablen, cxtab, 2 * cdx, _16), _16,\n            scale(scale(4, bb, cdxtail, _8), _8, ady, _16b), _16b,\n            scale(scale(4, aa, cdxtail, _8), _8, -bdy, _16c), _16c, _32, _48), _48);\n    }\n    if (cdytail !== 0) {\n        cytablen = scale(4, ab, cdytail, cytab);\n        finlen = finadd(finlen, sum_three(\n            scale(cytablen, cytab, 2 * cdy, _16), _16,\n            scale(scale(4, aa, cdytail, _8), _8, bdx, _16b), _16b,\n            scale(scale(4, bb, cdytail, _8), _8, -adx, _16c), _16c, _32, _48), _48);\n    }\n\n    if (adxtail !== 0 || adytail !== 0) {\n        if (bdxtail !== 0 || bdytail !== 0 || cdxtail !== 0 || cdytail !== 0) {\n            s1 = bdxtail * cdy;\n            c = splitter * bdxtail;\n            ahi = c - (c - bdxtail);\n            alo = bdxtail - ahi;\n            c = splitter * cdy;\n            bhi = c - (c - cdy);\n            blo = cdy - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = bdx * cdytail;\n            c = splitter * bdx;\n            ahi = c - (c - bdx);\n            alo = bdx - ahi;\n            c = splitter * cdytail;\n            bhi = c - (c - cdytail);\n            blo = cdytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 + t0;\n            bvirt = _i - s0;\n            u[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 + t1;\n            bvirt = _i - _0;\n            u[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            u[3] = u3;\n            s1 = cdxtail * -bdy;\n            c = splitter * cdxtail;\n            ahi = c - (c - cdxtail);\n            alo = cdxtail - ahi;\n            c = splitter * -bdy;\n            bhi = c - (c - -bdy);\n            blo = -bdy - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = cdx * -bdytail;\n            c = splitter * cdx;\n            ahi = c - (c - cdx);\n            alo = cdx - ahi;\n            c = splitter * -bdytail;\n            bhi = c - (c - -bdytail);\n            blo = -bdytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 + t0;\n            bvirt = _i - s0;\n            v[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 + t1;\n            bvirt = _i - _0;\n            v[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            v[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            v[3] = u3;\n            bctlen = sum(4, u, 4, v, bct);\n            s1 = bdxtail * cdytail;\n            c = splitter * bdxtail;\n            ahi = c - (c - bdxtail);\n            alo = bdxtail - ahi;\n            c = splitter * cdytail;\n            bhi = c - (c - cdytail);\n            blo = cdytail - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = cdxtail * bdytail;\n            c = splitter * cdxtail;\n            ahi = c - (c - cdxtail);\n            alo = cdxtail - ahi;\n            c = splitter * bdytail;\n            bhi = c - (c - bdytail);\n            blo = bdytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 - t0;\n            bvirt = s0 - _i;\n            bctt[0] = s0 - (_i + bvirt) + (bvirt - t0);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 - t1;\n            bvirt = _0 - _i;\n            bctt[1] = _0 - (_i + bvirt) + (bvirt - t1);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            bctt[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            bctt[3] = u3;\n            bcttlen = 4;\n        } else {\n            bct[0] = 0;\n            bctlen = 1;\n            bctt[0] = 0;\n            bcttlen = 1;\n        }\n        if (adxtail !== 0) {\n            const len = scale(bctlen, bct, adxtail, _16c);\n            finlen = finadd(finlen, sum(\n                scale(axtbclen, axtbc, adxtail, _16), _16,\n                scale(len, _16c, 2 * adx, _32), _32, _48), _48);\n\n            const len2 = scale(bcttlen, bctt, adxtail, _8);\n            finlen = finadd(finlen, sum_three(\n                scale(len2, _8, 2 * adx, _16), _16,\n                scale(len2, _8, adxtail, _16b), _16b,\n                scale(len, _16c, adxtail, _32), _32, _32b, _64), _64);\n\n            if (bdytail !== 0) {\n                finlen = finadd(finlen, scale(scale(4, cc, adxtail, _8), _8, bdytail, _16), _16);\n            }\n            if (cdytail !== 0) {\n                finlen = finadd(finlen, scale(scale(4, bb, -adxtail, _8), _8, cdytail, _16), _16);\n            }\n        }\n        if (adytail !== 0) {\n            const len = scale(bctlen, bct, adytail, _16c);\n            finlen = finadd(finlen, sum(\n                scale(aytbclen, aytbc, adytail, _16), _16,\n                scale(len, _16c, 2 * ady, _32), _32, _48), _48);\n\n            const len2 = scale(bcttlen, bctt, adytail, _8);\n            finlen = finadd(finlen, sum_three(\n                scale(len2, _8, 2 * ady, _16), _16,\n                scale(len2, _8, adytail, _16b), _16b,\n                scale(len, _16c, adytail, _32), _32, _32b, _64), _64);\n        }\n    }\n    if (bdxtail !== 0 || bdytail !== 0) {\n        if (cdxtail !== 0 || cdytail !== 0 || adxtail !== 0 || adytail !== 0) {\n            s1 = cdxtail * ady;\n            c = splitter * cdxtail;\n            ahi = c - (c - cdxtail);\n            alo = cdxtail - ahi;\n            c = splitter * ady;\n            bhi = c - (c - ady);\n            blo = ady - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = cdx * adytail;\n            c = splitter * cdx;\n            ahi = c - (c - cdx);\n            alo = cdx - ahi;\n            c = splitter * adytail;\n            bhi = c - (c - adytail);\n            blo = adytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 + t0;\n            bvirt = _i - s0;\n            u[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 + t1;\n            bvirt = _i - _0;\n            u[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            u[3] = u3;\n            n1 = -cdy;\n            n0 = -cdytail;\n            s1 = adxtail * n1;\n            c = splitter * adxtail;\n            ahi = c - (c - adxtail);\n            alo = adxtail - ahi;\n            c = splitter * n1;\n            bhi = c - (c - n1);\n            blo = n1 - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = adx * n0;\n            c = splitter * adx;\n            ahi = c - (c - adx);\n            alo = adx - ahi;\n            c = splitter * n0;\n            bhi = c - (c - n0);\n            blo = n0 - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 + t0;\n            bvirt = _i - s0;\n            v[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 + t1;\n            bvirt = _i - _0;\n            v[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            v[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            v[3] = u3;\n            catlen = sum(4, u, 4, v, cat);\n            s1 = cdxtail * adytail;\n            c = splitter * cdxtail;\n            ahi = c - (c - cdxtail);\n            alo = cdxtail - ahi;\n            c = splitter * adytail;\n            bhi = c - (c - adytail);\n            blo = adytail - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = adxtail * cdytail;\n            c = splitter * adxtail;\n            ahi = c - (c - adxtail);\n            alo = adxtail - ahi;\n            c = splitter * cdytail;\n            bhi = c - (c - cdytail);\n            blo = cdytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 - t0;\n            bvirt = s0 - _i;\n            catt[0] = s0 - (_i + bvirt) + (bvirt - t0);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 - t1;\n            bvirt = _0 - _i;\n            catt[1] = _0 - (_i + bvirt) + (bvirt - t1);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            catt[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            catt[3] = u3;\n            cattlen = 4;\n        } else {\n            cat[0] = 0;\n            catlen = 1;\n            catt[0] = 0;\n            cattlen = 1;\n        }\n        if (bdxtail !== 0) {\n            const len = scale(catlen, cat, bdxtail, _16c);\n            finlen = finadd(finlen, sum(\n                scale(bxtcalen, bxtca, bdxtail, _16), _16,\n                scale(len, _16c, 2 * bdx, _32), _32, _48), _48);\n\n            const len2 = scale(cattlen, catt, bdxtail, _8);\n            finlen = finadd(finlen, sum_three(\n                scale(len2, _8, 2 * bdx, _16), _16,\n                scale(len2, _8, bdxtail, _16b), _16b,\n                scale(len, _16c, bdxtail, _32), _32, _32b, _64), _64);\n\n            if (cdytail !== 0) {\n                finlen = finadd(finlen, scale(scale(4, aa, bdxtail, _8), _8, cdytail, _16), _16);\n            }\n            if (adytail !== 0) {\n                finlen = finadd(finlen, scale(scale(4, cc, -bdxtail, _8), _8, adytail, _16), _16);\n            }\n        }\n        if (bdytail !== 0) {\n            const len = scale(catlen, cat, bdytail, _16c);\n            finlen = finadd(finlen, sum(\n                scale(bytcalen, bytca, bdytail, _16), _16,\n                scale(len, _16c, 2 * bdy, _32), _32, _48), _48);\n\n            const len2 = scale(cattlen, catt, bdytail, _8);\n            finlen = finadd(finlen, sum_three(\n                scale(len2, _8, 2 * bdy, _16), _16,\n                scale(len2, _8, bdytail, _16b), _16b,\n                scale(len, _16c, bdytail, _32), _32,  _32b, _64), _64);\n        }\n    }\n    if (cdxtail !== 0 || cdytail !== 0) {\n        if (adxtail !== 0 || adytail !== 0 || bdxtail !== 0 || bdytail !== 0) {\n            s1 = adxtail * bdy;\n            c = splitter * adxtail;\n            ahi = c - (c - adxtail);\n            alo = adxtail - ahi;\n            c = splitter * bdy;\n            bhi = c - (c - bdy);\n            blo = bdy - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = adx * bdytail;\n            c = splitter * adx;\n            ahi = c - (c - adx);\n            alo = adx - ahi;\n            c = splitter * bdytail;\n            bhi = c - (c - bdytail);\n            blo = bdytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 + t0;\n            bvirt = _i - s0;\n            u[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 + t1;\n            bvirt = _i - _0;\n            u[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            u[3] = u3;\n            n1 = -ady;\n            n0 = -adytail;\n            s1 = bdxtail * n1;\n            c = splitter * bdxtail;\n            ahi = c - (c - bdxtail);\n            alo = bdxtail - ahi;\n            c = splitter * n1;\n            bhi = c - (c - n1);\n            blo = n1 - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = bdx * n0;\n            c = splitter * bdx;\n            ahi = c - (c - bdx);\n            alo = bdx - ahi;\n            c = splitter * n0;\n            bhi = c - (c - n0);\n            blo = n0 - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 + t0;\n            bvirt = _i - s0;\n            v[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 + t1;\n            bvirt = _i - _0;\n            v[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            v[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            v[3] = u3;\n            abtlen = sum(4, u, 4, v, abt);\n            s1 = adxtail * bdytail;\n            c = splitter * adxtail;\n            ahi = c - (c - adxtail);\n            alo = adxtail - ahi;\n            c = splitter * bdytail;\n            bhi = c - (c - bdytail);\n            blo = bdytail - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = bdxtail * adytail;\n            c = splitter * bdxtail;\n            ahi = c - (c - bdxtail);\n            alo = bdxtail - ahi;\n            c = splitter * adytail;\n            bhi = c - (c - adytail);\n            blo = adytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 - t0;\n            bvirt = s0 - _i;\n            abtt[0] = s0 - (_i + bvirt) + (bvirt - t0);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 - t1;\n            bvirt = _0 - _i;\n            abtt[1] = _0 - (_i + bvirt) + (bvirt - t1);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            abtt[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            abtt[3] = u3;\n            abttlen = 4;\n        } else {\n            abt[0] = 0;\n            abtlen = 1;\n            abtt[0] = 0;\n            abttlen = 1;\n        }\n        if (cdxtail !== 0) {\n            const len = scale(abtlen, abt, cdxtail, _16c);\n            finlen = finadd(finlen, sum(\n                scale(cxtablen, cxtab, cdxtail, _16), _16,\n                scale(len, _16c, 2 * cdx, _32), _32, _48), _48);\n\n            const len2 = scale(abttlen, abtt, cdxtail, _8);\n            finlen = finadd(finlen, sum_three(\n                scale(len2, _8, 2 * cdx, _16), _16,\n                scale(len2, _8, cdxtail, _16b), _16b,\n                scale(len, _16c, cdxtail, _32), _32, _32b, _64), _64);\n\n            if (adytail !== 0) {\n                finlen = finadd(finlen, scale(scale(4, bb, cdxtail, _8), _8, adytail, _16), _16);\n            }\n            if (bdytail !== 0) {\n                finlen = finadd(finlen, scale(scale(4, aa, -cdxtail, _8), _8, bdytail, _16), _16);\n            }\n        }\n        if (cdytail !== 0) {\n            const len = scale(abtlen, abt, cdytail, _16c);\n            finlen = finadd(finlen, sum(\n                scale(cytablen, cytab, cdytail, _16), _16,\n                scale(len, _16c, 2 * cdy, _32), _32, _48), _48);\n\n            const len2 = scale(abttlen, abtt, cdytail, _8);\n            finlen = finadd(finlen, sum_three(\n                scale(len2, _8, 2 * cdy, _16), _16,\n                scale(len2, _8, cdytail, _16b), _16b,\n                scale(len, _16c, cdytail, _32), _32, _32b, _64), _64);\n        }\n    }\n\n    return fin[finlen - 1];\n}\n\nexport function incircle(ax, ay, bx, by, cx, cy, dx, dy) {\n    const adx = ax - dx;\n    const bdx = bx - dx;\n    const cdx = cx - dx;\n    const ady = ay - dy;\n    const bdy = by - dy;\n    const cdy = cy - dy;\n\n    const bdxcdy = bdx * cdy;\n    const cdxbdy = cdx * bdy;\n    const alift = adx * adx + ady * ady;\n\n    const cdxady = cdx * ady;\n    const adxcdy = adx * cdy;\n    const blift = bdx * bdx + bdy * bdy;\n\n    const adxbdy = adx * bdy;\n    const bdxady = bdx * ady;\n    const clift = cdx * cdx + cdy * cdy;\n\n    const det =\n        alift * (bdxcdy - cdxbdy) +\n        blift * (cdxady - adxcdy) +\n        clift * (adxbdy - bdxady);\n\n    const permanent =\n        (Math.abs(bdxcdy) + Math.abs(cdxbdy)) * alift +\n        (Math.abs(cdxady) + Math.abs(adxcdy)) * blift +\n        (Math.abs(adxbdy) + Math.abs(bdxady)) * clift;\n\n    const errbound = iccerrboundA * permanent;\n\n    if (det > errbound || -det > errbound) {\n        return det;\n    }\n    return incircleadapt(ax, ay, bx, by, cx, cy, dx, dy, permanent);\n}\n\nexport function incirclefast(ax, ay, bx, by, cx, cy, dx, dy) {\n    const adx = ax - dx;\n    const ady = ay - dy;\n    const bdx = bx - dx;\n    const bdy = by - dy;\n    const cdx = cx - dx;\n    const cdy = cy - dy;\n\n    const abdet = adx * bdy - bdx * ady;\n    const bcdet = bdx * cdy - cdx * bdy;\n    const cadet = cdx * ady - adx * cdy;\n    const alift = adx * adx + ady * ady;\n    const blift = bdx * bdx + bdy * bdy;\n    const clift = cdx * cdx + cdy * cdy;\n\n    return alift * bcdet + blift * cadet + clift * abdet;\n}\n"],"mappings":"AAAA,SAAQA,OAAR,EAAiBC,QAAjB,EAA2BC,cAA3B,EAA2CC,QAA3C,EAAqDC,GAArD,EAA0DC,GAA1D,EAA+DC,SAA/D,EAA0EC,KAA1E,QAAsF,WAAtF;AAEA,MAAMC,YAAY,GAAG,CAAC,KAAK,KAAKR,OAAX,IAAsBA,OAA3C;AACA,MAAMS,YAAY,GAAG,CAAC,IAAI,KAAKT,OAAV,IAAqBA,OAA1C;AACA,MAAMU,YAAY,GAAG,CAAC,KAAK,MAAMV,OAAZ,IAAuBA,OAAvB,GAAiCA,OAAtD;AAEA,MAAMW,EAAE,GAAGP,GAAG,CAAC,CAAD,CAAd;AACA,MAAMQ,EAAE,GAAGR,GAAG,CAAC,CAAD,CAAd;AACA,MAAMS,EAAE,GAAGT,GAAG,CAAC,CAAD,CAAd;AACA,MAAMU,EAAE,GAAGV,GAAG,CAAC,CAAD,CAAd;AACA,MAAMW,EAAE,GAAGX,GAAG,CAAC,CAAD,CAAd;AACA,MAAMY,EAAE,GAAGZ,GAAG,CAAC,CAAD,CAAd;AACA,MAAMa,CAAC,GAAGb,GAAG,CAAC,CAAD,CAAb;AACA,MAAMc,CAAC,GAAGd,GAAG,CAAC,CAAD,CAAb;AACA,MAAMe,KAAK,GAAGf,GAAG,CAAC,CAAD,CAAjB;AACA,MAAMgB,KAAK,GAAGhB,GAAG,CAAC,CAAD,CAAjB;AACA,MAAMiB,KAAK,GAAGjB,GAAG,CAAC,CAAD,CAAjB;AACA,MAAMkB,KAAK,GAAGlB,GAAG,CAAC,CAAD,CAAjB;AACA,MAAMmB,KAAK,GAAGnB,GAAG,CAAC,CAAD,CAAjB;AACA,MAAMoB,KAAK,GAAGpB,GAAG,CAAC,CAAD,CAAjB;AACA,MAAMqB,GAAG,GAAGrB,GAAG,CAAC,CAAD,CAAf;AACA,MAAMsB,GAAG,GAAGtB,GAAG,CAAC,CAAD,CAAf;AACA,MAAMuB,GAAG,GAAGvB,GAAG,CAAC,CAAD,CAAf;AACA,MAAMwB,IAAI,GAAGxB,GAAG,CAAC,CAAD,CAAhB;AACA,MAAMyB,IAAI,GAAGzB,GAAG,CAAC,CAAD,CAAhB;AACA,MAAM0B,IAAI,GAAG1B,GAAG,CAAC,CAAD,CAAhB;;AAEA,MAAM2B,EAAE,GAAG3B,GAAG,CAAC,CAAD,CAAd;;AACA,MAAM4B,GAAG,GAAG5B,GAAG,CAAC,EAAD,CAAf;;AACA,MAAM6B,IAAI,GAAG7B,GAAG,CAAC,EAAD,CAAhB;;AACA,MAAM8B,IAAI,GAAG9B,GAAG,CAAC,EAAD,CAAhB;;AACA,MAAM+B,GAAG,GAAG/B,GAAG,CAAC,EAAD,CAAf;;AACA,MAAMgC,IAAI,GAAGhC,GAAG,CAAC,EAAD,CAAhB;;AACA,MAAMiC,GAAG,GAAGjC,GAAG,CAAC,EAAD,CAAf;;AACA,MAAMkC,GAAG,GAAGlC,GAAG,CAAC,EAAD,CAAf;;AAEA,IAAImC,GAAG,GAAGnC,GAAG,CAAC,IAAD,CAAb;AACA,IAAIoC,IAAI,GAAGpC,GAAG,CAAC,IAAD,CAAd;;AAEA,SAASqC,MAAT,CAAgBC,MAAhB,EAAwBC,CAAxB,EAA2BC,IAA3B,EAAiC;EAC7BF,MAAM,GAAGrC,GAAG,CAACqC,MAAD,EAASH,GAAT,EAAcI,CAAd,EAAiBC,IAAjB,EAAuBJ,IAAvB,CAAZ;EACA,MAAMK,GAAG,GAAGN,GAAZ;EAAiBA,GAAG,GAAGC,IAAN;EAAYA,IAAI,GAAGK,GAAP;EAC7B,OAAOH,MAAP;AACH;;AAED,SAASI,aAAT,CAAuBC,EAAvB,EAA2BC,EAA3B,EAA+BC,EAA/B,EAAmCC,EAAnC,EAAuCC,EAAvC,EAA2CC,EAA3C,EAA+CC,EAA/C,EAAmDC,EAAnD,EAAuDC,SAAvD,EAAkE;EAC9D,IAAIb,MAAJ;EACA,IAAIc,OAAJ,EAAaC,OAAb,EAAsBC,OAAtB,EAA+BC,OAA/B,EAAwCC,OAAxC,EAAiDC,OAAjD;EACA,IAAIC,QAAJ,EAAcC,QAAd,EAAwBC,QAAxB,EAAkCC,QAAlC,EAA4CC,QAA5C,EAAsDC,QAAtD;EACA,IAAIC,MAAJ,EAAYC,MAAZ,EAAoBC,MAApB;EACA,IAAIC,OAAJ,EAAaC,OAAb,EAAsBC,OAAtB;EACA,IAAIC,EAAJ,EAAQC,EAAR;;EAEA,IAAIC,KAAJ,EAAWC,CAAX,EAAcC,GAAd,EAAmBC,GAAnB,EAAwBC,GAAxB,EAA6BC,GAA7B,EAAkCC,EAAlC,EAAsCC,EAAtC,EAA0CC,EAA1C,EAA8CC,EAA9C,EAAkDC,EAAlD,EAAsDC,EAAtD,EAA0DC,EAA1D,EAA8DC,EAA9D;;EAEA,MAAMC,GAAG,GAAG3C,EAAE,GAAGM,EAAjB;EACA,MAAMsC,GAAG,GAAG1C,EAAE,GAAGI,EAAjB;EACA,MAAMuC,GAAG,GAAGzC,EAAE,GAAGE,EAAjB;EACA,MAAMwC,GAAG,GAAG7C,EAAE,GAAGM,EAAjB;EACA,MAAMwC,GAAG,GAAG5C,EAAE,GAAGI,EAAjB;EACA,MAAMyC,GAAG,GAAG3C,EAAE,GAAGE,EAAjB;EAEA+B,EAAE,GAAGM,GAAG,GAAGI,GAAX;EACAlB,CAAC,GAAG5E,QAAQ,GAAG0F,GAAf;EACAb,GAAG,GAAGD,CAAC,IAAIA,CAAC,GAAGc,GAAR,CAAP;EACAZ,GAAG,GAAGY,GAAG,GAAGb,GAAZ;EACAD,CAAC,GAAG5E,QAAQ,GAAG8F,GAAf;EACAf,GAAG,GAAGH,CAAC,IAAIA,CAAC,GAAGkB,GAAR,CAAP;EACAd,GAAG,GAAGc,GAAG,GAAGf,GAAZ;EACAM,EAAE,GAAGP,GAAG,GAAGE,GAAN,IAAaI,EAAE,GAAGP,GAAG,GAAGE,GAAX,GAAiBD,GAAG,GAAGC,GAAvB,GAA6BF,GAAG,GAAGG,GAAhD,CAAL;EACAM,EAAE,GAAGK,GAAG,GAAGE,GAAX;EACAjB,CAAC,GAAG5E,QAAQ,GAAG2F,GAAf;EACAd,GAAG,GAAGD,CAAC,IAAIA,CAAC,GAAGe,GAAR,CAAP;EACAb,GAAG,GAAGa,GAAG,GAAGd,GAAZ;EACAD,CAAC,GAAG5E,QAAQ,GAAG6F,GAAf;EACAd,GAAG,GAAGH,CAAC,IAAIA,CAAC,GAAGiB,GAAR,CAAP;EACAb,GAAG,GAAGa,GAAG,GAAGd,GAAZ;EACAQ,EAAE,GAAGT,GAAG,GAAGE,GAAN,IAAaM,EAAE,GAAGT,GAAG,GAAGE,GAAX,GAAiBD,GAAG,GAAGC,GAAvB,GAA6BF,GAAG,GAAGG,GAAhD,CAAL;EACAC,EAAE,GAAGI,EAAE,GAAGE,EAAV;EACAZ,KAAK,GAAGU,EAAE,GAAGJ,EAAb;EACAvE,EAAE,CAAC,CAAD,CAAF,GAAQ2E,EAAE,IAAIJ,EAAE,GAAGN,KAAT,CAAF,IAAqBA,KAAK,GAAGY,EAA7B,CAAR;EACAL,EAAE,GAAGE,EAAE,GAAGH,EAAV;EACAN,KAAK,GAAGO,EAAE,GAAGE,EAAb;EACAD,EAAE,GAAGC,EAAE,IAAIF,EAAE,GAAGP,KAAT,CAAF,IAAqBM,EAAE,GAAGN,KAA1B,CAAL;EACAM,EAAE,GAAGE,EAAE,GAAGG,EAAV;EACAX,KAAK,GAAGQ,EAAE,GAAGF,EAAb;EACAvE,EAAE,CAAC,CAAD,CAAF,GAAQyE,EAAE,IAAIF,EAAE,GAAGN,KAAT,CAAF,IAAqBA,KAAK,GAAGW,EAA7B,CAAR;EACAE,EAAE,GAAGN,EAAE,GAAGD,EAAV;EACAN,KAAK,GAAGa,EAAE,GAAGN,EAAb;EACAxE,EAAE,CAAC,CAAD,CAAF,GAAQwE,EAAE,IAAIM,EAAE,GAAGb,KAAT,CAAF,IAAqBM,EAAE,GAAGN,KAA1B,CAAR;EACAjE,EAAE,CAAC,CAAD,CAAF,GAAQ8E,EAAR;EACAJ,EAAE,GAAGO,GAAG,GAAGC,GAAX;EACAhB,CAAC,GAAG5E,QAAQ,GAAG2F,GAAf;EACAd,GAAG,GAAGD,CAAC,IAAIA,CAAC,GAAGe,GAAR,CAAP;EACAb,GAAG,GAAGa,GAAG,GAAGd,GAAZ;EACAD,CAAC,GAAG5E,QAAQ,GAAG4F,GAAf;EACAb,GAAG,GAAGH,CAAC,IAAIA,CAAC,GAAGgB,GAAR,CAAP;EACAZ,GAAG,GAAGY,GAAG,GAAGb,GAAZ;EACAM,EAAE,GAAGP,GAAG,GAAGE,GAAN,IAAaI,EAAE,GAAGP,GAAG,GAAGE,GAAX,GAAiBD,GAAG,GAAGC,GAAvB,GAA6BF,GAAG,GAAGG,GAAhD,CAAL;EACAM,EAAE,GAAGG,GAAG,GAAGK,GAAX;EACAlB,CAAC,GAAG5E,QAAQ,GAAGyF,GAAf;EACAZ,GAAG,GAAGD,CAAC,IAAIA,CAAC,GAAGa,GAAR,CAAP;EACAX,GAAG,GAAGW,GAAG,GAAGZ,GAAZ;EACAD,CAAC,GAAG5E,QAAQ,GAAG8F,GAAf;EACAf,GAAG,GAAGH,CAAC,IAAIA,CAAC,GAAGkB,GAAR,CAAP;EACAd,GAAG,GAAGc,GAAG,GAAGf,GAAZ;EACAQ,EAAE,GAAGT,GAAG,GAAGE,GAAN,IAAaM,EAAE,GAAGT,GAAG,GAAGE,GAAX,GAAiBD,GAAG,GAAGC,GAAvB,GAA6BF,GAAG,GAAGG,GAAhD,CAAL;EACAC,EAAE,GAAGI,EAAE,GAAGE,EAAV;EACAZ,KAAK,GAAGU,EAAE,GAAGJ,EAAb;EACAtE,EAAE,CAAC,CAAD,CAAF,GAAQ0E,EAAE,IAAIJ,EAAE,GAAGN,KAAT,CAAF,IAAqBA,KAAK,GAAGY,EAA7B,CAAR;EACAL,EAAE,GAAGE,EAAE,GAAGH,EAAV;EACAN,KAAK,GAAGO,EAAE,GAAGE,EAAb;EACAD,EAAE,GAAGC,EAAE,IAAIF,EAAE,GAAGP,KAAT,CAAF,IAAqBM,EAAE,GAAGN,KAA1B,CAAL;EACAM,EAAE,GAAGE,EAAE,GAAGG,EAAV;EACAX,KAAK,GAAGQ,EAAE,GAAGF,EAAb;EACAtE,EAAE,CAAC,CAAD,CAAF,GAAQwE,EAAE,IAAIF,EAAE,GAAGN,KAAT,CAAF,IAAqBA,KAAK,GAAGW,EAA7B,CAAR;EACAE,EAAE,GAAGN,EAAE,GAAGD,EAAV;EACAN,KAAK,GAAGa,EAAE,GAAGN,EAAb;EACAvE,EAAE,CAAC,CAAD,CAAF,GAAQuE,EAAE,IAAIM,EAAE,GAAGb,KAAT,CAAF,IAAqBM,EAAE,GAAGN,KAA1B,CAAR;EACAhE,EAAE,CAAC,CAAD,CAAF,GAAQ6E,EAAR;EACAJ,EAAE,GAAGK,GAAG,GAAGI,GAAX;EACAjB,CAAC,GAAG5E,QAAQ,GAAGyF,GAAf;EACAZ,GAAG,GAAGD,CAAC,IAAIA,CAAC,GAAGa,GAAR,CAAP;EACAX,GAAG,GAAGW,GAAG,GAAGZ,GAAZ;EACAD,CAAC,GAAG5E,QAAQ,GAAG6F,GAAf;EACAd,GAAG,GAAGH,CAAC,IAAIA,CAAC,GAAGiB,GAAR,CAAP;EACAb,GAAG,GAAGa,GAAG,GAAGd,GAAZ;EACAM,EAAE,GAAGP,GAAG,GAAGE,GAAN,IAAaI,EAAE,GAAGP,GAAG,GAAGE,GAAX,GAAiBD,GAAG,GAAGC,GAAvB,GAA6BF,GAAG,GAAGG,GAAhD,CAAL;EACAM,EAAE,GAAGI,GAAG,GAAGE,GAAX;EACAhB,CAAC,GAAG5E,QAAQ,GAAG0F,GAAf;EACAb,GAAG,GAAGD,CAAC,IAAIA,CAAC,GAAGc,GAAR,CAAP;EACAZ,GAAG,GAAGY,GAAG,GAAGb,GAAZ;EACAD,CAAC,GAAG5E,QAAQ,GAAG4F,GAAf;EACAb,GAAG,GAAGH,CAAC,IAAIA,CAAC,GAAGgB,GAAR,CAAP;EACAZ,GAAG,GAAGY,GAAG,GAAGb,GAAZ;EACAQ,EAAE,GAAGT,GAAG,GAAGE,GAAN,IAAaM,EAAE,GAAGT,GAAG,GAAGE,GAAX,GAAiBD,GAAG,GAAGC,GAAvB,GAA6BF,GAAG,GAAGG,GAAhD,CAAL;EACAC,EAAE,GAAGI,EAAE,GAAGE,EAAV;EACAZ,KAAK,GAAGU,EAAE,GAAGJ,EAAb;EACArE,EAAE,CAAC,CAAD,CAAF,GAAQyE,EAAE,IAAIJ,EAAE,GAAGN,KAAT,CAAF,IAAqBA,KAAK,GAAGY,EAA7B,CAAR;EACAL,EAAE,GAAGE,EAAE,GAAGH,EAAV;EACAN,KAAK,GAAGO,EAAE,GAAGE,EAAb;EACAD,EAAE,GAAGC,EAAE,IAAIF,EAAE,GAAGP,KAAT,CAAF,IAAqBM,EAAE,GAAGN,KAA1B,CAAL;EACAM,EAAE,GAAGE,EAAE,GAAGG,EAAV;EACAX,KAAK,GAAGQ,EAAE,GAAGF,EAAb;EACArE,EAAE,CAAC,CAAD,CAAF,GAAQuE,EAAE,IAAIF,EAAE,GAAGN,KAAT,CAAF,IAAqBA,KAAK,GAAGW,EAA7B,CAAR;EACAE,EAAE,GAAGN,EAAE,GAAGD,EAAV;EACAN,KAAK,GAAGa,EAAE,GAAGN,EAAb;EACAtE,EAAE,CAAC,CAAD,CAAF,GAAQsE,EAAE,IAAIM,EAAE,GAAGb,KAAT,CAAF,IAAqBM,EAAE,GAAGN,KAA1B,CAAR;EACA/D,EAAE,CAAC,CAAD,CAAF,GAAQ4E,EAAR;EAEA/C,MAAM,GAAGrC,GAAG,CACRA,GAAG,CACCA,GAAG,CACCE,KAAK,CAACA,KAAK,CAAC,CAAD,EAAII,EAAJ,EAAQ+E,GAAR,EAAa3D,EAAb,CAAN,EAAwBA,EAAxB,EAA4B2D,GAA5B,EAAiC1D,GAAjC,CADN,EAC6CA,GAD7C,EAECzB,KAAK,CAACA,KAAK,CAAC,CAAD,EAAII,EAAJ,EAAQkF,GAAR,EAAa9D,EAAb,CAAN,EAAwBA,EAAxB,EAA4B8D,GAA5B,EAAiC5D,IAAjC,CAFN,EAE8CA,IAF9C,EAEoDE,GAFpD,CADJ,EAG8DA,GAH9D,EAIC9B,GAAG,CACCE,KAAK,CAACA,KAAK,CAAC,CAAD,EAAIK,EAAJ,EAAQ+E,GAAR,EAAa5D,EAAb,CAAN,EAAwBA,EAAxB,EAA4B4D,GAA5B,EAAiC3D,GAAjC,CADN,EAC6CA,GAD7C,EAECzB,KAAK,CAACA,KAAK,CAAC,CAAD,EAAIK,EAAJ,EAAQkF,GAAR,EAAa/D,EAAb,CAAN,EAAwBA,EAAxB,EAA4B+D,GAA5B,EAAiC7D,IAAjC,CAFN,EAE8CA,IAF9C,EAEoDG,IAFpD,CAJJ,EAM+DA,IAN/D,EAMqEE,GANrE,CADK,EAOsEA,GAPtE,EAQRjC,GAAG,CACCE,KAAK,CAACA,KAAK,CAAC,CAAD,EAAIM,EAAJ,EAAQ+E,GAAR,EAAa7D,EAAb,CAAN,EAAwBA,EAAxB,EAA4B6D,GAA5B,EAAiC5D,GAAjC,CADN,EAC6CA,GAD7C,EAECzB,KAAK,CAACA,KAAK,CAAC,CAAD,EAAIM,EAAJ,EAAQkF,GAAR,EAAahE,EAAb,CAAN,EAAwBA,EAAxB,EAA4BgE,GAA5B,EAAiC9D,IAAjC,CAFN,EAE8CA,IAF9C,EAEoDE,GAFpD,CARK,EAUqDA,GAVrD,EAU0DI,GAV1D,CAAZ;EAYA,IAAIyD,GAAG,GAAG7F,QAAQ,CAACuC,MAAD,EAASH,GAAT,CAAlB;EACA,IAAI0D,QAAQ,GAAGxF,YAAY,GAAG8C,SAA9B;;EACA,IAAIyC,GAAG,IAAIC,QAAP,IAAmB,CAACD,GAAD,IAAQC,QAA/B,EAAyC;IACrC,OAAOD,GAAP;EACH;;EAEDpB,KAAK,GAAG7B,EAAE,GAAG2C,GAAb;EACAlC,OAAO,GAAGT,EAAE,IAAI2C,GAAG,GAAGd,KAAV,CAAF,IAAsBA,KAAK,GAAGvB,EAA9B,CAAV;EACAuB,KAAK,GAAG5B,EAAE,GAAG6C,GAAb;EACAlC,OAAO,GAAGX,EAAE,IAAI6C,GAAG,GAAGjB,KAAV,CAAF,IAAsBA,KAAK,GAAGtB,EAA9B,CAAV;EACAsB,KAAK,GAAG3B,EAAE,GAAG0C,GAAb;EACAlC,OAAO,GAAGR,EAAE,IAAI0C,GAAG,GAAGf,KAAV,CAAF,IAAsBA,KAAK,GAAGvB,EAA9B,CAAV;EACAuB,KAAK,GAAG1B,EAAE,GAAG4C,GAAb;EACAlC,OAAO,GAAGV,EAAE,IAAI4C,GAAG,GAAGlB,KAAV,CAAF,IAAsBA,KAAK,GAAGtB,EAA9B,CAAV;EACAsB,KAAK,GAAGzB,EAAE,GAAGyC,GAAb;EACAlC,OAAO,GAAGP,EAAE,IAAIyC,GAAG,GAAGhB,KAAV,CAAF,IAAsBA,KAAK,GAAGvB,EAA9B,CAAV;EACAuB,KAAK,GAAGxB,EAAE,GAAG2C,GAAb;EACAlC,OAAO,GAAGT,EAAE,IAAI2C,GAAG,GAAGnB,KAAV,CAAF,IAAsBA,KAAK,GAAGtB,EAA9B,CAAV;;EACA,IAAIE,OAAO,KAAK,CAAZ,IAAiBC,OAAO,KAAK,CAA7B,IAAkCC,OAAO,KAAK,CAA9C,IAAmDC,OAAO,KAAK,CAA/D,IAAoEC,OAAO,KAAK,CAAhF,IAAqFC,OAAO,KAAK,CAArG,EAAwG;IACpG,OAAOmC,GAAP;EACH;;EAEDC,QAAQ,GAAGvF,YAAY,GAAG6C,SAAf,GAA2BrD,cAAc,GAAGgG,IAAI,CAACC,GAAL,CAASH,GAAT,CAAvD;EACAA,GAAG,IAAK,CAACN,GAAG,GAAGA,GAAN,GAAYG,GAAG,GAAGA,GAAnB,KAA4BF,GAAG,GAAG9B,OAAN,GAAgBkC,GAAG,GAAGtC,OAAvB,IAAmCqC,GAAG,GAAGpC,OAAN,GAAgBkC,GAAG,GAAGhC,OAAzD,CAA3B,IACJ,KAAK8B,GAAG,GAAGlC,OAAN,GAAgBqC,GAAG,GAAGlC,OAA3B,KAAuCgC,GAAG,GAAGI,GAAN,GAAYD,GAAG,GAAGF,GAAzD,CADG,IAEF,CAACD,GAAG,GAAGA,GAAN,GAAYG,GAAG,GAAGA,GAAnB,KAA4BF,GAAG,GAAGjC,OAAN,GAAgBkC,GAAG,GAAGnC,OAAvB,IAAmCqC,GAAG,GAAGvC,OAAN,GAAgBkC,GAAG,GAAG7B,OAAzD,CAA3B,IACD,KAAK8B,GAAG,GAAGlC,OAAN,GAAgBqC,GAAG,GAAGlC,OAA3B,KAAuCgC,GAAG,GAAGC,GAAN,GAAYE,GAAG,GAAGL,GAAzD,CAHG,KAIF,CAACE,GAAG,GAAGA,GAAN,GAAYG,GAAG,GAAGA,GAAnB,KAA4BL,GAAG,GAAG9B,OAAN,GAAgBkC,GAAG,GAAGtC,OAAvB,IAAmCqC,GAAG,GAAGpC,OAAN,GAAgBkC,GAAG,GAAGhC,OAAzD,CAA3B,IACD,KAAKiC,GAAG,GAAGlC,OAAN,GAAgBqC,GAAG,GAAGlC,OAA3B,KAAuC6B,GAAG,GAAGI,GAAN,GAAYD,GAAG,GAAGF,GAAzD,CALG,CAAP;;EAOA,IAAIK,GAAG,IAAIC,QAAP,IAAmB,CAACD,GAAD,IAAQC,QAA/B,EAAyC;IACrC,OAAOD,GAAP;EACH;;EAED,IAAIvC,OAAO,KAAK,CAAZ,IAAiBG,OAAO,KAAK,CAA7B,IAAkCF,OAAO,KAAK,CAA9C,IAAmDG,OAAO,KAAK,CAAnE,EAAsE;IAClEwB,EAAE,GAAGK,GAAG,GAAGA,GAAX;IACAb,CAAC,GAAG5E,QAAQ,GAAGyF,GAAf;IACAZ,GAAG,GAAGD,CAAC,IAAIA,CAAC,GAAGa,GAAR,CAAP;IACAX,GAAG,GAAGW,GAAG,GAAGZ,GAAZ;IACAQ,EAAE,GAAGP,GAAG,GAAGA,GAAN,IAAaM,EAAE,GAAGP,GAAG,GAAGA,GAAX,GAAiB,CAACA,GAAG,GAAGA,GAAP,IAAcC,GAA5C,CAAL;IACAQ,EAAE,GAAGM,GAAG,GAAGA,GAAX;IACAhB,CAAC,GAAG5E,QAAQ,GAAG4F,GAAf;IACAf,GAAG,GAAGD,CAAC,IAAIA,CAAC,GAAGgB,GAAR,CAAP;IACAd,GAAG,GAAGc,GAAG,GAAGf,GAAZ;IACAU,EAAE,GAAGT,GAAG,GAAGA,GAAN,IAAaQ,EAAE,GAAGT,GAAG,GAAGA,GAAX,GAAiB,CAACA,GAAG,GAAGA,GAAP,IAAcC,GAA5C,CAAL;IACAG,EAAE,GAAGI,EAAE,GAAGE,EAAV;IACAZ,KAAK,GAAGM,EAAE,GAAGI,EAAb;IACAxE,EAAE,CAAC,CAAD,CAAF,GAAQwE,EAAE,IAAIJ,EAAE,GAAGN,KAAT,CAAF,IAAqBY,EAAE,GAAGZ,KAA1B,CAAR;IACAO,EAAE,GAAGE,EAAE,GAAGH,EAAV;IACAN,KAAK,GAAGO,EAAE,GAAGE,EAAb;IACAD,EAAE,GAAGC,EAAE,IAAIF,EAAE,GAAGP,KAAT,CAAF,IAAqBM,EAAE,GAAGN,KAA1B,CAAL;IACAM,EAAE,GAAGE,EAAE,GAAGG,EAAV;IACAX,KAAK,GAAGM,EAAE,GAAGE,EAAb;IACAtE,EAAE,CAAC,CAAD,CAAF,GAAQsE,EAAE,IAAIF,EAAE,GAAGN,KAAT,CAAF,IAAqBW,EAAE,GAAGX,KAA1B,CAAR;IACAa,EAAE,GAAGN,EAAE,GAAGD,EAAV;IACAN,KAAK,GAAGa,EAAE,GAAGN,EAAb;IACArE,EAAE,CAAC,CAAD,CAAF,GAAQqE,EAAE,IAAIM,EAAE,GAAGb,KAAT,CAAF,IAAqBM,EAAE,GAAGN,KAA1B,CAAR;IACA9D,EAAE,CAAC,CAAD,CAAF,GAAQ2E,EAAR;EACH;;EACD,IAAI/B,OAAO,KAAK,CAAZ,IAAiBG,OAAO,KAAK,CAA7B,IAAkCL,OAAO,KAAK,CAA9C,IAAmDG,OAAO,KAAK,CAAnE,EAAsE;IAClE0B,EAAE,GAAGM,GAAG,GAAGA,GAAX;IACAd,CAAC,GAAG5E,QAAQ,GAAG0F,GAAf;IACAb,GAAG,GAAGD,CAAC,IAAIA,CAAC,GAAGc,GAAR,CAAP;IACAZ,GAAG,GAAGY,GAAG,GAAGb,GAAZ;IACAQ,EAAE,GAAGP,GAAG,GAAGA,GAAN,IAAaM,EAAE,GAAGP,GAAG,GAAGA,GAAX,GAAiB,CAACA,GAAG,GAAGA,GAAP,IAAcC,GAA5C,CAAL;IACAQ,EAAE,GAAGO,GAAG,GAAGA,GAAX;IACAjB,CAAC,GAAG5E,QAAQ,GAAG6F,GAAf;IACAhB,GAAG,GAAGD,CAAC,IAAIA,CAAC,GAAGiB,GAAR,CAAP;IACAf,GAAG,GAAGe,GAAG,GAAGhB,GAAZ;IACAU,EAAE,GAAGT,GAAG,GAAGA,GAAN,IAAaQ,EAAE,GAAGT,GAAG,GAAGA,GAAX,GAAiB,CAACA,GAAG,GAAGA,GAAP,IAAcC,GAA5C,CAAL;IACAG,EAAE,GAAGI,EAAE,GAAGE,EAAV;IACAZ,KAAK,GAAGM,EAAE,GAAGI,EAAb;IACAvE,EAAE,CAAC,CAAD,CAAF,GAAQuE,EAAE,IAAIJ,EAAE,GAAGN,KAAT,CAAF,IAAqBY,EAAE,GAAGZ,KAA1B,CAAR;IACAO,EAAE,GAAGE,EAAE,GAAGH,EAAV;IACAN,KAAK,GAAGO,EAAE,GAAGE,EAAb;IACAD,EAAE,GAAGC,EAAE,IAAIF,EAAE,GAAGP,KAAT,CAAF,IAAqBM,EAAE,GAAGN,KAA1B,CAAL;IACAM,EAAE,GAAGE,EAAE,GAAGG,EAAV;IACAX,KAAK,GAAGM,EAAE,GAAGE,EAAb;IACArE,EAAE,CAAC,CAAD,CAAF,GAAQqE,EAAE,IAAIF,EAAE,GAAGN,KAAT,CAAF,IAAqBW,EAAE,GAAGX,KAA1B,CAAR;IACAa,EAAE,GAAGN,EAAE,GAAGD,EAAV;IACAN,KAAK,GAAGa,EAAE,GAAGN,EAAb;IACApE,EAAE,CAAC,CAAD,CAAF,GAAQoE,EAAE,IAAIM,EAAE,GAAGb,KAAT,CAAF,IAAqBM,EAAE,GAAGN,KAA1B,CAAR;IACA7D,EAAE,CAAC,CAAD,CAAF,GAAQ0E,EAAR;EACH;;EACD,IAAIjC,OAAO,KAAK,CAAZ,IAAiBG,OAAO,KAAK,CAA7B,IAAkCF,OAAO,KAAK,CAA9C,IAAmDG,OAAO,KAAK,CAAnE,EAAsE;IAClEyB,EAAE,GAAGO,GAAG,GAAGA,GAAX;IACAf,CAAC,GAAG5E,QAAQ,GAAG2F,GAAf;IACAd,GAAG,GAAGD,CAAC,IAAIA,CAAC,GAAGe,GAAR,CAAP;IACAb,GAAG,GAAGa,GAAG,GAAGd,GAAZ;IACAQ,EAAE,GAAGP,GAAG,GAAGA,GAAN,IAAaM,EAAE,GAAGP,GAAG,GAAGA,GAAX,GAAiB,CAACA,GAAG,GAAGA,GAAP,IAAcC,GAA5C,CAAL;IACAQ,EAAE,GAAGQ,GAAG,GAAGA,GAAX;IACAlB,CAAC,GAAG5E,QAAQ,GAAG8F,GAAf;IACAjB,GAAG,GAAGD,CAAC,IAAIA,CAAC,GAAGkB,GAAR,CAAP;IACAhB,GAAG,GAAGgB,GAAG,GAAGjB,GAAZ;IACAU,EAAE,GAAGT,GAAG,GAAGA,GAAN,IAAaQ,EAAE,GAAGT,GAAG,GAAGA,GAAX,GAAiB,CAACA,GAAG,GAAGA,GAAP,IAAcC,GAA5C,CAAL;IACAG,EAAE,GAAGI,EAAE,GAAGE,EAAV;IACAZ,KAAK,GAAGM,EAAE,GAAGI,EAAb;IACAtE,EAAE,CAAC,CAAD,CAAF,GAAQsE,EAAE,IAAIJ,EAAE,GAAGN,KAAT,CAAF,IAAqBY,EAAE,GAAGZ,KAA1B,CAAR;IACAO,EAAE,GAAGE,EAAE,GAAGH,EAAV;IACAN,KAAK,GAAGO,EAAE,GAAGE,EAAb;IACAD,EAAE,GAAGC,EAAE,IAAIF,EAAE,GAAGP,KAAT,CAAF,IAAqBM,EAAE,GAAGN,KAA1B,CAAL;IACAM,EAAE,GAAGE,EAAE,GAAGG,EAAV;IACAX,KAAK,GAAGM,EAAE,GAAGE,EAAb;IACApE,EAAE,CAAC,CAAD,CAAF,GAAQoE,EAAE,IAAIF,EAAE,GAAGN,KAAT,CAAF,IAAqBW,EAAE,GAAGX,KAA1B,CAAR;IACAa,EAAE,GAAGN,EAAE,GAAGD,EAAV;IACAN,KAAK,GAAGa,EAAE,GAAGN,EAAb;IACAnE,EAAE,CAAC,CAAD,CAAF,GAAQmE,EAAE,IAAIM,EAAE,GAAGb,KAAT,CAAF,IAAqBM,EAAE,GAAGN,KAA1B,CAAR;IACA5D,EAAE,CAAC,CAAD,CAAF,GAAQyE,EAAR;EACH;;EAED,IAAIjC,OAAO,KAAK,CAAhB,EAAmB;IACfM,QAAQ,GAAGvD,KAAK,CAAC,CAAD,EAAII,EAAJ,EAAQ6C,OAAR,EAAiBrC,KAAjB,CAAhB;IACAuB,MAAM,GAAGD,MAAM,CAACC,MAAD,EAASpC,SAAS,CAC7BC,KAAK,CAACuD,QAAD,EAAW3C,KAAX,EAAkB,IAAIuE,GAAtB,EAA2B1D,GAA3B,CADwB,EACSA,GADT,EAE7BzB,KAAK,CAACA,KAAK,CAAC,CAAD,EAAIS,EAAJ,EAAQwC,OAAR,EAAiBzB,EAAjB,CAAN,EAA4BA,EAA5B,EAAgC+D,GAAhC,EAAqC7D,IAArC,CAFwB,EAEoBA,IAFpB,EAG7B1B,KAAK,CAACA,KAAK,CAAC,CAAD,EAAIQ,EAAJ,EAAQyC,OAAR,EAAiBzB,EAAjB,CAAN,EAA4BA,EAA5B,EAAgC,CAACgE,GAAjC,EAAsC7D,IAAtC,CAHwB,EAGqBA,IAHrB,EAG2BC,GAH3B,EAGgCE,GAHhC,CAAlB,EAGwDA,GAHxD,CAAf;EAIH;;EACD,IAAIsB,OAAO,KAAK,CAAhB,EAAmB;IACfI,QAAQ,GAAGxD,KAAK,CAAC,CAAD,EAAII,EAAJ,EAAQgD,OAAR,EAAiBvC,KAAjB,CAAhB;IACAsB,MAAM,GAAGD,MAAM,CAACC,MAAD,EAASpC,SAAS,CAC7BC,KAAK,CAACwD,QAAD,EAAW3C,KAAX,EAAkB,IAAIyE,GAAtB,EAA2B7D,GAA3B,CADwB,EACSA,GADT,EAE7BzB,KAAK,CAACA,KAAK,CAAC,CAAD,EAAIQ,EAAJ,EAAQ4C,OAAR,EAAiB5B,EAAjB,CAAN,EAA4BA,EAA5B,EAAgC6D,GAAhC,EAAqC3D,IAArC,CAFwB,EAEoBA,IAFpB,EAG7B1B,KAAK,CAACA,KAAK,CAAC,CAAD,EAAIS,EAAJ,EAAQ2C,OAAR,EAAiB5B,EAAjB,CAAN,EAA4BA,EAA5B,EAAgC,CAAC4D,GAAjC,EAAsCzD,IAAtC,CAHwB,EAGqBA,IAHrB,EAG2BC,GAH3B,EAGgCE,GAHhC,CAAlB,EAGwDA,GAHxD,CAAf;EAIH;;EACD,IAAIoB,OAAO,KAAK,CAAhB,EAAmB;IACfO,QAAQ,GAAGzD,KAAK,CAAC,CAAD,EAAIK,EAAJ,EAAQ6C,OAAR,EAAiBpC,KAAjB,CAAhB;IACAqB,MAAM,GAAGD,MAAM,CAACC,MAAD,EAASpC,SAAS,CAC7BC,KAAK,CAACyD,QAAD,EAAW3C,KAAX,EAAkB,IAAIsE,GAAtB,EAA2B3D,GAA3B,CADwB,EACSA,GADT,EAE7BzB,KAAK,CAACA,KAAK,CAAC,CAAD,EAAIO,EAAJ,EAAQ2C,OAAR,EAAiB1B,EAAjB,CAAN,EAA4BA,EAA5B,EAAgCgE,GAAhC,EAAqC9D,IAArC,CAFwB,EAEoBA,IAFpB,EAG7B1B,KAAK,CAACA,KAAK,CAAC,CAAD,EAAIS,EAAJ,EAAQyC,OAAR,EAAiB1B,EAAjB,CAAN,EAA4BA,EAA5B,EAAgC,CAAC8D,GAAjC,EAAsC3D,IAAtC,CAHwB,EAGqBA,IAHrB,EAG2BC,GAH3B,EAGgCE,GAHhC,CAAlB,EAGwDA,GAHxD,CAAf;EAIH;;EACD,IAAIuB,OAAO,KAAK,CAAhB,EAAmB;IACfK,QAAQ,GAAG1D,KAAK,CAAC,CAAD,EAAIK,EAAJ,EAAQgD,OAAR,EAAiBtC,KAAjB,CAAhB;IACAoB,MAAM,GAAGD,MAAM,CAACC,MAAD,EAASpC,SAAS,CAC7BC,KAAK,CAAC0D,QAAD,EAAW3C,KAAX,EAAkB,IAAIwE,GAAtB,EAA2B9D,GAA3B,CADwB,EACSA,GADT,EAE7BzB,KAAK,CAACA,KAAK,CAAC,CAAD,EAAIS,EAAJ,EAAQ4C,OAAR,EAAiB7B,EAAjB,CAAN,EAA4BA,EAA5B,EAAgC2D,GAAhC,EAAqCzD,IAArC,CAFwB,EAEoBA,IAFpB,EAG7B1B,KAAK,CAACA,KAAK,CAAC,CAAD,EAAIO,EAAJ,EAAQ8C,OAAR,EAAiB7B,EAAjB,CAAN,EAA4BA,EAA5B,EAAgC,CAAC6D,GAAjC,EAAsC1D,IAAtC,CAHwB,EAGqBA,IAHrB,EAG2BC,GAH3B,EAGgCE,GAHhC,CAAlB,EAGwDA,GAHxD,CAAf;EAIH;;EACD,IAAIqB,OAAO,KAAK,CAAhB,EAAmB;IACfQ,QAAQ,GAAG3D,KAAK,CAAC,CAAD,EAAIM,EAAJ,EAAQ6C,OAAR,EAAiBnC,KAAjB,CAAhB;IACAmB,MAAM,GAAGD,MAAM,CAACC,MAAD,EAASpC,SAAS,CAC7BC,KAAK,CAAC2D,QAAD,EAAW3C,KAAX,EAAkB,IAAIqE,GAAtB,EAA2B5D,GAA3B,CADwB,EACSA,GADT,EAE7BzB,KAAK,CAACA,KAAK,CAAC,CAAD,EAAIQ,EAAJ,EAAQ2C,OAAR,EAAiB3B,EAAjB,CAAN,EAA4BA,EAA5B,EAAgC8D,GAAhC,EAAqC5D,IAArC,CAFwB,EAEoBA,IAFpB,EAG7B1B,KAAK,CAACA,KAAK,CAAC,CAAD,EAAIO,EAAJ,EAAQ4C,OAAR,EAAiB3B,EAAjB,CAAN,EAA4BA,EAA5B,EAAgC,CAAC+D,GAAjC,EAAsC5D,IAAtC,CAHwB,EAGqBA,IAHrB,EAG2BC,GAH3B,EAGgCE,GAHhC,CAAlB,EAGwDA,GAHxD,CAAf;EAIH;;EACD,IAAIwB,OAAO,KAAK,CAAhB,EAAmB;IACfM,QAAQ,GAAG5D,KAAK,CAAC,CAAD,EAAIM,EAAJ,EAAQgD,OAAR,EAAiBrC,KAAjB,CAAhB;IACAkB,MAAM,GAAGD,MAAM,CAACC,MAAD,EAASpC,SAAS,CAC7BC,KAAK,CAAC4D,QAAD,EAAW3C,KAAX,EAAkB,IAAIuE,GAAtB,EAA2B/D,GAA3B,CADwB,EACSA,GADT,EAE7BzB,KAAK,CAACA,KAAK,CAAC,CAAD,EAAIO,EAAJ,EAAQ+C,OAAR,EAAiB9B,EAAjB,CAAN,EAA4BA,EAA5B,EAAgC4D,GAAhC,EAAqC1D,IAArC,CAFwB,EAEoBA,IAFpB,EAG7B1B,KAAK,CAACA,KAAK,CAAC,CAAD,EAAIQ,EAAJ,EAAQ8C,OAAR,EAAiB9B,EAAjB,CAAN,EAA4BA,EAA5B,EAAgC,CAAC2D,GAAjC,EAAsCxD,IAAtC,CAHwB,EAGqBA,IAHrB,EAG2BC,GAH3B,EAGgCE,GAHhC,CAAlB,EAGwDA,GAHxD,CAAf;EAIH;;EAED,IAAImB,OAAO,KAAK,CAAZ,IAAiBG,OAAO,KAAK,CAAjC,EAAoC;IAChC,IAAIF,OAAO,KAAK,CAAZ,IAAiBG,OAAO,KAAK,CAA7B,IAAkCF,OAAO,KAAK,CAA9C,IAAmDG,OAAO,KAAK,CAAnE,EAAsE;MAClEwB,EAAE,GAAG5B,OAAO,GAAGsC,GAAf;MACAlB,CAAC,GAAG5E,QAAQ,GAAGwD,OAAf;MACAqB,GAAG,GAAGD,CAAC,IAAIA,CAAC,GAAGpB,OAAR,CAAP;MACAsB,GAAG,GAAGtB,OAAO,GAAGqB,GAAhB;MACAD,CAAC,GAAG5E,QAAQ,GAAG8F,GAAf;MACAf,GAAG,GAAGH,CAAC,IAAIA,CAAC,GAAGkB,GAAR,CAAP;MACAd,GAAG,GAAGc,GAAG,GAAGf,GAAZ;MACAM,EAAE,GAAGP,GAAG,GAAGE,GAAN,IAAaI,EAAE,GAAGP,GAAG,GAAGE,GAAX,GAAiBD,GAAG,GAAGC,GAAvB,GAA6BF,GAAG,GAAGG,GAAhD,CAAL;MACAM,EAAE,GAAGI,GAAG,GAAG9B,OAAX;MACAgB,CAAC,GAAG5E,QAAQ,GAAG0F,GAAf;MACAb,GAAG,GAAGD,CAAC,IAAIA,CAAC,GAAGc,GAAR,CAAP;MACAZ,GAAG,GAAGY,GAAG,GAAGb,GAAZ;MACAD,CAAC,GAAG5E,QAAQ,GAAG4D,OAAf;MACAmB,GAAG,GAAGH,CAAC,IAAIA,CAAC,GAAGhB,OAAR,CAAP;MACAoB,GAAG,GAAGpB,OAAO,GAAGmB,GAAhB;MACAQ,EAAE,GAAGT,GAAG,GAAGE,GAAN,IAAaM,EAAE,GAAGT,GAAG,GAAGE,GAAX,GAAiBD,GAAG,GAAGC,GAAvB,GAA6BF,GAAG,GAAGG,GAAhD,CAAL;MACAC,EAAE,GAAGI,EAAE,GAAGE,EAAV;MACAZ,KAAK,GAAGM,EAAE,GAAGI,EAAb;MACArE,CAAC,CAAC,CAAD,CAAD,GAAOqE,EAAE,IAAIJ,EAAE,GAAGN,KAAT,CAAF,IAAqBY,EAAE,GAAGZ,KAA1B,CAAP;MACAO,EAAE,GAAGE,EAAE,GAAGH,EAAV;MACAN,KAAK,GAAGO,EAAE,GAAGE,EAAb;MACAD,EAAE,GAAGC,EAAE,IAAIF,EAAE,GAAGP,KAAT,CAAF,IAAqBM,EAAE,GAAGN,KAA1B,CAAL;MACAM,EAAE,GAAGE,EAAE,GAAGG,EAAV;MACAX,KAAK,GAAGM,EAAE,GAAGE,EAAb;MACAnE,CAAC,CAAC,CAAD,CAAD,GAAOmE,EAAE,IAAIF,EAAE,GAAGN,KAAT,CAAF,IAAqBW,EAAE,GAAGX,KAA1B,CAAP;MACAa,EAAE,GAAGN,EAAE,GAAGD,EAAV;MACAN,KAAK,GAAGa,EAAE,GAAGN,EAAb;MACAlE,CAAC,CAAC,CAAD,CAAD,GAAOkE,EAAE,IAAIM,EAAE,GAAGb,KAAT,CAAF,IAAqBM,EAAE,GAAGN,KAA1B,CAAP;MACA3D,CAAC,CAAC,CAAD,CAAD,GAAOwE,EAAP;MACAJ,EAAE,GAAG3B,OAAO,GAAG,CAACoC,GAAhB;MACAjB,CAAC,GAAG5E,QAAQ,GAAGyD,OAAf;MACAoB,GAAG,GAAGD,CAAC,IAAIA,CAAC,GAAGnB,OAAR,CAAP;MACAqB,GAAG,GAAGrB,OAAO,GAAGoB,GAAhB;MACAD,CAAC,GAAG5E,QAAQ,GAAG,CAAC6F,GAAhB;MACAd,GAAG,GAAGH,CAAC,IAAIA,CAAC,GAAG,CAACiB,GAAT,CAAP;MACAb,GAAG,GAAG,CAACa,GAAD,GAAOd,GAAb;MACAM,EAAE,GAAGP,GAAG,GAAGE,GAAN,IAAaI,EAAE,GAAGP,GAAG,GAAGE,GAAX,GAAiBD,GAAG,GAAGC,GAAvB,GAA6BF,GAAG,GAAGG,GAAhD,CAAL;MACAM,EAAE,GAAGK,GAAG,GAAG,CAAChC,OAAZ;MACAiB,CAAC,GAAG5E,QAAQ,GAAG2F,GAAf;MACAd,GAAG,GAAGD,CAAC,IAAIA,CAAC,GAAGe,GAAR,CAAP;MACAb,GAAG,GAAGa,GAAG,GAAGd,GAAZ;MACAD,CAAC,GAAG5E,QAAQ,GAAG,CAAC2D,OAAhB;MACAoB,GAAG,GAAGH,CAAC,IAAIA,CAAC,GAAG,CAACjB,OAAT,CAAP;MACAqB,GAAG,GAAG,CAACrB,OAAD,GAAWoB,GAAjB;MACAQ,EAAE,GAAGT,GAAG,GAAGE,GAAN,IAAaM,EAAE,GAAGT,GAAG,GAAGE,GAAX,GAAiBD,GAAG,GAAGC,GAAvB,GAA6BF,GAAG,GAAGG,GAAhD,CAAL;MACAC,EAAE,GAAGI,EAAE,GAAGE,EAAV;MACAZ,KAAK,GAAGM,EAAE,GAAGI,EAAb;MACApE,CAAC,CAAC,CAAD,CAAD,GAAOoE,EAAE,IAAIJ,EAAE,GAAGN,KAAT,CAAF,IAAqBY,EAAE,GAAGZ,KAA1B,CAAP;MACAO,EAAE,GAAGE,EAAE,GAAGH,EAAV;MACAN,KAAK,GAAGO,EAAE,GAAGE,EAAb;MACAD,EAAE,GAAGC,EAAE,IAAIF,EAAE,GAAGP,KAAT,CAAF,IAAqBM,EAAE,GAAGN,KAA1B,CAAL;MACAM,EAAE,GAAGE,EAAE,GAAGG,EAAV;MACAX,KAAK,GAAGM,EAAE,GAAGE,EAAb;MACAlE,CAAC,CAAC,CAAD,CAAD,GAAOkE,EAAE,IAAIF,EAAE,GAAGN,KAAT,CAAF,IAAqBW,EAAE,GAAGX,KAA1B,CAAP;MACAa,EAAE,GAAGN,EAAE,GAAGD,EAAV;MACAN,KAAK,GAAGa,EAAE,GAAGN,EAAb;MACAjE,CAAC,CAAC,CAAD,CAAD,GAAOiE,EAAE,IAAIM,EAAE,GAAGb,KAAT,CAAF,IAAqBM,EAAE,GAAGN,KAA1B,CAAP;MACA1D,CAAC,CAAC,CAAD,CAAD,GAAOuE,EAAP;MACApB,MAAM,GAAGhE,GAAG,CAAC,CAAD,EAAIY,CAAJ,EAAO,CAAP,EAAUC,CAAV,EAAaQ,GAAb,CAAZ;MACA2D,EAAE,GAAG5B,OAAO,GAAGI,OAAf;MACAgB,CAAC,GAAG5E,QAAQ,GAAGwD,OAAf;MACAqB,GAAG,GAAGD,CAAC,IAAIA,CAAC,GAAGpB,OAAR,CAAP;MACAsB,GAAG,GAAGtB,OAAO,GAAGqB,GAAhB;MACAD,CAAC,GAAG5E,QAAQ,GAAG4D,OAAf;MACAmB,GAAG,GAAGH,CAAC,IAAIA,CAAC,GAAGhB,OAAR,CAAP;MACAoB,GAAG,GAAGpB,OAAO,GAAGmB,GAAhB;MACAM,EAAE,GAAGP,GAAG,GAAGE,GAAN,IAAaI,EAAE,GAAGP,GAAG,GAAGE,GAAX,GAAiBD,GAAG,GAAGC,GAAvB,GAA6BF,GAAG,GAAGG,GAAhD,CAAL;MACAM,EAAE,GAAG7B,OAAO,GAAGE,OAAf;MACAiB,CAAC,GAAG5E,QAAQ,GAAGyD,OAAf;MACAoB,GAAG,GAAGD,CAAC,IAAIA,CAAC,GAAGnB,OAAR,CAAP;MACAqB,GAAG,GAAGrB,OAAO,GAAGoB,GAAhB;MACAD,CAAC,GAAG5E,QAAQ,GAAG2D,OAAf;MACAoB,GAAG,GAAGH,CAAC,IAAIA,CAAC,GAAGjB,OAAR,CAAP;MACAqB,GAAG,GAAGrB,OAAO,GAAGoB,GAAhB;MACAQ,EAAE,GAAGT,GAAG,GAAGE,GAAN,IAAaM,EAAE,GAAGT,GAAG,GAAGE,GAAX,GAAiBD,GAAG,GAAGC,GAAvB,GAA6BF,GAAG,GAAGG,GAAhD,CAAL;MACAC,EAAE,GAAGI,EAAE,GAAGE,EAAV;MACAZ,KAAK,GAAGU,EAAE,GAAGJ,EAAb;MACArD,IAAI,CAAC,CAAD,CAAJ,GAAUyD,EAAE,IAAIJ,EAAE,GAAGN,KAAT,CAAF,IAAqBA,KAAK,GAAGY,EAA7B,CAAV;MACAL,EAAE,GAAGE,EAAE,GAAGH,EAAV;MACAN,KAAK,GAAGO,EAAE,GAAGE,EAAb;MACAD,EAAE,GAAGC,EAAE,IAAIF,EAAE,GAAGP,KAAT,CAAF,IAAqBM,EAAE,GAAGN,KAA1B,CAAL;MACAM,EAAE,GAAGE,EAAE,GAAGG,EAAV;MACAX,KAAK,GAAGQ,EAAE,GAAGF,EAAb;MACArD,IAAI,CAAC,CAAD,CAAJ,GAAUuD,EAAE,IAAIF,EAAE,GAAGN,KAAT,CAAF,IAAqBA,KAAK,GAAGW,EAA7B,CAAV;MACAE,EAAE,GAAGN,EAAE,GAAGD,EAAV;MACAN,KAAK,GAAGa,EAAE,GAAGN,EAAb;MACAtD,IAAI,CAAC,CAAD,CAAJ,GAAUsD,EAAE,IAAIM,EAAE,GAAGb,KAAT,CAAF,IAAqBM,EAAE,GAAGN,KAA1B,CAAV;MACA/C,IAAI,CAAC,CAAD,CAAJ,GAAU4D,EAAV;MACAjB,OAAO,GAAG,CAAV;IACH,CA1FD,MA0FO;MACH9C,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;MACA2C,MAAM,GAAG,CAAT;MACAxC,IAAI,CAAC,CAAD,CAAJ,GAAU,CAAV;MACA2C,OAAO,GAAG,CAAV;IACH;;IACD,IAAIhB,OAAO,KAAK,CAAhB,EAAmB;MACf,MAAM4C,GAAG,GAAG7F,KAAK,CAAC8D,MAAD,EAAS3C,GAAT,EAAc8B,OAAd,EAAuBtB,IAAvB,CAAjB;MACAQ,MAAM,GAAGD,MAAM,CAACC,MAAD,EAASrC,GAAG,CACvBE,KAAK,CAACuD,QAAD,EAAW3C,KAAX,EAAkBqC,OAAlB,EAA2BxB,GAA3B,CADkB,EACeA,GADf,EAEvBzB,KAAK,CAAC6F,GAAD,EAAMlE,IAAN,EAAY,IAAIwD,GAAhB,EAAqBvD,GAArB,CAFkB,EAESA,GAFT,EAEcE,GAFd,CAAZ,EAEgCA,GAFhC,CAAf;MAIA,MAAMgE,IAAI,GAAG9F,KAAK,CAACiE,OAAD,EAAU3C,IAAV,EAAgB2B,OAAhB,EAAyBzB,EAAzB,CAAlB;MACAW,MAAM,GAAGD,MAAM,CAACC,MAAD,EAASpC,SAAS,CAC7BC,KAAK,CAAC8F,IAAD,EAAOtE,EAAP,EAAW,IAAI2D,GAAf,EAAoB1D,GAApB,CADwB,EACEA,GADF,EAE7BzB,KAAK,CAAC8F,IAAD,EAAOtE,EAAP,EAAWyB,OAAX,EAAoBvB,IAApB,CAFwB,EAEGA,IAFH,EAG7B1B,KAAK,CAAC6F,GAAD,EAAMlE,IAAN,EAAYsB,OAAZ,EAAqBrB,GAArB,CAHwB,EAGGA,GAHH,EAGQC,IAHR,EAGcE,GAHd,CAAlB,EAGsCA,GAHtC,CAAf;;MAKA,IAAIsB,OAAO,KAAK,CAAhB,EAAmB;QACflB,MAAM,GAAGD,MAAM,CAACC,MAAD,EAASnC,KAAK,CAACA,KAAK,CAAC,CAAD,EAAIS,EAAJ,EAAQwC,OAAR,EAAiBzB,EAAjB,CAAN,EAA4BA,EAA5B,EAAgC6B,OAAhC,EAAyC5B,GAAzC,CAAd,EAA6DA,GAA7D,CAAf;MACH;;MACD,IAAI6B,OAAO,KAAK,CAAhB,EAAmB;QACfnB,MAAM,GAAGD,MAAM,CAACC,MAAD,EAASnC,KAAK,CAACA,KAAK,CAAC,CAAD,EAAIQ,EAAJ,EAAQ,CAACyC,OAAT,EAAkBzB,EAAlB,CAAN,EAA6BA,EAA7B,EAAiC8B,OAAjC,EAA0C7B,GAA1C,CAAd,EAA8DA,GAA9D,CAAf;MACH;IACJ;;IACD,IAAI2B,OAAO,KAAK,CAAhB,EAAmB;MACf,MAAMyC,GAAG,GAAG7F,KAAK,CAAC8D,MAAD,EAAS3C,GAAT,EAAciC,OAAd,EAAuBzB,IAAvB,CAAjB;MACAQ,MAAM,GAAGD,MAAM,CAACC,MAAD,EAASrC,GAAG,CACvBE,KAAK,CAACwD,QAAD,EAAW3C,KAAX,EAAkBuC,OAAlB,EAA2B3B,GAA3B,CADkB,EACeA,GADf,EAEvBzB,KAAK,CAAC6F,GAAD,EAAMlE,IAAN,EAAY,IAAI2D,GAAhB,EAAqB1D,GAArB,CAFkB,EAESA,GAFT,EAEcE,GAFd,CAAZ,EAEgCA,GAFhC,CAAf;MAIA,MAAMgE,IAAI,GAAG9F,KAAK,CAACiE,OAAD,EAAU3C,IAAV,EAAgB8B,OAAhB,EAAyB5B,EAAzB,CAAlB;MACAW,MAAM,GAAGD,MAAM,CAACC,MAAD,EAASpC,SAAS,CAC7BC,KAAK,CAAC8F,IAAD,EAAOtE,EAAP,EAAW,IAAI8D,GAAf,EAAoB7D,GAApB,CADwB,EACEA,GADF,EAE7BzB,KAAK,CAAC8F,IAAD,EAAOtE,EAAP,EAAW4B,OAAX,EAAoB1B,IAApB,CAFwB,EAEGA,IAFH,EAG7B1B,KAAK,CAAC6F,GAAD,EAAMlE,IAAN,EAAYyB,OAAZ,EAAqBxB,GAArB,CAHwB,EAGGA,GAHH,EAGQC,IAHR,EAGcE,GAHd,CAAlB,EAGsCA,GAHtC,CAAf;IAIH;EACJ;;EACD,IAAImB,OAAO,KAAK,CAAZ,IAAiBG,OAAO,KAAK,CAAjC,EAAoC;IAChC,IAAIF,OAAO,KAAK,CAAZ,IAAiBG,OAAO,KAAK,CAA7B,IAAkCL,OAAO,KAAK,CAA9C,IAAmDG,OAAO,KAAK,CAAnE,EAAsE;MAClE0B,EAAE,GAAG3B,OAAO,GAAGmC,GAAf;MACAhB,CAAC,GAAG5E,QAAQ,GAAGyD,OAAf;MACAoB,GAAG,GAAGD,CAAC,IAAIA,CAAC,GAAGnB,OAAR,CAAP;MACAqB,GAAG,GAAGrB,OAAO,GAAGoB,GAAhB;MACAD,CAAC,GAAG5E,QAAQ,GAAG4F,GAAf;MACAb,GAAG,GAAGH,CAAC,IAAIA,CAAC,GAAGgB,GAAR,CAAP;MACAZ,GAAG,GAAGY,GAAG,GAAGb,GAAZ;MACAM,EAAE,GAAGP,GAAG,GAAGE,GAAN,IAAaI,EAAE,GAAGP,GAAG,GAAGE,GAAX,GAAiBD,GAAG,GAAGC,GAAvB,GAA6BF,GAAG,GAAGG,GAAhD,CAAL;MACAM,EAAE,GAAGK,GAAG,GAAGjC,OAAX;MACAkB,CAAC,GAAG5E,QAAQ,GAAG2F,GAAf;MACAd,GAAG,GAAGD,CAAC,IAAIA,CAAC,GAAGe,GAAR,CAAP;MACAb,GAAG,GAAGa,GAAG,GAAGd,GAAZ;MACAD,CAAC,GAAG5E,QAAQ,GAAG0D,OAAf;MACAqB,GAAG,GAAGH,CAAC,IAAIA,CAAC,GAAGlB,OAAR,CAAP;MACAsB,GAAG,GAAGtB,OAAO,GAAGqB,GAAhB;MACAQ,EAAE,GAAGT,GAAG,GAAGE,GAAN,IAAaM,EAAE,GAAGT,GAAG,GAAGE,GAAX,GAAiBD,GAAG,GAAGC,GAAvB,GAA6BF,GAAG,GAAGG,GAAhD,CAAL;MACAC,EAAE,GAAGI,EAAE,GAAGE,EAAV;MACAZ,KAAK,GAAGM,EAAE,GAAGI,EAAb;MACArE,CAAC,CAAC,CAAD,CAAD,GAAOqE,EAAE,IAAIJ,EAAE,GAAGN,KAAT,CAAF,IAAqBY,EAAE,GAAGZ,KAA1B,CAAP;MACAO,EAAE,GAAGE,EAAE,GAAGH,EAAV;MACAN,KAAK,GAAGO,EAAE,GAAGE,EAAb;MACAD,EAAE,GAAGC,EAAE,IAAIF,EAAE,GAAGP,KAAT,CAAF,IAAqBM,EAAE,GAAGN,KAA1B,CAAL;MACAM,EAAE,GAAGE,EAAE,GAAGG,EAAV;MACAX,KAAK,GAAGM,EAAE,GAAGE,EAAb;MACAnE,CAAC,CAAC,CAAD,CAAD,GAAOmE,EAAE,IAAIF,EAAE,GAAGN,KAAT,CAAF,IAAqBW,EAAE,GAAGX,KAA1B,CAAP;MACAa,EAAE,GAAGN,EAAE,GAAGD,EAAV;MACAN,KAAK,GAAGa,EAAE,GAAGN,EAAb;MACAlE,CAAC,CAAC,CAAD,CAAD,GAAOkE,EAAE,IAAIM,EAAE,GAAGb,KAAT,CAAF,IAAqBM,EAAE,GAAGN,KAA1B,CAAP;MACA3D,CAAC,CAAC,CAAD,CAAD,GAAOwE,EAAP;MACAf,EAAE,GAAG,CAACqB,GAAN;MACApB,EAAE,GAAG,CAACd,OAAN;MACAwB,EAAE,GAAG7B,OAAO,GAAGkB,EAAf;MACAG,CAAC,GAAG5E,QAAQ,GAAGuD,OAAf;MACAsB,GAAG,GAAGD,CAAC,IAAIA,CAAC,GAAGrB,OAAR,CAAP;MACAuB,GAAG,GAAGvB,OAAO,GAAGsB,GAAhB;MACAD,CAAC,GAAG5E,QAAQ,GAAGyE,EAAf;MACAM,GAAG,GAAGH,CAAC,IAAIA,CAAC,GAAGH,EAAR,CAAP;MACAO,GAAG,GAAGP,EAAE,GAAGM,GAAX;MACAM,EAAE,GAAGP,GAAG,GAAGE,GAAN,IAAaI,EAAE,GAAGP,GAAG,GAAGE,GAAX,GAAiBD,GAAG,GAAGC,GAAvB,GAA6BF,GAAG,GAAGG,GAAhD,CAAL;MACAM,EAAE,GAAGG,GAAG,GAAGf,EAAX;MACAE,CAAC,GAAG5E,QAAQ,GAAGyF,GAAf;MACAZ,GAAG,GAAGD,CAAC,IAAIA,CAAC,GAAGa,GAAR,CAAP;MACAX,GAAG,GAAGW,GAAG,GAAGZ,GAAZ;MACAD,CAAC,GAAG5E,QAAQ,GAAG0E,EAAf;MACAK,GAAG,GAAGH,CAAC,IAAIA,CAAC,GAAGF,EAAR,CAAP;MACAM,GAAG,GAAGN,EAAE,GAAGK,GAAX;MACAQ,EAAE,GAAGT,GAAG,GAAGE,GAAN,IAAaM,EAAE,GAAGT,GAAG,GAAGE,GAAX,GAAiBD,GAAG,GAAGC,GAAvB,GAA6BF,GAAG,GAAGG,GAAhD,CAAL;MACAC,EAAE,GAAGI,EAAE,GAAGE,EAAV;MACAZ,KAAK,GAAGM,EAAE,GAAGI,EAAb;MACApE,CAAC,CAAC,CAAD,CAAD,GAAOoE,EAAE,IAAIJ,EAAE,GAAGN,KAAT,CAAF,IAAqBY,EAAE,GAAGZ,KAA1B,CAAP;MACAO,EAAE,GAAGE,EAAE,GAAGH,EAAV;MACAN,KAAK,GAAGO,EAAE,GAAGE,EAAb;MACAD,EAAE,GAAGC,EAAE,IAAIF,EAAE,GAAGP,KAAT,CAAF,IAAqBM,EAAE,GAAGN,KAA1B,CAAL;MACAM,EAAE,GAAGE,EAAE,GAAGG,EAAV;MACAX,KAAK,GAAGM,EAAE,GAAGE,EAAb;MACAlE,CAAC,CAAC,CAAD,CAAD,GAAOkE,EAAE,IAAIF,EAAE,GAAGN,KAAT,CAAF,IAAqBW,EAAE,GAAGX,KAA1B,CAAP;MACAa,EAAE,GAAGN,EAAE,GAAGD,EAAV;MACAN,KAAK,GAAGa,EAAE,GAAGN,EAAb;MACAjE,CAAC,CAAC,CAAD,CAAD,GAAOiE,EAAE,IAAIM,EAAE,GAAGb,KAAT,CAAF,IAAqBM,EAAE,GAAGN,KAA1B,CAAP;MACA1D,CAAC,CAAC,CAAD,CAAD,GAAOuE,EAAP;MACAnB,MAAM,GAAGjE,GAAG,CAAC,CAAD,EAAIY,CAAJ,EAAO,CAAP,EAAUC,CAAV,EAAaS,GAAb,CAAZ;MACA0D,EAAE,GAAG3B,OAAO,GAAGC,OAAf;MACAkB,CAAC,GAAG5E,QAAQ,GAAGyD,OAAf;MACAoB,GAAG,GAAGD,CAAC,IAAIA,CAAC,GAAGnB,OAAR,CAAP;MACAqB,GAAG,GAAGrB,OAAO,GAAGoB,GAAhB;MACAD,CAAC,GAAG5E,QAAQ,GAAG0D,OAAf;MACAqB,GAAG,GAAGH,CAAC,IAAIA,CAAC,GAAGlB,OAAR,CAAP;MACAsB,GAAG,GAAGtB,OAAO,GAAGqB,GAAhB;MACAM,EAAE,GAAGP,GAAG,GAAGE,GAAN,IAAaI,EAAE,GAAGP,GAAG,GAAGE,GAAX,GAAiBD,GAAG,GAAGC,GAAvB,GAA6BF,GAAG,GAAGG,GAAhD,CAAL;MACAM,EAAE,GAAG/B,OAAO,GAAGK,OAAf;MACAgB,CAAC,GAAG5E,QAAQ,GAAGuD,OAAf;MACAsB,GAAG,GAAGD,CAAC,IAAIA,CAAC,GAAGrB,OAAR,CAAP;MACAuB,GAAG,GAAGvB,OAAO,GAAGsB,GAAhB;MACAD,CAAC,GAAG5E,QAAQ,GAAG4D,OAAf;MACAmB,GAAG,GAAGH,CAAC,IAAIA,CAAC,GAAGhB,OAAR,CAAP;MACAoB,GAAG,GAAGpB,OAAO,GAAGmB,GAAhB;MACAQ,EAAE,GAAGT,GAAG,GAAGE,GAAN,IAAaM,EAAE,GAAGT,GAAG,GAAGE,GAAX,GAAiBD,GAAG,GAAGC,GAAvB,GAA6BF,GAAG,GAAGG,GAAhD,CAAL;MACAC,EAAE,GAAGI,EAAE,GAAGE,EAAV;MACAZ,KAAK,GAAGU,EAAE,GAAGJ,EAAb;MACApD,IAAI,CAAC,CAAD,CAAJ,GAAUwD,EAAE,IAAIJ,EAAE,GAAGN,KAAT,CAAF,IAAqBA,KAAK,GAAGY,EAA7B,CAAV;MACAL,EAAE,GAAGE,EAAE,GAAGH,EAAV;MACAN,KAAK,GAAGO,EAAE,GAAGE,EAAb;MACAD,EAAE,GAAGC,EAAE,IAAIF,EAAE,GAAGP,KAAT,CAAF,IAAqBM,EAAE,GAAGN,KAA1B,CAAL;MACAM,EAAE,GAAGE,EAAE,GAAGG,EAAV;MACAX,KAAK,GAAGQ,EAAE,GAAGF,EAAb;MACApD,IAAI,CAAC,CAAD,CAAJ,GAAUsD,EAAE,IAAIF,EAAE,GAAGN,KAAT,CAAF,IAAqBA,KAAK,GAAGW,EAA7B,CAAV;MACAE,EAAE,GAAGN,EAAE,GAAGD,EAAV;MACAN,KAAK,GAAGa,EAAE,GAAGN,EAAb;MACArD,IAAI,CAAC,CAAD,CAAJ,GAAUqD,EAAE,IAAIM,EAAE,GAAGb,KAAT,CAAF,IAAqBM,EAAE,GAAGN,KAA1B,CAAV;MACA9C,IAAI,CAAC,CAAD,CAAJ,GAAU2D,EAAV;MACAhB,OAAO,GAAG,CAAV;IACH,CA5FD,MA4FO;MACH9C,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;MACA2C,MAAM,GAAG,CAAT;MACAxC,IAAI,CAAC,CAAD,CAAJ,GAAU,CAAV;MACA2C,OAAO,GAAG,CAAV;IACH;;IACD,IAAIhB,OAAO,KAAK,CAAhB,EAAmB;MACf,MAAM2C,GAAG,GAAG7F,KAAK,CAAC+D,MAAD,EAAS3C,GAAT,EAAc8B,OAAd,EAAuBvB,IAAvB,CAAjB;MACAQ,MAAM,GAAGD,MAAM,CAACC,MAAD,EAASrC,GAAG,CACvBE,KAAK,CAACyD,QAAD,EAAW3C,KAAX,EAAkBoC,OAAlB,EAA2BzB,GAA3B,CADkB,EACeA,GADf,EAEvBzB,KAAK,CAAC6F,GAAD,EAAMlE,IAAN,EAAY,IAAIyD,GAAhB,EAAqBxD,GAArB,CAFkB,EAESA,GAFT,EAEcE,GAFd,CAAZ,EAEgCA,GAFhC,CAAf;MAIA,MAAMgE,IAAI,GAAG9F,KAAK,CAACkE,OAAD,EAAU3C,IAAV,EAAgB2B,OAAhB,EAAyB1B,EAAzB,CAAlB;MACAW,MAAM,GAAGD,MAAM,CAACC,MAAD,EAASpC,SAAS,CAC7BC,KAAK,CAAC8F,IAAD,EAAOtE,EAAP,EAAW,IAAI4D,GAAf,EAAoB3D,GAApB,CADwB,EACEA,GADF,EAE7BzB,KAAK,CAAC8F,IAAD,EAAOtE,EAAP,EAAW0B,OAAX,EAAoBxB,IAApB,CAFwB,EAEGA,IAFH,EAG7B1B,KAAK,CAAC6F,GAAD,EAAMlE,IAAN,EAAYuB,OAAZ,EAAqBtB,GAArB,CAHwB,EAGGA,GAHH,EAGQC,IAHR,EAGcE,GAHd,CAAlB,EAGsCA,GAHtC,CAAf;;MAKA,IAAIuB,OAAO,KAAK,CAAhB,EAAmB;QACfnB,MAAM,GAAGD,MAAM,CAACC,MAAD,EAASnC,KAAK,CAACA,KAAK,CAAC,CAAD,EAAIO,EAAJ,EAAQ2C,OAAR,EAAiB1B,EAAjB,CAAN,EAA4BA,EAA5B,EAAgC8B,OAAhC,EAAyC7B,GAAzC,CAAd,EAA6DA,GAA7D,CAAf;MACH;;MACD,IAAI2B,OAAO,KAAK,CAAhB,EAAmB;QACfjB,MAAM,GAAGD,MAAM,CAACC,MAAD,EAASnC,KAAK,CAACA,KAAK,CAAC,CAAD,EAAIS,EAAJ,EAAQ,CAACyC,OAAT,EAAkB1B,EAAlB,CAAN,EAA6BA,EAA7B,EAAiC4B,OAAjC,EAA0C3B,GAA1C,CAAd,EAA8DA,GAA9D,CAAf;MACH;IACJ;;IACD,IAAI4B,OAAO,KAAK,CAAhB,EAAmB;MACf,MAAMwC,GAAG,GAAG7F,KAAK,CAAC+D,MAAD,EAAS3C,GAAT,EAAciC,OAAd,EAAuB1B,IAAvB,CAAjB;MACAQ,MAAM,GAAGD,MAAM,CAACC,MAAD,EAASrC,GAAG,CACvBE,KAAK,CAAC0D,QAAD,EAAW3C,KAAX,EAAkBsC,OAAlB,EAA2B5B,GAA3B,CADkB,EACeA,GADf,EAEvBzB,KAAK,CAAC6F,GAAD,EAAMlE,IAAN,EAAY,IAAI4D,GAAhB,EAAqB3D,GAArB,CAFkB,EAESA,GAFT,EAEcE,GAFd,CAAZ,EAEgCA,GAFhC,CAAf;MAIA,MAAMgE,IAAI,GAAG9F,KAAK,CAACkE,OAAD,EAAU3C,IAAV,EAAgB8B,OAAhB,EAAyB7B,EAAzB,CAAlB;MACAW,MAAM,GAAGD,MAAM,CAACC,MAAD,EAASpC,SAAS,CAC7BC,KAAK,CAAC8F,IAAD,EAAOtE,EAAP,EAAW,IAAI+D,GAAf,EAAoB9D,GAApB,CADwB,EACEA,GADF,EAE7BzB,KAAK,CAAC8F,IAAD,EAAOtE,EAAP,EAAW6B,OAAX,EAAoB3B,IAApB,CAFwB,EAEGA,IAFH,EAG7B1B,KAAK,CAAC6F,GAAD,EAAMlE,IAAN,EAAY0B,OAAZ,EAAqBzB,GAArB,CAHwB,EAGGA,GAHH,EAGSC,IAHT,EAGeE,GAHf,CAAlB,EAGuCA,GAHvC,CAAf;IAIH;EACJ;;EACD,IAAIoB,OAAO,KAAK,CAAZ,IAAiBG,OAAO,KAAK,CAAjC,EAAoC;IAChC,IAAIL,OAAO,KAAK,CAAZ,IAAiBG,OAAO,KAAK,CAA7B,IAAkCF,OAAO,KAAK,CAA9C,IAAmDG,OAAO,KAAK,CAAnE,EAAsE;MAClEyB,EAAE,GAAG7B,OAAO,GAAGsC,GAAf;MACAjB,CAAC,GAAG5E,QAAQ,GAAGuD,OAAf;MACAsB,GAAG,GAAGD,CAAC,IAAIA,CAAC,GAAGrB,OAAR,CAAP;MACAuB,GAAG,GAAGvB,OAAO,GAAGsB,GAAhB;MACAD,CAAC,GAAG5E,QAAQ,GAAG6F,GAAf;MACAd,GAAG,GAAGH,CAAC,IAAIA,CAAC,GAAGiB,GAAR,CAAP;MACAb,GAAG,GAAGa,GAAG,GAAGd,GAAZ;MACAM,EAAE,GAAGP,GAAG,GAAGE,GAAN,IAAaI,EAAE,GAAGP,GAAG,GAAGE,GAAX,GAAiBD,GAAG,GAAGC,GAAvB,GAA6BF,GAAG,GAAGG,GAAhD,CAAL;MACAM,EAAE,GAAGG,GAAG,GAAG9B,OAAX;MACAiB,CAAC,GAAG5E,QAAQ,GAAGyF,GAAf;MACAZ,GAAG,GAAGD,CAAC,IAAIA,CAAC,GAAGa,GAAR,CAAP;MACAX,GAAG,GAAGW,GAAG,GAAGZ,GAAZ;MACAD,CAAC,GAAG5E,QAAQ,GAAG2D,OAAf;MACAoB,GAAG,GAAGH,CAAC,IAAIA,CAAC,GAAGjB,OAAR,CAAP;MACAqB,GAAG,GAAGrB,OAAO,GAAGoB,GAAhB;MACAQ,EAAE,GAAGT,GAAG,GAAGE,GAAN,IAAaM,EAAE,GAAGT,GAAG,GAAGE,GAAX,GAAiBD,GAAG,GAAGC,GAAvB,GAA6BF,GAAG,GAAGG,GAAhD,CAAL;MACAC,EAAE,GAAGI,EAAE,GAAGE,EAAV;MACAZ,KAAK,GAAGM,EAAE,GAAGI,EAAb;MACArE,CAAC,CAAC,CAAD,CAAD,GAAOqE,EAAE,IAAIJ,EAAE,GAAGN,KAAT,CAAF,IAAqBY,EAAE,GAAGZ,KAA1B,CAAP;MACAO,EAAE,GAAGE,EAAE,GAAGH,EAAV;MACAN,KAAK,GAAGO,EAAE,GAAGE,EAAb;MACAD,EAAE,GAAGC,EAAE,IAAIF,EAAE,GAAGP,KAAT,CAAF,IAAqBM,EAAE,GAAGN,KAA1B,CAAL;MACAM,EAAE,GAAGE,EAAE,GAAGG,EAAV;MACAX,KAAK,GAAGM,EAAE,GAAGE,EAAb;MACAnE,CAAC,CAAC,CAAD,CAAD,GAAOmE,EAAE,IAAIF,EAAE,GAAGN,KAAT,CAAF,IAAqBW,EAAE,GAAGX,KAA1B,CAAP;MACAa,EAAE,GAAGN,EAAE,GAAGD,EAAV;MACAN,KAAK,GAAGa,EAAE,GAAGN,EAAb;MACAlE,CAAC,CAAC,CAAD,CAAD,GAAOkE,EAAE,IAAIM,EAAE,GAAGb,KAAT,CAAF,IAAqBM,EAAE,GAAGN,KAA1B,CAAP;MACA3D,CAAC,CAAC,CAAD,CAAD,GAAOwE,EAAP;MACAf,EAAE,GAAG,CAACmB,GAAN;MACAlB,EAAE,GAAG,CAAChB,OAAN;MACA0B,EAAE,GAAG5B,OAAO,GAAGiB,EAAf;MACAG,CAAC,GAAG5E,QAAQ,GAAGwD,OAAf;MACAqB,GAAG,GAAGD,CAAC,IAAIA,CAAC,GAAGpB,OAAR,CAAP;MACAsB,GAAG,GAAGtB,OAAO,GAAGqB,GAAhB;MACAD,CAAC,GAAG5E,QAAQ,GAAGyE,EAAf;MACAM,GAAG,GAAGH,CAAC,IAAIA,CAAC,GAAGH,EAAR,CAAP;MACAO,GAAG,GAAGP,EAAE,GAAGM,GAAX;MACAM,EAAE,GAAGP,GAAG,GAAGE,GAAN,IAAaI,EAAE,GAAGP,GAAG,GAAGE,GAAX,GAAiBD,GAAG,GAAGC,GAAvB,GAA6BF,GAAG,GAAGG,GAAhD,CAAL;MACAM,EAAE,GAAGI,GAAG,GAAGhB,EAAX;MACAE,CAAC,GAAG5E,QAAQ,GAAG0F,GAAf;MACAb,GAAG,GAAGD,CAAC,IAAIA,CAAC,GAAGc,GAAR,CAAP;MACAZ,GAAG,GAAGY,GAAG,GAAGb,GAAZ;MACAD,CAAC,GAAG5E,QAAQ,GAAG0E,EAAf;MACAK,GAAG,GAAGH,CAAC,IAAIA,CAAC,GAAGF,EAAR,CAAP;MACAM,GAAG,GAAGN,EAAE,GAAGK,GAAX;MACAQ,EAAE,GAAGT,GAAG,GAAGE,GAAN,IAAaM,EAAE,GAAGT,GAAG,GAAGE,GAAX,GAAiBD,GAAG,GAAGC,GAAvB,GAA6BF,GAAG,GAAGG,GAAhD,CAAL;MACAC,EAAE,GAAGI,EAAE,GAAGE,EAAV;MACAZ,KAAK,GAAGM,EAAE,GAAGI,EAAb;MACApE,CAAC,CAAC,CAAD,CAAD,GAAOoE,EAAE,IAAIJ,EAAE,GAAGN,KAAT,CAAF,IAAqBY,EAAE,GAAGZ,KAA1B,CAAP;MACAO,EAAE,GAAGE,EAAE,GAAGH,EAAV;MACAN,KAAK,GAAGO,EAAE,GAAGE,EAAb;MACAD,EAAE,GAAGC,EAAE,IAAIF,EAAE,GAAGP,KAAT,CAAF,IAAqBM,EAAE,GAAGN,KAA1B,CAAL;MACAM,EAAE,GAAGE,EAAE,GAAGG,EAAV;MACAX,KAAK,GAAGM,EAAE,GAAGE,EAAb;MACAlE,CAAC,CAAC,CAAD,CAAD,GAAOkE,EAAE,IAAIF,EAAE,GAAGN,KAAT,CAAF,IAAqBW,EAAE,GAAGX,KAA1B,CAAP;MACAa,EAAE,GAAGN,EAAE,GAAGD,EAAV;MACAN,KAAK,GAAGa,EAAE,GAAGN,EAAb;MACAjE,CAAC,CAAC,CAAD,CAAD,GAAOiE,EAAE,IAAIM,EAAE,GAAGb,KAAT,CAAF,IAAqBM,EAAE,GAAGN,KAA1B,CAAP;MACA1D,CAAC,CAAC,CAAD,CAAD,GAAOuE,EAAP;MACArB,MAAM,GAAG/D,GAAG,CAAC,CAAD,EAAIY,CAAJ,EAAO,CAAP,EAAUC,CAAV,EAAaO,GAAb,CAAZ;MACA4D,EAAE,GAAG7B,OAAO,GAAGI,OAAf;MACAiB,CAAC,GAAG5E,QAAQ,GAAGuD,OAAf;MACAsB,GAAG,GAAGD,CAAC,IAAIA,CAAC,GAAGrB,OAAR,CAAP;MACAuB,GAAG,GAAGvB,OAAO,GAAGsB,GAAhB;MACAD,CAAC,GAAG5E,QAAQ,GAAG2D,OAAf;MACAoB,GAAG,GAAGH,CAAC,IAAIA,CAAC,GAAGjB,OAAR,CAAP;MACAqB,GAAG,GAAGrB,OAAO,GAAGoB,GAAhB;MACAM,EAAE,GAAGP,GAAG,GAAGE,GAAN,IAAaI,EAAE,GAAGP,GAAG,GAAGE,GAAX,GAAiBD,GAAG,GAAGC,GAAvB,GAA6BF,GAAG,GAAGG,GAAhD,CAAL;MACAM,EAAE,GAAG9B,OAAO,GAAGE,OAAf;MACAkB,CAAC,GAAG5E,QAAQ,GAAGwD,OAAf;MACAqB,GAAG,GAAGD,CAAC,IAAIA,CAAC,GAAGpB,OAAR,CAAP;MACAsB,GAAG,GAAGtB,OAAO,GAAGqB,GAAhB;MACAD,CAAC,GAAG5E,QAAQ,GAAG0D,OAAf;MACAqB,GAAG,GAAGH,CAAC,IAAIA,CAAC,GAAGlB,OAAR,CAAP;MACAsB,GAAG,GAAGtB,OAAO,GAAGqB,GAAhB;MACAQ,EAAE,GAAGT,GAAG,GAAGE,GAAN,IAAaM,EAAE,GAAGT,GAAG,GAAGE,GAAX,GAAiBD,GAAG,GAAGC,GAAvB,GAA6BF,GAAG,GAAGG,GAAhD,CAAL;MACAC,EAAE,GAAGI,EAAE,GAAGE,EAAV;MACAZ,KAAK,GAAGU,EAAE,GAAGJ,EAAb;MACAtD,IAAI,CAAC,CAAD,CAAJ,GAAU0D,EAAE,IAAIJ,EAAE,GAAGN,KAAT,CAAF,IAAqBA,KAAK,GAAGY,EAA7B,CAAV;MACAL,EAAE,GAAGE,EAAE,GAAGH,EAAV;MACAN,KAAK,GAAGO,EAAE,GAAGE,EAAb;MACAD,EAAE,GAAGC,EAAE,IAAIF,EAAE,GAAGP,KAAT,CAAF,IAAqBM,EAAE,GAAGN,KAA1B,CAAL;MACAM,EAAE,GAAGE,EAAE,GAAGG,EAAV;MACAX,KAAK,GAAGQ,EAAE,GAAGF,EAAb;MACAtD,IAAI,CAAC,CAAD,CAAJ,GAAUwD,EAAE,IAAIF,EAAE,GAAGN,KAAT,CAAF,IAAqBA,KAAK,GAAGW,EAA7B,CAAV;MACAE,EAAE,GAAGN,EAAE,GAAGD,EAAV;MACAN,KAAK,GAAGa,EAAE,GAAGN,EAAb;MACAvD,IAAI,CAAC,CAAD,CAAJ,GAAUuD,EAAE,IAAIM,EAAE,GAAGb,KAAT,CAAF,IAAqBM,EAAE,GAAGN,KAA1B,CAAV;MACAhD,IAAI,CAAC,CAAD,CAAJ,GAAU6D,EAAV;MACAlB,OAAO,GAAG,CAAV;IACH,CA5FD,MA4FO;MACH9C,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;MACA2C,MAAM,GAAG,CAAT;MACAxC,IAAI,CAAC,CAAD,CAAJ,GAAU,CAAV;MACA2C,OAAO,GAAG,CAAV;IACH;;IACD,IAAIb,OAAO,KAAK,CAAhB,EAAmB;MACf,MAAM0C,GAAG,GAAG7F,KAAK,CAAC6D,MAAD,EAAS3C,GAAT,EAAciC,OAAd,EAAuBxB,IAAvB,CAAjB;MACAQ,MAAM,GAAGD,MAAM,CAACC,MAAD,EAASrC,GAAG,CACvBE,KAAK,CAAC2D,QAAD,EAAW3C,KAAX,EAAkBmC,OAAlB,EAA2B1B,GAA3B,CADkB,EACeA,GADf,EAEvBzB,KAAK,CAAC6F,GAAD,EAAMlE,IAAN,EAAY,IAAI0D,GAAhB,EAAqBzD,GAArB,CAFkB,EAESA,GAFT,EAEcE,GAFd,CAAZ,EAEgCA,GAFhC,CAAf;MAIA,MAAMgE,IAAI,GAAG9F,KAAK,CAACgE,OAAD,EAAU3C,IAAV,EAAgB8B,OAAhB,EAAyB3B,EAAzB,CAAlB;MACAW,MAAM,GAAGD,MAAM,CAACC,MAAD,EAASpC,SAAS,CAC7BC,KAAK,CAAC8F,IAAD,EAAOtE,EAAP,EAAW,IAAI6D,GAAf,EAAoB5D,GAApB,CADwB,EACEA,GADF,EAE7BzB,KAAK,CAAC8F,IAAD,EAAOtE,EAAP,EAAW2B,OAAX,EAAoBzB,IAApB,CAFwB,EAEGA,IAFH,EAG7B1B,KAAK,CAAC6F,GAAD,EAAMlE,IAAN,EAAYwB,OAAZ,EAAqBvB,GAArB,CAHwB,EAGGA,GAHH,EAGQC,IAHR,EAGcE,GAHd,CAAlB,EAGsCA,GAHtC,CAAf;;MAKA,IAAIqB,OAAO,KAAK,CAAhB,EAAmB;QACfjB,MAAM,GAAGD,MAAM,CAACC,MAAD,EAASnC,KAAK,CAACA,KAAK,CAAC,CAAD,EAAIQ,EAAJ,EAAQ2C,OAAR,EAAiB3B,EAAjB,CAAN,EAA4BA,EAA5B,EAAgC4B,OAAhC,EAAyC3B,GAAzC,CAAd,EAA6DA,GAA7D,CAAf;MACH;;MACD,IAAI4B,OAAO,KAAK,CAAhB,EAAmB;QACflB,MAAM,GAAGD,MAAM,CAACC,MAAD,EAASnC,KAAK,CAACA,KAAK,CAAC,CAAD,EAAIO,EAAJ,EAAQ,CAAC4C,OAAT,EAAkB3B,EAAlB,CAAN,EAA6BA,EAA7B,EAAiC6B,OAAjC,EAA0C5B,GAA1C,CAAd,EAA8DA,GAA9D,CAAf;MACH;IACJ;;IACD,IAAI6B,OAAO,KAAK,CAAhB,EAAmB;MACf,MAAMuC,GAAG,GAAG7F,KAAK,CAAC6D,MAAD,EAAS3C,GAAT,EAAcoC,OAAd,EAAuB3B,IAAvB,CAAjB;MACAQ,MAAM,GAAGD,MAAM,CAACC,MAAD,EAASrC,GAAG,CACvBE,KAAK,CAAC4D,QAAD,EAAW3C,KAAX,EAAkBqC,OAAlB,EAA2B7B,GAA3B,CADkB,EACeA,GADf,EAEvBzB,KAAK,CAAC6F,GAAD,EAAMlE,IAAN,EAAY,IAAI6D,GAAhB,EAAqB5D,GAArB,CAFkB,EAESA,GAFT,EAEcE,GAFd,CAAZ,EAEgCA,GAFhC,CAAf;MAIA,MAAMgE,IAAI,GAAG9F,KAAK,CAACgE,OAAD,EAAU3C,IAAV,EAAgBiC,OAAhB,EAAyB9B,EAAzB,CAAlB;MACAW,MAAM,GAAGD,MAAM,CAACC,MAAD,EAASpC,SAAS,CAC7BC,KAAK,CAAC8F,IAAD,EAAOtE,EAAP,EAAW,IAAIgE,GAAf,EAAoB/D,GAApB,CADwB,EACEA,GADF,EAE7BzB,KAAK,CAAC8F,IAAD,EAAOtE,EAAP,EAAW8B,OAAX,EAAoB5B,IAApB,CAFwB,EAEGA,IAFH,EAG7B1B,KAAK,CAAC6F,GAAD,EAAMlE,IAAN,EAAY2B,OAAZ,EAAqB1B,GAArB,CAHwB,EAGGA,GAHH,EAGQC,IAHR,EAGcE,GAHd,CAAlB,EAGsCA,GAHtC,CAAf;IAIH;EACJ;;EAED,OAAOC,GAAG,CAACG,MAAM,GAAG,CAAV,CAAV;AACH;;AAED,OAAO,SAAS4D,QAAT,CAAkBvD,EAAlB,EAAsBC,EAAtB,EAA0BC,EAA1B,EAA8BC,EAA9B,EAAkCC,EAAlC,EAAsCC,EAAtC,EAA0CC,EAA1C,EAA8CC,EAA9C,EAAkD;EACrD,MAAMoC,GAAG,GAAG3C,EAAE,GAAGM,EAAjB;EACA,MAAMsC,GAAG,GAAG1C,EAAE,GAAGI,EAAjB;EACA,MAAMuC,GAAG,GAAGzC,EAAE,GAAGE,EAAjB;EACA,MAAMwC,GAAG,GAAG7C,EAAE,GAAGM,EAAjB;EACA,MAAMwC,GAAG,GAAG5C,EAAE,GAAGI,EAAjB;EACA,MAAMyC,GAAG,GAAG3C,EAAE,GAAGE,EAAjB;EAEA,MAAMiD,MAAM,GAAGZ,GAAG,GAAGI,GAArB;EACA,MAAMS,MAAM,GAAGZ,GAAG,GAAGE,GAArB;EACA,MAAMW,KAAK,GAAGf,GAAG,GAAGA,GAAN,GAAYG,GAAG,GAAGA,GAAhC;EAEA,MAAMa,MAAM,GAAGd,GAAG,GAAGC,GAArB;EACA,MAAMc,MAAM,GAAGjB,GAAG,GAAGK,GAArB;EACA,MAAMa,KAAK,GAAGjB,GAAG,GAAGA,GAAN,GAAYG,GAAG,GAAGA,GAAhC;EAEA,MAAMe,MAAM,GAAGnB,GAAG,GAAGI,GAArB;EACA,MAAMgB,MAAM,GAAGnB,GAAG,GAAGE,GAArB;EACA,MAAMkB,KAAK,GAAGnB,GAAG,GAAGA,GAAN,GAAYG,GAAG,GAAGA,GAAhC;EAEA,MAAMC,GAAG,GACLS,KAAK,IAAIF,MAAM,GAAGC,MAAb,CAAL,GACAI,KAAK,IAAIF,MAAM,GAAGC,MAAb,CADL,GAEAI,KAAK,IAAIF,MAAM,GAAGC,MAAb,CAHT;EAKA,MAAMvD,SAAS,GACX,CAAC2C,IAAI,CAACC,GAAL,CAASI,MAAT,IAAmBL,IAAI,CAACC,GAAL,CAASK,MAAT,CAApB,IAAwCC,KAAxC,GACA,CAACP,IAAI,CAACC,GAAL,CAASO,MAAT,IAAmBR,IAAI,CAACC,GAAL,CAASQ,MAAT,CAApB,IAAwCC,KADxC,GAEA,CAACV,IAAI,CAACC,GAAL,CAASU,MAAT,IAAmBX,IAAI,CAACC,GAAL,CAASW,MAAT,CAApB,IAAwCC,KAH5C;EAKA,MAAMd,QAAQ,GAAGzF,YAAY,GAAG+C,SAAhC;;EAEA,IAAIyC,GAAG,GAAGC,QAAN,IAAkB,CAACD,GAAD,GAAOC,QAA7B,EAAuC;IACnC,OAAOD,GAAP;EACH;;EACD,OAAOlD,aAAa,CAACC,EAAD,EAAKC,EAAL,EAASC,EAAT,EAAaC,EAAb,EAAiBC,EAAjB,EAAqBC,EAArB,EAAyBC,EAAzB,EAA6BC,EAA7B,EAAiCC,SAAjC,CAApB;AACH;AAED,OAAO,SAASyD,YAAT,CAAsBjE,EAAtB,EAA0BC,EAA1B,EAA8BC,EAA9B,EAAkCC,EAAlC,EAAsCC,EAAtC,EAA0CC,EAA1C,EAA8CC,EAA9C,EAAkDC,EAAlD,EAAsD;EACzD,MAAMoC,GAAG,GAAG3C,EAAE,GAAGM,EAAjB;EACA,MAAMwC,GAAG,GAAG7C,EAAE,GAAGM,EAAjB;EACA,MAAMqC,GAAG,GAAG1C,EAAE,GAAGI,EAAjB;EACA,MAAMyC,GAAG,GAAG5C,EAAE,GAAGI,EAAjB;EACA,MAAMsC,GAAG,GAAGzC,EAAE,GAAGE,EAAjB;EACA,MAAM0C,GAAG,GAAG3C,EAAE,GAAGE,EAAjB;EAEA,MAAM2D,KAAK,GAAGvB,GAAG,GAAGI,GAAN,GAAYH,GAAG,GAAGE,GAAhC;EACA,MAAMqB,KAAK,GAAGvB,GAAG,GAAGI,GAAN,GAAYH,GAAG,GAAGE,GAAhC;EACA,MAAMqB,KAAK,GAAGvB,GAAG,GAAGC,GAAN,GAAYH,GAAG,GAAGK,GAAhC;EACA,MAAMU,KAAK,GAAGf,GAAG,GAAGA,GAAN,GAAYG,GAAG,GAAGA,GAAhC;EACA,MAAMe,KAAK,GAAGjB,GAAG,GAAGA,GAAN,GAAYG,GAAG,GAAGA,GAAhC;EACA,MAAMiB,KAAK,GAAGnB,GAAG,GAAGA,GAAN,GAAYG,GAAG,GAAGA,GAAhC;EAEA,OAAOU,KAAK,GAAGS,KAAR,GAAgBN,KAAK,GAAGO,KAAxB,GAAgCJ,KAAK,GAAGE,KAA/C;AACH"},"metadata":{},"sourceType":"module"}