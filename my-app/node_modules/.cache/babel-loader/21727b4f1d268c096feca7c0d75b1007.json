{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _d3Shape = require(\"d3-shape\");\n\nvar _GenericChartComponent = require(\"../GenericChartComponent\");\n\nvar _GenericChartComponent2 = _interopRequireDefault(_GenericChartComponent);\n\nvar _GenericComponent = require(\"../GenericComponent\");\n\nvar _utils = require(\"../utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar KagiSeries = function (_Component) {\n  _inherits(KagiSeries, _Component);\n\n  function KagiSeries(props) {\n    _classCallCheck(this, KagiSeries);\n\n    var _this = _possibleConstructorReturn(this, (KagiSeries.__proto__ || Object.getPrototypeOf(KagiSeries)).call(this, props));\n\n    _this.renderSVG = _this.renderSVG.bind(_this);\n    _this.drawOnCanvas = _this.drawOnCanvas.bind(_this);\n    return _this;\n  }\n\n  _createClass(KagiSeries, [{\n    key: \"drawOnCanvas\",\n    value: function drawOnCanvas(ctx, moreProps) {\n      var xAccessor = moreProps.xAccessor;\n\n      _drawOnCanvas(ctx, this.props, moreProps, xAccessor);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _react2.default.createElement(_GenericChartComponent2.default, {\n        svgDraw: this.renderSVG,\n        canvasToDraw: _GenericComponent.getAxisCanvas,\n        canvasDraw: this.drawOnCanvas,\n        drawOn: [\"pan\"]\n      });\n    }\n  }, {\n    key: \"renderSVG\",\n    value: function renderSVG(moreProps) {\n      var xAccessor = moreProps.xAccessor;\n      var xScale = moreProps.xScale,\n          yScale = moreProps.chartConfig.yScale,\n          plotData = moreProps.plotData;\n      var _props = this.props,\n          className = _props.className,\n          stroke = _props.stroke,\n          fill = _props.fill,\n          strokeWidth = _props.strokeWidth;\n      var paths = helper(plotData, xAccessor).map(function (each, i) {\n        var dataSeries = (0, _d3Shape.line)().x(function (item) {\n          return xScale(item[0]);\n        }).y(function (item) {\n          return yScale(item[1]);\n        }).curve(_d3Shape.curveStepBefore);\n        dataSeries(each.plot);\n        return _react2.default.createElement(\"path\", {\n          key: i,\n          d: dataSeries(each.plot),\n          className: each.type,\n          stroke: stroke[each.type],\n          fill: fill[each.type],\n          strokeWidth: strokeWidth\n        });\n      });\n      return _react2.default.createElement(\"g\", {\n        className: className\n      }, paths);\n    }\n  }]);\n\n  return KagiSeries;\n}(_react.Component);\n\nKagiSeries.propTypes = {\n  className: _propTypes2.default.string,\n  stroke: _propTypes2.default.object,\n  fill: _propTypes2.default.object,\n  strokeWidth: _propTypes2.default.number.isRequired\n};\nKagiSeries.defaultProps = {\n  className: \"react-stockcharts-kagi\",\n  strokeWidth: 2,\n  stroke: {\n    yang: \"#6BA583\",\n    yin: \"#E60000\"\n  },\n  fill: {\n    yang: \"none\",\n    yin: \"none\"\n  },\n  currentValueStroke: \"#000000\"\n};\n\nfunction _drawOnCanvas(ctx, props, moreProps, xAccessor) {\n  var stroke = props.stroke,\n      strokeWidth = props.strokeWidth,\n      currentValueStroke = props.currentValueStroke;\n  var xScale = moreProps.xScale,\n      yScale = moreProps.chartConfig.yScale,\n      plotData = moreProps.plotData;\n  var paths = helper(plotData, xAccessor);\n  var begin = true;\n  paths.forEach(function (each) {\n    ctx.strokeStyle = stroke[each.type];\n    ctx.lineWidth = strokeWidth;\n    ctx.beginPath();\n    var prevX = void 0;\n    each.plot.forEach(function (d) {\n      var _ref = [xScale(d[0]), yScale(d[1])],\n          x = _ref[0],\n          y = _ref[1];\n\n      if (begin) {\n        ctx.moveTo(x, y);\n        begin = false;\n      } else {\n        if ((0, _utils.isDefined)(prevX)) {\n          ctx.lineTo(prevX, y);\n        }\n\n        ctx.lineTo(x, y);\n      }\n\n      prevX = x; // console.log(d);\n    });\n    ctx.stroke();\n  });\n  var lastPlot = paths[paths.length - 1].plot;\n  var last = lastPlot[lastPlot.length - 1];\n  ctx.beginPath(); // ctx.strokeStyle = \"black\";\n\n  ctx.lineWidth = 1;\n  var _ref2 = [xScale(last[0]), yScale(last[2]), yScale(last[3])],\n      x = _ref2[0],\n      y1 = _ref2[1],\n      y2 = _ref2[2]; // console.log(last, x, y);\n\n  ctx.moveTo(x, y1);\n  ctx.lineTo(x + 10, y1);\n  ctx.stroke();\n  ctx.beginPath();\n  ctx.strokeStyle = currentValueStroke;\n  ctx.moveTo(x - 10, y2);\n  ctx.lineTo(x, y2);\n  ctx.stroke();\n}\n\nfunction helper(plotData, xAccessor) {\n  var kagiLine = [];\n  var kagi = {};\n  var d = plotData[0];\n  var idx = xAccessor(d);\n\n  for (var i = 0; i < plotData.length; i++) {\n    d = plotData[i];\n    if ((0, _utils.isNotDefined)(d.close)) continue;\n    if ((0, _utils.isNotDefined)(kagi.type)) kagi.type = d.startAs;\n    if ((0, _utils.isNotDefined)(kagi.plot)) kagi.plot = [];\n    idx = xAccessor(d);\n    kagi.plot.push([idx, d.open]);\n\n    if ((0, _utils.isDefined)(d.changeTo)) {\n      kagi.plot.push([idx, d.changePoint]);\n      kagi.added = true;\n      kagiLine.push(kagi);\n      kagi = {\n        type: d.changeTo,\n        plot: [],\n        added: false\n      };\n      kagi.plot.push([idx, d.changePoint]);\n    }\n  }\n\n  if (!kagi.added) {\n    kagi.plot.push([idx, d.close, d.current, d.reverseAt]);\n    kagiLine.push(kagi);\n  } // console.log(d.reverseAt);\n\n\n  return kagiLine;\n}\n\nexports.default = KagiSeries;","map":{"version":3,"sources":["../../../src/lib/series/KagiSeries.js"],"names":["KagiSeries","ctx","moreProps","xAccessor","drawOnCanvas","xScale","yScale","plotData","className","stroke","fill","strokeWidth","paths","dataSeries","item","each","isRequired","yang","yin","currentValueStroke","props","helper","begin","prevX","x","y","d","lastPlot","last","y1","y2","kagiLine","kagi","idx","i","type","plot","added"],"mappings":"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","sourcesContent":["\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { line, curveStepBefore } from \"d3-shape\";\n\nimport GenericChartComponent from \"../GenericChartComponent\";\nimport { getAxisCanvas } from \"../GenericComponent\";\nimport { isDefined, isNotDefined } from \"../utils\";\n\nclass KagiSeries extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.renderSVG = this.renderSVG.bind(this);\n\t\tthis.drawOnCanvas = this.drawOnCanvas.bind(this);\n\t}\n\tdrawOnCanvas(ctx, moreProps) {\n\t\tconst { xAccessor } = moreProps;\n\n\t\tdrawOnCanvas(ctx, this.props, moreProps, xAccessor);\n\t}\n\trender() {\n\t\treturn <GenericChartComponent\n\t\t\tsvgDraw={this.renderSVG}\n\t\t\tcanvasToDraw={getAxisCanvas}\n\t\t\tcanvasDraw={this.drawOnCanvas}\n\t\t\tdrawOn={[\"pan\"]}\n\t\t/>;\n\t}\n\trenderSVG(moreProps) {\n\t\tconst { xAccessor } = moreProps;\n\t\tconst { xScale, chartConfig: { yScale }, plotData } = moreProps;\n\n\t\tconst { className, stroke, fill, strokeWidth } = this.props;\n\n\t\tconst paths = helper(plotData, xAccessor).map((each, i) => {\n\t\t\tconst dataSeries = line()\n\t\t\t\t.x((item) => xScale(item[0]))\n\t\t\t\t.y((item) => yScale(item[1]))\n\t\t\t\t.curve(curveStepBefore);\n\n\t\t\tdataSeries(each.plot);\n\n\t\t\treturn (<path key={i} d={dataSeries(each.plot)} className={each.type}\n\t\t\t\tstroke={stroke[each.type]} fill={fill[each.type]} strokeWidth={strokeWidth} />);\n\t\t});\n\t\treturn (\n\t\t\t<g className={className}>\n\t\t\t\t{paths}\n\t\t\t</g>\n\t\t);\n\t}\n}\nKagiSeries.propTypes = {\n\tclassName: PropTypes.string,\n\tstroke: PropTypes.object,\n\tfill: PropTypes.object,\n\tstrokeWidth: PropTypes.number.isRequired,\n};\n\nKagiSeries.defaultProps = {\n\tclassName: \"react-stockcharts-kagi\",\n\tstrokeWidth: 2,\n\tstroke: {\n\t\tyang: \"#6BA583\",\n\t\tyin: \"#E60000\"\n\t},\n\tfill: {\n\t\tyang: \"none\",\n\t\tyin: \"none\"\n\t},\n\tcurrentValueStroke: \"#000000\",\n};\n\nfunction drawOnCanvas(ctx, props, moreProps, xAccessor) {\n\tconst { stroke, strokeWidth, currentValueStroke } = props;\n\tconst { xScale, chartConfig: { yScale }, plotData } = moreProps;\n\n\tconst paths = helper(plotData, xAccessor);\n\n\tlet begin = true;\n\n\tpaths.forEach((each) => {\n\t\tctx.strokeStyle = stroke[each.type];\n\t\tctx.lineWidth = strokeWidth;\n\n\t\tctx.beginPath();\n\t\tlet prevX;\n\t\teach.plot.forEach(d => {\n\t\t\tconst [x, y] = [xScale(d[0]), yScale(d[1])];\n\t\t\tif (begin) {\n\t\t\t\tctx.moveTo(x, y);\n\t\t\t\tbegin = false;\n\t\t\t} else {\n\t\t\t\tif (isDefined(prevX)) {\n\t\t\t\t\tctx.lineTo(prevX, y);\n\t\t\t\t}\n\t\t\t\tctx.lineTo(x, y);\n\t\t\t}\n\t\t\tprevX = x;\n\t\t\t// console.log(d);\n\n\t\t});\n\t\tctx.stroke();\n\t});\n\tconst lastPlot = paths[paths.length - 1].plot;\n\tconst last = lastPlot[lastPlot.length - 1];\n\tctx.beginPath();\n\t// ctx.strokeStyle = \"black\";\n\tctx.lineWidth = 1;\n\n\tconst [x, y1, y2] = [xScale(last[0]), yScale(last[2]), yScale(last[3])];\n\t// console.log(last, x, y);\n\tctx.moveTo(x, y1);\n\tctx.lineTo(x + 10, y1);\n\tctx.stroke();\n\n\tctx.beginPath();\n\tctx.strokeStyle = currentValueStroke;\n\tctx.moveTo(x - 10, y2);\n\tctx.lineTo(x, y2);\n\tctx.stroke();\n}\n\nfunction helper(plotData, xAccessor) {\n\tconst kagiLine = [];\n\tlet kagi = {};\n\tlet d = plotData[0];\n\tlet idx = xAccessor(d);\n\n\tfor (let i = 0; i < plotData.length; i++) {\n\t\td = plotData[i];\n\n\t\tif (isNotDefined(d.close)) continue;\n\t\tif (isNotDefined(kagi.type)) kagi.type = d.startAs;\n\t\tif (isNotDefined(kagi.plot)) kagi.plot = [];\n\n\t\tidx = xAccessor(d);\n\t\tkagi.plot.push([idx, d.open]);\n\n\t\tif (isDefined(d.changeTo)) {\n\t\t\tkagi.plot.push([idx, d.changePoint]);\n\t\t\tkagi.added = true;\n\t\t\tkagiLine.push(kagi);\n\n\t\t\tkagi = {\n\t\t\t\ttype: d.changeTo,\n\t\t\t\tplot: [],\n\t\t\t\tadded: false,\n\t\t\t};\n\t\t\tkagi.plot.push([idx, d.changePoint]);\n\t\t}\n\t}\n\n\tif (!kagi.added) {\n\t\tkagi.plot.push([idx, d.close, d.current, d.reverseAt]);\n\t\tkagiLine.push(kagi);\n\t}\n\n\t// console.log(d.reverseAt);\n\n\treturn kagiLine;\n}\n\nexport default KagiSeries;\n"]},"metadata":{},"sourceType":"script"}