{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nexports.renderSVG = renderSVG;\nexports.drawOnCanvas = drawOnCanvas;\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _utils = require(\"../utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/* eslint-disable react/prop-types */\n\n\nfunction renderSVG(props) {\n  var className = props.className;\n  var edge = helper(props);\n  if (edge === null) return null;\n  var line = void 0,\n      coordinateBase = void 0,\n      coordinate = void 0;\n\n  if ((0, _utils.isDefined)(edge.line)) {\n    line = _react2.default.createElement(\"line\", {\n      className: \"react-stockcharts-cross-hair\",\n      strokeOpacity: edge.line.opacity,\n      stroke: edge.line.stroke,\n      strokeDasharray: (0, _utils.getStrokeDasharray)(edge.line.strokeDasharray),\n      x1: edge.line.x1,\n      y1: edge.line.y1,\n      x2: edge.line.x2,\n      y2: edge.line.y2\n    });\n  }\n\n  if ((0, _utils.isDefined)(edge.coordinateBase)) {\n    var _edge$coordinateBase = edge.coordinateBase,\n        rectWidth = _edge$coordinateBase.rectWidth,\n        rectHeight = _edge$coordinateBase.rectHeight,\n        arrowWidth = _edge$coordinateBase.arrowWidth;\n    var path = edge.orient === \"left\" ? \"M0,0L0,\" + rectHeight + \"L\" + rectWidth + \",\" + rectHeight + \"L\" + (rectWidth + arrowWidth) + \",10L\" + rectWidth + \",0L0,0L0,0\" : \"M0,\" + arrowWidth + \"L\" + arrowWidth + \",\" + rectHeight + \"L\" + (rectWidth + arrowWidth) + \",\" + rectHeight + \"L\" + (rectWidth + arrowWidth) + \",0L\" + arrowWidth + \",0L0,\" + arrowWidth;\n    coordinateBase = edge.orient === \"left\" || edge.orient === \"right\" ? _react2.default.createElement(\"g\", {\n      key: 1,\n      transform: \"translate(\" + edge.coordinateBase.edgeXRect + \",\" + edge.coordinateBase.edgeYRect + \")\"\n    }, _react2.default.createElement(\"path\", {\n      d: path,\n      className: \"react-stockchart-text-background\",\n      height: rectHeight,\n      width: rectWidth,\n      stroke: edge.coordinateBase.stroke,\n      strokeLinejoin: \"miter\",\n      strokeOpacity: edge.coordinateBase.strokeOpacity,\n      strokeWidth: edge.coordinateBase.strokeWidth,\n      fill: edge.coordinateBase.fill,\n      fillOpacity: edge.coordinateBase.opacity\n    })) : _react2.default.createElement(\"rect\", {\n      key: 1,\n      className: \"react-stockchart-text-background\",\n      x: edge.coordinateBase.edgeXRect,\n      y: edge.coordinateBase.edgeYRect,\n      height: rectHeight,\n      width: rectWidth,\n      fill: edge.coordinateBase.fill,\n      opacity: edge.coordinateBase.opacity\n    });\n    coordinate = _react2.default.createElement(\"text\", {\n      key: 2,\n      x: edge.coordinate.edgeXText,\n      y: edge.coordinate.edgeYText,\n      textAnchor: edge.coordinate.textAnchor,\n      fontFamily: edge.coordinate.fontFamily,\n      fontSize: edge.coordinate.fontSize,\n      dy: \".32em\",\n      fill: edge.coordinate.textFill\n    }, edge.coordinate.displayCoordinate);\n  }\n\n  return _react2.default.createElement(\"g\", {\n    className: className\n  }, line, coordinateBase, coordinate);\n}\n/* eslint-enable react/prop-types */\n\n\nfunction helper(props) {\n  var displayCoordinate = props.coordinate,\n      show = props.show,\n      type = props.type,\n      orient = props.orient,\n      edgeAt = props.edgeAt,\n      hideLine = props.hideLine,\n      lineStrokeDasharray = props.lineStrokeDasharray;\n  var fill = props.fill,\n      opacity = props.opacity,\n      fontFamily = props.fontFamily,\n      fontSize = props.fontSize,\n      textFill = props.textFill,\n      lineStroke = props.lineStroke,\n      lineOpacity = props.lineOpacity;\n  var stroke = props.stroke,\n      strokeOpacity = props.strokeOpacity,\n      strokeWidth = props.strokeWidth;\n  var arrowWidth = props.arrowWidth,\n      rectWidth = props.rectWidth,\n      rectHeight = props.rectHeight,\n      rectRadius = props.rectRadius;\n  var x1 = props.x1,\n      y1 = props.y1,\n      x2 = props.x2,\n      y2 = props.y2,\n      dx = props.dx;\n  if (!show) return null;\n  var coordinateBase = void 0,\n      coordinate = void 0;\n\n  if ((0, _utils.isDefined)(displayCoordinate)) {\n    var textAnchor = \"middle\"; // TODO: Below it is necessary to implement logic for the possibility of alignment from the right or from the left.\n\n    var edgeXRect = void 0,\n        edgeYRect = void 0,\n        edgeXText = void 0,\n        edgeYText = void 0;\n\n    if (type === \"horizontal\") {\n      edgeXRect = dx + (orient === \"right\" ? edgeAt + 1 : edgeAt - rectWidth - 1);\n      edgeYRect = y1 - rectHeight / 2 - strokeWidth;\n      edgeXText = dx + (orient === \"right\" ? edgeAt + rectWidth / 2 : edgeAt - rectWidth / 2);\n      edgeYText = y1;\n    } else {\n      var dy = orient === \"bottom\" ? strokeWidth - 1 : -strokeWidth + 1;\n      edgeXRect = x1 - rectWidth / 2;\n      edgeYRect = (orient === \"bottom\" ? edgeAt : edgeAt - rectHeight) + dy;\n      edgeXText = x1;\n      edgeYText = (orient === \"bottom\" ? edgeAt + rectHeight / 2 : edgeAt - rectHeight / 2) + dy;\n    }\n\n    coordinateBase = {\n      edgeXRect: edgeXRect,\n      edgeYRect: edgeYRect,\n      rectHeight: rectHeight + strokeWidth,\n      rectWidth: rectWidth,\n      rectRadius: rectRadius,\n      fill: fill,\n      opacity: opacity,\n      arrowWidth: arrowWidth,\n      stroke: stroke,\n      strokeOpacity: strokeOpacity,\n      strokeWidth: strokeWidth\n    };\n    coordinate = {\n      edgeXText: edgeXText,\n      edgeYText: edgeYText,\n      textAnchor: textAnchor,\n      fontFamily: fontFamily,\n      fontSize: fontSize,\n      textFill: textFill,\n      displayCoordinate: displayCoordinate\n    };\n  }\n\n  var line = hideLine ? undefined : {\n    opacity: lineOpacity,\n    stroke: lineStroke,\n    strokeDasharray: lineStrokeDasharray,\n    x1: x1,\n    y1: y1,\n    x2: x2,\n    y2: y2\n  };\n  return {\n    coordinateBase: coordinateBase,\n    coordinate: coordinate,\n    line: line,\n    orient: orient\n  };\n}\n\nfunction drawOnCanvas(ctx, props) {\n  var fontSize = props.fontSize,\n      fontFamily = props.fontFamily;\n  ctx.font = fontSize + \"px \" + fontFamily;\n  ctx.textBaseline = \"middle\";\n  var width = Math.round(ctx.measureText(props.coordinate).width + 10);\n  var edge = helper(_extends({}, props, {\n    rectWidth: width\n  }));\n  if (edge === null) return;\n\n  if ((0, _utils.isDefined)(edge.line)) {\n    var dashArray = (0, _utils.getStrokeDasharray)(edge.line.strokeDasharray).split(\",\").map(function (d) {\n      return +d;\n    });\n    ctx.setLineDash(dashArray);\n    ctx.strokeStyle = (0, _utils.hexToRGBA)(edge.line.stroke, edge.line.opacity);\n    ctx.lineWidth = 1;\n    ctx.beginPath();\n    ctx.moveTo(edge.line.x1, edge.line.y1);\n    ctx.lineTo(edge.line.x2, edge.line.y2);\n    ctx.stroke();\n  }\n\n  ctx.setLineDash([]);\n\n  if ((0, _utils.isDefined)(edge.coordinateBase)) {\n    var _edge$coordinateBase2 = edge.coordinateBase,\n        rectWidth = _edge$coordinateBase2.rectWidth,\n        rectHeight = _edge$coordinateBase2.rectHeight,\n        rectRadius = _edge$coordinateBase2.rectRadius,\n        arrowWidth = _edge$coordinateBase2.arrowWidth;\n    ctx.fillStyle = (0, _utils.hexToRGBA)(edge.coordinateBase.fill, edge.coordinateBase.opacity);\n\n    if ((0, _utils.isDefined)(edge.coordinateBase.stroke)) {\n      ctx.strokeStyle = (0, _utils.hexToRGBA)(edge.coordinateBase.stroke, edge.coordinateBase.strokeOpacity);\n      ctx.lineWidth = edge.coordinateBase.strokeWidth;\n    }\n\n    var x = edge.coordinateBase.edgeXRect;\n    var y = edge.coordinateBase.edgeYRect;\n    var halfHeight = rectHeight / 2;\n    ctx.beginPath();\n\n    if (edge.orient === \"right\") {\n      x -= arrowWidth;\n      ctx.moveTo(x, y + halfHeight);\n      ctx.lineTo(x + arrowWidth, y);\n      ctx.lineTo(x + rectWidth + arrowWidth, y);\n      ctx.lineTo(x + rectWidth + arrowWidth, y + rectHeight);\n      ctx.lineTo(x + arrowWidth, y + rectHeight);\n      ctx.closePath();\n    } else if (edge.orient === \"left\") {\n      // x += arrowWidth;\n      ctx.moveTo(x, y);\n      ctx.lineTo(x + rectWidth, y);\n      ctx.lineTo(x + rectWidth + arrowWidth, y + halfHeight);\n      ctx.lineTo(x + rectWidth, y + rectHeight);\n      ctx.lineTo(x, y + rectHeight);\n      ctx.closePath();\n    } else {\n      // console.error(x, y, rectWidth, rectHeight)\n      if (rectRadius) {\n        roundRect(ctx, x, y, rectWidth, rectHeight, 3);\n      } else {\n        ctx.rect(x, y, rectWidth, rectHeight);\n      }\n    }\n\n    ctx.fill();\n\n    if ((0, _utils.isDefined)(edge.coordinateBase.stroke)) {\n      ctx.stroke();\n    }\n\n    ctx.fillStyle = edge.coordinate.textFill;\n    ctx.textAlign = edge.coordinate.textAnchor === \"middle\" ? \"center\" : edge.coordinate.textAnchor;\n    ctx.fillText(edge.coordinate.displayCoordinate, edge.coordinate.edgeXText, edge.coordinate.edgeYText);\n  }\n}\n\nfunction roundRect(ctx, x, y, width, height, radius) {\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.lineTo(x + width - radius, y);\n  ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n  ctx.lineTo(x + width, y + height - radius);\n  ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n  ctx.lineTo(x + radius, y + height);\n  ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n  ctx.lineTo(x, y + radius);\n  ctx.quadraticCurveTo(x, y, x + radius, y);\n  ctx.closePath();\n} // export default EdgeCoordinate;","map":{"version":3,"mappings":"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","names":["renderSVG","drawOnCanvas","props","className","edge","helper","line","coordinateBase","coordinate","_react2","strokeOpacity","opacity","stroke","strokeDasharray","x1","y1","x2","y2","rectWidth","rectHeight","arrowWidth","path","orient","key","transform","edgeXRect","edgeYRect","d","height","width","strokeLinejoin","strokeWidth","fill","fillOpacity","x","y","edgeXText","edgeYText","textAnchor","fontFamily","fontSize","dy","textFill","displayCoordinate","show","type","edgeAt","hideLine","lineStrokeDasharray","lineStroke","lineOpacity","rectRadius","dx","undefined","ctx","font","textBaseline","Math","round","measureText","dashArray","split","map","setLineDash","strokeStyle","lineWidth","beginPath","moveTo","lineTo","fillStyle","halfHeight","closePath","roundRect","rect","textAlign","fillText","radius","quadraticCurveTo"],"sources":["../../../src/lib/coordinates/EdgeCoordinateV3.js"],"sourcesContent":["\n\nimport React from \"react\";\n\nimport { hexToRGBA, isDefined, getStrokeDasharray } from \"../utils\";\n\n/* eslint-disable react/prop-types */\nexport function renderSVG(props) {\n\tconst { className } = props;\n\n\tconst edge = helper(props);\n\tif (edge === null) return null;\n\tlet line, coordinateBase, coordinate;\n\n\tif (isDefined(edge.line)) {\n\t\tline = (\n\t\t\t<line\n\t\t\t\tclassName=\"react-stockcharts-cross-hair\"\n\t\t\t\tstrokeOpacity={edge.line.opacity}\n\t\t\t\tstroke={edge.line.stroke}\n\t\t\t\tstrokeDasharray={getStrokeDasharray(edge.line.strokeDasharray)}\n\t\t\t\tx1={edge.line.x1}\n\t\t\t\ty1={edge.line.y1}\n\t\t\t\tx2={edge.line.x2}\n\t\t\t\ty2={edge.line.y2}\n\t\t\t/>\n\t\t);\n\t}\n\tif (isDefined(edge.coordinateBase)) {\n\t\tconst { rectWidth, rectHeight, arrowWidth } = edge.coordinateBase;\n\n\t\tconst path =\n\t\t\tedge.orient === \"left\"\n\t\t\t\t? `M0,0L0,${rectHeight}L${rectWidth},${rectHeight}L${rectWidth +\n\t\t\t\t\t  arrowWidth},10L${rectWidth},0L0,0L0,0`\n\t\t\t\t: `M0,${arrowWidth}L${arrowWidth},${rectHeight}L${rectWidth +\n\t\t\t\t\t  arrowWidth},${rectHeight}L${rectWidth +\n\t\t\t\t\t  arrowWidth},0L${arrowWidth},0L0,${arrowWidth}`;\n\n\t\tcoordinateBase =\n\t\t\tedge.orient === \"left\" || edge.orient === \"right\" ? (\n\t\t\t\t<g\n\t\t\t\t\tkey={1}\n\t\t\t\t\ttransform={`translate(${edge.coordinateBase.edgeXRect},${\n\t\t\t\t\t\tedge.coordinateBase.edgeYRect\n\t\t\t\t\t})`}\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td={path}\n\t\t\t\t\t\tclassName=\"react-stockchart-text-background\"\n\t\t\t\t\t\theight={rectHeight}\n\t\t\t\t\t\twidth={rectWidth}\n\t\t\t\t\t\tstroke={edge.coordinateBase.stroke}\n\t\t\t\t\t\tstrokeLinejoin=\"miter\"\n\t\t\t\t\t\tstrokeOpacity={edge.coordinateBase.strokeOpacity}\n\t\t\t\t\t\tstrokeWidth={edge.coordinateBase.strokeWidth}\n\t\t\t\t\t\tfill={edge.coordinateBase.fill}\n\t\t\t\t\t\tfillOpacity={edge.coordinateBase.opacity}\n\t\t\t\t\t/>\n\t\t\t\t</g>\n\t\t\t) : (\n\t\t\t\t<rect\n\t\t\t\t\tkey={1}\n\t\t\t\t\tclassName=\"react-stockchart-text-background\"\n\t\t\t\t\tx={edge.coordinateBase.edgeXRect}\n\t\t\t\t\ty={edge.coordinateBase.edgeYRect}\n\t\t\t\t\theight={rectHeight}\n\t\t\t\t\twidth={rectWidth}\n\t\t\t\t\tfill={edge.coordinateBase.fill}\n\t\t\t\t\topacity={edge.coordinateBase.opacity}\n\t\t\t\t/>\n\t\t\t);\n\n\t\tcoordinate = (\n\t\t\t<text\n\t\t\t\tkey={2}\n\t\t\t\tx={edge.coordinate.edgeXText}\n\t\t\t\ty={edge.coordinate.edgeYText}\n\t\t\t\ttextAnchor={edge.coordinate.textAnchor}\n\t\t\t\tfontFamily={edge.coordinate.fontFamily}\n\t\t\t\tfontSize={edge.coordinate.fontSize}\n\t\t\t\tdy=\".32em\"\n\t\t\t\tfill={edge.coordinate.textFill}\n\t\t\t>\n\t\t\t\t{edge.coordinate.displayCoordinate}\n\t\t\t</text>\n\t\t);\n\t}\n\treturn (\n\t\t<g className={className}>\n\t\t\t{line}\n\t\t\t{coordinateBase}\n\t\t\t{coordinate}\n\t\t</g>\n\t);\n}\n/* eslint-enable react/prop-types */\n\nfunction helper(props) {\n\tconst {\n\t\tcoordinate: displayCoordinate,\n\t\tshow,\n\t\ttype,\n\t\torient,\n\t\tedgeAt,\n\t\thideLine,\n\t\tlineStrokeDasharray\n\t} = props;\n\tconst {\n\t\tfill,\n\t\topacity,\n\t\tfontFamily,\n\t\tfontSize,\n\t\ttextFill,\n\t\tlineStroke,\n\t\tlineOpacity\n\t} = props;\n\tconst { stroke, strokeOpacity, strokeWidth } = props;\n\tconst { arrowWidth, rectWidth, rectHeight, rectRadius } = props;\n\tconst { x1, y1, x2, y2, dx } = props;\n\n\tif (!show) return null;\n\n\tlet coordinateBase, coordinate;\n\tif (isDefined(displayCoordinate)) {\n\t\tconst textAnchor = \"middle\"; // TODO: Below it is necessary to implement logic for the possibility of alignment from the right or from the left.\n\n\t\tlet edgeXRect, edgeYRect, edgeXText, edgeYText;\n\n\t\tif (type === \"horizontal\") {\n\t\t\tedgeXRect =\n\t\t\t\tdx + (orient === \"right\" ? edgeAt + 1 : edgeAt - rectWidth - 1);\n\t\t\tedgeYRect = y1 - rectHeight / 2 - strokeWidth;\n\t\t\tedgeXText =\n\t\t\t\tdx +\n\t\t\t\t(orient === \"right\"\n\t\t\t\t\t? edgeAt + rectWidth / 2\n\t\t\t\t\t: edgeAt - rectWidth / 2);\n\t\t\tedgeYText = y1;\n\t\t} else {\n\t\t\tconst dy = orient === \"bottom\" ? strokeWidth - 1 : -strokeWidth + 1;\n\t\t\tedgeXRect = x1 - rectWidth / 2;\n\t\t\tedgeYRect =\n\t\t\t\t(orient === \"bottom\" ? edgeAt : edgeAt - rectHeight) + dy;\n\t\t\tedgeXText = x1;\n\t\t\tedgeYText =\n\t\t\t\t(orient === \"bottom\"\n\t\t\t\t\t? edgeAt + rectHeight / 2\n\t\t\t\t\t: edgeAt - rectHeight / 2) + dy;\n\t\t}\n\n\t\tcoordinateBase = {\n\t\t\tedgeXRect,\n\t\t\tedgeYRect,\n\t\t\trectHeight: rectHeight + strokeWidth,\n\t\t\trectWidth,\n\t\t\trectRadius,\n\t\t\tfill,\n\t\t\topacity,\n\t\t\tarrowWidth,\n\t\t\tstroke,\n\t\t\tstrokeOpacity,\n\t\t\tstrokeWidth\n\t\t};\n\t\tcoordinate = {\n\t\t\tedgeXText,\n\t\t\tedgeYText,\n\t\t\ttextAnchor,\n\t\t\tfontFamily,\n\t\t\tfontSize,\n\t\t\ttextFill,\n\t\t\tdisplayCoordinate\n\t\t};\n\t}\n\n\tconst line = hideLine\n\t\t? undefined\n\t\t: {\n\t\t\topacity: lineOpacity,\n\t\t\tstroke: lineStroke,\n\t\t\tstrokeDasharray: lineStrokeDasharray,\n\t\t\tx1,\n\t\t\ty1,\n\t\t\tx2,\n\t\t\ty2\n\t\t};\n\n\treturn {\n\t\tcoordinateBase,\n\t\tcoordinate,\n\t\tline,\n\t\torient\n\t};\n}\n\nexport function drawOnCanvas(ctx, props) {\n\tconst { fontSize, fontFamily } = props;\n\n\tctx.font = `${fontSize}px ${fontFamily}`;\n\tctx.textBaseline = \"middle\";\n\tconst width = Math.round(ctx.measureText(props.coordinate).width + 10);\n\n\tconst edge = helper({ ...props, rectWidth: width });\n\n\tif (edge === null) return;\n\n\tif (isDefined(edge.line)) {\n\t\tconst dashArray = getStrokeDasharray(edge.line.strokeDasharray)\n\t\t\t.split(\",\")\n\t\t\t.map(d => +d);\n\t\tctx.setLineDash(dashArray);\n\t\tctx.strokeStyle = hexToRGBA(edge.line.stroke, edge.line.opacity);\n\t\tctx.lineWidth = 1;\n\t\tctx.beginPath();\n\t\tctx.moveTo(edge.line.x1, edge.line.y1);\n\t\tctx.lineTo(edge.line.x2, edge.line.y2);\n\t\tctx.stroke();\n\t}\n\n\tctx.setLineDash([]);\n\tif (isDefined(edge.coordinateBase)) {\n\t\tconst {\n\t\t\trectWidth,\n\t\t\trectHeight,\n\t\t\trectRadius,\n\t\t\tarrowWidth\n\t\t} = edge.coordinateBase;\n\n\t\tctx.fillStyle = hexToRGBA(\n\t\t\tedge.coordinateBase.fill,\n\t\t\tedge.coordinateBase.opacity\n\t\t);\n\t\tif (isDefined(edge.coordinateBase.stroke)) {\n\t\t\tctx.strokeStyle = hexToRGBA(\n\t\t\t\tedge.coordinateBase.stroke,\n\t\t\t\tedge.coordinateBase.strokeOpacity\n\t\t\t);\n\t\t\tctx.lineWidth = edge.coordinateBase.strokeWidth;\n\t\t}\n\n\t\tlet x = edge.coordinateBase.edgeXRect;\n\t\tconst y = edge.coordinateBase.edgeYRect;\n\t\tconst halfHeight = rectHeight / 2;\n\n\t\tctx.beginPath();\n\t\tif (edge.orient === \"right\") {\n\t\t\tx -= arrowWidth;\n\t\t\tctx.moveTo(x, y + halfHeight);\n\t\t\tctx.lineTo(x + arrowWidth, y);\n\t\t\tctx.lineTo(x + rectWidth + arrowWidth, y);\n\t\t\tctx.lineTo(x + rectWidth + arrowWidth, y + rectHeight);\n\t\t\tctx.lineTo(x + arrowWidth, y + rectHeight);\n\t\t\tctx.closePath();\n\t\t} else if (edge.orient === \"left\") {\n\t\t\t// x += arrowWidth;\n\t\t\tctx.moveTo(x, y);\n\t\t\tctx.lineTo(x + rectWidth, y);\n\t\t\tctx.lineTo(x + rectWidth + arrowWidth, y + halfHeight);\n\t\t\tctx.lineTo(x + rectWidth, y + rectHeight);\n\t\t\tctx.lineTo(x, y + rectHeight);\n\t\t\tctx.closePath();\n\t\t} else {\n\t\t\t// console.error(x, y, rectWidth, rectHeight)\n\t\t\tif (rectRadius) {\n\t\t\t\troundRect(ctx, x, y, rectWidth, rectHeight, 3);\n\t\t\t} else {\n\t\t\t\tctx.rect(x, y, rectWidth, rectHeight);\n\t\t\t}\n\t\t}\n\t\tctx.fill();\n\n\t\tif (isDefined(edge.coordinateBase.stroke)) {\n\t\t\tctx.stroke();\n\t\t}\n\n\t\tctx.fillStyle = edge.coordinate.textFill;\n\t\tctx.textAlign =\n\t\t\tedge.coordinate.textAnchor === \"middle\"\n\t\t\t\t? \"center\"\n\t\t\t\t: edge.coordinate.textAnchor;\n\t\tctx.fillText(\n\t\t\tedge.coordinate.displayCoordinate,\n\t\t\tedge.coordinate.edgeXText,\n\t\t\tedge.coordinate.edgeYText\n\t\t);\n\t}\n}\n\nfunction roundRect(ctx, x, y, width, height, radius) {\n\tctx.beginPath();\n\tctx.moveTo(x + radius, y);\n\tctx.lineTo(x + width - radius, y);\n\tctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\tctx.lineTo(x + width, y + height - radius);\n\tctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\tctx.lineTo(x + radius, y + height);\n\tctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\tctx.lineTo(x, y + radius);\n\tctx.quadraticCurveTo(x, y, x + radius, y);\n\tctx.closePath();\n}\n\n// export default EdgeCoordinate;\n"]},"metadata":{},"sourceType":"script"}