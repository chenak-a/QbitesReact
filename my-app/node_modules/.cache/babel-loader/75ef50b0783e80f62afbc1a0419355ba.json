{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _d3Array = require(\"d3-array\");\n\nvar _d3Collection = require(\"d3-collection\");\n\nvar _d3Scale = require(\"d3-scale\");\n\nvar _GenericChartComponent = require(\"../GenericChartComponent\");\n\nvar _GenericChartComponent2 = _interopRequireDefault(_GenericChartComponent);\n\nvar _GenericComponent = require(\"../GenericComponent\");\n\nvar _utils = require(\"../utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar VolumeProfileSeries = function (_Component) {\n  _inherits(VolumeProfileSeries, _Component);\n\n  function VolumeProfileSeries(props) {\n    _classCallCheck(this, VolumeProfileSeries);\n\n    var _this = _possibleConstructorReturn(this, (VolumeProfileSeries.__proto__ || Object.getPrototypeOf(VolumeProfileSeries)).call(this, props));\n\n    _this.renderSVG = _this.renderSVG.bind(_this);\n    _this.drawOnCanvas = _this.drawOnCanvas.bind(_this);\n    return _this;\n  }\n\n  _createClass(VolumeProfileSeries, [{\n    key: \"drawOnCanvas\",\n    value: function drawOnCanvas(ctx, moreProps) {\n      var xAccessor = moreProps.xAccessor,\n          width = moreProps.width;\n\n      var _helper = helper(this.props, moreProps, xAccessor, width),\n          rects = _helper.rects,\n          sessionBg = _helper.sessionBg;\n\n      _drawOnCanvas(ctx, this.props, rects, sessionBg);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _react2.default.createElement(_GenericChartComponent2.default, {\n        svgDraw: this.renderSVG,\n        canvasDraw: this.drawOnCanvas,\n        canvasToDraw: _GenericComponent.getAxisCanvas,\n        drawOn: [\"pan\"]\n      });\n    }\n  }, {\n    key: \"renderSVG\",\n    value: function renderSVG(moreProps) {\n      var _props = this.props,\n          className = _props.className,\n          opacity = _props.opacity;\n      var _props2 = this.props,\n          showSessionBackground = _props2.showSessionBackground,\n          sessionBackGround = _props2.sessionBackGround,\n          sessionBackGroundOpacity = _props2.sessionBackGroundOpacity;\n      var xAccessor = moreProps.xAccessor,\n          width = moreProps.width;\n\n      var _helper2 = helper(this.props, moreProps, xAccessor, width),\n          rects = _helper2.rects,\n          sessionBg = _helper2.sessionBg;\n\n      var sessionBgSvg = showSessionBackground ? sessionBg.map(function (d, idx) {\n        return _react2.default.createElement(\"rect\", _extends({\n          key: idx\n        }, d, {\n          opacity: sessionBackGroundOpacity,\n          fill: sessionBackGround\n        }));\n      }) : null;\n      return _react2.default.createElement(\"g\", {\n        className: className\n      }, sessionBgSvg, rects.map(function (d, i) {\n        return _react2.default.createElement(\"g\", {\n          key: i\n        }, _react2.default.createElement(\"rect\", {\n          x: d.x,\n          y: d.y,\n          width: d.w1,\n          height: d.height,\n          fill: d.fill1,\n          stroke: d.stroke1,\n          fillOpacity: opacity\n        }), _react2.default.createElement(\"rect\", {\n          x: d.x + d.w1,\n          y: d.y,\n          width: d.w2,\n          height: d.height,\n          fill: d.fill2,\n          stroke: d.stroke2,\n          fillOpacity: opacity\n        }));\n      }));\n    }\n  }]);\n\n  return VolumeProfileSeries;\n}(_react.Component);\n\nVolumeProfileSeries.propTypes = {\n  className: _propTypes2.default.string,\n  opacity: _propTypes2.default.number,\n  showSessionBackground: _propTypes2.default.bool,\n  sessionBackGround: _propTypes2.default.string,\n  sessionBackGroundOpacity: _propTypes2.default.number\n};\nVolumeProfileSeries.defaultProps = {\n  className: \"line \",\n  bins: 20,\n  opacity: 0.5,\n  maxProfileWidthPercent: 50,\n  fill: function fill(_ref) {\n    var type = _ref.type;\n    return type === \"up\" ? \"#6BA583\" : \"#FF0000\";\n  },\n  stroke: \"#FFFFFF\",\n  showSessionBackground: false,\n  sessionBackGround: \"#4682B4\",\n  sessionBackGroundOpacity: 0.3,\n  source: function source(d) {\n    return d.close;\n  },\n  volume: function volume(d) {\n    return d.volume;\n  },\n  absoluteChange: function absoluteChange(d) {\n    return d.absoluteChange;\n  },\n  bySession: false,\n\n  /* eslint-disable no-unused-vars */\n  sessionStart: function sessionStart(_ref2) {\n    var d = _ref2.d,\n        i = _ref2.i,\n        plotData = _ref2.plotData;\n    return i > 0 && plotData[i - 1].date.getMonth() !== d.date.getMonth();\n  },\n\n  /* eslint-enable no-unused-vars */\n  orient: \"left\",\n  // // fill: ({ type }) => { var c = type === \"up\" ? \"#6BA583\" : \"#FF0000\"; console.log(type, c); return c },\n  // stroke: ({ type }) =>  type === \"up\" ? \"#6BA583\" : \"#FF0000\",\n  // stroke: \"none\",\n  partialStartOK: true,\n  partialEndOK: true\n};\n\nfunction helper(props, moreProps, xAccessor, width) {\n  var realXScale = moreProps.xScale,\n      yScale = moreProps.chartConfig.yScale,\n      plotData = moreProps.plotData;\n  var sessionStart = props.sessionStart,\n      bySession = props.bySession,\n      partialStartOK = props.partialStartOK,\n      partialEndOK = props.partialEndOK;\n  var bins = props.bins,\n      maxProfileWidthPercent = props.maxProfileWidthPercent,\n      source = props.source,\n      volume = props.volume,\n      absoluteChange = props.absoluteChange,\n      orient = props.orient,\n      fill = props.fill,\n      stroke = props.stroke;\n  var sessionBuilder = (0, _utils.accumulatingWindow)().discardTillStart(!partialStartOK).discardTillEnd(!partialEndOK).accumulateTill(function (d, i) {\n    return sessionStart(_extends({\n      d: d,\n      i: i\n    }, moreProps));\n  }).accumulator(_utils.identity);\n  var dx = plotData.length > 1 ? realXScale(xAccessor(plotData[1])) - realXScale(xAccessor((0, _utils.head)(plotData))) : 0;\n  var sessions = bySession ? sessionBuilder(plotData) : [plotData];\n  var allRects = sessions.map(function (session) {\n    var begin = bySession ? realXScale(xAccessor((0, _utils.head)(session))) : 0;\n    var finish = bySession ? realXScale(xAccessor((0, _utils.last)(session))) : width;\n    var sessionWidth = finish - begin + dx; // console.log(session)\n\n    /* var histogram = d3.layout.histogram()\n    \t\t.value(source)\n    \t\t.bins(bins);*/\n\n    var histogram2 = (0, _d3Array.histogram)() // .domain(xScale.domain())\n    .value(source).thresholds(bins); // console.log(bins, histogram(session))\n    // console.log(bins, histogram2(session))\n\n    var rollup = (0, _d3Collection.nest)().key(function (d) {\n      return d.direction;\n    }).sortKeys(orient === \"right\" ? _d3Array.descending : _d3Array.ascending).rollup(function (leaves) {\n      return (0, _d3Array.sum)(leaves, function (d) {\n        return d.volume;\n      });\n    });\n    var values = histogram2(session); // console.log(\"values\", values)\n\n    var volumeInBins = values.map(function (arr) {\n      return arr.map(function (d) {\n        return absoluteChange(d) > 0 ? {\n          direction: \"up\",\n          volume: volume(d)\n        } : {\n          direction: \"down\",\n          volume: volume(d)\n        };\n      });\n    }).map(function (arr) {\n      return rollup.entries(arr);\n    }); // console.log(\"volumeInBins\", volumeInBins)\n\n    var volumeValues = volumeInBins.map(function (each) {\n      return (0, _d3Array.sum)(each.map(function (d) {\n        return d.value;\n      }));\n    }); // console.log(\"volumeValues\", volumeValues)\n\n    var base = function base(xScale) {\n      return (0, _utils.head)(xScale.range());\n    };\n\n    var _ref3 = orient === \"right\" ? [begin, begin + sessionWidth * maxProfileWidthPercent / 100] : [finish, finish - sessionWidth * (100 - maxProfileWidthPercent) / 100],\n        _ref4 = _slicedToArray(_ref3, 2),\n        start = _ref4[0],\n        end = _ref4[1];\n\n    var xScale = (0, _d3Scale.scaleLinear)().domain([0, (0, _d3Array.max)(volumeValues)]).range([start, end]); // console.log(xScale.domain())\n\n    var totalVolumes = volumeInBins.map(function (volumes) {\n      var totalVolume = (0, _d3Array.sum)(volumes, function (d) {\n        return d.value;\n      });\n      var totalVolumeX = xScale(totalVolume);\n      var width = base(xScale) - totalVolumeX;\n      var x = width < 0 ? totalVolumeX + width : totalVolumeX;\n      var ws = volumes.map(function (d) {\n        return {\n          type: d.key,\n          width: d.value * Math.abs(width) / totalVolume\n        };\n      });\n      return {\n        x: x,\n        ws: ws,\n        totalVolumeX: totalVolumeX\n      };\n    }); // console.log(\"totalVolumes\", totalVolumes)\n\n    var rects = (0, _d3Array.zip)(values, totalVolumes).map(function (_ref5) {\n      var _ref6 = _slicedToArray(_ref5, 2),\n          d = _ref6[0],\n          _ref6$ = _ref6[1],\n          x = _ref6$.x,\n          ws = _ref6$.ws;\n\n      var w1 = ws[0] || {\n        type: \"up\",\n        width: 0\n      };\n      var w2 = ws[1] || {\n        type: \"down\",\n        width: 0\n      };\n      return {\n        // y: yScale(d.x + d.dx),\n        y: yScale(d.x1),\n        // height: yScale(d.x - d.dx) - yScale(d.x),\n        height: yScale(d.x1) - yScale(d.x0),\n        x: x,\n        width: width,\n        w1: w1.width,\n        w2: w2.width,\n        stroke1: (0, _utils.functor)(stroke)(w1),\n        stroke2: (0, _utils.functor)(stroke)(w2),\n        fill1: (0, _utils.functor)(fill)(w1),\n        fill2: (0, _utils.functor)(fill)(w2)\n      };\n    }); // console.log(\"rects\", rects)\n\n    var sessionBg = {\n      x: begin,\n      y: (0, _utils.last)(rects).y,\n      height: (0, _utils.head)(rects).y - (0, _utils.last)(rects).y + (0, _utils.head)(rects).height,\n      width: sessionWidth\n    };\n    return {\n      rects: rects,\n      sessionBg: sessionBg\n    };\n  });\n  return {\n    rects: (0, _d3Array.merge)(allRects.map(function (d) {\n      return d.rects;\n    })),\n    sessionBg: allRects.map(function (d) {\n      return d.sessionBg;\n    })\n  };\n}\n\nfunction _drawOnCanvas(ctx, props, rects, sessionBg) {\n  var opacity = props.opacity,\n      sessionBackGround = props.sessionBackGround,\n      sessionBackGroundOpacity = props.sessionBackGroundOpacity,\n      showSessionBackground = props.showSessionBackground; // var { rects, sessionBg } = helper(props, xScale, yScale, plotData);\n\n  if (showSessionBackground) {\n    ctx.fillStyle = (0, _utils.hexToRGBA)(sessionBackGround, sessionBackGroundOpacity);\n    sessionBg.forEach(function (each) {\n      var x = each.x,\n          y = each.y,\n          height = each.height,\n          width = each.width;\n      ctx.beginPath();\n      ctx.rect(x, y, width, height);\n      ctx.closePath();\n      ctx.fill();\n    });\n  }\n\n  rects.forEach(function (each) {\n    var x = each.x,\n        y = each.y,\n        height = each.height,\n        w1 = each.w1,\n        w2 = each.w2,\n        stroke1 = each.stroke1,\n        stroke2 = each.stroke2,\n        fill1 = each.fill1,\n        fill2 = each.fill2;\n\n    if (w1 > 0) {\n      ctx.fillStyle = (0, _utils.hexToRGBA)(fill1, opacity);\n      if (stroke1 !== \"none\") ctx.strokeStyle = stroke1;\n      ctx.beginPath();\n      ctx.rect(x, y, w1, height);\n      ctx.closePath();\n      ctx.fill();\n      if (stroke1 !== \"none\") ctx.stroke();\n    }\n\n    if (w2 > 0) {\n      ctx.fillStyle = (0, _utils.hexToRGBA)(fill2, opacity);\n      if (stroke2 !== \"none\") ctx.strokeStyle = stroke2;\n      ctx.beginPath();\n      ctx.rect(x + w1, y, w2, height);\n      ctx.closePath();\n      ctx.fill();\n      if (stroke2 !== \"none\") ctx.stroke();\n    }\n  });\n}\n\nexports.default = VolumeProfileSeries;","map":{"version":3,"sources":["../../../src/lib/series/VolumeProfileSeries.js"],"names":["VolumeProfileSeries","ctx","moreProps","xAccessor","width","rects","sessionBg","helper","drawOnCanvas","className","opacity","showSessionBackground","sessionBackGround","sessionBackGroundOpacity","sessionBgSvg","d","number","bins","maxProfileWidthPercent","fill","type","stroke","source","volume","absoluteChange","bySession","sessionStart","i","plotData","orient","partialStartOK","partialEndOK","realXScale","yScale","props","sessionBuilder","dx","sessions","allRects","begin","finish","sessionWidth","histogram2","rollup","values","volumeInBins","direction","volumeValues","base","xScale","start","end","totalVolumes","totalVolume","totalVolumeX","x","ws","Math","w1","w2","y","height","stroke1","stroke2","fill1","fill2","each"],"mappings":"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","sourcesContent":["\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { ascending, descending, sum, max, merge, zip, histogram as d3Histogram } from \"d3-array\";\nimport { nest } from \"d3-collection\";\nimport { scaleLinear } from \"d3-scale\";\n\nimport GenericChartComponent from \"../GenericChartComponent\";\nimport { getAxisCanvas } from \"../GenericComponent\";\n\nimport { head, last, hexToRGBA, accumulatingWindow, identity, functor } from \"../utils\";\n\nclass VolumeProfileSeries extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.renderSVG = this.renderSVG.bind(this);\n\t\tthis.drawOnCanvas = this.drawOnCanvas.bind(this);\n\t}\n\tdrawOnCanvas(ctx, moreProps) {\n\t\tconst { xAccessor, width } = moreProps;\n\t\tconst { rects, sessionBg } = helper(this.props, moreProps, xAccessor, width);\n\n\t\tdrawOnCanvas(ctx, this.props, rects, sessionBg);\n\t}\n\trender() {\n\t\treturn <GenericChartComponent\n\t\t\tsvgDraw={this.renderSVG}\n\t\t\tcanvasDraw={this.drawOnCanvas}\n\t\t\tcanvasToDraw={getAxisCanvas}\n\t\t\tdrawOn={[\"pan\"]}\n\t\t/>;\n\t}\n\trenderSVG(moreProps) {\n\t\tconst { className, opacity } = this.props;\n\t\tconst { showSessionBackground, sessionBackGround, sessionBackGroundOpacity } = this.props;\n\n\t\tconst { xAccessor, width } = moreProps;\n\t\tconst { rects, sessionBg } = helper(this.props, moreProps, xAccessor, width);\n\n\t\tconst sessionBgSvg = showSessionBackground\n\t\t\t? sessionBg.map((d, idx) => <rect key={idx} {...d} opacity={sessionBackGroundOpacity} fill={sessionBackGround} />)\n\t\t\t: null;\n\n\t\treturn <g className={className}>\n\t\t\t{sessionBgSvg}\n\t\t\t{rects.map((d, i) => <g key={i}>\n\t\t\t\t<rect x={d.x} y={d.y}\n\t\t\t\t\twidth={d.w1} height={d.height}\n\t\t\t\t\tfill={d.fill1} stroke={d.stroke1} fillOpacity={opacity} />\n\t\t\t\t<rect x={d.x + d.w1} y={d.y}\n\t\t\t\t\twidth={d.w2} height={d.height}\n\t\t\t\t\tfill={d.fill2} stroke={d.stroke2} fillOpacity={opacity} />\n\t\t\t</g>)}\n\t\t</g>;\n\t}\n}\n\nVolumeProfileSeries.propTypes = {\n\tclassName: PropTypes.string,\n\topacity: PropTypes.number,\n\tshowSessionBackground: PropTypes.bool,\n\tsessionBackGround: PropTypes.string,\n\tsessionBackGroundOpacity: PropTypes.number,\n};\n\n\nVolumeProfileSeries.defaultProps = {\n\tclassName: \"line \",\n\tbins: 20,\n\topacity: 0.5,\n\tmaxProfileWidthPercent: 50,\n\tfill: ({ type }) => type === \"up\" ? \"#6BA583\" : \"#FF0000\",\n\tstroke: \"#FFFFFF\",\n\tshowSessionBackground: false,\n\tsessionBackGround: \"#4682B4\",\n\tsessionBackGroundOpacity: 0.3,\n\n\tsource: d => d.close,\n\tvolume: d => d.volume,\n\tabsoluteChange: d => d.absoluteChange,\n\tbySession: false,\n\t/* eslint-disable no-unused-vars */\n\tsessionStart: ({ d, i, plotData }) => i > 0 && plotData[i - 1].date.getMonth() !== d.date.getMonth(),\n\t/* eslint-enable no-unused-vars */\n\torient: \"left\",\n\t// // fill: ({ type }) => { var c = type === \"up\" ? \"#6BA583\" : \"#FF0000\"; console.log(type, c); return c },\n\t// stroke: ({ type }) =>  type === \"up\" ? \"#6BA583\" : \"#FF0000\",\n\t// stroke: \"none\",\n\tpartialStartOK: true,\n\tpartialEndOK: true,\n};\n\nfunction helper(props, moreProps, xAccessor, width) {\n\tconst { xScale: realXScale, chartConfig: { yScale }, plotData } = moreProps;\n\n\tconst { sessionStart, bySession, partialStartOK, partialEndOK } = props;\n\tconst { bins, maxProfileWidthPercent, source, volume, absoluteChange, orient, fill, stroke } = props;\n\n\tconst sessionBuilder = accumulatingWindow()\n\t\t.discardTillStart(!partialStartOK)\n\t\t.discardTillEnd(!partialEndOK)\n\t\t.accumulateTill((d, i) => {\n\t\t\treturn sessionStart({ d, i, ...moreProps });\n\t\t})\n\t\t.accumulator(identity);\n\n\tconst dx = plotData.length > 1 ? realXScale(xAccessor(plotData[1])) - realXScale(xAccessor(head(plotData))) : 0;\n\n\tconst sessions = bySession ? sessionBuilder(plotData) : [plotData];\n\n\tconst allRects = sessions.map(session => {\n\n\t\tconst begin = bySession ? realXScale(xAccessor(head(session))) : 0;\n\t\tconst finish = bySession ? realXScale(xAccessor(last(session))) : width;\n\t\tconst sessionWidth = finish - begin + dx;\n\n\t\t// console.log(session)\n\n\t\t/* var histogram = d3.layout.histogram()\n\t\t\t\t.value(source)\n\t\t\t\t.bins(bins);*/\n\n\t\tconst histogram2 = d3Histogram()\n\t\t\t// .domain(xScale.domain())\n\t\t\t.value(source)\n\t\t\t.thresholds(bins);\n\n\t\t// console.log(bins, histogram(session))\n\t\t// console.log(bins, histogram2(session))\n\t\tconst rollup = nest()\n\t\t\t.key(d => d.direction)\n\t\t\t.sortKeys(orient === \"right\" ? descending : ascending)\n\t\t\t.rollup(leaves => sum(leaves, d => d.volume));\n\n\t\tconst values = histogram2(session);\n\t\t// console.log(\"values\", values)\n\n\t\tconst volumeInBins = values\n\t\t\t.map(arr => arr.map(d => absoluteChange(d) > 0 ? { direction: \"up\", volume: volume(d) } : { direction: \"down\", volume: volume(d) }))\n\t\t\t.map(arr => rollup.entries(arr));\n\n\t\t// console.log(\"volumeInBins\", volumeInBins)\n\t\tconst volumeValues = volumeInBins\n\t\t\t.map(each => sum(each.map(d => d.value)));\n\n\t\t// console.log(\"volumeValues\", volumeValues)\n\t\tconst base = xScale => head(xScale.range());\n\n\t\tconst [start, end] = orient === \"right\"\n\t\t\t? [begin, begin + sessionWidth * maxProfileWidthPercent / 100]\n\t\t\t: [finish, finish - sessionWidth * (100 - maxProfileWidthPercent) / 100];\n\n\t\tconst xScale = scaleLinear()\n\t\t\t.domain([0, max(volumeValues)])\n\t\t\t.range([start, end]);\n\n\t\t// console.log(xScale.domain())\n\n\t\tconst totalVolumes = volumeInBins.map(volumes => {\n\n\t\t\tconst totalVolume = sum(volumes, d => d.value);\n\t\t\tconst totalVolumeX = xScale(totalVolume);\n\t\t\tconst width = base(xScale) - totalVolumeX;\n\t\t\tconst x = width < 0 ? totalVolumeX + width : totalVolumeX;\n\n\t\t\tconst ws = volumes.map(d => {\n\t\t\t\treturn {\n\t\t\t\t\ttype: d.key,\n\t\t\t\t\twidth: d.value * Math.abs(width) / totalVolume,\n\t\t\t\t};\n\t\t\t});\n\n\t\t\treturn { x, ws, totalVolumeX };\n\t\t});\n\t\t// console.log(\"totalVolumes\", totalVolumes)\n\n\t\tconst rects = zip(values, totalVolumes)\n\t\t\t.map(([d, { x, ws }]) => {\n\t\t\t\tconst w1 = ws[0] || { type: \"up\", width: 0 };\n\t\t\t\tconst w2 = ws[1] || { type: \"down\", width: 0 };\n\n\t\t\t\treturn {\n\t\t\t\t\t// y: yScale(d.x + d.dx),\n\t\t\t\t\ty: yScale(d.x1),\n\t\t\t\t\t// height: yScale(d.x - d.dx) - yScale(d.x),\n\t\t\t\t\theight: yScale(d.x1) - yScale(d.x0),\n\t\t\t\t\tx,\n\t\t\t\t\twidth,\n\t\t\t\t\tw1: w1.width,\n\t\t\t\t\tw2: w2.width,\n\t\t\t\t\tstroke1: functor(stroke)(w1),\n\t\t\t\t\tstroke2: functor(stroke)(w2),\n\t\t\t\t\tfill1: functor(fill)(w1),\n\t\t\t\t\tfill2: functor(fill)(w2),\n\t\t\t\t};\n\t\t\t});\n\n\t\t// console.log(\"rects\", rects)\n\n\t\tconst sessionBg = {\n\t\t\tx: begin,\n\t\t\ty: last(rects).y,\n\t\t\theight: head(rects).y - last(rects).y + head(rects).height,\n\t\t\twidth: sessionWidth,\n\t\t};\n\n\t\treturn { rects, sessionBg };\n\t});\n\n\treturn {\n\t\trects: merge(allRects.map(d => d.rects)),\n\t\tsessionBg: allRects.map(d => d.sessionBg),\n\t};\n}\n\n\nfunction drawOnCanvas(ctx, props, rects, sessionBg) {\n\tconst { opacity, sessionBackGround, sessionBackGroundOpacity, showSessionBackground } = props;\n\n\t// var { rects, sessionBg } = helper(props, xScale, yScale, plotData);\n\n\tif (showSessionBackground) {\n\t\tctx.fillStyle = hexToRGBA(sessionBackGround, sessionBackGroundOpacity);\n\n\t\tsessionBg.forEach(each => {\n\t\t\tconst { x, y, height, width } = each;\n\n\t\t\tctx.beginPath();\n\t\t\tctx.rect(x, y, width, height);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t});\n\t}\n\n\trects.forEach(each => {\n\t\tconst { x, y, height, w1, w2, stroke1, stroke2, fill1, fill2 } = each;\n\n\n\t\tif (w1 > 0) {\n\t\t\tctx.fillStyle = hexToRGBA(fill1, opacity);\n\t\t\tif (stroke1 !== \"none\") ctx.strokeStyle = stroke1;\n\n\t\t\tctx.beginPath();\n\t\t\tctx.rect(x, y, w1, height);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\n\t\t\tif (stroke1 !== \"none\") ctx.stroke();\n\t\t}\n\n\t\tif (w2 > 0) {\n\t\t\tctx.fillStyle = hexToRGBA(fill2, opacity);\n\t\t\tif (stroke2 !== \"none\") ctx.strokeStyle = stroke2;\n\n\t\t\tctx.beginPath();\n\t\t\tctx.rect(x + w1, y, w2, height);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\n\t\t\tif (stroke2 !== \"none\") ctx.stroke();\n\t\t}\n\n\t});\n}\n\nexport default VolumeProfileSeries;\n"]},"metadata":{},"sourceType":"script"}