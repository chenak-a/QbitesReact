{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n/**\n * TODO: 4.0\n *\n * - Remove `dataSource`\n * - `size` not work with customizeInput\n * - CustomizeInput not feedback `ENTER` key since accessibility enhancement\n */\n\nimport * as React from 'react';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport classNames from 'classnames';\nimport omit from \"rc-util/es/omit\";\nimport Select from '../select';\nimport { ConfigConsumer } from '../config-provider';\nimport devWarning from '../_util/devWarning';\nimport { isValidElement } from '../_util/reactNode';\nvar Option = Select.Option;\n\nfunction isSelectOptionOrSelectOptGroup(child) {\n  return child && child.type && (child.type.isSelectOption || child.type.isSelectOptGroup);\n}\n\nvar AutoComplete = function AutoComplete(props, ref) {\n  var customizePrefixCls = props.prefixCls,\n      className = props.className,\n      children = props.children,\n      dataSource = props.dataSource;\n  var childNodes = toArray(children); // ============================= Input =============================\n\n  var customizeInput;\n\n  if (childNodes.length === 1 && isValidElement(childNodes[0]) && !isSelectOptionOrSelectOptGroup(childNodes[0])) {\n    var _childNodes = _slicedToArray(childNodes, 1);\n\n    customizeInput = _childNodes[0];\n  }\n\n  var getInputElement = customizeInput ? function () {\n    return customizeInput;\n  } : undefined; // ============================ Options ============================\n\n  var optionChildren; // [Legacy] convert `children` or `dataSource` into option children\n\n  if (childNodes.length && isSelectOptionOrSelectOptGroup(childNodes[0])) {\n    optionChildren = children;\n  } else {\n    optionChildren = dataSource ? dataSource.map(function (item) {\n      if (isValidElement(item)) {\n        return item;\n      }\n\n      switch (_typeof(item)) {\n        case 'string':\n          return /*#__PURE__*/React.createElement(Option, {\n            key: item,\n            value: item\n          }, item);\n\n        case 'object':\n          {\n            var optionValue = item.value;\n            return /*#__PURE__*/React.createElement(Option, {\n              key: optionValue,\n              value: optionValue\n            }, item.text);\n          }\n\n        default:\n          throw new Error('AutoComplete[dataSource] only supports type `string[] | Object[]`.');\n      }\n    }) : [];\n  } // ============================ Warning ============================\n\n\n  React.useEffect(function () {\n    devWarning(!('dataSource' in props), 'AutoComplete', '`dataSource` is deprecated, please use `options` instead.');\n    devWarning(!customizeInput || !('size' in props), 'AutoComplete', 'You need to control style self instead of setting `size` when using customize input.');\n  }, []);\n  return /*#__PURE__*/React.createElement(ConfigConsumer, null, function (_ref) {\n    var getPrefixCls = _ref.getPrefixCls;\n    var prefixCls = getPrefixCls('select', customizePrefixCls);\n    return /*#__PURE__*/React.createElement(Select, _extends({\n      ref: ref\n    }, omit(props, ['dataSource']), {\n      prefixCls: prefixCls,\n      className: classNames(\"\".concat(prefixCls, \"-auto-complete\"), className),\n      mode: Select.SECRET_COMBOBOX_MODE_DO_NOT_USE,\n      // Internal api\n      getInputElement: getInputElement\n    }), optionChildren);\n  });\n};\n\nvar RefAutoComplete = /*#__PURE__*/React.forwardRef(AutoComplete);\nRefAutoComplete.Option = Option;\nexport default RefAutoComplete;","map":{"version":3,"names":["_extends","_typeof","_slicedToArray","React","toArray","classNames","omit","Select","ConfigConsumer","devWarning","isValidElement","Option","isSelectOptionOrSelectOptGroup","child","type","isSelectOption","isSelectOptGroup","AutoComplete","props","ref","customizePrefixCls","prefixCls","className","children","dataSource","childNodes","customizeInput","length","_childNodes","getInputElement","undefined","optionChildren","map","item","createElement","key","value","optionValue","text","Error","useEffect","_ref","getPrefixCls","concat","mode","SECRET_COMBOBOX_MODE_DO_NOT_USE","RefAutoComplete","forwardRef"],"sources":["/home/chenak/QbitesReact/my-app/node_modules/antd/es/auto-complete/index.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * TODO: 4.0\n *\n * - Remove `dataSource`\n * - `size` not work with customizeInput\n * - CustomizeInput not feedback `ENTER` key since accessibility enhancement\n */\nimport * as React from 'react';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport classNames from 'classnames';\nimport omit from \"rc-util/es/omit\";\nimport Select from '../select';\nimport { ConfigConsumer } from '../config-provider';\nimport devWarning from '../_util/devWarning';\nimport { isValidElement } from '../_util/reactNode';\nvar Option = Select.Option;\n\nfunction isSelectOptionOrSelectOptGroup(child) {\n  return child && child.type && (child.type.isSelectOption || child.type.isSelectOptGroup);\n}\n\nvar AutoComplete = function AutoComplete(props, ref) {\n  var customizePrefixCls = props.prefixCls,\n      className = props.className,\n      children = props.children,\n      dataSource = props.dataSource;\n  var childNodes = toArray(children); // ============================= Input =============================\n\n  var customizeInput;\n\n  if (childNodes.length === 1 && isValidElement(childNodes[0]) && !isSelectOptionOrSelectOptGroup(childNodes[0])) {\n    var _childNodes = _slicedToArray(childNodes, 1);\n\n    customizeInput = _childNodes[0];\n  }\n\n  var getInputElement = customizeInput ? function () {\n    return customizeInput;\n  } : undefined; // ============================ Options ============================\n\n  var optionChildren; // [Legacy] convert `children` or `dataSource` into option children\n\n  if (childNodes.length && isSelectOptionOrSelectOptGroup(childNodes[0])) {\n    optionChildren = children;\n  } else {\n    optionChildren = dataSource ? dataSource.map(function (item) {\n      if (isValidElement(item)) {\n        return item;\n      }\n\n      switch (_typeof(item)) {\n        case 'string':\n          return /*#__PURE__*/React.createElement(Option, {\n            key: item,\n            value: item\n          }, item);\n\n        case 'object':\n          {\n            var optionValue = item.value;\n            return /*#__PURE__*/React.createElement(Option, {\n              key: optionValue,\n              value: optionValue\n            }, item.text);\n          }\n\n        default:\n          throw new Error('AutoComplete[dataSource] only supports type `string[] | Object[]`.');\n      }\n    }) : [];\n  } // ============================ Warning ============================\n\n\n  React.useEffect(function () {\n    devWarning(!('dataSource' in props), 'AutoComplete', '`dataSource` is deprecated, please use `options` instead.');\n    devWarning(!customizeInput || !('size' in props), 'AutoComplete', 'You need to control style self instead of setting `size` when using customize input.');\n  }, []);\n  return /*#__PURE__*/React.createElement(ConfigConsumer, null, function (_ref) {\n    var getPrefixCls = _ref.getPrefixCls;\n    var prefixCls = getPrefixCls('select', customizePrefixCls);\n    return /*#__PURE__*/React.createElement(Select, _extends({\n      ref: ref\n    }, omit(props, ['dataSource']), {\n      prefixCls: prefixCls,\n      className: classNames(\"\".concat(prefixCls, \"-auto-complete\"), className),\n      mode: Select.SECRET_COMBOBOX_MODE_DO_NOT_USE,\n      // Internal api\n      getInputElement: getInputElement\n    }), optionChildren);\n  });\n};\n\nvar RefAutoComplete = /*#__PURE__*/React.forwardRef(AutoComplete);\nRefAutoComplete.Option = Option;\nexport default RefAutoComplete;"],"mappings":"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"},"metadata":{},"sourceType":"module"}