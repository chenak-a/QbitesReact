{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _GenericChartComponent = require(\"../../GenericChartComponent\");\n\nvar _GenericChartComponent2 = _interopRequireDefault(_GenericChartComponent);\n\nvar _GenericComponent = require(\"../../GenericComponent\");\n\nvar _utils = require(\"../../utils\");\n\nvar _EdgeCoordinateV = require(\"../../coordinates/EdgeCoordinateV3\");\n\nvar _MouseCoordinateY = require(\"../../coordinates/MouseCoordinateY\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar InteractiveYCoordinate = function (_Component) {\n  _inherits(InteractiveYCoordinate, _Component);\n\n  function InteractiveYCoordinate(props) {\n    _classCallCheck(this, InteractiveYCoordinate);\n\n    var _this = _possibleConstructorReturn(this, (InteractiveYCoordinate.__proto__ || Object.getPrototypeOf(InteractiveYCoordinate)).call(this, props));\n\n    _this.renderSVG = _this.renderSVG.bind(_this);\n    _this.drawOnCanvas = _this.drawOnCanvas.bind(_this);\n    _this.isHover = _this.isHover.bind(_this);\n    return _this;\n  }\n\n  _createClass(InteractiveYCoordinate, [{\n    key: \"isHover\",\n    value: function isHover(moreProps) {\n      var onHover = this.props.onHover;\n\n      if ((0, _utils.isDefined)(onHover)) {\n        var values = helper(this.props, moreProps);\n        if (values == null) return false;\n        var x1 = values.x1,\n            x2 = values.x2,\n            y = values.y,\n            rect = values.rect;\n\n        var _moreProps$mouseXY = _slicedToArray(moreProps.mouseXY, 2),\n            mouseX = _moreProps$mouseXY[0],\n            mouseY = _moreProps$mouseXY[1];\n\n        if (mouseX >= rect.x && mouseX <= rect.x + this.width && mouseY >= rect.y && mouseY <= rect.y + rect.height) {\n          return true;\n        }\n\n        if (x1 <= mouseX && x2 >= mouseX && Math.abs(mouseY - y) < 4) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n  }, {\n    key: \"drawOnCanvas\",\n    value: function drawOnCanvas(ctx, moreProps) {\n      var _props = this.props,\n          bgFill = _props.bgFill,\n          bgOpacity = _props.bgOpacity,\n          textFill = _props.textFill,\n          fontFamily = _props.fontFamily,\n          fontSize = _props.fontSize,\n          fontStyle = _props.fontStyle,\n          fontWeight = _props.fontWeight,\n          stroke = _props.stroke,\n          strokeWidth = _props.strokeWidth,\n          strokeOpacity = _props.strokeOpacity,\n          strokeDasharray = _props.strokeDasharray,\n          text = _props.text,\n          textBox = _props.textBox,\n          edge = _props.edge;\n      var _props2 = this.props,\n          selected = _props2.selected,\n          hovering = _props2.hovering;\n      var values = helper(this.props, moreProps);\n      if (values == null) return;\n      var x1 = values.x1,\n          x2 = values.x2,\n          y = values.y,\n          rect = values.rect;\n      ctx.strokeStyle = (0, _utils.hexToRGBA)(stroke, strokeOpacity);\n      ctx.beginPath();\n\n      if (selected || hovering) {\n        ctx.lineWidth = strokeWidth + 1;\n      } else {\n        ctx.lineWidth = strokeWidth;\n      }\n\n      ctx.textBaseline = \"middle\";\n      ctx.textAlign = \"start\";\n      ctx.font = fontStyle + \" \" + fontWeight + \" \" + fontSize + \"px \" + fontFamily;\n      this.width = textBox.padding.left + ctx.measureText(text).width + textBox.padding.right + textBox.closeIcon.padding.left + textBox.closeIcon.width + textBox.closeIcon.padding.right;\n      ctx.setLineDash((0, _utils.getStrokeDasharrayCanvas)(strokeDasharray));\n      ctx.moveTo(x1, y);\n      ctx.lineTo(rect.x, y);\n      ctx.moveTo(rect.x + this.width, y);\n      ctx.lineTo(x2, y);\n      ctx.stroke();\n      ctx.setLineDash([]);\n      ctx.fillStyle = (0, _utils.hexToRGBA)(bgFill, bgOpacity);\n      ctx.fillRect(rect.x, rect.y, this.width, rect.height);\n      ctx.strokeRect(rect.x, rect.y, this.width, rect.height);\n      ctx.fillStyle = textFill;\n      ctx.beginPath();\n      ctx.fillText(text, rect.x + 10, y);\n\n      var newEdge = _extends({}, edge, {\n        textFill: textFill,\n        fontFamily: fontFamily,\n        fontSize: fontSize,\n        opacity: bgOpacity\n      });\n\n      var yValue = edge.displayFormat(this.props.yValue);\n      var yCoord = (0, _MouseCoordinateY.getYCoordinate)(y, yValue, newEdge, moreProps);\n      (0, _EdgeCoordinateV.drawOnCanvas)(ctx, yCoord);\n    }\n  }, {\n    key: \"renderSVG\",\n    value: function renderSVG() {\n      throw new Error(\"svg not implemented\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var interactiveCursorClass = this.props.interactiveCursorClass;\n      var _props3 = this.props,\n          onHover = _props3.onHover,\n          onUnHover = _props3.onUnHover;\n      var _props4 = this.props,\n          onDragStart = _props4.onDragStart,\n          onDrag = _props4.onDrag,\n          onDragComplete = _props4.onDragComplete;\n      return _react2.default.createElement(_GenericChartComponent2.default, {\n        clip: false,\n        xxxyyy: true,\n        isHover: this.isHover,\n        svgDraw: this.renderSVG,\n        canvasToDraw: _GenericComponent.getMouseCanvas,\n        canvasDraw: this.drawOnCanvas,\n        interactiveCursorClass: interactiveCursorClass\n        /* selected={selected} */\n        ,\n        enableDragOnHover: true,\n        onDragStart: onDragStart,\n        onDrag: onDrag,\n        onDragComplete: onDragComplete,\n        onHover: onHover,\n        onUnHover: onUnHover,\n        drawOn: [\"mousemove\", \"mouseleave\", \"pan\", \"drag\"]\n      });\n    }\n  }]);\n\n  return InteractiveYCoordinate;\n}(_react.Component);\n\nfunction helper(props, moreProps) {\n  var yValue = props.yValue,\n      textBox = props.textBox;\n  var _moreProps$chartConfi = moreProps.chartConfig,\n      width = _moreProps$chartConfi.width,\n      yScale = _moreProps$chartConfi.yScale,\n      height = _moreProps$chartConfi.height;\n  var y = Math.round(yScale(yValue));\n\n  if (y >= 0 && y <= height) {\n    var rect = {\n      x: textBox.left,\n      y: y - textBox.height / 2,\n      height: textBox.height\n    };\n    return {\n      x1: 0,\n      x2: width,\n      y: y,\n      rect: rect\n    };\n  }\n}\n\nInteractiveYCoordinate.propTypes = {\n  bgFill: _propTypes2.default.string.isRequired,\n  bgOpacity: _propTypes2.default.number.isRequired,\n  stroke: _propTypes2.default.string.isRequired,\n  strokeWidth: _propTypes2.default.number.isRequired,\n  strokeOpacity: _propTypes2.default.number.isRequired,\n  strokeDasharray: _propTypes2.default.string.isRequired,\n  textFill: _propTypes2.default.string.isRequired,\n  fontFamily: _propTypes2.default.string.isRequired,\n  fontSize: _propTypes2.default.number.isRequired,\n  fontWeight: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]).isRequired,\n  fontStyle: _propTypes2.default.string.isRequired,\n  text: _propTypes2.default.string.isRequired,\n  edge: _propTypes2.default.object.isRequired,\n  textBox: _propTypes2.default.object.isRequired,\n  yValue: _propTypes2.default.number.isRequired,\n  onDragStart: _propTypes2.default.func.isRequired,\n  onDrag: _propTypes2.default.func.isRequired,\n  onDragComplete: _propTypes2.default.func.isRequired,\n  onHover: _propTypes2.default.func,\n  onUnHover: _propTypes2.default.func,\n  defaultClassName: _propTypes2.default.string,\n  interactiveCursorClass: _propTypes2.default.string,\n  tolerance: _propTypes2.default.number.isRequired,\n  selected: _propTypes2.default.bool.isRequired,\n  hovering: _propTypes2.default.bool.isRequired\n};\nInteractiveYCoordinate.defaultProps = {\n  onDragStart: _utils.noop,\n  onDrag: _utils.noop,\n  onDragComplete: _utils.noop,\n  fontWeight: \"normal\",\n  // standard dev\n  strokeWidth: 1,\n  tolerance: 4,\n  selected: false,\n  hovering: false\n};\nexports.default = InteractiveYCoordinate;","map":{"version":3,"sources":["../../../../src/lib/interactive/components/InteractiveYCoordinate.js"],"names":["InteractiveYCoordinate","moreProps","onHover","values","helper","x1","x2","y","rect","mouseX","mouseY","Math","ctx","bgFill","bgOpacity","textFill","fontFamily","fontSize","fontStyle","fontWeight","stroke","strokeWidth","strokeOpacity","strokeDasharray","text","textBox","edge","selected","hovering","opacity","yValue","yCoord","interactiveCursorClass","onUnHover","onDragStart","onDrag","onDragComplete","props","width","yScale","height","x","defaultClassName","tolerance","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport GenericChartComponent from \"../../GenericChartComponent\";\nimport { getMouseCanvas } from \"../../GenericComponent\";\nimport { isDefined, noop, hexToRGBA, getStrokeDasharrayCanvas } from \"../../utils\";\nimport { drawOnCanvas } from \"../../coordinates/EdgeCoordinateV3\";\nimport { getYCoordinate } from \"../../coordinates/MouseCoordinateY\";\n\nclass InteractiveYCoordinate extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.renderSVG = this.renderSVG.bind(this);\n\t\tthis.drawOnCanvas = this.drawOnCanvas.bind(this);\n\t\tthis.isHover = this.isHover.bind(this);\n\t}\n\tisHover(moreProps) {\n\t\tconst { onHover } = this.props;\n\n\t\tif (isDefined(onHover)) {\n\t\t\tconst values = helper(this.props, moreProps);\n\t\t\tif (values == null) return false;\n\n\t\t\tconst { x1, x2, y, rect } = values;\n\t\t\tconst { mouseXY: [mouseX, mouseY] } = moreProps;\n\n\t\t\tif (\n\t\t\t\tmouseX >= rect.x\n\t\t\t\t&& mouseX <= rect.x + this.width\n\t\t\t\t&& mouseY >= rect.y\n\t\t\t\t&& mouseY <= rect.y + rect.height\n\t\t\t) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (\n\t\t\t\tx1 <= mouseX\n\t\t\t\t&& x2 >= mouseX\n\t\t\t\t&& Math.abs(mouseY - y) < 4\n\t\t\t) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\tdrawOnCanvas(ctx, moreProps) {\n\t\tconst {\n\t\t\tbgFill,\n\t\t\tbgOpacity,\n\n\t\t\ttextFill,\n\t\t\tfontFamily,\n\t\t\tfontSize,\n\n\t\t\tfontStyle,\n\t\t\tfontWeight,\n\t\t\tstroke,\n\t\t\tstrokeWidth,\n\t\t\tstrokeOpacity,\n\t\t\tstrokeDasharray,\n\t\t\ttext,\n\t\t\ttextBox,\n\t\t\tedge,\n\t\t} = this.props;\n\n\t\tconst { selected, hovering } = this.props;\n\n\t\tconst values = helper(this.props, moreProps);\n\t\tif (values == null) return;\n\n\t\tconst { x1, x2, y, rect } = values;\n\n\t\tctx.strokeStyle = hexToRGBA(stroke, strokeOpacity);\n\n\t\tctx.beginPath();\n\t\tif (selected || hovering) {\n\t\t\tctx.lineWidth = strokeWidth + 1;\n\t\t} else {\n\t\t\tctx.lineWidth = strokeWidth;\n\t\t}\n\t\tctx.textBaseline = \"middle\";\n\t\tctx.textAlign = \"start\";\n\t\tctx.font = `${fontStyle} ${fontWeight} ${fontSize}px ${fontFamily}`;\n\n\t\tthis.width = textBox.padding.left\n\t\t\t+ ctx.measureText(text).width\n\t\t\t+ textBox.padding.right\n\t\t\t+ textBox.closeIcon.padding.left\n\t\t\t+ textBox.closeIcon.width\n\t\t\t+ textBox.closeIcon.padding.right;\n\n\t\tctx.setLineDash(getStrokeDasharrayCanvas(strokeDasharray));\n\t\tctx.moveTo(x1, y);\n\t\tctx.lineTo(rect.x, y);\n\n\t\tctx.moveTo(rect.x + this.width, y);\n\t\tctx.lineTo(x2, y);\n\t\tctx.stroke();\n\n\t\tctx.setLineDash([]);\n\n\n\t\tctx.fillStyle = hexToRGBA(bgFill, bgOpacity);\n\n\t\tctx.fillRect(rect.x, rect.y, this.width, rect.height);\n\t\tctx.strokeRect(rect.x, rect.y, this.width, rect.height);\n\n\t\tctx.fillStyle = textFill;\n\n\t\tctx.beginPath();\n\t\tctx.fillText(text, rect.x + 10, y);\n\t\tconst newEdge = {\n\t\t\t...edge,\n\t\t\ttextFill,\n\t\t\tfontFamily,\n\t\t\tfontSize,\n\t\t\topacity: bgOpacity\n\t\t};\n\t\tconst yValue = edge.displayFormat(this.props.yValue);\n\t\tconst yCoord = getYCoordinate(y, yValue, newEdge, moreProps);\n\t\tdrawOnCanvas(ctx, yCoord);\n\t}\n\trenderSVG() {\n\t\tthrow new Error(\"svg not implemented\");\n\t}\n\trender() {\n\t\tconst { interactiveCursorClass } = this.props;\n\t\tconst { onHover, onUnHover } = this.props;\n\t\tconst { onDragStart, onDrag, onDragComplete } = this.props;\n\n\t\treturn (\n\t\t\t<GenericChartComponent\n\t\t\t\tclip={false}\n\t\t\t\txxxyyy\n\t\t\t\tisHover={this.isHover}\n\n\t\t\t\tsvgDraw={this.renderSVG}\n\t\t\t\tcanvasToDraw={getMouseCanvas}\n\t\t\t\tcanvasDraw={this.drawOnCanvas}\n\n\t\t\t\tinteractiveCursorClass={interactiveCursorClass}\n\t\t\t\t/* selected={selected} */\n\t\t\t\tenableDragOnHover\n\n\t\t\t\tonDragStart={onDragStart}\n\t\t\t\tonDrag={onDrag}\n\t\t\t\tonDragComplete={onDragComplete}\n\t\t\t\tonHover={onHover}\n\t\t\t\tonUnHover={onUnHover}\n\n\t\t\t\tdrawOn={[\"mousemove\", \"mouseleave\", \"pan\", \"drag\"]}\n\t\t\t/>\n\t\t);\n\t}\n}\n\nfunction helper(props, moreProps) {\n\tconst { yValue, textBox } = props;\n\n\tconst { chartConfig: { width, yScale, height } } = moreProps;\n\n\tconst y = Math.round(yScale(yValue));\n\n\tif (y >= 0 && y <= height) {\n\t\tconst rect = {\n\t\t\tx: textBox.left,\n\t\t\ty: y - textBox.height / 2,\n\t\t\theight: textBox.height,\n\t\t};\n\t\treturn {\n\t\t\tx1: 0,\n\t\t\tx2: width,\n\t\t\ty,\n\t\t\trect,\n\t\t};\n\t}\n\n}\n\nInteractiveYCoordinate.propTypes = {\n\tbgFill: PropTypes.string.isRequired,\n\tbgOpacity: PropTypes.number.isRequired,\n\n\tstroke: PropTypes.string.isRequired,\n\tstrokeWidth: PropTypes.number.isRequired,\n\tstrokeOpacity: PropTypes.number.isRequired,\n\tstrokeDasharray: PropTypes.string.isRequired,\n\n\ttextFill: PropTypes.string.isRequired,\n\tfontFamily: PropTypes.string.isRequired,\n\tfontSize: PropTypes.number.isRequired,\n\tfontWeight: PropTypes.oneOfType([\n\t\tPropTypes.number,\n\t\tPropTypes.string,\n\t]).isRequired,\n\tfontStyle: PropTypes.string.isRequired,\n\n\ttext: PropTypes.string.isRequired,\n\tedge: PropTypes.object.isRequired,\n\ttextBox: PropTypes.object.isRequired,\n\tyValue: PropTypes.number.isRequired,\n\n\tonDragStart: PropTypes.func.isRequired,\n\tonDrag: PropTypes.func.isRequired,\n\tonDragComplete: PropTypes.func.isRequired,\n\tonHover: PropTypes.func,\n\tonUnHover: PropTypes.func,\n\n\tdefaultClassName: PropTypes.string,\n\tinteractiveCursorClass: PropTypes.string,\n\n\ttolerance: PropTypes.number.isRequired,\n\tselected: PropTypes.bool.isRequired,\n\thovering: PropTypes.bool.isRequired,\n};\n\nInteractiveYCoordinate.defaultProps = {\n\tonDragStart: noop,\n\tonDrag: noop,\n\tonDragComplete: noop,\n\n\tfontWeight: \"normal\", // standard dev\n\n\tstrokeWidth: 1,\n\ttolerance: 4,\n\tselected: false,\n\thovering: false,\n};\n\nexport default InteractiveYCoordinate;"]},"metadata":{},"sourceType":"script"}