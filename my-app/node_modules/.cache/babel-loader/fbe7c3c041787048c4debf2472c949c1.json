{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nexports.getNewXY = getNewXY;\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _d3Array = require(\"d3-array\");\n\nvar _utils = require(\"../../utils\");\n\nvar _utils2 = require(\"../utils\");\n\nvar _ChartDataUtil = require(\"../../utils/ChartDataUtil\");\n\nvar _StraightLine = require(\"../components/StraightLine\");\n\nvar _StraightLine2 = _interopRequireDefault(_StraightLine);\n\nvar _ClickableCircle = require(\"../components/ClickableCircle\");\n\nvar _ClickableCircle2 = _interopRequireDefault(_ClickableCircle);\n\nvar _HoverTextNearMouse = require(\"../components/HoverTextNearMouse\");\n\nvar _HoverTextNearMouse2 = _interopRequireDefault(_HoverTextNearMouse);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar EachTrendLine = function (_Component) {\n  _inherits(EachTrendLine, _Component);\n\n  function EachTrendLine(props) {\n    _classCallCheck(this, EachTrendLine);\n\n    var _this = _possibleConstructorReturn(this, (EachTrendLine.__proto__ || Object.getPrototypeOf(EachTrendLine)).call(this, props));\n\n    _this.handleEdge1Drag = _this.handleEdge1Drag.bind(_this);\n    _this.handleEdge2Drag = _this.handleEdge2Drag.bind(_this);\n    _this.handleLineDragStart = _this.handleLineDragStart.bind(_this);\n    _this.handleLineDrag = _this.handleLineDrag.bind(_this);\n    _this.handleEdge1DragStart = _this.handleEdge1DragStart.bind(_this);\n    _this.handleEdge2DragStart = _this.handleEdge2DragStart.bind(_this);\n    _this.handleDragComplete = _this.handleDragComplete.bind(_this);\n    _this.handleHover = _this.handleHover.bind(_this);\n    _this.isHover = _utils2.isHover.bind(_this);\n    _this.saveNodeType = _utils2.saveNodeType.bind(_this);\n    _this.nodes = {};\n    _this.state = {\n      hover: false\n    };\n    return _this;\n  }\n\n  _createClass(EachTrendLine, [{\n    key: \"handleLineDragStart\",\n    value: function handleLineDragStart() {\n      var _props = this.props,\n          x1Value = _props.x1Value,\n          y1Value = _props.y1Value,\n          x2Value = _props.x2Value,\n          y2Value = _props.y2Value;\n      this.dragStart = {\n        x1Value: x1Value,\n        y1Value: y1Value,\n        x2Value: x2Value,\n        y2Value: y2Value\n      };\n    }\n  }, {\n    key: \"handleLineDrag\",\n    value: function handleLineDrag(moreProps) {\n      var _props2 = this.props,\n          index = _props2.index,\n          onDrag = _props2.onDrag;\n      var _dragStart = this.dragStart,\n          x1Value = _dragStart.x1Value,\n          y1Value = _dragStart.y1Value,\n          x2Value = _dragStart.x2Value,\n          y2Value = _dragStart.y2Value;\n      var xScale = moreProps.xScale,\n          yScale = moreProps.chartConfig.yScale,\n          xAccessor = moreProps.xAccessor,\n          fullData = moreProps.fullData;\n      var startPos = moreProps.startPos,\n          mouseXY = moreProps.mouseXY;\n      var x1 = xScale(x1Value);\n      var y1 = yScale(y1Value);\n      var x2 = xScale(x2Value);\n      var y2 = yScale(y2Value);\n      var dx = startPos[0] - mouseXY[0];\n      var dy = startPos[1] - mouseXY[1];\n      var newX1Value = (0, _ChartDataUtil.getXValue)(xScale, xAccessor, [x1 - dx, y1 - dy], fullData);\n      var newY1Value = yScale.invert(y1 - dy);\n      var newX2Value = (0, _ChartDataUtil.getXValue)(xScale, xAccessor, [x2 - dx, y2 - dy], fullData);\n      var newY2Value = yScale.invert(y2 - dy);\n      onDrag(index, {\n        x1Value: newX1Value,\n        y1Value: newY1Value,\n        x2Value: newX2Value,\n        y2Value: newY2Value\n      });\n    }\n  }, {\n    key: \"handleEdge1DragStart\",\n    value: function handleEdge1DragStart() {\n      this.setState({\n        anchor: \"edge2\"\n      });\n    }\n  }, {\n    key: \"handleEdge2DragStart\",\n    value: function handleEdge2DragStart() {\n      this.setState({\n        anchor: \"edge1\"\n      });\n    }\n  }, {\n    key: \"handleDragComplete\",\n    value: function handleDragComplete() {\n      var _props3;\n\n      this.setState({\n        anchor: undefined\n      });\n\n      (_props3 = this.props).onDragComplete.apply(_props3, arguments);\n    }\n  }, {\n    key: \"handleEdge1Drag\",\n    value: function handleEdge1Drag(moreProps) {\n      var _props4 = this.props,\n          index = _props4.index,\n          onDrag = _props4.onDrag;\n      var _props5 = this.props,\n          x2Value = _props5.x2Value,\n          y2Value = _props5.y2Value;\n\n      var _getNewXY = getNewXY(moreProps),\n          _getNewXY2 = _slicedToArray(_getNewXY, 2),\n          x1Value = _getNewXY2[0],\n          y1Value = _getNewXY2[1];\n\n      onDrag(index, {\n        x1Value: x1Value,\n        y1Value: y1Value,\n        x2Value: x2Value,\n        y2Value: y2Value\n      });\n    }\n  }, {\n    key: \"handleEdge2Drag\",\n    value: function handleEdge2Drag(moreProps) {\n      var _props6 = this.props,\n          index = _props6.index,\n          onDrag = _props6.onDrag;\n      var _props7 = this.props,\n          x1Value = _props7.x1Value,\n          y1Value = _props7.y1Value;\n\n      var _getNewXY3 = getNewXY(moreProps),\n          _getNewXY4 = _slicedToArray(_getNewXY3, 2),\n          x2Value = _getNewXY4[0],\n          y2Value = _getNewXY4[1];\n\n      onDrag(index, {\n        x1Value: x1Value,\n        y1Value: y1Value,\n        x2Value: x2Value,\n        y2Value: y2Value\n      });\n    }\n  }, {\n    key: \"handleHover\",\n    value: function handleHover(moreProps) {\n      if (this.state.hover !== moreProps.hovering) {\n        this.setState({\n          hover: moreProps.hovering\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _props8 = this.props,\n          x1Value = _props8.x1Value,\n          y1Value = _props8.y1Value,\n          x2Value = _props8.x2Value,\n          y2Value = _props8.y2Value,\n          type = _props8.type,\n          stroke = _props8.stroke,\n          strokeWidth = _props8.strokeWidth,\n          strokeOpacity = _props8.strokeOpacity,\n          strokeDasharray = _props8.strokeDasharray,\n          r = _props8.r,\n          edgeStrokeWidth = _props8.edgeStrokeWidth,\n          edgeFill = _props8.edgeFill,\n          edgeStroke = _props8.edgeStroke,\n          edgeInteractiveCursor = _props8.edgeInteractiveCursor,\n          lineInteractiveCursor = _props8.lineInteractiveCursor,\n          hoverText = _props8.hoverText,\n          selected = _props8.selected,\n          onDragComplete = _props8.onDragComplete;\n\n      var hoverTextEnabled = hoverText.enable,\n          hoverTextSelected = hoverText.selectedText,\n          hoverTextUnselected = hoverText.text,\n          restHoverTextProps = _objectWithoutProperties(hoverText, [\"enable\", \"selectedText\", \"text\"]);\n\n      var _state = this.state,\n          hover = _state.hover,\n          anchor = _state.anchor;\n      return _react2.default.createElement(\"g\", null, _react2.default.createElement(_StraightLine2.default, {\n        ref: this.saveNodeType(\"line\"),\n        selected: selected || hover,\n        onHover: this.handleHover,\n        onUnHover: this.handleHover,\n        x1Value: x1Value,\n        y1Value: y1Value,\n        x2Value: x2Value,\n        y2Value: y2Value,\n        type: type,\n        stroke: stroke,\n        strokeWidth: hover || selected ? strokeWidth + 1 : strokeWidth,\n        strokeOpacity: strokeOpacity,\n        strokeDasharray: strokeDasharray,\n        interactiveCursorClass: lineInteractiveCursor,\n        onDragStart: this.handleLineDragStart,\n        onDrag: this.handleLineDrag,\n        onDragComplete: onDragComplete\n      }), _react2.default.createElement(_ClickableCircle2.default, {\n        ref: this.saveNodeType(\"edge1\"),\n        show: selected || hover,\n        cx: x1Value,\n        cy: y1Value,\n        r: r,\n        fill: edgeFill,\n        stroke: anchor === \"edge1\" ? stroke : edgeStroke,\n        strokeWidth: edgeStrokeWidth,\n        strokeOpacity: 1,\n        interactiveCursorClass: edgeInteractiveCursor,\n        onDragStart: this.handleEdge1DragStart,\n        onDrag: this.handleEdge1Drag,\n        onDragComplete: this.handleDragComplete\n      }), _react2.default.createElement(_ClickableCircle2.default, {\n        ref: this.saveNodeType(\"edge2\"),\n        show: selected || hover,\n        cx: x2Value,\n        cy: y2Value,\n        r: r,\n        fill: edgeFill,\n        stroke: anchor === \"edge2\" ? stroke : edgeStroke,\n        strokeWidth: edgeStrokeWidth,\n        strokeOpacity: 1,\n        interactiveCursorClass: edgeInteractiveCursor,\n        onDragStart: this.handleEdge2DragStart,\n        onDrag: this.handleEdge2Drag,\n        onDragComplete: this.handleDragComplete\n      }), _react2.default.createElement(_HoverTextNearMouse2.default, _extends({\n        show: hoverTextEnabled && hover\n      }, restHoverTextProps, {\n        text: selected ? hoverTextSelected : hoverTextUnselected\n      })));\n    }\n  }]);\n\n  return EachTrendLine;\n}(_react.Component);\n\nfunction getNewXY(moreProps) {\n  var xScale = moreProps.xScale,\n      yScale = moreProps.chartConfig.yScale,\n      xAccessor = moreProps.xAccessor,\n      plotData = moreProps.plotData,\n      mouseXY = moreProps.mouseXY;\n  var mouseY = mouseXY[1];\n  var x = (0, _ChartDataUtil.getXValue)(xScale, xAccessor, mouseXY, plotData);\n\n  var _yScale$domain$slice$ = yScale.domain().slice().sort(_d3Array.ascending),\n      _yScale$domain$slice$2 = _slicedToArray(_yScale$domain$slice$, 2),\n      small = _yScale$domain$slice$2[0],\n      big = _yScale$domain$slice$2[1];\n\n  var y = yScale.invert(mouseY);\n  var newY = Math.min(Math.max(y, small), big);\n  return [x, newY];\n}\n\nEachTrendLine.propTypes = {\n  x1Value: _propTypes2.default.any.isRequired,\n  x2Value: _propTypes2.default.any.isRequired,\n  y1Value: _propTypes2.default.any.isRequired,\n  y2Value: _propTypes2.default.any.isRequired,\n  index: _propTypes2.default.number,\n  type: _propTypes2.default.oneOf([\"XLINE\", // extends from -Infinity to +Infinity\n  \"RAY\", // extends to +/-Infinity in one direction\n  \"LINE\"] // extends between the set bounds\n  ).isRequired,\n  onDrag: _propTypes2.default.func.isRequired,\n  onEdge1Drag: _propTypes2.default.func.isRequired,\n  onEdge2Drag: _propTypes2.default.func.isRequired,\n  onDragComplete: _propTypes2.default.func.isRequired,\n  onSelect: _propTypes2.default.func.isRequired,\n  onUnSelect: _propTypes2.default.func.isRequired,\n  r: _propTypes2.default.number.isRequired,\n  strokeOpacity: _propTypes2.default.number.isRequired,\n  defaultClassName: _propTypes2.default.string,\n  selected: _propTypes2.default.bool,\n  stroke: _propTypes2.default.string.isRequired,\n  strokeWidth: _propTypes2.default.number.isRequired,\n  strokeDasharray: _propTypes2.default.oneOf(_utils.strokeDashTypes),\n  edgeStrokeWidth: _propTypes2.default.number.isRequired,\n  edgeStroke: _propTypes2.default.string.isRequired,\n  edgeInteractiveCursor: _propTypes2.default.string.isRequired,\n  lineInteractiveCursor: _propTypes2.default.string.isRequired,\n  edgeFill: _propTypes2.default.string.isRequired,\n  hoverText: _propTypes2.default.object.isRequired\n};\nEachTrendLine.defaultProps = {\n  onDrag: _utils.noop,\n  onEdge1Drag: _utils.noop,\n  onEdge2Drag: _utils.noop,\n  onDragComplete: _utils.noop,\n  onSelect: _utils.noop,\n  onUnSelect: _utils.noop,\n  selected: false,\n  edgeStroke: \"#000000\",\n  edgeFill: \"#FFFFFF\",\n  edgeStrokeWidth: 2,\n  r: 5,\n  strokeWidth: 1,\n  strokeOpacity: 1,\n  strokeDasharray: \"Solid\",\n  hoverText: {\n    enable: false\n  }\n};\nexports.default = EachTrendLine;","map":{"version":3,"mappings":"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","names":["getNewXY","EachTrendLine","props","_classCallCheck","_this","handleEdge1Drag","bind","handleEdge2Drag","handleLineDragStart","handleLineDrag","handleEdge1DragStart","handleEdge2DragStart","handleDragComplete","handleHover","isHover","_utils2","saveNodeType","nodes","state","hover","x1Value","y1Value","x2Value","y2Value","dragStart","moreProps","index","onDrag","xScale","yScale","chartConfig","xAccessor","fullData","startPos","mouseXY","x1","y1","x2","y2","dx","dy","newX1Value","newY1Value","invert","newX2Value","newY2Value","setState","anchor","undefined","onDragComplete","hovering","type","stroke","strokeWidth","strokeOpacity","strokeDasharray","r","edgeStrokeWidth","edgeFill","edgeStroke","edgeInteractiveCursor","lineInteractiveCursor","hoverText","selected","hoverTextEnabled","enable","hoverTextSelected","selectedText","hoverTextUnselected","text","restHoverTextProps","_react2","ref","onHover","onUnHover","interactiveCursorClass","onDragStart","show","cx","cy","fill","plotData","mouseY","x","domain","slice","sort","small","big","y","newY","Math","min","max","propTypes","_propTypes2","any","isRequired","number","oneOf","func","onEdge1Drag","onEdge2Drag","onSelect","onUnSelect","defaultClassName","string","bool","object","defaultProps"],"sources":["../../../../src/lib/interactive/wrapper/EachTrendLine.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { ascending as d3Ascending } from \"d3-array\";\nimport { noop, strokeDashTypes } from \"../../utils\";\nimport { saveNodeType, isHover } from \"../utils\";\nimport { getXValue } from \"../../utils/ChartDataUtil\";\n\nimport StraightLine from \"../components/StraightLine\";\nimport ClickableCircle from \"../components/ClickableCircle\";\nimport HoverTextNearMouse from \"../components/HoverTextNearMouse\";\n\nclass EachTrendLine extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.handleEdge1Drag = this.handleEdge1Drag.bind(this);\n\t\tthis.handleEdge2Drag = this.handleEdge2Drag.bind(this);\n\t\tthis.handleLineDragStart = this.handleLineDragStart.bind(this);\n\t\tthis.handleLineDrag = this.handleLineDrag.bind(this);\n\n\t\tthis.handleEdge1DragStart = this.handleEdge1DragStart.bind(this);\n\t\tthis.handleEdge2DragStart = this.handleEdge2DragStart.bind(this);\n\n\t\tthis.handleDragComplete = this.handleDragComplete.bind(this);\n\n\t\tthis.handleHover = this.handleHover.bind(this);\n\n\t\tthis.isHover = isHover.bind(this);\n\t\tthis.saveNodeType = saveNodeType.bind(this);\n\t\tthis.nodes = {};\n\n\t\tthis.state = {\n\t\t\thover: false,\n\t\t};\n\t}\n\thandleLineDragStart() {\n\t\tconst {\n\t\t\tx1Value, y1Value,\n\t\t\tx2Value, y2Value,\n\t\t} = this.props;\n\n\t\tthis.dragStart = {\n\t\t\tx1Value, y1Value,\n\t\t\tx2Value, y2Value,\n\t\t};\n\t}\n\thandleLineDrag(moreProps) {\n\t\tconst { index, onDrag } = this.props;\n\n\t\tconst {\n\t\t\tx1Value, y1Value,\n\t\t\tx2Value, y2Value,\n\t\t} = this.dragStart;\n\n\t\tconst { xScale, chartConfig: { yScale }, xAccessor, fullData } = moreProps;\n\t\tconst { startPos, mouseXY } = moreProps;\n\n\t\tconst x1 = xScale(x1Value);\n\t\tconst y1 = yScale(y1Value);\n\t\tconst x2 = xScale(x2Value);\n\t\tconst y2 = yScale(y2Value);\n\n\t\tconst dx = startPos[0] - mouseXY[0];\n\t\tconst dy = startPos[1] - mouseXY[1];\n\n\t\tconst newX1Value = getXValue(xScale, xAccessor, [x1 - dx, y1 - dy], fullData);\n\t\tconst newY1Value = yScale.invert(y1 - dy);\n\t\tconst newX2Value = getXValue(xScale, xAccessor, [x2 - dx, y2 - dy], fullData);\n\t\tconst newY2Value = yScale.invert(y2 - dy);\n\n\t\tonDrag(index, {\n\t\t\tx1Value: newX1Value,\n\t\t\ty1Value: newY1Value,\n\t\t\tx2Value: newX2Value,\n\t\t\ty2Value: newY2Value,\n\t\t});\n\t}\n\thandleEdge1DragStart() {\n\t\tthis.setState({\n\t\t\tanchor: \"edge2\"\n\t\t});\n\t}\n\thandleEdge2DragStart() {\n\t\tthis.setState({\n\t\t\tanchor: \"edge1\"\n\t\t});\n\t}\n\thandleDragComplete(...rest) {\n\t\tthis.setState({\n\t\t\tanchor: undefined\n\t\t});\n\t\tthis.props.onDragComplete(...rest);\n\t}\n\thandleEdge1Drag(moreProps) {\n\t\tconst { index, onDrag } = this.props;\n\t\tconst {\n\t\t\tx2Value, y2Value,\n\t\t} = this.props;\n\n\t\tconst [x1Value, y1Value] = getNewXY(moreProps);\n\n\t\tonDrag(index, {\n\t\t\tx1Value,\n\t\t\ty1Value,\n\t\t\tx2Value,\n\t\t\ty2Value,\n\t\t});\n\t}\n\thandleEdge2Drag(moreProps) {\n\t\tconst { index, onDrag } = this.props;\n\t\tconst {\n\t\t\tx1Value, y1Value,\n\t\t} = this.props;\n\n\t\tconst [x2Value, y2Value] = getNewXY(moreProps);\n\n\t\tonDrag(index, {\n\t\t\tx1Value,\n\t\t\ty1Value,\n\t\t\tx2Value,\n\t\t\ty2Value,\n\t\t});\n\t}\n\thandleHover(moreProps) {\n\t\tif (this.state.hover !== moreProps.hovering) {\n\t\t\tthis.setState({\n\t\t\t\thover: moreProps.hovering\n\t\t\t});\n\t\t}\n\t}\n\trender() {\n\t\tconst {\n\t\t\tx1Value,\n\t\t\ty1Value,\n\t\t\tx2Value,\n\t\t\ty2Value,\n\t\t\ttype,\n\t\t\tstroke,\n\t\t\tstrokeWidth,\n\t\t\tstrokeOpacity,\n\t\t\tstrokeDasharray,\n\t\t\tr,\n\t\t\tedgeStrokeWidth,\n\t\t\tedgeFill,\n\t\t\tedgeStroke,\n\t\t\tedgeInteractiveCursor,\n\t\t\tlineInteractiveCursor,\n\t\t\thoverText,\n\t\t\tselected,\n\n\t\t\tonDragComplete,\n\t\t} = this.props;\n\n\t\tconst {\n\t\t\tenable: hoverTextEnabled,\n\t\t\tselectedText: hoverTextSelected,\n\t\t\ttext: hoverTextUnselected,\n\t\t\t...restHoverTextProps\n\t\t} = hoverText;\n\n\t\tconst { hover, anchor } = this.state;\n\n\t\treturn <g>\n\t\t\t<StraightLine\n\t\t\t\tref={this.saveNodeType(\"line\")}\n\t\t\t\tselected={selected || hover}\n\t\t\t\tonHover={this.handleHover}\n\t\t\t\tonUnHover={this.handleHover}\n\t\t\t\tx1Value={x1Value}\n\t\t\t\ty1Value={y1Value}\n\t\t\t\tx2Value={x2Value}\n\t\t\t\ty2Value={y2Value}\n\t\t\t\ttype={type}\n\t\t\t\tstroke={stroke}\n\t\t\t\tstrokeWidth={(hover || selected) ? strokeWidth + 1 : strokeWidth}\n\t\t\t\tstrokeOpacity={strokeOpacity}\n\t\t\t\tstrokeDasharray={strokeDasharray}\n\t\t\t\tinteractiveCursorClass={lineInteractiveCursor}\n\t\t\t\tonDragStart={this.handleLineDragStart}\n\t\t\t\tonDrag={this.handleLineDrag}\n\t\t\t\tonDragComplete={onDragComplete} />\n\t\t\t<ClickableCircle\n\t\t\t\tref={this.saveNodeType(\"edge1\")}\n\t\t\t\tshow={selected || hover}\n\t\t\t\tcx={x1Value}\n\t\t\t\tcy={y1Value}\n\t\t\t\tr={r}\n\t\t\t\tfill={edgeFill}\n\t\t\t\tstroke={anchor === \"edge1\" ? stroke : edgeStroke}\n\t\t\t\tstrokeWidth={edgeStrokeWidth}\n\t\t\t\tstrokeOpacity={1}\n\t\t\t\tinteractiveCursorClass={edgeInteractiveCursor}\n\t\t\t\tonDragStart={this.handleEdge1DragStart}\n\t\t\t\tonDrag={this.handleEdge1Drag}\n\t\t\t\tonDragComplete={this.handleDragComplete} />\n\t\t\t<ClickableCircle\n\t\t\t\tref={this.saveNodeType(\"edge2\")}\n\t\t\t\tshow={selected || hover}\n\t\t\t\tcx={x2Value}\n\t\t\t\tcy={y2Value}\n\t\t\t\tr={r}\n\t\t\t\tfill={edgeFill}\n\t\t\t\tstroke={anchor === \"edge2\" ? stroke : edgeStroke}\n\t\t\t\tstrokeWidth={edgeStrokeWidth}\n\t\t\t\tstrokeOpacity={1}\n\t\t\t\tinteractiveCursorClass={edgeInteractiveCursor}\n\t\t\t\tonDragStart={this.handleEdge2DragStart}\n\t\t\t\tonDrag={this.handleEdge2Drag}\n\t\t\t\tonDragComplete={this.handleDragComplete} />\n\t\t\t<HoverTextNearMouse\n\t\t\t\tshow={hoverTextEnabled && hover}\n\t\t\t\t{...restHoverTextProps}\n\t\t\t\ttext={selected ? hoverTextSelected : hoverTextUnselected}\n\t\t\t/>\n\t\t</g>;\n\t}\n}\n\nexport function getNewXY(moreProps) {\n\tconst { xScale, chartConfig: { yScale }, xAccessor, plotData, mouseXY } = moreProps;\n\tconst mouseY = mouseXY[1];\n\n\tconst x = getXValue(xScale, xAccessor, mouseXY, plotData);\n\n\tconst [small, big] = yScale.domain().slice().sort(d3Ascending);\n\tconst y = yScale.invert(mouseY);\n\tconst newY = Math.min(Math.max(y, small), big);\n\n\treturn [x, newY];\n}\n\nEachTrendLine.propTypes = {\n\tx1Value: PropTypes.any.isRequired,\n\tx2Value: PropTypes.any.isRequired,\n\ty1Value: PropTypes.any.isRequired,\n\ty2Value: PropTypes.any.isRequired,\n\n\tindex: PropTypes.number,\n\n\ttype: PropTypes.oneOf([\n\t\t\"XLINE\", // extends from -Infinity to +Infinity\n\t\t\"RAY\", // extends to +/-Infinity in one direction\n\t\t\"LINE\", // extends between the set bounds\n\t]).isRequired,\n\n\tonDrag: PropTypes.func.isRequired,\n\tonEdge1Drag: PropTypes.func.isRequired,\n\tonEdge2Drag: PropTypes.func.isRequired,\n\tonDragComplete: PropTypes.func.isRequired,\n\tonSelect: PropTypes.func.isRequired,\n\tonUnSelect: PropTypes.func.isRequired,\n\n\tr: PropTypes.number.isRequired,\n\tstrokeOpacity: PropTypes.number.isRequired,\n\tdefaultClassName: PropTypes.string,\n\n\tselected: PropTypes.bool,\n\n\tstroke: PropTypes.string.isRequired,\n\tstrokeWidth: PropTypes.number.isRequired,\n\tstrokeDasharray: PropTypes.oneOf(strokeDashTypes),\n\n\tedgeStrokeWidth: PropTypes.number.isRequired,\n\tedgeStroke: PropTypes.string.isRequired,\n\tedgeInteractiveCursor: PropTypes.string.isRequired,\n\tlineInteractiveCursor: PropTypes.string.isRequired,\n\tedgeFill: PropTypes.string.isRequired,\n\thoverText: PropTypes.object.isRequired,\n};\n\nEachTrendLine.defaultProps = {\n\tonDrag: noop,\n\tonEdge1Drag: noop,\n\tonEdge2Drag: noop,\n\tonDragComplete: noop,\n\tonSelect: noop,\n\tonUnSelect: noop,\n\n\tselected: false,\n\n\tedgeStroke: \"#000000\",\n\tedgeFill: \"#FFFFFF\",\n\tedgeStrokeWidth: 2,\n\tr: 5,\n\tstrokeWidth: 1,\n\tstrokeOpacity: 1,\n\tstrokeDasharray: \"Solid\",\n\thoverText: {\n\t\tenable: false,\n\t}\n};\n\nexport default EachTrendLine;"]},"metadata":{},"sourceType":"script"}