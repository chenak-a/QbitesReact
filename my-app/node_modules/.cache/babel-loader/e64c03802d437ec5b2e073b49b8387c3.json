{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport toChildrenArray from \"rc-util/es/Children/toArray\";\nimport warning from \"rc-util/es/warning\";\nimport * as React from 'react';\nimport FieldContext, { HOOK_MARK } from './FieldContext';\nimport { toArray } from './utils/typeUtil';\nimport { validateRules } from './utils/validateUtil';\nimport { containsNamePath, defaultGetValueFromEvent, getNamePath, getValue } from './utils/valueUtil';\n\nfunction requireUpdate(shouldUpdate, prev, next, prevValue, nextValue, info) {\n  if (typeof shouldUpdate === 'function') {\n    return shouldUpdate(prev, next, 'source' in info ? {\n      source: info.source\n    } : {});\n  }\n\n  return prevValue !== nextValue;\n} // We use Class instead of Hooks here since it will cost much code by using Hooks.\n\n\nvar Field = /*#__PURE__*/function (_React$Component) {\n  _inherits(Field, _React$Component);\n\n  var _super = _createSuper(Field); // ============================== Subscriptions ==============================\n\n\n  function Field(props) {\n    var _this;\n\n    _classCallCheck(this, Field);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      resetCount: 0\n    };\n    _this.cancelRegisterFunc = null;\n    _this.mounted = false;\n    /**\n     * Follow state should not management in State since it will async update by React.\n     * This makes first render of form can not get correct state value.\n     */\n\n    _this.touched = false;\n    /** Mark when touched & validated. Currently only used for `dependencies` */\n\n    _this.dirty = false;\n    _this.validatePromise = null;\n    _this.errors = [];\n\n    _this.cancelRegister = function () {\n      var _this$props = _this.props,\n          preserve = _this$props.preserve,\n          isListField = _this$props.isListField,\n          name = _this$props.name;\n\n      if (_this.cancelRegisterFunc) {\n        _this.cancelRegisterFunc(isListField, preserve, getNamePath(name));\n      }\n\n      _this.cancelRegisterFunc = null;\n    }; // ================================== Utils ==================================\n\n\n    _this.getNamePath = function () {\n      var _this$props2 = _this.props,\n          name = _this$props2.name,\n          fieldContext = _this$props2.fieldContext;\n      var _fieldContext$prefixN = fieldContext.prefixName,\n          prefixName = _fieldContext$prefixN === void 0 ? [] : _fieldContext$prefixN;\n      return name !== undefined ? [].concat(_toConsumableArray(prefixName), _toConsumableArray(name)) : [];\n    };\n\n    _this.getRules = function () {\n      var _this$props3 = _this.props,\n          _this$props3$rules = _this$props3.rules,\n          rules = _this$props3$rules === void 0 ? [] : _this$props3$rules,\n          fieldContext = _this$props3.fieldContext;\n      return rules.map(function (rule) {\n        if (typeof rule === 'function') {\n          return rule(fieldContext);\n        }\n\n        return rule;\n      });\n    };\n\n    _this.refresh = function () {\n      if (!_this.mounted) return;\n      /**\n       * Clean up current node.\n       */\n\n      _this.setState(function (_ref) {\n        var resetCount = _ref.resetCount;\n        return {\n          resetCount: resetCount + 1\n        };\n      });\n    }; // ========================= Field Entity Interfaces =========================\n    // Trigger by store update. Check if need update the component\n\n\n    _this.onStoreChange = function (prevStore, namePathList, info) {\n      var _this$props4 = _this.props,\n          shouldUpdate = _this$props4.shouldUpdate,\n          _this$props4$dependen = _this$props4.dependencies,\n          dependencies = _this$props4$dependen === void 0 ? [] : _this$props4$dependen,\n          onReset = _this$props4.onReset;\n      var store = info.store;\n\n      var namePath = _this.getNamePath();\n\n      var prevValue = _this.getValue(prevStore);\n\n      var curValue = _this.getValue(store);\n\n      var namePathMatch = namePathList && containsNamePath(namePathList, namePath); // `setFieldsValue` is a quick access to update related status\n\n      if (info.type === 'valueUpdate' && info.source === 'external' && prevValue !== curValue) {\n        _this.touched = true;\n        _this.dirty = true;\n        _this.validatePromise = null;\n        _this.errors = [];\n      }\n\n      switch (info.type) {\n        case 'reset':\n          if (!namePathList || namePathMatch) {\n            // Clean up state\n            _this.touched = false;\n            _this.dirty = false;\n            _this.validatePromise = null;\n            _this.errors = [];\n\n            if (onReset) {\n              onReset();\n            }\n\n            _this.refresh();\n\n            return;\n          }\n\n          break;\n\n        case 'setField':\n          {\n            if (namePathMatch) {\n              var data = info.data;\n\n              if ('touched' in data) {\n                _this.touched = data.touched;\n              }\n\n              if ('validating' in data && !('originRCField' in data)) {\n                _this.validatePromise = data.validating ? Promise.resolve([]) : null;\n              }\n\n              if ('errors' in data) {\n                _this.errors = data.errors || [];\n              }\n\n              _this.dirty = true;\n\n              _this.reRender();\n\n              return;\n            } // Handle update by `setField` with `shouldUpdate`\n\n\n            if (shouldUpdate && !namePath.length && requireUpdate(shouldUpdate, prevStore, store, prevValue, curValue, info)) {\n              _this.reRender();\n\n              return;\n            }\n\n            break;\n          }\n\n        case 'dependenciesUpdate':\n          {\n            /**\n             * Trigger when marked `dependencies` updated. Related fields will all update\n             */\n            var dependencyList = dependencies.map(getNamePath); // No need for `namePathMath` check and `shouldUpdate` check, since `valueUpdate` will be\n            // emitted earlier and they will work there\n            // If set it may cause unnecessary twice rerendering\n\n            if (dependencyList.some(function (dependency) {\n              return containsNamePath(info.relatedFields, dependency);\n            })) {\n              _this.reRender();\n\n              return;\n            }\n\n            break;\n          }\n\n        default:\n          // 1. If `namePath` exists in `namePathList`, means it's related value and should update\n          //      For example <List name=\"list\"><Field name={['list', 0]}></List>\n          //      If `namePathList` is [['list']] (List value update), Field should be updated\n          //      If `namePathList` is [['list', 0]] (Field value update), List shouldn't be updated\n          // 2.\n          //   2.1 If `dependencies` is set, `name` is not set and `shouldUpdate` is not set,\n          //       don't use `shouldUpdate`. `dependencies` is view as a shortcut if `shouldUpdate`\n          //       is not provided\n          //   2.2 If `shouldUpdate` provided, use customize logic to update the field\n          //       else to check if value changed\n          if (namePathMatch || (!dependencies.length || namePath.length || shouldUpdate) && requireUpdate(shouldUpdate, prevStore, store, prevValue, curValue, info)) {\n            _this.reRender();\n\n            return;\n          }\n\n          break;\n      }\n\n      if (shouldUpdate === true) {\n        _this.reRender();\n      }\n    };\n\n    _this.validateRules = function (options) {\n      // We should fixed namePath & value to avoid developer change then by form function\n      var namePath = _this.getNamePath();\n\n      var currentValue = _this.getValue(); // Force change to async to avoid rule OOD under renderProps field\n\n\n      var rootPromise = Promise.resolve().then(function () {\n        if (!_this.mounted) {\n          return [];\n        }\n\n        var _this$props5 = _this.props,\n            _this$props5$validate = _this$props5.validateFirst,\n            validateFirst = _this$props5$validate === void 0 ? false : _this$props5$validate,\n            messageVariables = _this$props5.messageVariables;\n\n        var _ref2 = options || {},\n            triggerName = _ref2.triggerName;\n\n        var filteredRules = _this.getRules();\n\n        if (triggerName) {\n          filteredRules = filteredRules.filter(function (rule) {\n            var validateTrigger = rule.validateTrigger;\n\n            if (!validateTrigger) {\n              return true;\n            }\n\n            var triggerList = toArray(validateTrigger);\n            return triggerList.includes(triggerName);\n          });\n        }\n\n        var promise = validateRules(namePath, currentValue, filteredRules, options, validateFirst, messageVariables);\n        promise.catch(function (e) {\n          return e;\n        }).then(function () {\n          var errors = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n          if (_this.validatePromise === rootPromise) {\n            _this.validatePromise = null;\n            _this.errors = errors;\n\n            _this.reRender();\n          }\n        });\n        return promise;\n      });\n      _this.validatePromise = rootPromise;\n      _this.dirty = true;\n      _this.errors = []; // Force trigger re-render since we need sync renderProps with new meta\n\n      _this.reRender();\n\n      return rootPromise;\n    };\n\n    _this.isFieldValidating = function () {\n      return !!_this.validatePromise;\n    };\n\n    _this.isFieldTouched = function () {\n      return _this.touched;\n    };\n\n    _this.isFieldDirty = function () {\n      return _this.dirty;\n    };\n\n    _this.getErrors = function () {\n      return _this.errors;\n    };\n\n    _this.isListField = function () {\n      return _this.props.isListField;\n    };\n\n    _this.isList = function () {\n      return _this.props.isList;\n    };\n\n    _this.isPreserve = function () {\n      return _this.props.preserve;\n    }; // ============================= Child Component =============================\n\n\n    _this.getMeta = function () {\n      // Make error & validating in cache to save perf\n      _this.prevValidating = _this.isFieldValidating();\n      var meta = {\n        touched: _this.isFieldTouched(),\n        validating: _this.prevValidating,\n        errors: _this.errors,\n        name: _this.getNamePath()\n      };\n      return meta;\n    }; // Only return validate child node. If invalidate, will do nothing about field.\n\n\n    _this.getOnlyChild = function (children) {\n      // Support render props\n      if (typeof children === 'function') {\n        var meta = _this.getMeta();\n\n        return _objectSpread(_objectSpread({}, _this.getOnlyChild(children(_this.getControlled(), meta, _this.props.fieldContext))), {}, {\n          isFunction: true\n        });\n      } // Filed element only\n\n\n      var childList = toChildrenArray(children);\n\n      if (childList.length !== 1 || ! /*#__PURE__*/React.isValidElement(childList[0])) {\n        return {\n          child: childList,\n          isFunction: false\n        };\n      }\n\n      return {\n        child: childList[0],\n        isFunction: false\n      };\n    }; // ============================== Field Control ==============================\n\n\n    _this.getValue = function (store) {\n      var getFieldsValue = _this.props.fieldContext.getFieldsValue;\n\n      var namePath = _this.getNamePath();\n\n      return getValue(store || getFieldsValue(true), namePath);\n    };\n\n    _this.getControlled = function () {\n      var childProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var _this$props6 = _this.props,\n          trigger = _this$props6.trigger,\n          validateTrigger = _this$props6.validateTrigger,\n          getValueFromEvent = _this$props6.getValueFromEvent,\n          normalize = _this$props6.normalize,\n          valuePropName = _this$props6.valuePropName,\n          getValueProps = _this$props6.getValueProps,\n          fieldContext = _this$props6.fieldContext;\n      var mergedValidateTrigger = validateTrigger !== undefined ? validateTrigger : fieldContext.validateTrigger;\n\n      var namePath = _this.getNamePath();\n\n      var getInternalHooks = fieldContext.getInternalHooks,\n          getFieldsValue = fieldContext.getFieldsValue;\n\n      var _getInternalHooks = getInternalHooks(HOOK_MARK),\n          dispatch = _getInternalHooks.dispatch;\n\n      var value = _this.getValue();\n\n      var mergedGetValueProps = getValueProps || function (val) {\n        return _defineProperty({}, valuePropName, val);\n      }; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n      var originTriggerFunc = childProps[trigger];\n\n      var control = _objectSpread(_objectSpread({}, childProps), mergedGetValueProps(value)); // Add trigger\n\n\n      control[trigger] = function () {\n        // Mark as touched\n        _this.touched = true;\n        _this.dirty = true;\n        var newValue;\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        if (getValueFromEvent) {\n          newValue = getValueFromEvent.apply(void 0, args);\n        } else {\n          newValue = defaultGetValueFromEvent.apply(void 0, [valuePropName].concat(args));\n        }\n\n        if (normalize) {\n          newValue = normalize(newValue, value, getFieldsValue(true));\n        }\n\n        dispatch({\n          type: 'updateValue',\n          namePath: namePath,\n          value: newValue\n        });\n\n        if (originTriggerFunc) {\n          originTriggerFunc.apply(void 0, args);\n        }\n      }; // Add validateTrigger\n\n\n      var validateTriggerList = toArray(mergedValidateTrigger || []);\n      validateTriggerList.forEach(function (triggerName) {\n        // Wrap additional function of component, so that we can get latest value from store\n        var originTrigger = control[triggerName];\n\n        control[triggerName] = function () {\n          if (originTrigger) {\n            originTrigger.apply(void 0, arguments);\n          } // Always use latest rules\n\n\n          var rules = _this.props.rules;\n\n          if (rules && rules.length) {\n            // We dispatch validate to root,\n            // since it will update related data with other field with same name\n            dispatch({\n              type: 'validateField',\n              namePath: namePath,\n              triggerName: triggerName\n            });\n          }\n        };\n      });\n      return control;\n    }; // Register on init\n\n\n    if (props.fieldContext) {\n      var getInternalHooks = props.fieldContext.getInternalHooks;\n\n      var _getInternalHooks2 = getInternalHooks(HOOK_MARK),\n          initEntityValue = _getInternalHooks2.initEntityValue;\n\n      initEntityValue(_assertThisInitialized(_this));\n    }\n\n    return _this;\n  }\n\n  _createClass(Field, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props7 = this.props,\n          shouldUpdate = _this$props7.shouldUpdate,\n          fieldContext = _this$props7.fieldContext;\n      this.mounted = true; // Register on init\n\n      if (fieldContext) {\n        var getInternalHooks = fieldContext.getInternalHooks;\n\n        var _getInternalHooks3 = getInternalHooks(HOOK_MARK),\n            registerField = _getInternalHooks3.registerField;\n\n        this.cancelRegisterFunc = registerField(this);\n      } // One more render for component in case fields not ready\n\n\n      if (shouldUpdate === true) {\n        this.reRender();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.cancelRegister();\n      this.mounted = false;\n    }\n  }, {\n    key: \"reRender\",\n    value: function reRender() {\n      if (!this.mounted) return;\n      this.forceUpdate();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var resetCount = this.state.resetCount;\n      var children = this.props.children;\n\n      var _this$getOnlyChild = this.getOnlyChild(children),\n          child = _this$getOnlyChild.child,\n          isFunction = _this$getOnlyChild.isFunction; // Not need to `cloneElement` since user can handle this in render function self\n\n\n      var returnChildNode;\n\n      if (isFunction) {\n        returnChildNode = child;\n      } else if ( /*#__PURE__*/React.isValidElement(child)) {\n        returnChildNode = /*#__PURE__*/React.cloneElement(child, this.getControlled(child.props));\n      } else {\n        warning(!child, '`children` of Field is not validate ReactElement.');\n        returnChildNode = child;\n      }\n\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        key: resetCount\n      }, returnChildNode);\n    }\n  }]);\n\n  return Field;\n}(React.Component);\n\nField.contextType = FieldContext;\nField.defaultProps = {\n  trigger: 'onChange',\n  valuePropName: 'value'\n};\n\nfunction WrapperField(_ref4) {\n  var name = _ref4.name,\n      restProps = _objectWithoutProperties(_ref4, [\"name\"]);\n\n  var fieldContext = React.useContext(FieldContext);\n  var namePath = name !== undefined ? getNamePath(name) : undefined;\n  var key = 'keep';\n\n  if (!restProps.isListField) {\n    key = \"_\".concat((namePath || []).join('_'));\n  } // Warning if it's a directly list field.\n  // We can still support multiple level field preserve.\n\n\n  if (process.env.NODE_ENV !== 'production' && restProps.preserve === false && restProps.isListField && namePath.length <= 1) {\n    warning(false, '`preserve` should not apply on Form.List fields.');\n  }\n\n  return /*#__PURE__*/React.createElement(Field, _extends({\n    key: key,\n    name: namePath\n  }, restProps, {\n    fieldContext: fieldContext\n  }));\n}\n\nexport default WrapperField;","map":{"version":3,"names":["_extends","_objectWithoutProperties","_defineProperty","_objectSpread","_toConsumableArray","_classCallCheck","_createClass","_assertThisInitialized","_inherits","_createSuper","toChildrenArray","warning","React","FieldContext","HOOK_MARK","toArray","validateRules","containsNamePath","defaultGetValueFromEvent","getNamePath","getValue","requireUpdate","shouldUpdate","prev","next","prevValue","nextValue","info","source","Field","_React$Component","_super","props","_this","call","state","resetCount","cancelRegisterFunc","mounted","touched","dirty","validatePromise","errors","cancelRegister","_this$props","preserve","isListField","name","_this$props2","fieldContext","_fieldContext$prefixN","prefixName","undefined","concat","getRules","_this$props3","_this$props3$rules","rules","map","rule","refresh","setState","_ref","onStoreChange","prevStore","namePathList","_this$props4","_this$props4$dependen","dependencies","onReset","store","namePath","curValue","namePathMatch","type","data","validating","Promise","resolve","reRender","length","dependencyList","some","dependency","relatedFields","options","currentValue","rootPromise","then","_this$props5","_this$props5$validate","validateFirst","messageVariables","_ref2","triggerName","filteredRules","filter","validateTrigger","triggerList","includes","promise","catch","e","arguments","isFieldValidating","isFieldTouched","isFieldDirty","getErrors","isList","isPreserve","getMeta","prevValidating","meta","getOnlyChild","children","getControlled","isFunction","childList","isValidElement","child","getFieldsValue","childProps","_this$props6","trigger","getValueFromEvent","normalize","valuePropName","getValueProps","mergedValidateTrigger","getInternalHooks","_getInternalHooks","dispatch","value","mergedGetValueProps","val","originTriggerFunc","control","newValue","_len","args","Array","_key","apply","validateTriggerList","forEach","originTrigger","_getInternalHooks2","initEntityValue","key","componentDidMount","_this$props7","_getInternalHooks3","registerField","componentWillUnmount","forceUpdate","render","_this$getOnlyChild","returnChildNode","cloneElement","createElement","Fragment","Component","contextType","defaultProps","WrapperField","_ref4","restProps","useContext","join","process","env","NODE_ENV"],"sources":["/home/chenak/QbitesReact/my-app/node_modules/rc-field-form/es/Field.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport toChildrenArray from \"rc-util/es/Children/toArray\";\nimport warning from \"rc-util/es/warning\";\nimport * as React from 'react';\nimport FieldContext, { HOOK_MARK } from './FieldContext';\nimport { toArray } from './utils/typeUtil';\nimport { validateRules } from './utils/validateUtil';\nimport { containsNamePath, defaultGetValueFromEvent, getNamePath, getValue } from './utils/valueUtil';\n\nfunction requireUpdate(shouldUpdate, prev, next, prevValue, nextValue, info) {\n  if (typeof shouldUpdate === 'function') {\n    return shouldUpdate(prev, next, 'source' in info ? {\n      source: info.source\n    } : {});\n  }\n\n  return prevValue !== nextValue;\n} // We use Class instead of Hooks here since it will cost much code by using Hooks.\n\n\nvar Field = /*#__PURE__*/function (_React$Component) {\n  _inherits(Field, _React$Component);\n\n  var _super = _createSuper(Field);\n\n  // ============================== Subscriptions ==============================\n  function Field(props) {\n    var _this;\n\n    _classCallCheck(this, Field);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      resetCount: 0\n    };\n    _this.cancelRegisterFunc = null;\n    _this.mounted = false;\n    /**\n     * Follow state should not management in State since it will async update by React.\n     * This makes first render of form can not get correct state value.\n     */\n\n    _this.touched = false;\n    /** Mark when touched & validated. Currently only used for `dependencies` */\n\n    _this.dirty = false;\n    _this.validatePromise = null;\n    _this.errors = [];\n\n    _this.cancelRegister = function () {\n      var _this$props = _this.props,\n          preserve = _this$props.preserve,\n          isListField = _this$props.isListField,\n          name = _this$props.name;\n\n      if (_this.cancelRegisterFunc) {\n        _this.cancelRegisterFunc(isListField, preserve, getNamePath(name));\n      }\n\n      _this.cancelRegisterFunc = null;\n    }; // ================================== Utils ==================================\n\n\n    _this.getNamePath = function () {\n      var _this$props2 = _this.props,\n          name = _this$props2.name,\n          fieldContext = _this$props2.fieldContext;\n      var _fieldContext$prefixN = fieldContext.prefixName,\n          prefixName = _fieldContext$prefixN === void 0 ? [] : _fieldContext$prefixN;\n      return name !== undefined ? [].concat(_toConsumableArray(prefixName), _toConsumableArray(name)) : [];\n    };\n\n    _this.getRules = function () {\n      var _this$props3 = _this.props,\n          _this$props3$rules = _this$props3.rules,\n          rules = _this$props3$rules === void 0 ? [] : _this$props3$rules,\n          fieldContext = _this$props3.fieldContext;\n      return rules.map(function (rule) {\n        if (typeof rule === 'function') {\n          return rule(fieldContext);\n        }\n\n        return rule;\n      });\n    };\n\n    _this.refresh = function () {\n      if (!_this.mounted) return;\n      /**\n       * Clean up current node.\n       */\n\n      _this.setState(function (_ref) {\n        var resetCount = _ref.resetCount;\n        return {\n          resetCount: resetCount + 1\n        };\n      });\n    }; // ========================= Field Entity Interfaces =========================\n    // Trigger by store update. Check if need update the component\n\n\n    _this.onStoreChange = function (prevStore, namePathList, info) {\n      var _this$props4 = _this.props,\n          shouldUpdate = _this$props4.shouldUpdate,\n          _this$props4$dependen = _this$props4.dependencies,\n          dependencies = _this$props4$dependen === void 0 ? [] : _this$props4$dependen,\n          onReset = _this$props4.onReset;\n      var store = info.store;\n\n      var namePath = _this.getNamePath();\n\n      var prevValue = _this.getValue(prevStore);\n\n      var curValue = _this.getValue(store);\n\n      var namePathMatch = namePathList && containsNamePath(namePathList, namePath); // `setFieldsValue` is a quick access to update related status\n\n      if (info.type === 'valueUpdate' && info.source === 'external' && prevValue !== curValue) {\n        _this.touched = true;\n        _this.dirty = true;\n        _this.validatePromise = null;\n        _this.errors = [];\n      }\n\n      switch (info.type) {\n        case 'reset':\n          if (!namePathList || namePathMatch) {\n            // Clean up state\n            _this.touched = false;\n            _this.dirty = false;\n            _this.validatePromise = null;\n            _this.errors = [];\n\n            if (onReset) {\n              onReset();\n            }\n\n            _this.refresh();\n\n            return;\n          }\n\n          break;\n\n        case 'setField':\n          {\n            if (namePathMatch) {\n              var data = info.data;\n\n              if ('touched' in data) {\n                _this.touched = data.touched;\n              }\n\n              if ('validating' in data && !('originRCField' in data)) {\n                _this.validatePromise = data.validating ? Promise.resolve([]) : null;\n              }\n\n              if ('errors' in data) {\n                _this.errors = data.errors || [];\n              }\n\n              _this.dirty = true;\n\n              _this.reRender();\n\n              return;\n            } // Handle update by `setField` with `shouldUpdate`\n\n\n            if (shouldUpdate && !namePath.length && requireUpdate(shouldUpdate, prevStore, store, prevValue, curValue, info)) {\n              _this.reRender();\n\n              return;\n            }\n\n            break;\n          }\n\n        case 'dependenciesUpdate':\n          {\n            /**\n             * Trigger when marked `dependencies` updated. Related fields will all update\n             */\n            var dependencyList = dependencies.map(getNamePath); // No need for `namePathMath` check and `shouldUpdate` check, since `valueUpdate` will be\n            // emitted earlier and they will work there\n            // If set it may cause unnecessary twice rerendering\n\n            if (dependencyList.some(function (dependency) {\n              return containsNamePath(info.relatedFields, dependency);\n            })) {\n              _this.reRender();\n\n              return;\n            }\n\n            break;\n          }\n\n        default:\n          // 1. If `namePath` exists in `namePathList`, means it's related value and should update\n          //      For example <List name=\"list\"><Field name={['list', 0]}></List>\n          //      If `namePathList` is [['list']] (List value update), Field should be updated\n          //      If `namePathList` is [['list', 0]] (Field value update), List shouldn't be updated\n          // 2.\n          //   2.1 If `dependencies` is set, `name` is not set and `shouldUpdate` is not set,\n          //       don't use `shouldUpdate`. `dependencies` is view as a shortcut if `shouldUpdate`\n          //       is not provided\n          //   2.2 If `shouldUpdate` provided, use customize logic to update the field\n          //       else to check if value changed\n          if (namePathMatch || (!dependencies.length || namePath.length || shouldUpdate) && requireUpdate(shouldUpdate, prevStore, store, prevValue, curValue, info)) {\n            _this.reRender();\n\n            return;\n          }\n\n          break;\n      }\n\n      if (shouldUpdate === true) {\n        _this.reRender();\n      }\n    };\n\n    _this.validateRules = function (options) {\n      // We should fixed namePath & value to avoid developer change then by form function\n      var namePath = _this.getNamePath();\n\n      var currentValue = _this.getValue(); // Force change to async to avoid rule OOD under renderProps field\n\n\n      var rootPromise = Promise.resolve().then(function () {\n        if (!_this.mounted) {\n          return [];\n        }\n\n        var _this$props5 = _this.props,\n            _this$props5$validate = _this$props5.validateFirst,\n            validateFirst = _this$props5$validate === void 0 ? false : _this$props5$validate,\n            messageVariables = _this$props5.messageVariables;\n\n        var _ref2 = options || {},\n            triggerName = _ref2.triggerName;\n\n        var filteredRules = _this.getRules();\n\n        if (triggerName) {\n          filteredRules = filteredRules.filter(function (rule) {\n            var validateTrigger = rule.validateTrigger;\n\n            if (!validateTrigger) {\n              return true;\n            }\n\n            var triggerList = toArray(validateTrigger);\n            return triggerList.includes(triggerName);\n          });\n        }\n\n        var promise = validateRules(namePath, currentValue, filteredRules, options, validateFirst, messageVariables);\n        promise.catch(function (e) {\n          return e;\n        }).then(function () {\n          var errors = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n          if (_this.validatePromise === rootPromise) {\n            _this.validatePromise = null;\n            _this.errors = errors;\n\n            _this.reRender();\n          }\n        });\n        return promise;\n      });\n      _this.validatePromise = rootPromise;\n      _this.dirty = true;\n      _this.errors = []; // Force trigger re-render since we need sync renderProps with new meta\n\n      _this.reRender();\n\n      return rootPromise;\n    };\n\n    _this.isFieldValidating = function () {\n      return !!_this.validatePromise;\n    };\n\n    _this.isFieldTouched = function () {\n      return _this.touched;\n    };\n\n    _this.isFieldDirty = function () {\n      return _this.dirty;\n    };\n\n    _this.getErrors = function () {\n      return _this.errors;\n    };\n\n    _this.isListField = function () {\n      return _this.props.isListField;\n    };\n\n    _this.isList = function () {\n      return _this.props.isList;\n    };\n\n    _this.isPreserve = function () {\n      return _this.props.preserve;\n    }; // ============================= Child Component =============================\n\n\n    _this.getMeta = function () {\n      // Make error & validating in cache to save perf\n      _this.prevValidating = _this.isFieldValidating();\n      var meta = {\n        touched: _this.isFieldTouched(),\n        validating: _this.prevValidating,\n        errors: _this.errors,\n        name: _this.getNamePath()\n      };\n      return meta;\n    }; // Only return validate child node. If invalidate, will do nothing about field.\n\n\n    _this.getOnlyChild = function (children) {\n      // Support render props\n      if (typeof children === 'function') {\n        var meta = _this.getMeta();\n\n        return _objectSpread(_objectSpread({}, _this.getOnlyChild(children(_this.getControlled(), meta, _this.props.fieldContext))), {}, {\n          isFunction: true\n        });\n      } // Filed element only\n\n\n      var childList = toChildrenArray(children);\n\n      if (childList.length !== 1 || ! /*#__PURE__*/React.isValidElement(childList[0])) {\n        return {\n          child: childList,\n          isFunction: false\n        };\n      }\n\n      return {\n        child: childList[0],\n        isFunction: false\n      };\n    }; // ============================== Field Control ==============================\n\n\n    _this.getValue = function (store) {\n      var getFieldsValue = _this.props.fieldContext.getFieldsValue;\n\n      var namePath = _this.getNamePath();\n\n      return getValue(store || getFieldsValue(true), namePath);\n    };\n\n    _this.getControlled = function () {\n      var childProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var _this$props6 = _this.props,\n          trigger = _this$props6.trigger,\n          validateTrigger = _this$props6.validateTrigger,\n          getValueFromEvent = _this$props6.getValueFromEvent,\n          normalize = _this$props6.normalize,\n          valuePropName = _this$props6.valuePropName,\n          getValueProps = _this$props6.getValueProps,\n          fieldContext = _this$props6.fieldContext;\n      var mergedValidateTrigger = validateTrigger !== undefined ? validateTrigger : fieldContext.validateTrigger;\n\n      var namePath = _this.getNamePath();\n\n      var getInternalHooks = fieldContext.getInternalHooks,\n          getFieldsValue = fieldContext.getFieldsValue;\n\n      var _getInternalHooks = getInternalHooks(HOOK_MARK),\n          dispatch = _getInternalHooks.dispatch;\n\n      var value = _this.getValue();\n\n      var mergedGetValueProps = getValueProps || function (val) {\n        return _defineProperty({}, valuePropName, val);\n      }; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n      var originTriggerFunc = childProps[trigger];\n\n      var control = _objectSpread(_objectSpread({}, childProps), mergedGetValueProps(value)); // Add trigger\n\n\n      control[trigger] = function () {\n        // Mark as touched\n        _this.touched = true;\n        _this.dirty = true;\n        var newValue;\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        if (getValueFromEvent) {\n          newValue = getValueFromEvent.apply(void 0, args);\n        } else {\n          newValue = defaultGetValueFromEvent.apply(void 0, [valuePropName].concat(args));\n        }\n\n        if (normalize) {\n          newValue = normalize(newValue, value, getFieldsValue(true));\n        }\n\n        dispatch({\n          type: 'updateValue',\n          namePath: namePath,\n          value: newValue\n        });\n\n        if (originTriggerFunc) {\n          originTriggerFunc.apply(void 0, args);\n        }\n      }; // Add validateTrigger\n\n\n      var validateTriggerList = toArray(mergedValidateTrigger || []);\n      validateTriggerList.forEach(function (triggerName) {\n        // Wrap additional function of component, so that we can get latest value from store\n        var originTrigger = control[triggerName];\n\n        control[triggerName] = function () {\n          if (originTrigger) {\n            originTrigger.apply(void 0, arguments);\n          } // Always use latest rules\n\n\n          var rules = _this.props.rules;\n\n          if (rules && rules.length) {\n            // We dispatch validate to root,\n            // since it will update related data with other field with same name\n            dispatch({\n              type: 'validateField',\n              namePath: namePath,\n              triggerName: triggerName\n            });\n          }\n        };\n      });\n      return control;\n    }; // Register on init\n\n\n    if (props.fieldContext) {\n      var getInternalHooks = props.fieldContext.getInternalHooks;\n\n      var _getInternalHooks2 = getInternalHooks(HOOK_MARK),\n          initEntityValue = _getInternalHooks2.initEntityValue;\n\n      initEntityValue(_assertThisInitialized(_this));\n    }\n\n    return _this;\n  }\n\n  _createClass(Field, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props7 = this.props,\n          shouldUpdate = _this$props7.shouldUpdate,\n          fieldContext = _this$props7.fieldContext;\n      this.mounted = true; // Register on init\n\n      if (fieldContext) {\n        var getInternalHooks = fieldContext.getInternalHooks;\n\n        var _getInternalHooks3 = getInternalHooks(HOOK_MARK),\n            registerField = _getInternalHooks3.registerField;\n\n        this.cancelRegisterFunc = registerField(this);\n      } // One more render for component in case fields not ready\n\n\n      if (shouldUpdate === true) {\n        this.reRender();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.cancelRegister();\n      this.mounted = false;\n    }\n  }, {\n    key: \"reRender\",\n    value: function reRender() {\n      if (!this.mounted) return;\n      this.forceUpdate();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var resetCount = this.state.resetCount;\n      var children = this.props.children;\n\n      var _this$getOnlyChild = this.getOnlyChild(children),\n          child = _this$getOnlyChild.child,\n          isFunction = _this$getOnlyChild.isFunction; // Not need to `cloneElement` since user can handle this in render function self\n\n\n      var returnChildNode;\n\n      if (isFunction) {\n        returnChildNode = child;\n      } else if ( /*#__PURE__*/React.isValidElement(child)) {\n        returnChildNode = /*#__PURE__*/React.cloneElement(child, this.getControlled(child.props));\n      } else {\n        warning(!child, '`children` of Field is not validate ReactElement.');\n        returnChildNode = child;\n      }\n\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        key: resetCount\n      }, returnChildNode);\n    }\n  }]);\n\n  return Field;\n}(React.Component);\n\nField.contextType = FieldContext;\nField.defaultProps = {\n  trigger: 'onChange',\n  valuePropName: 'value'\n};\n\nfunction WrapperField(_ref4) {\n  var name = _ref4.name,\n      restProps = _objectWithoutProperties(_ref4, [\"name\"]);\n\n  var fieldContext = React.useContext(FieldContext);\n  var namePath = name !== undefined ? getNamePath(name) : undefined;\n  var key = 'keep';\n\n  if (!restProps.isListField) {\n    key = \"_\".concat((namePath || []).join('_'));\n  } // Warning if it's a directly list field.\n  // We can still support multiple level field preserve.\n\n\n  if (process.env.NODE_ENV !== 'production' && restProps.preserve === false && restProps.isListField && namePath.length <= 1) {\n    warning(false, '`preserve` should not apply on Form.List fields.');\n  }\n\n  return /*#__PURE__*/React.createElement(Field, _extends({\n    key: key,\n    name: namePath\n  }, restProps, {\n    fieldContext: fieldContext\n  }));\n}\n\nexport default WrapperField;"],"mappings":"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"},"metadata":{},"sourceType":"module"}