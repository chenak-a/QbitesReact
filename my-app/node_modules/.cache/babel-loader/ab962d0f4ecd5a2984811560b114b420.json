{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _d3Collection = require(\"d3-collection\");\n\nvar _GenericChartComponent = require(\"../GenericChartComponent\");\n\nvar _GenericChartComponent2 = _interopRequireDefault(_GenericChartComponent);\n\nvar _GenericComponent = require(\"../GenericComponent\");\n\nvar _utils = require(\"../utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ScatterSeries = function (_Component) {\n  _inherits(ScatterSeries, _Component);\n\n  function ScatterSeries(props) {\n    _classCallCheck(this, ScatterSeries);\n\n    var _this = _possibleConstructorReturn(this, (ScatterSeries.__proto__ || Object.getPrototypeOf(ScatterSeries)).call(this, props));\n\n    _this.renderSVG = _this.renderSVG.bind(_this);\n    _this.drawOnCanvas = _this.drawOnCanvas.bind(_this);\n    return _this;\n  }\n\n  _createClass(ScatterSeries, [{\n    key: \"drawOnCanvas\",\n    value: function drawOnCanvas(ctx, moreProps) {\n      var xAccessor = moreProps.xAccessor;\n      var points = helper(this.props, moreProps, xAccessor);\n\n      _drawOnCanvas(ctx, this.props, points);\n    }\n  }, {\n    key: \"renderSVG\",\n    value: function renderSVG(moreProps) {\n      var _props = this.props,\n          className = _props.className,\n          markerProps = _props.markerProps;\n      var xAccessor = moreProps.xAccessor;\n      var points = helper(this.props, moreProps, xAccessor);\n      return _react2.default.createElement(\"g\", {\n        className: className\n      }, points.map(function (point, idx) {\n        var Marker = point.marker;\n        return _react2.default.createElement(Marker, _extends({\n          key: idx\n        }, markerProps, {\n          point: point\n        }));\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _react2.default.createElement(_GenericChartComponent2.default, {\n        svgDraw: this.renderSVG,\n        canvasDraw: this.drawOnCanvas,\n        canvasToDraw: _GenericComponent.getAxisCanvas,\n        drawOn: [\"pan\"]\n      });\n    }\n  }]);\n\n  return ScatterSeries;\n}(_react.Component);\n\nScatterSeries.propTypes = {\n  className: _propTypes2.default.string,\n  yAccessor: _propTypes2.default.func.isRequired,\n  marker: _propTypes2.default.func,\n  markerProvider: _propTypes2.default.func,\n  markerProps: _propTypes2.default.object\n};\nScatterSeries.defaultProps = {\n  className: \"react-stockcharts-scatter\"\n};\n\nfunction helper(props, moreProps, xAccessor) {\n  var yAccessor = props.yAccessor,\n      markerProvider = props.markerProvider,\n      markerProps = props.markerProps;\n  var Marker = props.marker;\n  var xScale = moreProps.xScale,\n      yScale = moreProps.chartConfig.yScale,\n      plotData = moreProps.plotData;\n  if (!(markerProvider || Marker)) throw new Error(\"required prop, either marker or markerProvider missing\");\n  return plotData.map(function (d) {\n    if (markerProvider) Marker = markerProvider(d);\n\n    var mProps = _extends({}, Marker.defaultProps, markerProps);\n\n    var fill = (0, _utils.functor)(mProps.fill);\n    var stroke = (0, _utils.functor)(mProps.stroke);\n    return {\n      x: xScale(xAccessor(d)),\n      y: yScale(yAccessor(d)),\n      fill: (0, _utils.hexToRGBA)(fill(d), mProps.opacity),\n      stroke: stroke(d),\n      datum: d,\n      marker: Marker\n    };\n  });\n}\n\nfunction _drawOnCanvas(ctx, props, points) {\n  var markerProps = props.markerProps;\n  var nest = (0, _d3Collection.nest)().key(function (d) {\n    return d.fill;\n  }).key(function (d) {\n    return d.stroke;\n  }).entries(points);\n  nest.forEach(function (fillGroup) {\n    var fillKey = fillGroup.key,\n        fillValues = fillGroup.values;\n\n    if (fillKey !== \"none\") {\n      ctx.fillStyle = fillKey;\n    }\n\n    fillValues.forEach(function (strokeGroup) {\n      // var { key: strokeKey, values: strokeValues } = strokeGroup;\n      var strokeValues = strokeGroup.values;\n      strokeValues.forEach(function (point) {\n        var marker = point.marker;\n        marker.drawOnCanvas(_extends({}, marker.defaultProps, markerProps, {\n          fill: fillKey\n        }), point, ctx);\n      });\n    });\n  });\n}\n\nexports.default = ScatterSeries;","map":{"version":3,"mappings":"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","names":["ScatterSeries","props","_classCallCheck","_this","renderSVG","bind","drawOnCanvas","ctx","moreProps","xAccessor","points","helper","className","markerProps","_react2","map","point","idx","Marker","marker","key","svgDraw","canvasDraw","canvasToDraw","drawOn","propTypes","_propTypes2","string","yAccessor","func","isRequired","markerProvider","object","defaultProps","xScale","yScale","chartConfig","plotData","Error","d","mProps","fill","stroke","x","y","opacity","datum","nest","entries","forEach","fillKey","fillGroup","fillValues","values","fillStyle","strokeValues","strokeGroup"],"sources":["../../../src/lib/series/ScatterSeries.js"],"sourcesContent":["\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { nest as d3Nest } from \"d3-collection\";\n\nimport GenericChartComponent from \"../GenericChartComponent\";\nimport { getAxisCanvas } from \"../GenericComponent\";\n\nimport { hexToRGBA, functor } from \"../utils\";\n\nclass ScatterSeries extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.renderSVG = this.renderSVG.bind(this);\n\t\tthis.drawOnCanvas = this.drawOnCanvas.bind(this);\n\t}\n\tdrawOnCanvas(ctx, moreProps) {\n\t\tconst { xAccessor } = moreProps;\n\n\t\tconst points = helper(this.props, moreProps, xAccessor);\n\n\t\tdrawOnCanvas(ctx, this.props, points);\n\t}\n\trenderSVG(moreProps) {\n\t\tconst { className, markerProps } = this.props;\n\t\tconst { xAccessor } = moreProps;\n\n\t\tconst points = helper(this.props, moreProps, xAccessor);\n\n\t\treturn <g className={className}>\n\t\t\t{points.map((point, idx) => {\n\t\t\t\tconst { marker: Marker } = point;\n\t\t\t\treturn <Marker key={idx} {...markerProps} point={point} />;\n\t\t\t})}\n\t\t</g>;\n\t}\n\trender() {\n\t\treturn <GenericChartComponent\n\t\t\tsvgDraw={this.renderSVG}\n\t\t\tcanvasDraw={this.drawOnCanvas}\n\t\t\tcanvasToDraw={getAxisCanvas}\n\t\t\tdrawOn={[\"pan\"]}\n\t\t/>;\n\t}\n}\n\nScatterSeries.propTypes = {\n\tclassName: PropTypes.string,\n\tyAccessor: PropTypes.func.isRequired,\n\tmarker: PropTypes.func,\n\tmarkerProvider: PropTypes.func,\n\tmarkerProps: PropTypes.object,\n};\n\nScatterSeries.defaultProps = {\n\tclassName: \"react-stockcharts-scatter\",\n};\n\nfunction helper(props, moreProps, xAccessor) {\n\tconst { yAccessor, markerProvider, markerProps } = props;\n\tlet { marker: Marker } = props;\n\tconst { xScale, chartConfig: { yScale }, plotData } = moreProps;\n\n\tif (!(markerProvider || Marker)) throw new Error(\"required prop, either marker or markerProvider missing\");\n\n\treturn plotData.map(d => {\n\n\t\tif (markerProvider) Marker = markerProvider(d);\n\n\t\tconst mProps = { ...Marker.defaultProps, ...markerProps };\n\n\t\tconst fill = functor(mProps.fill);\n\t\tconst stroke = functor(mProps.stroke);\n\n\t\treturn {\n\t\t\tx: xScale(xAccessor(d)),\n\t\t\ty: yScale(yAccessor(d)),\n\t\t\tfill: hexToRGBA(fill(d), mProps.opacity),\n\t\t\tstroke: stroke(d),\n\t\t\tdatum: d,\n\t\t\tmarker: Marker,\n\t\t};\n\t});\n}\n\nfunction drawOnCanvas(ctx, props, points) {\n\n\tconst { markerProps } = props;\n\n\tconst nest = d3Nest()\n\t\t.key(d => d.fill)\n\t\t.key(d => d.stroke)\n\t\t.entries(points);\n\n\tnest.forEach(fillGroup => {\n\t\tconst { key: fillKey, values: fillValues } = fillGroup;\n\n\t\tif (fillKey !== \"none\") {\n\t\t\tctx.fillStyle = fillKey;\n\t\t}\n\n\t\tfillValues.forEach(strokeGroup => {\n\t\t\t// var { key: strokeKey, values: strokeValues } = strokeGroup;\n\t\t\tconst { values: strokeValues } = strokeGroup;\n\n\t\t\tstrokeValues.forEach(point => {\n\t\t\t\tconst { marker } = point;\n\t\t\t\tmarker.drawOnCanvas({ ...marker.defaultProps, ...markerProps, fill: fillKey }, point, ctx);\n\t\t\t});\n\t\t});\n\t});\n}\n\nexport default ScatterSeries;\n"]},"metadata":{},"sourceType":"script"}