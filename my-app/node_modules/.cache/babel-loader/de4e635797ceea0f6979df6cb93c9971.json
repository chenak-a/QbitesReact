{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _d3Path = require(\"d3-path\");\n\nvar _GenericChartComponent = require(\"../../GenericChartComponent\");\n\nvar _GenericChartComponent2 = _interopRequireDefault(_GenericChartComponent);\n\nvar _GenericComponent = require(\"../../GenericComponent\");\n\nvar _StraightLine = require(\"./StraightLine\");\n\nvar _utils = require(\"../../utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ChannelWithArea = function (_Component) {\n  _inherits(ChannelWithArea, _Component);\n\n  function ChannelWithArea(props) {\n    _classCallCheck(this, ChannelWithArea);\n\n    var _this = _possibleConstructorReturn(this, (ChannelWithArea.__proto__ || Object.getPrototypeOf(ChannelWithArea)).call(this, props));\n\n    _this.renderSVG = _this.renderSVG.bind(_this);\n    _this.drawOnCanvas = _this.drawOnCanvas.bind(_this);\n    _this.isHover = _this.isHover.bind(_this);\n    return _this;\n  }\n\n  _createClass(ChannelWithArea, [{\n    key: \"isHover\",\n    value: function isHover(moreProps) {\n      var _props = this.props,\n          tolerance = _props.tolerance,\n          onHover = _props.onHover;\n\n      if ((0, _utils.isDefined)(onHover)) {\n        var _helper = helper(this.props, moreProps),\n            lines = _helper.lines,\n            line1 = _helper.line1,\n            line2 = _helper.line2;\n\n        if ((0, _utils.isDefined)(line1) && (0, _utils.isDefined)(line2)) {\n          var mouseXY = moreProps.mouseXY,\n              xScale = moreProps.xScale,\n              yScale = moreProps.chartConfig.yScale;\n          var line1Hovering = (0, _StraightLine.isHovering)({\n            x1Value: lines.line1.x1,\n            y1Value: lines.line1.y1,\n            x2Value: lines.line1.x2,\n            y2Value: lines.line1.y2,\n            type: \"LINE\",\n            mouseXY: mouseXY,\n            tolerance: tolerance,\n            xScale: xScale,\n            yScale: yScale\n          });\n          var line2Hovering = (0, _StraightLine.isHovering)({\n            x1Value: lines.line2.x1,\n            y1Value: lines.line2.y1,\n            x2Value: lines.line2.x2,\n            y2Value: lines.line2.y2,\n            type: \"LINE\",\n            mouseXY: mouseXY,\n            tolerance: tolerance,\n            xScale: xScale,\n            yScale: yScale\n          });\n          return line1Hovering || line2Hovering;\n        }\n      }\n\n      return false;\n    }\n  }, {\n    key: \"drawOnCanvas\",\n    value: function drawOnCanvas(ctx, moreProps) {\n      var _props2 = this.props,\n          stroke = _props2.stroke,\n          strokeWidth = _props2.strokeWidth,\n          fillOpacity = _props2.fillOpacity,\n          strokeOpacity = _props2.strokeOpacity,\n          fill = _props2.fill;\n\n      var _helper2 = helper(this.props, moreProps),\n          line1 = _helper2.line1,\n          line2 = _helper2.line2;\n\n      if ((0, _utils.isDefined)(line1)) {\n        var x1 = line1.x1,\n            y1 = line1.y1,\n            x2 = line1.x2,\n            y2 = line1.y2;\n        ctx.lineWidth = strokeWidth;\n        ctx.strokeStyle = (0, _utils.hexToRGBA)(stroke, strokeOpacity);\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n\n        if ((0, _utils.isDefined)(line2)) {\n          var line2Y1 = line2.y1,\n              line2Y2 = line2.y2;\n          ctx.beginPath();\n          ctx.moveTo(x1, line2Y1);\n          ctx.lineTo(x2, line2Y2);\n          ctx.stroke();\n          ctx.fillStyle = (0, _utils.hexToRGBA)(fill, fillOpacity);\n          ctx.beginPath();\n          ctx.moveTo(x1, y1);\n          ctx.lineTo(x2, y2);\n          ctx.lineTo(x2, line2Y2);\n          ctx.lineTo(x1, line2Y1);\n          ctx.closePath();\n          ctx.fill();\n        }\n      }\n    }\n  }, {\n    key: \"renderSVG\",\n    value: function renderSVG(moreProps) {\n      var _props3 = this.props,\n          stroke = _props3.stroke,\n          strokeWidth = _props3.strokeWidth,\n          fillOpacity = _props3.fillOpacity,\n          fill = _props3.fill,\n          strokeOpacity = _props3.strokeOpacity;\n\n      var _helper3 = helper(this.props, moreProps),\n          line1 = _helper3.line1,\n          line2 = _helper3.line2;\n\n      if ((0, _utils.isDefined)(line1)) {\n        var x1 = line1.x1,\n            y1 = line1.y1,\n            x2 = line1.x2,\n            y2 = line1.y2;\n        var line = (0, _utils.isDefined)(line2) ? _react2.default.createElement(\"line\", {\n          strokeWidth: strokeWidth,\n          stroke: stroke,\n          strokeOpacity: strokeOpacity,\n          x1: x1,\n          y1: line2.y1,\n          x2: x2,\n          y2: line2.y2\n        }) : null;\n        var area = (0, _utils.isDefined)(line2) ? _react2.default.createElement(\"path\", {\n          fill: fill,\n          fillOpacity: fillOpacity,\n          d: getPath(line1, line2)\n        }) : null;\n        return _react2.default.createElement(\"g\", null, _react2.default.createElement(\"line\", {\n          strokeWidth: strokeWidth,\n          stroke: stroke,\n          strokeOpacity: strokeOpacity,\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2\n        }), line, area);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _props4 = this.props,\n          selected = _props4.selected,\n          interactiveCursorClass = _props4.interactiveCursorClass;\n      var _props5 = this.props,\n          onDragStart = _props5.onDragStart,\n          onDrag = _props5.onDrag,\n          onDragComplete = _props5.onDragComplete,\n          onHover = _props5.onHover,\n          onUnHover = _props5.onUnHover;\n      return _react2.default.createElement(_GenericChartComponent2.default, {\n        isHover: this.isHover,\n        svgDraw: this.renderSVG,\n        canvasToDraw: _GenericComponent.getMouseCanvas,\n        canvasDraw: this.drawOnCanvas,\n        interactiveCursorClass: interactiveCursorClass,\n        selected: selected,\n        onDragStart: onDragStart,\n        onDrag: onDrag,\n        onDragComplete: onDragComplete,\n        onHover: onHover,\n        onUnHover: onUnHover,\n        drawOn: [\"mousemove\", \"mouseleave\", \"pan\", \"drag\"]\n      });\n    }\n  }]);\n\n  return ChannelWithArea;\n}(_react.Component);\n\nfunction getPath(line1, line2) {\n  var ctx = (0, _d3Path.path)();\n  ctx.moveTo(line1.x1, line1.y1);\n  ctx.lineTo(line1.x2, line1.y2);\n  ctx.lineTo(line1.x2, line2.y2);\n  ctx.lineTo(line1.x1, line2.y1);\n  ctx.closePath();\n  return ctx.toString();\n}\n\nfunction getLines(props, moreProps) {\n  var startXY = props.startXY,\n      endXY = props.endXY,\n      dy = props.dy,\n      type = props.type;\n  var xScale = moreProps.xScale;\n\n  if ((0, _utils.isNotDefined)(startXY) || (0, _utils.isNotDefined)(endXY)) {\n    return {};\n  }\n\n  var line1 = (0, _StraightLine.generateLine)({\n    type: type,\n    start: startXY,\n    end: endXY,\n    xScale: xScale\n  });\n  var line2 = (0, _utils.isDefined)(dy) ? _extends({}, line1, {\n    y1: line1.y1 + dy,\n    y2: line1.y2 + dy\n  }) : undefined;\n  return {\n    line1: line1,\n    line2: line2\n  };\n}\n\nfunction helper(props, moreProps) {\n  var lines = getLines(props, moreProps);\n  var xScale = moreProps.xScale,\n      yScale = moreProps.chartConfig.yScale;\n  var x1 = xScale(lines.line1.x1);\n  var y1 = yScale(lines.line1.y1);\n  var x2 = xScale(lines.line1.x2);\n  var y2 = yScale(lines.line1.y2);\n  var line2 = (0, _utils.isDefined)(lines.line2) ? {\n    x1: x1,\n    y1: yScale(lines.line2.y1),\n    x2: x2,\n    y2: yScale(lines.line2.y2)\n  } : undefined;\n  return {\n    lines: lines,\n    line1: {\n      x1: x1,\n      y1: y1,\n      x2: x2,\n      y2: y2\n    },\n    line2: line2\n  };\n}\n\nChannelWithArea.propTypes = {\n  interactiveCursorClass: _propTypes2.default.string,\n  stroke: _propTypes2.default.string.isRequired,\n  strokeWidth: _propTypes2.default.number.isRequired,\n  fill: _propTypes2.default.string.isRequired,\n  fillOpacity: _propTypes2.default.number.isRequired,\n  strokeOpacity: _propTypes2.default.number.isRequired,\n  type: _propTypes2.default.oneOf([\"XLINE\", // extends from -Infinity to +Infinity\n  \"RAY\", // extends to +/-Infinity in one direction\n  \"LINE\"] // extends between the set bounds\n  ).isRequired,\n  onDragStart: _propTypes2.default.func.isRequired,\n  onDrag: _propTypes2.default.func.isRequired,\n  onDragComplete: _propTypes2.default.func.isRequired,\n  onHover: _propTypes2.default.func,\n  onUnHover: _propTypes2.default.func,\n  defaultClassName: _propTypes2.default.string,\n  tolerance: _propTypes2.default.number.isRequired,\n  selected: _propTypes2.default.bool.isRequired\n};\nChannelWithArea.defaultProps = {\n  onDragStart: _utils.noop,\n  onDrag: _utils.noop,\n  onDragComplete: _utils.noop,\n  type: \"LINE\",\n  strokeWidth: 1,\n  tolerance: 4,\n  selected: false\n};\nexports.default = ChannelWithArea;","map":{"version":3,"sources":["../../../../src/lib/interactive/components/ChannelWithArea.js"],"names":["ChannelWithArea","moreProps","tolerance","onHover","lines","line1","line2","helper","mouseXY","xScale","yScale","line1Hovering","x1Value","y1Value","x2Value","y2Value","type","line2Hovering","ctx","stroke","strokeWidth","fillOpacity","strokeOpacity","fill","x1","y1","x2","y2","line2Y1","line2Y2","line","area","getPath","selected","interactiveCursorClass","onDragStart","onDrag","onDragComplete","onUnHover","startXY","endXY","dy","props","start","end","getLines","defaultClassName","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { path as d3Path } from \"d3-path\";\n\nimport GenericChartComponent from \"../../GenericChartComponent\";\nimport { getMouseCanvas } from \"../../GenericComponent\";\nimport { generateLine, isHovering } from \"./StraightLine\";\n\nimport { isDefined, isNotDefined, noop, hexToRGBA } from \"../../utils\";\n\nclass ChannelWithArea extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.renderSVG = this.renderSVG.bind(this);\n\t\tthis.drawOnCanvas = this.drawOnCanvas.bind(this);\n\t\tthis.isHover = this.isHover.bind(this);\n\t}\n\tisHover(moreProps) {\n\t\tconst { tolerance, onHover } = this.props;\n\n\t\tif (isDefined(onHover)) {\n\n\t\t\tconst { lines, line1, line2 } = helper(this.props, moreProps);\n\n\t\t\tif (isDefined(line1) && isDefined(line2)) {\n\t\t\t\tconst { mouseXY, xScale, chartConfig: { yScale } } = moreProps;\n\n\t\t\t\tconst line1Hovering = isHovering({\n\t\t\t\t\tx1Value: lines.line1.x1,\n\t\t\t\t\ty1Value: lines.line1.y1,\n\t\t\t\t\tx2Value: lines.line1.x2,\n\t\t\t\t\ty2Value: lines.line1.y2,\n\t\t\t\t\ttype: \"LINE\",\n\t\t\t\t\tmouseXY,\n\t\t\t\t\ttolerance,\n\t\t\t\t\txScale,\n\t\t\t\t\tyScale,\n\t\t\t\t});\n\t\t\t\tconst line2Hovering = isHovering({\n\t\t\t\t\tx1Value: lines.line2.x1,\n\t\t\t\t\ty1Value: lines.line2.y1,\n\t\t\t\t\tx2Value: lines.line2.x2,\n\t\t\t\t\ty2Value: lines.line2.y2,\n\t\t\t\t\ttype: \"LINE\",\n\t\t\t\t\tmouseXY,\n\t\t\t\t\ttolerance,\n\t\t\t\t\txScale,\n\t\t\t\t\tyScale,\n\t\t\t\t});\n\n\t\t\t\treturn line1Hovering || line2Hovering;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\tdrawOnCanvas(ctx, moreProps) {\n\t\tconst { stroke, strokeWidth, fillOpacity, strokeOpacity, fill } = this.props;\n\t\tconst { line1, line2 } = helper(this.props, moreProps);\n\n\t\tif (isDefined(line1)) {\n\t\t\tconst { x1, y1, x2, y2 } = line1;\n\n\t\t\tctx.lineWidth = strokeWidth;\n\t\t\tctx.strokeStyle = hexToRGBA(stroke, strokeOpacity);\n\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x1, y1);\n\t\t\tctx.lineTo(x2, y2);\n\t\t\tctx.stroke();\n\t\t\tif (isDefined(line2)) {\n\t\t\t\tconst {\n\t\t\t\t\ty1: line2Y1,\n\t\t\t\t\ty2: line2Y2\n\t\t\t\t} = line2;\n\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(x1, line2Y1);\n\t\t\t\tctx.lineTo(x2, line2Y2);\n\t\t\t\tctx.stroke();\n\n\t\t\t\tctx.fillStyle = hexToRGBA(fill, fillOpacity);\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(x1, y1);\n\n\t\t\t\tctx.lineTo(x2, y2);\n\t\t\t\tctx.lineTo(x2, line2Y2);\n\t\t\t\tctx.lineTo(x1, line2Y1);\n\n\t\t\t\tctx.closePath();\n\t\t\t\tctx.fill();\n\t\t\t}\n\t\t}\n\t}\n\trenderSVG(moreProps) {\n\t\tconst { stroke, strokeWidth, fillOpacity, fill, strokeOpacity } = this.props;\n\t\tconst { line1, line2 } = helper(this.props, moreProps);\n\n\t\tif (isDefined(line1)) {\n\t\t\tconst { x1, y1, x2, y2 } = line1;\n\t\t\tconst line = isDefined(line2)\n\t\t\t\t? <line\n\t\t\t\t\tstrokeWidth={strokeWidth}\n\t\t\t\t\tstroke={stroke}\n\t\t\t\t\tstrokeOpacity={strokeOpacity}\n\t\t\t\t\tx1={x1}\n\t\t\t\t\ty1={line2.y1}\n\t\t\t\t\tx2={x2}\n\t\t\t\t\ty2={line2.y2}\n\t\t\t\t/>\n\t\t\t\t: null;\n\t\t\tconst area = isDefined(line2)\n\t\t\t\t? <path\n\t\t\t\t\tfill={fill}\n\t\t\t\t\tfillOpacity={fillOpacity}\n\t\t\t\t\td={getPath(line1, line2)}\n\t\t\t\t/>\n\t\t\t\t: null;\n\n\t\t\treturn (\n\t\t\t\t<g>\n\t\t\t\t\t<line\n\t\t\t\t\t\tstrokeWidth={strokeWidth}\n\t\t\t\t\t\tstroke={stroke}\n\t\t\t\t\t\tstrokeOpacity={strokeOpacity}\n\t\t\t\t\t\tx1={x1}\n\t\t\t\t\t\ty1={y1}\n\t\t\t\t\t\tx2={x2}\n\t\t\t\t\t\ty2={y2}\n\t\t\t\t\t/>\n\t\t\t\t\t{line}\n\t\t\t\t\t{area}\n\t\t\t\t</g>\n\t\t\t);\n\t\t}\n\t}\n\trender() {\n\t\tconst { selected, interactiveCursorClass } = this.props;\n\t\tconst { onDragStart, onDrag, onDragComplete, onHover, onUnHover } = this.props;\n\n\t\treturn <GenericChartComponent\n\t\t\tisHover={this.isHover}\n\n\t\t\tsvgDraw={this.renderSVG}\n\t\t\tcanvasToDraw={getMouseCanvas}\n\t\t\tcanvasDraw={this.drawOnCanvas}\n\n\t\t\tinteractiveCursorClass={interactiveCursorClass}\n\t\t\tselected={selected}\n\n\t\t\tonDragStart={onDragStart}\n\t\t\tonDrag={onDrag}\n\t\t\tonDragComplete={onDragComplete}\n\t\t\tonHover={onHover}\n\t\t\tonUnHover={onUnHover}\n\n\t\t\tdrawOn={[\"mousemove\", \"mouseleave\", \"pan\", \"drag\"]}\n\t\t/>;\n\t}\n}\nfunction getPath(line1, line2) {\n\tconst ctx = d3Path();\n\tctx.moveTo(line1.x1, line1.y1);\n\tctx.lineTo(line1.x2, line1.y2);\n\tctx.lineTo(line1.x2, line2.y2);\n\tctx.lineTo(line1.x1, line2.y1);\n\n\tctx.closePath();\n\treturn ctx.toString();\n}\n\nfunction getLines(props, moreProps) {\n\tconst { startXY, endXY, dy, type } = props;\n\tconst { xScale } = moreProps;\n\n\tif (isNotDefined(startXY) || isNotDefined(endXY)) {\n\t\treturn {};\n\t}\n\tconst line1 = generateLine({\n\t\ttype,\n\t\tstart: startXY,\n\t\tend: endXY,\n\t\txScale,\n\t});\n\tconst line2 = isDefined(dy)\n\t\t? {\n\t\t\t...line1,\n\t\t\ty1: line1.y1 + dy,\n\t\t\ty2: line1.y2 + dy,\n\t\t}\n\t\t: undefined;\n\n\n\treturn {\n\t\tline1,\n\t\tline2,\n\t};\n}\n\nfunction helper(props, moreProps) {\n\tconst lines = getLines(props, moreProps);\n\tconst { xScale, chartConfig: { yScale } } = moreProps;\n\n\tconst x1 = xScale(lines.line1.x1);\n\tconst y1 = yScale(lines.line1.y1);\n\tconst x2 = xScale(lines.line1.x2);\n\tconst y2 = yScale(lines.line1.y2);\n\n\tconst line2 = isDefined(lines.line2)\n\t\t? {\n\t\t\tx1,\n\t\t\ty1: yScale(lines.line2.y1),\n\t\t\tx2,\n\t\t\ty2: yScale(lines.line2.y2),\n\t\t}\n\t\t: undefined;\n\n\treturn {\n\t\tlines,\n\t\tline1: {\n\t\t\tx1, y1, x2, y2\n\t\t},\n\t\tline2\n\t};\n}\n\nChannelWithArea.propTypes = {\n\tinteractiveCursorClass: PropTypes.string,\n\tstroke: PropTypes.string.isRequired,\n\tstrokeWidth: PropTypes.number.isRequired,\n\tfill: PropTypes.string.isRequired,\n\tfillOpacity: PropTypes.number.isRequired,\n\tstrokeOpacity: PropTypes.number.isRequired,\n\n\ttype: PropTypes.oneOf([\n\t\t\"XLINE\", // extends from -Infinity to +Infinity\n\t\t\"RAY\", // extends to +/-Infinity in one direction\n\t\t\"LINE\", // extends between the set bounds\n\t]).isRequired,\n\n\tonDragStart: PropTypes.func.isRequired,\n\tonDrag: PropTypes.func.isRequired,\n\tonDragComplete: PropTypes.func.isRequired,\n\tonHover: PropTypes.func,\n\tonUnHover: PropTypes.func,\n\n\tdefaultClassName: PropTypes.string,\n\n\ttolerance: PropTypes.number.isRequired,\n\tselected: PropTypes.bool.isRequired,\n};\n\nChannelWithArea.defaultProps = {\n\tonDragStart: noop,\n\tonDrag: noop,\n\tonDragComplete: noop,\n\ttype: \"LINE\",\n\n\tstrokeWidth: 1,\n\ttolerance: 4,\n\tselected: false,\n};\n\nexport default ChannelWithArea;"]},"metadata":{},"sourceType":"script"}