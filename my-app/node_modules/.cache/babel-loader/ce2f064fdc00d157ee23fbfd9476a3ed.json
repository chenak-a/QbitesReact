{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n\n  _setPrototypeOf(subClass, superClass);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _construct(Parent, args, Class) {\n  if (_isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) _setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nfunction _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}\n\nfunction _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !_isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return _construct(Class, arguments, _getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return _setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}\n/* eslint no-console:0 */\n\n\nvar formatRegExp = /%[sdj%]/g;\n\nvar warning = function warning() {}; // don't print warning message when in production env or node runtime\n\n\nif (typeof process !== 'undefined' && process.env && process.env.NODE_ENV !== 'production' && typeof window !== 'undefined' && typeof document !== 'undefined') {\n  warning = function warning(type, errors) {\n    if (typeof console !== 'undefined' && console.warn) {\n      if (errors.every(function (e) {\n        return typeof e === 'string';\n      })) {\n        console.warn(type, errors);\n      }\n    }\n  };\n}\n\nfunction convertFieldsError(errors) {\n  if (!errors || !errors.length) return null;\n  var fields = {};\n  errors.forEach(function (error) {\n    var field = error.field;\n    fields[field] = fields[field] || [];\n    fields[field].push(error);\n  });\n  return fields;\n}\n\nfunction format() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  var i = 1;\n  var f = args[0];\n  var len = args.length;\n\n  if (typeof f === 'function') {\n    return f.apply(null, args.slice(1));\n  }\n\n  if (typeof f === 'string') {\n    var str = String(f).replace(formatRegExp, function (x) {\n      if (x === '%%') {\n        return '%';\n      }\n\n      if (i >= len) {\n        return x;\n      }\n\n      switch (x) {\n        case '%s':\n          return String(args[i++]);\n\n        case '%d':\n          return Number(args[i++]);\n\n        case '%j':\n          try {\n            return JSON.stringify(args[i++]);\n          } catch (_) {\n            return '[Circular]';\n          }\n\n          break;\n\n        default:\n          return x;\n      }\n    });\n    return str;\n  }\n\n  return f;\n}\n\nfunction isNativeStringType(type) {\n  return type === 'string' || type === 'url' || type === 'hex' || type === 'email' || type === 'date' || type === 'pattern';\n}\n\nfunction isEmptyValue(value, type) {\n  if (value === undefined || value === null) {\n    return true;\n  }\n\n  if (type === 'array' && Array.isArray(value) && !value.length) {\n    return true;\n  }\n\n  if (isNativeStringType(type) && typeof value === 'string' && !value) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction asyncParallelArray(arr, func, callback) {\n  var results = [];\n  var total = 0;\n  var arrLength = arr.length;\n\n  function count(errors) {\n    results.push.apply(results, errors);\n    total++;\n\n    if (total === arrLength) {\n      callback(results);\n    }\n  }\n\n  arr.forEach(function (a) {\n    func(a, count);\n  });\n}\n\nfunction asyncSerialArray(arr, func, callback) {\n  var index = 0;\n  var arrLength = arr.length;\n\n  function next(errors) {\n    if (errors && errors.length) {\n      callback(errors);\n      return;\n    }\n\n    var original = index;\n    index = index + 1;\n\n    if (original < arrLength) {\n      func(arr[original], next);\n    } else {\n      callback([]);\n    }\n  }\n\n  next([]);\n}\n\nfunction flattenObjArr(objArr) {\n  var ret = [];\n  Object.keys(objArr).forEach(function (k) {\n    ret.push.apply(ret, objArr[k]);\n  });\n  return ret;\n}\n\nvar AsyncValidationError = /*#__PURE__*/function (_Error) {\n  _inheritsLoose(AsyncValidationError, _Error);\n\n  function AsyncValidationError(errors, fields) {\n    var _this;\n\n    _this = _Error.call(this, 'Async Validation Error') || this;\n    _this.errors = errors;\n    _this.fields = fields;\n    return _this;\n  }\n\n  return AsyncValidationError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nfunction asyncMap(objArr, option, func, callback) {\n  if (option.first) {\n    var _pending = new Promise(function (resolve, reject) {\n      var next = function next(errors) {\n        callback(errors);\n        return errors.length ? reject(new AsyncValidationError(errors, convertFieldsError(errors))) : resolve();\n      };\n\n      var flattenArr = flattenObjArr(objArr);\n      asyncSerialArray(flattenArr, func, next);\n    });\n\n    _pending[\"catch\"](function (e) {\n      return e;\n    });\n\n    return _pending;\n  }\n\n  var firstFields = option.firstFields || [];\n\n  if (firstFields === true) {\n    firstFields = Object.keys(objArr);\n  }\n\n  var objArrKeys = Object.keys(objArr);\n  var objArrLength = objArrKeys.length;\n  var total = 0;\n  var results = [];\n  var pending = new Promise(function (resolve, reject) {\n    var next = function next(errors) {\n      results.push.apply(results, errors);\n      total++;\n\n      if (total === objArrLength) {\n        callback(results);\n        return results.length ? reject(new AsyncValidationError(results, convertFieldsError(results))) : resolve();\n      }\n    };\n\n    if (!objArrKeys.length) {\n      callback(results);\n      resolve();\n    }\n\n    objArrKeys.forEach(function (key) {\n      var arr = objArr[key];\n\n      if (firstFields.indexOf(key) !== -1) {\n        asyncSerialArray(arr, func, next);\n      } else {\n        asyncParallelArray(arr, func, next);\n      }\n    });\n  });\n  pending[\"catch\"](function (e) {\n    return e;\n  });\n  return pending;\n}\n\nfunction complementError(rule) {\n  return function (oe) {\n    if (oe && oe.message) {\n      oe.field = oe.field || rule.fullField;\n      return oe;\n    }\n\n    return {\n      message: typeof oe === 'function' ? oe() : oe,\n      field: oe.field || rule.fullField\n    };\n  };\n}\n\nfunction deepMerge(target, source) {\n  if (source) {\n    for (var s in source) {\n      if (source.hasOwnProperty(s)) {\n        var value = source[s];\n\n        if (typeof value === 'object' && typeof target[s] === 'object') {\n          target[s] = _extends({}, target[s], value);\n        } else {\n          target[s] = value;\n        }\n      }\n    }\n  }\n\n  return target;\n}\n/**\n *  Rule for validating required fields.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param source The source object being validated.\n *  @param errors An array of errors that this rule may add\n *  validation errors to.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\n\n\nfunction required(rule, value, source, errors, options, type) {\n  if (rule.required && (!source.hasOwnProperty(rule.field) || isEmptyValue(value, type || rule.type))) {\n    errors.push(format(options.messages.required, rule.fullField));\n  }\n}\n/**\n *  Rule for validating whitespace.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param source The source object being validated.\n *  @param errors An array of errors that this rule may add\n *  validation errors to.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\n\n\nfunction whitespace(rule, value, source, errors, options) {\n  if (/^\\s+$/.test(value) || value === '') {\n    errors.push(format(options.messages.whitespace, rule.fullField));\n  }\n}\n/* eslint max-len:0 */\n\n\nvar pattern = {\n  // http://emailregex.com/\n  email: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n  url: new RegExp(\"^(?!mailto:)(?:(?:http|https|ftp)://|//)(?:\\\\S+(?::\\\\S*)?@)?(?:(?:(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}(?:\\\\.(?:[0-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))|(?:(?:[a-z\\\\u00a1-\\\\uffff0-9]+-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]+-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)*(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]{2,})))|localhost)(?::\\\\d{2,5})?(?:(/|\\\\?|#)[^\\\\s]*)?$\", 'i'),\n  hex: /^#?([a-f0-9]{6}|[a-f0-9]{3})$/i\n};\nvar types = {\n  integer: function integer(value) {\n    return types.number(value) && parseInt(value, 10) === value;\n  },\n  \"float\": function float(value) {\n    return types.number(value) && !types.integer(value);\n  },\n  array: function array(value) {\n    return Array.isArray(value);\n  },\n  regexp: function regexp(value) {\n    if (value instanceof RegExp) {\n      return true;\n    }\n\n    try {\n      return !!new RegExp(value);\n    } catch (e) {\n      return false;\n    }\n  },\n  date: function date(value) {\n    return typeof value.getTime === 'function' && typeof value.getMonth === 'function' && typeof value.getYear === 'function' && !isNaN(value.getTime());\n  },\n  number: function number(value) {\n    if (isNaN(value)) {\n      return false;\n    }\n\n    return typeof value === 'number';\n  },\n  object: function object(value) {\n    return typeof value === 'object' && !types.array(value);\n  },\n  method: function method(value) {\n    return typeof value === 'function';\n  },\n  email: function email(value) {\n    return typeof value === 'string' && !!value.match(pattern.email) && value.length < 255;\n  },\n  url: function url(value) {\n    return typeof value === 'string' && !!value.match(pattern.url);\n  },\n  hex: function hex(value) {\n    return typeof value === 'string' && !!value.match(pattern.hex);\n  }\n};\n/**\n *  Rule for validating the type of a value.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param source The source object being validated.\n *  @param errors An array of errors that this rule may add\n *  validation errors to.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\n\nfunction type(rule, value, source, errors, options) {\n  if (rule.required && value === undefined) {\n    required(rule, value, source, errors, options);\n    return;\n  }\n\n  var custom = ['integer', 'float', 'array', 'regexp', 'object', 'method', 'email', 'number', 'date', 'url', 'hex'];\n  var ruleType = rule.type;\n\n  if (custom.indexOf(ruleType) > -1) {\n    if (!types[ruleType](value)) {\n      errors.push(format(options.messages.types[ruleType], rule.fullField, rule.type));\n    } // straight typeof check\n\n  } else if (ruleType && typeof value !== rule.type) {\n    errors.push(format(options.messages.types[ruleType], rule.fullField, rule.type));\n  }\n}\n/**\n *  Rule for validating minimum and maximum allowed values.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param source The source object being validated.\n *  @param errors An array of errors that this rule may add\n *  validation errors to.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\n\n\nfunction range(rule, value, source, errors, options) {\n  var len = typeof rule.len === 'number';\n  var min = typeof rule.min === 'number';\n  var max = typeof rule.max === 'number'; // 正则匹配码点范围从U+010000一直到U+10FFFF的文字（补充平面Supplementary Plane）\n\n  var spRegexp = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n  var val = value;\n  var key = null;\n  var num = typeof value === 'number';\n  var str = typeof value === 'string';\n  var arr = Array.isArray(value);\n\n  if (num) {\n    key = 'number';\n  } else if (str) {\n    key = 'string';\n  } else if (arr) {\n    key = 'array';\n  } // if the value is not of a supported type for range validation\n  // the validation rule rule should use the\n  // type property to also test for a particular type\n\n\n  if (!key) {\n    return false;\n  }\n\n  if (arr) {\n    val = value.length;\n  }\n\n  if (str) {\n    // 处理码点大于U+010000的文字length属性不准确的bug，如\"𠮷𠮷𠮷\".lenght !== 3\n    val = value.replace(spRegexp, '_').length;\n  }\n\n  if (len) {\n    if (val !== rule.len) {\n      errors.push(format(options.messages[key].len, rule.fullField, rule.len));\n    }\n  } else if (min && !max && val < rule.min) {\n    errors.push(format(options.messages[key].min, rule.fullField, rule.min));\n  } else if (max && !min && val > rule.max) {\n    errors.push(format(options.messages[key].max, rule.fullField, rule.max));\n  } else if (min && max && (val < rule.min || val > rule.max)) {\n    errors.push(format(options.messages[key].range, rule.fullField, rule.min, rule.max));\n  }\n}\n\nvar ENUM = 'enum';\n/**\n *  Rule for validating a value exists in an enumerable list.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param source The source object being validated.\n *  @param errors An array of errors that this rule may add\n *  validation errors to.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\n\nfunction enumerable(rule, value, source, errors, options) {\n  rule[ENUM] = Array.isArray(rule[ENUM]) ? rule[ENUM] : [];\n\n  if (rule[ENUM].indexOf(value) === -1) {\n    errors.push(format(options.messages[ENUM], rule.fullField, rule[ENUM].join(', ')));\n  }\n}\n/**\n *  Rule for validating a regular expression pattern.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param source The source object being validated.\n *  @param errors An array of errors that this rule may add\n *  validation errors to.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\n\n\nfunction pattern$1(rule, value, source, errors, options) {\n  if (rule.pattern) {\n    if (rule.pattern instanceof RegExp) {\n      // if a RegExp instance is passed, reset `lastIndex` in case its `global`\n      // flag is accidentally set to `true`, which in a validation scenario\n      // is not necessary and the result might be misleading\n      rule.pattern.lastIndex = 0;\n\n      if (!rule.pattern.test(value)) {\n        errors.push(format(options.messages.pattern.mismatch, rule.fullField, value, rule.pattern));\n      }\n    } else if (typeof rule.pattern === 'string') {\n      var _pattern = new RegExp(rule.pattern);\n\n      if (!_pattern.test(value)) {\n        errors.push(format(options.messages.pattern.mismatch, rule.fullField, value, rule.pattern));\n      }\n    }\n  }\n}\n\nvar rules = {\n  required: required,\n  whitespace: whitespace,\n  type: type,\n  range: range,\n  \"enum\": enumerable,\n  pattern: pattern$1\n};\n/**\n *  Performs validation for string types.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param callback The callback function.\n *  @param source The source object being validated.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\n\nfunction string(rule, value, callback, source, options) {\n  var errors = [];\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);\n\n  if (validate) {\n    if (isEmptyValue(value, 'string') && !rule.required) {\n      return callback();\n    }\n\n    rules.required(rule, value, source, errors, options, 'string');\n\n    if (!isEmptyValue(value, 'string')) {\n      rules.type(rule, value, source, errors, options);\n      rules.range(rule, value, source, errors, options);\n      rules.pattern(rule, value, source, errors, options);\n\n      if (rule.whitespace === true) {\n        rules.whitespace(rule, value, source, errors, options);\n      }\n    }\n  }\n\n  callback(errors);\n}\n/**\n *  Validates a function.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param callback The callback function.\n *  @param source The source object being validated.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\n\n\nfunction method(rule, value, callback, source, options) {\n  var errors = [];\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);\n\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n\n    rules.required(rule, value, source, errors, options);\n\n    if (value !== undefined) {\n      rules.type(rule, value, source, errors, options);\n    }\n  }\n\n  callback(errors);\n}\n/**\n *  Validates a number.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param callback The callback function.\n *  @param source The source object being validated.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\n\n\nfunction number(rule, value, callback, source, options) {\n  var errors = [];\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);\n\n  if (validate) {\n    if (value === '') {\n      value = undefined;\n    }\n\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n\n    rules.required(rule, value, source, errors, options);\n\n    if (value !== undefined) {\n      rules.type(rule, value, source, errors, options);\n      rules.range(rule, value, source, errors, options);\n    }\n  }\n\n  callback(errors);\n}\n/**\n *  Validates a boolean.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param callback The callback function.\n *  @param source The source object being validated.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\n\n\nfunction _boolean(rule, value, callback, source, options) {\n  var errors = [];\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);\n\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n\n    rules.required(rule, value, source, errors, options);\n\n    if (value !== undefined) {\n      rules.type(rule, value, source, errors, options);\n    }\n  }\n\n  callback(errors);\n}\n/**\n *  Validates the regular expression type.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param callback The callback function.\n *  @param source The source object being validated.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\n\n\nfunction regexp(rule, value, callback, source, options) {\n  var errors = [];\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);\n\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n\n    rules.required(rule, value, source, errors, options);\n\n    if (!isEmptyValue(value)) {\n      rules.type(rule, value, source, errors, options);\n    }\n  }\n\n  callback(errors);\n}\n/**\n *  Validates a number is an integer.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param callback The callback function.\n *  @param source The source object being validated.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\n\n\nfunction integer(rule, value, callback, source, options) {\n  var errors = [];\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);\n\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n\n    rules.required(rule, value, source, errors, options);\n\n    if (value !== undefined) {\n      rules.type(rule, value, source, errors, options);\n      rules.range(rule, value, source, errors, options);\n    }\n  }\n\n  callback(errors);\n}\n/**\n *  Validates a number is a floating point number.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param callback The callback function.\n *  @param source The source object being validated.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\n\n\nfunction floatFn(rule, value, callback, source, options) {\n  var errors = [];\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);\n\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n\n    rules.required(rule, value, source, errors, options);\n\n    if (value !== undefined) {\n      rules.type(rule, value, source, errors, options);\n      rules.range(rule, value, source, errors, options);\n    }\n  }\n\n  callback(errors);\n}\n/**\n *  Validates an array.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param callback The callback function.\n *  @param source The source object being validated.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\n\n\nfunction array(rule, value, callback, source, options) {\n  var errors = [];\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);\n\n  if (validate) {\n    if ((value === undefined || value === null) && !rule.required) {\n      return callback();\n    }\n\n    rules.required(rule, value, source, errors, options, 'array');\n\n    if (value !== undefined && value !== null) {\n      rules.type(rule, value, source, errors, options);\n      rules.range(rule, value, source, errors, options);\n    }\n  }\n\n  callback(errors);\n}\n/**\n *  Validates an object.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param callback The callback function.\n *  @param source The source object being validated.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\n\n\nfunction object(rule, value, callback, source, options) {\n  var errors = [];\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);\n\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n\n    rules.required(rule, value, source, errors, options);\n\n    if (value !== undefined) {\n      rules.type(rule, value, source, errors, options);\n    }\n  }\n\n  callback(errors);\n}\n\nvar ENUM$1 = 'enum';\n/**\n *  Validates an enumerable list.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param callback The callback function.\n *  @param source The source object being validated.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\n\nfunction enumerable$1(rule, value, callback, source, options) {\n  var errors = [];\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);\n\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n\n    rules.required(rule, value, source, errors, options);\n\n    if (value !== undefined) {\n      rules[ENUM$1](rule, value, source, errors, options);\n    }\n  }\n\n  callback(errors);\n}\n/**\n *  Validates a regular expression pattern.\n *\n *  Performs validation when a rule only contains\n *  a pattern property but is not declared as a string type.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param callback The callback function.\n *  @param source The source object being validated.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\n\n\nfunction pattern$2(rule, value, callback, source, options) {\n  var errors = [];\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);\n\n  if (validate) {\n    if (isEmptyValue(value, 'string') && !rule.required) {\n      return callback();\n    }\n\n    rules.required(rule, value, source, errors, options);\n\n    if (!isEmptyValue(value, 'string')) {\n      rules.pattern(rule, value, source, errors, options);\n    }\n  }\n\n  callback(errors);\n}\n\nfunction date(rule, value, callback, source, options) {\n  // console.log('integer rule called %j', rule);\n  var errors = [];\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field); // console.log('validate on %s value', value);\n\n  if (validate) {\n    if (isEmptyValue(value, 'date') && !rule.required) {\n      return callback();\n    }\n\n    rules.required(rule, value, source, errors, options);\n\n    if (!isEmptyValue(value, 'date')) {\n      var dateObject;\n\n      if (value instanceof Date) {\n        dateObject = value;\n      } else {\n        dateObject = new Date(value);\n      }\n\n      rules.type(rule, dateObject, source, errors, options);\n\n      if (dateObject) {\n        rules.range(rule, dateObject.getTime(), source, errors, options);\n      }\n    }\n  }\n\n  callback(errors);\n}\n\nfunction required$1(rule, value, callback, source, options) {\n  var errors = [];\n  var type = Array.isArray(value) ? 'array' : typeof value;\n  rules.required(rule, value, source, errors, options, type);\n  callback(errors);\n}\n\nfunction type$1(rule, value, callback, source, options) {\n  var ruleType = rule.type;\n  var errors = [];\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);\n\n  if (validate) {\n    if (isEmptyValue(value, ruleType) && !rule.required) {\n      return callback();\n    }\n\n    rules.required(rule, value, source, errors, options, ruleType);\n\n    if (!isEmptyValue(value, ruleType)) {\n      rules.type(rule, value, source, errors, options);\n    }\n  }\n\n  callback(errors);\n}\n/**\n *  Performs validation for any type.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param callback The callback function.\n *  @param source The source object being validated.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\n\n\nfunction any(rule, value, callback, source, options) {\n  var errors = [];\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);\n\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n\n    rules.required(rule, value, source, errors, options);\n  }\n\n  callback(errors);\n}\n\nvar validators = {\n  string: string,\n  method: method,\n  number: number,\n  \"boolean\": _boolean,\n  regexp: regexp,\n  integer: integer,\n  \"float\": floatFn,\n  array: array,\n  object: object,\n  \"enum\": enumerable$1,\n  pattern: pattern$2,\n  date: date,\n  url: type$1,\n  hex: type$1,\n  email: type$1,\n  required: required$1,\n  any: any\n};\n\nfunction newMessages() {\n  return {\n    \"default\": 'Validation error on field %s',\n    required: '%s is required',\n    \"enum\": '%s must be one of %s',\n    whitespace: '%s cannot be empty',\n    date: {\n      format: '%s date %s is invalid for format %s',\n      parse: '%s date could not be parsed, %s is invalid ',\n      invalid: '%s date %s is invalid'\n    },\n    types: {\n      string: '%s is not a %s',\n      method: '%s is not a %s (function)',\n      array: '%s is not an %s',\n      object: '%s is not an %s',\n      number: '%s is not a %s',\n      date: '%s is not a %s',\n      \"boolean\": '%s is not a %s',\n      integer: '%s is not an %s',\n      \"float\": '%s is not a %s',\n      regexp: '%s is not a valid %s',\n      email: '%s is not a valid %s',\n      url: '%s is not a valid %s',\n      hex: '%s is not a valid %s'\n    },\n    string: {\n      len: '%s must be exactly %s characters',\n      min: '%s must be at least %s characters',\n      max: '%s cannot be longer than %s characters',\n      range: '%s must be between %s and %s characters'\n    },\n    number: {\n      len: '%s must equal %s',\n      min: '%s cannot be less than %s',\n      max: '%s cannot be greater than %s',\n      range: '%s must be between %s and %s'\n    },\n    array: {\n      len: '%s must be exactly %s in length',\n      min: '%s cannot be less than %s in length',\n      max: '%s cannot be greater than %s in length',\n      range: '%s must be between %s and %s in length'\n    },\n    pattern: {\n      mismatch: '%s value %s does not match pattern %s'\n    },\n    clone: function clone() {\n      var cloned = JSON.parse(JSON.stringify(this));\n      cloned.clone = this.clone;\n      return cloned;\n    }\n  };\n}\n\nvar messages = newMessages();\n/**\n *  Encapsulates a validation schema.\n *\n *  @param descriptor An object declaring validation rules\n *  for this schema.\n */\n\nfunction Schema(descriptor) {\n  this.rules = null;\n  this._messages = messages;\n  this.define(descriptor);\n}\n\nSchema.prototype = {\n  messages: function messages(_messages) {\n    if (_messages) {\n      this._messages = deepMerge(newMessages(), _messages);\n    }\n\n    return this._messages;\n  },\n  define: function define(rules) {\n    if (!rules) {\n      throw new Error('Cannot configure a schema with no rules');\n    }\n\n    if (typeof rules !== 'object' || Array.isArray(rules)) {\n      throw new Error('Rules must be an object');\n    }\n\n    this.rules = {};\n    var z;\n    var item;\n\n    for (z in rules) {\n      if (rules.hasOwnProperty(z)) {\n        item = rules[z];\n        this.rules[z] = Array.isArray(item) ? item : [item];\n      }\n    }\n  },\n  validate: function validate(source_, o, oc) {\n    var _this = this;\n\n    if (o === void 0) {\n      o = {};\n    }\n\n    if (oc === void 0) {\n      oc = function oc() {};\n    }\n\n    var source = source_;\n    var options = o;\n    var callback = oc;\n\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n\n    if (!this.rules || Object.keys(this.rules).length === 0) {\n      if (callback) {\n        callback();\n      }\n\n      return Promise.resolve();\n    }\n\n    function complete(results) {\n      var i;\n      var errors = [];\n      var fields = {};\n\n      function add(e) {\n        if (Array.isArray(e)) {\n          var _errors;\n\n          errors = (_errors = errors).concat.apply(_errors, e);\n        } else {\n          errors.push(e);\n        }\n      }\n\n      for (i = 0; i < results.length; i++) {\n        add(results[i]);\n      }\n\n      if (!errors.length) {\n        errors = null;\n        fields = null;\n      } else {\n        fields = convertFieldsError(errors);\n      }\n\n      callback(errors, fields);\n    }\n\n    if (options.messages) {\n      var messages$1 = this.messages();\n\n      if (messages$1 === messages) {\n        messages$1 = newMessages();\n      }\n\n      deepMerge(messages$1, options.messages);\n      options.messages = messages$1;\n    } else {\n      options.messages = this.messages();\n    }\n\n    var arr;\n    var value;\n    var series = {};\n    var keys = options.keys || Object.keys(this.rules);\n    keys.forEach(function (z) {\n      arr = _this.rules[z];\n      value = source[z];\n      arr.forEach(function (r) {\n        var rule = r;\n\n        if (typeof rule.transform === 'function') {\n          if (source === source_) {\n            source = _extends({}, source);\n          }\n\n          value = source[z] = rule.transform(value);\n        }\n\n        if (typeof rule === 'function') {\n          rule = {\n            validator: rule\n          };\n        } else {\n          rule = _extends({}, rule);\n        }\n\n        rule.validator = _this.getValidationMethod(rule);\n        rule.field = z;\n        rule.fullField = rule.fullField || z;\n        rule.type = _this.getType(rule);\n\n        if (!rule.validator) {\n          return;\n        }\n\n        series[z] = series[z] || [];\n        series[z].push({\n          rule: rule,\n          value: value,\n          source: source,\n          field: z\n        });\n      });\n    });\n    var errorFields = {};\n    return asyncMap(series, options, function (data, doIt) {\n      var rule = data.rule;\n      var deep = (rule.type === 'object' || rule.type === 'array') && (typeof rule.fields === 'object' || typeof rule.defaultField === 'object');\n      deep = deep && (rule.required || !rule.required && data.value);\n      rule.field = data.field;\n\n      function addFullfield(key, schema) {\n        return _extends({}, schema, {\n          fullField: rule.fullField + \".\" + key\n        });\n      }\n\n      function cb(e) {\n        if (e === void 0) {\n          e = [];\n        }\n\n        var errors = e;\n\n        if (!Array.isArray(errors)) {\n          errors = [errors];\n        }\n\n        if (!options.suppressWarning && errors.length) {\n          Schema.warning('async-validator:', errors);\n        }\n\n        if (errors.length && rule.message !== undefined) {\n          errors = [].concat(rule.message);\n        }\n\n        errors = errors.map(complementError(rule));\n\n        if (options.first && errors.length) {\n          errorFields[rule.field] = 1;\n          return doIt(errors);\n        }\n\n        if (!deep) {\n          doIt(errors);\n        } else {\n          // if rule is required but the target object\n          // does not exist fail at the rule level and don't\n          // go deeper\n          if (rule.required && !data.value) {\n            if (rule.message !== undefined) {\n              errors = [].concat(rule.message).map(complementError(rule));\n            } else if (options.error) {\n              errors = [options.error(rule, format(options.messages.required, rule.field))];\n            }\n\n            return doIt(errors);\n          }\n\n          var fieldsSchema = {};\n\n          if (rule.defaultField) {\n            for (var k in data.value) {\n              if (data.value.hasOwnProperty(k)) {\n                fieldsSchema[k] = rule.defaultField;\n              }\n            }\n          }\n\n          fieldsSchema = _extends({}, fieldsSchema, data.rule.fields);\n\n          for (var f in fieldsSchema) {\n            if (fieldsSchema.hasOwnProperty(f)) {\n              var fieldSchema = Array.isArray(fieldsSchema[f]) ? fieldsSchema[f] : [fieldsSchema[f]];\n              fieldsSchema[f] = fieldSchema.map(addFullfield.bind(null, f));\n            }\n          }\n\n          var schema = new Schema(fieldsSchema);\n          schema.messages(options.messages);\n\n          if (data.rule.options) {\n            data.rule.options.messages = options.messages;\n            data.rule.options.error = options.error;\n          }\n\n          schema.validate(data.value, data.rule.options || options, function (errs) {\n            var finalErrors = [];\n\n            if (errors && errors.length) {\n              finalErrors.push.apply(finalErrors, errors);\n            }\n\n            if (errs && errs.length) {\n              finalErrors.push.apply(finalErrors, errs);\n            }\n\n            doIt(finalErrors.length ? finalErrors : null);\n          });\n        }\n      }\n\n      var res;\n\n      if (rule.asyncValidator) {\n        res = rule.asyncValidator(rule, data.value, cb, data.source, options);\n      } else if (rule.validator) {\n        res = rule.validator(rule, data.value, cb, data.source, options);\n\n        if (res === true) {\n          cb();\n        } else if (res === false) {\n          cb(rule.message || rule.field + \" fails\");\n        } else if (res instanceof Array) {\n          cb(res);\n        } else if (res instanceof Error) {\n          cb(res.message);\n        }\n      }\n\n      if (res && res.then) {\n        res.then(function () {\n          return cb();\n        }, function (e) {\n          return cb(e);\n        });\n      }\n    }, function (results) {\n      complete(results);\n    });\n  },\n  getType: function getType(rule) {\n    if (rule.type === undefined && rule.pattern instanceof RegExp) {\n      rule.type = 'pattern';\n    }\n\n    if (typeof rule.validator !== 'function' && rule.type && !validators.hasOwnProperty(rule.type)) {\n      throw new Error(format('Unknown rule type %s', rule.type));\n    }\n\n    return rule.type || 'string';\n  },\n  getValidationMethod: function getValidationMethod(rule) {\n    if (typeof rule.validator === 'function') {\n      return rule.validator;\n    }\n\n    var keys = Object.keys(rule);\n    var messageIndex = keys.indexOf('message');\n\n    if (messageIndex !== -1) {\n      keys.splice(messageIndex, 1);\n    }\n\n    if (keys.length === 1 && keys[0] === 'required') {\n      return validators.required;\n    }\n\n    return validators[this.getType(rule)] || false;\n  }\n};\n\nSchema.register = function register(type, validator) {\n  if (typeof validator !== 'function') {\n    throw new Error('Cannot register a validator by type, validator is not a function');\n  }\n\n  validators[type] = validator;\n};\n\nSchema.warning = warning;\nSchema.messages = messages;\nSchema.validators = validators;\nexport default Schema;","map":{"version":3,"mappings":"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","names":["formatRegExp","warning","process","env","NODE_ENV","window","document","type","errors","console","warn","every","e","convertFieldsError","length","fields","forEach","field","error","push","format","args","arguments","i","f","len","apply","slice","str","String","replace","x","Number","JSON","stringify","_","isNativeStringType","isEmptyValue","value","undefined","Array","isArray","asyncParallelArray","arr","func","callback","results","total","arrLength","count","a","asyncSerialArray","index","next","original","flattenObjArr","objArr","ret","Object","keys","k","AsyncValidationError","_inheritsLoose","_this","Error","asyncMap","option","first","pending","Promise","resolve","reject","flattenArr","firstFields","objArrKeys","objArrLength","key","indexOf","complementError","rule","oe","message","fullField","deepMerge","target","source","s","hasOwnProperty","required","options","util","messages","whitespace","test","pattern","email","url","RegExp","hex","types","integer","number","parseInt","array","regexp","date","getTime","getMonth","getYear","isNaN","object","method","match","custom","ruleType","range","min","max","spRegexp","val","num","ENUM","enumerable","join","lastIndex","mismatch","_pattern","enumRule","string","validate","rules","boolean","floatFn","dateObject","Date","any","enumValidator","newMessages","parse","invalid","clone","cloned","Schema","descriptor","_messages","defaultMessages","define","prototype","z","item","source_","o","oc","complete","add","concat","series","r","transform","validator","getValidationMethod","getType","errorFields","data","doIt","deep","defaultField","addFullfield","schema","cb","suppressWarning","map","fieldsSchema","fieldSchema","bind","finalErrors","errs","res","asyncValidator","then","validators","messageIndex","splice","register"],"sources":["../../src/util.js","../../src/rule/required.js","../../src/rule/whitespace.js","../../src/rule/type.js","../../src/rule/range.js","../../src/rule/enum.js","../../src/rule/pattern.js","../../src/rule/index.js","../../src/validator/string.js","../../src/validator/method.js","../../src/validator/number.js","../../src/validator/boolean.js","../../src/validator/regexp.js","../../src/validator/integer.js","../../src/validator/float.js","../../src/validator/array.js","../../src/validator/object.js","../../src/validator/enum.js","../../src/validator/pattern.js","../../src/validator/date.js","../../src/validator/required.js","../../src/validator/type.js","../../src/validator/any.js","../../src/validator/index.js","../../src/messages.js","../../src/index.js"],"sourcesContent":["/* eslint no-console:0 */\n\nconst formatRegExp = /%[sdj%]/g;\n\nexport let warning = () => {};\n\n// don't print warning message when in production env or node runtime\nif (\n  typeof process !== 'undefined' &&\n  process.env &&\n  process.env.NODE_ENV !== 'production' &&\n  typeof window !== 'undefined' &&\n  typeof document !== 'undefined'\n) {\n  warning = (type, errors) => {\n    if (typeof console !== 'undefined' && console.warn) {\n      if (errors.every(e => typeof e === 'string')) {\n        console.warn(type, errors);\n      }\n    }\n  };\n}\n\nexport function convertFieldsError(errors) {\n  if (!errors || !errors.length) return null;\n  const fields = {};\n  errors.forEach(error => {\n    const field = error.field;\n    fields[field] = fields[field] || [];\n    fields[field].push(error);\n  });\n  return fields;\n}\n\nexport function format(...args) {\n  let i = 1;\n  const f = args[0];\n  const len = args.length;\n  if (typeof f === 'function') {\n    return f.apply(null, args.slice(1));\n  }\n  if (typeof f === 'string') {\n    let str = String(f).replace(formatRegExp, x => {\n      if (x === '%%') {\n        return '%';\n      }\n      if (i >= len) {\n        return x;\n      }\n      switch (x) {\n        case '%s':\n          return String(args[i++]);\n        case '%d':\n          return Number(args[i++]);\n        case '%j':\n          try {\n            return JSON.stringify(args[i++]);\n          } catch (_) {\n            return '[Circular]';\n          }\n          break;\n        default:\n          return x;\n      }\n    });\n    return str;\n  }\n  return f;\n}\n\nfunction isNativeStringType(type) {\n  return (\n    type === 'string' ||\n    type === 'url' ||\n    type === 'hex' ||\n    type === 'email' ||\n    type === 'date' ||\n    type === 'pattern'\n  );\n}\n\nexport function isEmptyValue(value, type) {\n  if (value === undefined || value === null) {\n    return true;\n  }\n  if (type === 'array' && Array.isArray(value) && !value.length) {\n    return true;\n  }\n  if (isNativeStringType(type) && typeof value === 'string' && !value) {\n    return true;\n  }\n  return false;\n}\n\nexport function isEmptyObject(obj) {\n  return Object.keys(obj).length === 0;\n}\n\nfunction asyncParallelArray(arr, func, callback) {\n  const results = [];\n  let total = 0;\n  const arrLength = arr.length;\n\n  function count(errors) {\n    results.push.apply(results, errors);\n    total++;\n    if (total === arrLength) {\n      callback(results);\n    }\n  }\n\n  arr.forEach(a => {\n    func(a, count);\n  });\n}\n\nfunction asyncSerialArray(arr, func, callback) {\n  let index = 0;\n  const arrLength = arr.length;\n\n  function next(errors) {\n    if (errors && errors.length) {\n      callback(errors);\n      return;\n    }\n    const original = index;\n    index = index + 1;\n    if (original < arrLength) {\n      func(arr[original], next);\n    } else {\n      callback([]);\n    }\n  }\n\n  next([]);\n}\n\nfunction flattenObjArr(objArr) {\n  const ret = [];\n  Object.keys(objArr).forEach(k => {\n    ret.push.apply(ret, objArr[k]);\n  });\n  return ret;\n}\n\nexport class AsyncValidationError extends Error {\n  constructor(errors, fields) {\n    super('Async Validation Error');\n    this.errors = errors;\n    this.fields = fields;\n  }\n}\n\nexport function asyncMap(objArr, option, func, callback) {\n  if (option.first) {\n    const pending = new Promise((resolve, reject) => {\n      const next = errors => {\n        callback(errors);\n        return errors.length\n          ? reject(new AsyncValidationError(errors, convertFieldsError(errors)))\n          : resolve();\n      };\n      const flattenArr = flattenObjArr(objArr);\n      asyncSerialArray(flattenArr, func, next);\n    });\n    pending.catch(e => e);\n    return pending;\n  }\n  let firstFields = option.firstFields || [];\n  if (firstFields === true) {\n    firstFields = Object.keys(objArr);\n  }\n  const objArrKeys = Object.keys(objArr);\n  const objArrLength = objArrKeys.length;\n  let total = 0;\n  const results = [];\n  const pending = new Promise((resolve, reject) => {\n    const next = errors => {\n      results.push.apply(results, errors);\n      total++;\n      if (total === objArrLength) {\n        callback(results);\n        return results.length\n          ? reject(\n              new AsyncValidationError(results, convertFieldsError(results)),\n            )\n          : resolve();\n      }\n    };\n    if (!objArrKeys.length) {\n      callback(results);\n      resolve();\n    }\n    objArrKeys.forEach(key => {\n      const arr = objArr[key];\n      if (firstFields.indexOf(key) !== -1) {\n        asyncSerialArray(arr, func, next);\n      } else {\n        asyncParallelArray(arr, func, next);\n      }\n    });\n  });\n  pending.catch(e => e);\n  return pending;\n}\n\nexport function complementError(rule) {\n  return oe => {\n    if (oe && oe.message) {\n      oe.field = oe.field || rule.fullField;\n      return oe;\n    }\n    return {\n      message: typeof oe === 'function' ? oe() : oe,\n      field: oe.field || rule.fullField,\n    };\n  };\n}\n\nexport function deepMerge(target, source) {\n  if (source) {\n    for (const s in source) {\n      if (source.hasOwnProperty(s)) {\n        const value = source[s];\n        if (typeof value === 'object' && typeof target[s] === 'object') {\n          target[s] = {\n            ...target[s],\n            ...value,\n          };\n        } else {\n          target[s] = value;\n        }\n      }\n    }\n  }\n  return target;\n}\n","import * as util from '../util';\n\n/**\n *  Rule for validating required fields.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param source The source object being validated.\n *  @param errors An array of errors that this rule may add\n *  validation errors to.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\nfunction required(rule, value, source, errors, options, type) {\n  if (\n    rule.required &&\n    (!source.hasOwnProperty(rule.field) ||\n      util.isEmptyValue(value, type || rule.type))\n  ) {\n    errors.push(util.format(options.messages.required, rule.fullField));\n  }\n}\n\nexport default required;\n","import * as util from '../util';\n\n/**\n *  Rule for validating whitespace.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param source The source object being validated.\n *  @param errors An array of errors that this rule may add\n *  validation errors to.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\nfunction whitespace(rule, value, source, errors, options) {\n  if (/^\\s+$/.test(value) || value === '') {\n    errors.push(util.format(options.messages.whitespace, rule.fullField));\n  }\n}\n\nexport default whitespace;\n","import * as util from '../util';\nimport required from './required';\n\n/* eslint max-len:0 */\n\nconst pattern = {\n  // http://emailregex.com/\n  email: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n  url: new RegExp(\n    '^(?!mailto:)(?:(?:http|https|ftp)://|//)(?:\\\\S+(?::\\\\S*)?@)?(?:(?:(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}(?:\\\\.(?:[0-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))|(?:(?:[a-z\\\\u00a1-\\\\uffff0-9]+-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]+-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)*(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]{2,})))|localhost)(?::\\\\d{2,5})?(?:(/|\\\\?|#)[^\\\\s]*)?$',\n    'i',\n  ),\n  hex: /^#?([a-f0-9]{6}|[a-f0-9]{3})$/i,\n};\n\nconst types = {\n  integer(value) {\n    return types.number(value) && parseInt(value, 10) === value;\n  },\n  float(value) {\n    return types.number(value) && !types.integer(value);\n  },\n  array(value) {\n    return Array.isArray(value);\n  },\n  regexp(value) {\n    if (value instanceof RegExp) {\n      return true;\n    }\n    try {\n      return !!new RegExp(value);\n    } catch (e) {\n      return false;\n    }\n  },\n  date(value) {\n    return (\n      typeof value.getTime === 'function' &&\n      typeof value.getMonth === 'function' &&\n      typeof value.getYear === 'function' &&\n      !isNaN(value.getTime())\n    );\n  },\n  number(value) {\n    if (isNaN(value)) {\n      return false;\n    }\n    return typeof value === 'number';\n  },\n  object(value) {\n    return typeof value === 'object' && !types.array(value);\n  },\n  method(value) {\n    return typeof value === 'function';\n  },\n  email(value) {\n    return (\n      typeof value === 'string' &&\n      !!value.match(pattern.email) &&\n      value.length < 255\n    );\n  },\n  url(value) {\n    return typeof value === 'string' && !!value.match(pattern.url);\n  },\n  hex(value) {\n    return typeof value === 'string' && !!value.match(pattern.hex);\n  },\n};\n\n/**\n *  Rule for validating the type of a value.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param source The source object being validated.\n *  @param errors An array of errors that this rule may add\n *  validation errors to.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\nfunction type(rule, value, source, errors, options) {\n  if (rule.required && value === undefined) {\n    required(rule, value, source, errors, options);\n    return;\n  }\n  const custom = [\n    'integer',\n    'float',\n    'array',\n    'regexp',\n    'object',\n    'method',\n    'email',\n    'number',\n    'date',\n    'url',\n    'hex',\n  ];\n  const ruleType = rule.type;\n  if (custom.indexOf(ruleType) > -1) {\n    if (!types[ruleType](value)) {\n      errors.push(\n        util.format(\n          options.messages.types[ruleType],\n          rule.fullField,\n          rule.type,\n        ),\n      );\n    }\n    // straight typeof check\n  } else if (ruleType && typeof value !== rule.type) {\n    errors.push(\n      util.format(options.messages.types[ruleType], rule.fullField, rule.type),\n    );\n  }\n}\n\nexport default type;\n","import * as util from '../util';\n\n/**\n *  Rule for validating minimum and maximum allowed values.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param source The source object being validated.\n *  @param errors An array of errors that this rule may add\n *  validation errors to.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\nfunction range(rule, value, source, errors, options) {\n  const len = typeof rule.len === 'number';\n  const min = typeof rule.min === 'number';\n  const max = typeof rule.max === 'number';\n  // 正则匹配码点范围从U+010000一直到U+10FFFF的文字（补充平面Supplementary Plane）\n  const spRegexp = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n  let val = value;\n  let key = null;\n  const num = typeof value === 'number';\n  const str = typeof value === 'string';\n  const arr = Array.isArray(value);\n  if (num) {\n    key = 'number';\n  } else if (str) {\n    key = 'string';\n  } else if (arr) {\n    key = 'array';\n  }\n  // if the value is not of a supported type for range validation\n  // the validation rule rule should use the\n  // type property to also test for a particular type\n  if (!key) {\n    return false;\n  }\n  if (arr) {\n    val = value.length;\n  }\n  if (str) {\n    // 处理码点大于U+010000的文字length属性不准确的bug，如\"𠮷𠮷𠮷\".lenght !== 3\n    val = value.replace(spRegexp, '_').length;\n  }\n  if (len) {\n    if (val !== rule.len) {\n      errors.push(\n        util.format(options.messages[key].len, rule.fullField, rule.len),\n      );\n    }\n  } else if (min && !max && val < rule.min) {\n    errors.push(\n      util.format(options.messages[key].min, rule.fullField, rule.min),\n    );\n  } else if (max && !min && val > rule.max) {\n    errors.push(\n      util.format(options.messages[key].max, rule.fullField, rule.max),\n    );\n  } else if (min && max && (val < rule.min || val > rule.max)) {\n    errors.push(\n      util.format(\n        options.messages[key].range,\n        rule.fullField,\n        rule.min,\n        rule.max,\n      ),\n    );\n  }\n}\n\nexport default range;\n","import * as util from '../util';\n\nconst ENUM = 'enum';\n\n/**\n *  Rule for validating a value exists in an enumerable list.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param source The source object being validated.\n *  @param errors An array of errors that this rule may add\n *  validation errors to.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\nfunction enumerable(rule, value, source, errors, options) {\n  rule[ENUM] = Array.isArray(rule[ENUM]) ? rule[ENUM] : [];\n  if (rule[ENUM].indexOf(value) === -1) {\n    errors.push(\n      util.format(\n        options.messages[ENUM],\n        rule.fullField,\n        rule[ENUM].join(', '),\n      ),\n    );\n  }\n}\n\nexport default enumerable;\n","import * as util from '../util';\n\n/**\n *  Rule for validating a regular expression pattern.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param source The source object being validated.\n *  @param errors An array of errors that this rule may add\n *  validation errors to.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\nfunction pattern(rule, value, source, errors, options) {\n  if (rule.pattern) {\n    if (rule.pattern instanceof RegExp) {\n      // if a RegExp instance is passed, reset `lastIndex` in case its `global`\n      // flag is accidentally set to `true`, which in a validation scenario\n      // is not necessary and the result might be misleading\n      rule.pattern.lastIndex = 0;\n      if (!rule.pattern.test(value)) {\n        errors.push(\n          util.format(\n            options.messages.pattern.mismatch,\n            rule.fullField,\n            value,\n            rule.pattern,\n          ),\n        );\n      }\n    } else if (typeof rule.pattern === 'string') {\n      const _pattern = new RegExp(rule.pattern);\n      if (!_pattern.test(value)) {\n        errors.push(\n          util.format(\n            options.messages.pattern.mismatch,\n            rule.fullField,\n            value,\n            rule.pattern,\n          ),\n        );\n      }\n    }\n  }\n}\n\nexport default pattern;\n","import required from './required';\nimport whitespace from './whitespace';\nimport type from './type';\nimport range from './range';\nimport enumRule from './enum';\nimport pattern from './pattern';\n\nexport default {\n  required,\n  whitespace,\n  type,\n  range,\n  enum: enumRule,\n  pattern,\n};\n","import rules from '../rule/index.js';\nimport { isEmptyValue } from '../util';\n\n/**\n *  Performs validation for string types.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param callback The callback function.\n *  @param source The source object being validated.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\nfunction string(rule, value, callback, source, options) {\n  const errors = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value, 'string') && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options, 'string');\n    if (!isEmptyValue(value, 'string')) {\n      rules.type(rule, value, source, errors, options);\n      rules.range(rule, value, source, errors, options);\n      rules.pattern(rule, value, source, errors, options);\n      if (rule.whitespace === true) {\n        rules.whitespace(rule, value, source, errors, options);\n      }\n    }\n  }\n  callback(errors);\n}\n\nexport default string;\n","import rules from '../rule/index.js';\nimport { isEmptyValue } from '../util';\n\n/**\n *  Validates a function.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param callback The callback function.\n *  @param source The source object being validated.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\nfunction method(rule, value, callback, source, options) {\n  const errors = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (value !== undefined) {\n      rules.type(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n}\n\nexport default method;\n","import rules from '../rule/index.js';\nimport { isEmptyValue } from '../util';\n\n/**\n *  Validates a number.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param callback The callback function.\n *  @param source The source object being validated.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\nfunction number(rule, value, callback, source, options) {\n  const errors = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (value === '') {\n      value = undefined;\n    }\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (value !== undefined) {\n      rules.type(rule, value, source, errors, options);\n      rules.range(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n}\n\nexport default number;\n","import { isEmptyValue } from '../util';\nimport rules from '../rule/index.js';\n\n/**\n *  Validates a boolean.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param callback The callback function.\n *  @param source The source object being validated.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\nfunction boolean(rule, value, callback, source, options) {\n  const errors = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (value !== undefined) {\n      rules.type(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n}\n\nexport default boolean;\n","import rules from '../rule/index.js';\nimport { isEmptyValue } from '../util';\n\n/**\n *  Validates the regular expression type.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param callback The callback function.\n *  @param source The source object being validated.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\nfunction regexp(rule, value, callback, source, options) {\n  const errors = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (!isEmptyValue(value)) {\n      rules.type(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n}\n\nexport default regexp;\n","import rules from '../rule/index.js';\nimport { isEmptyValue } from '../util';\n\n/**\n *  Validates a number is an integer.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param callback The callback function.\n *  @param source The source object being validated.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\nfunction integer(rule, value, callback, source, options) {\n  const errors = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (value !== undefined) {\n      rules.type(rule, value, source, errors, options);\n      rules.range(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n}\n\nexport default integer;\n","import rules from '../rule/index.js';\nimport { isEmptyValue } from '../util';\n\n/**\n *  Validates a number is a floating point number.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param callback The callback function.\n *  @param source The source object being validated.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\nfunction floatFn(rule, value, callback, source, options) {\n  const errors = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (value !== undefined) {\n      rules.type(rule, value, source, errors, options);\n      rules.range(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n}\n\nexport default floatFn;\n","import rules from '../rule/index';\nimport { isEmptyValue } from '../util';\n/**\n *  Validates an array.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param callback The callback function.\n *  @param source The source object being validated.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\nfunction array(rule, value, callback, source, options) {\n  const errors = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if ((value === undefined || value === null) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options, 'array');\n    if (value !== undefined && value !== null) {\n      rules.type(rule, value, source, errors, options);\n      rules.range(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n}\n\nexport default array;\n","import rules from '../rule/index.js';\nimport { isEmptyValue } from '../util';\n\n/**\n *  Validates an object.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param callback The callback function.\n *  @param source The source object being validated.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\nfunction object(rule, value, callback, source, options) {\n  const errors = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (value !== undefined) {\n      rules.type(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n}\n\nexport default object;\n","import rules from '../rule/index.js';\nimport { isEmptyValue } from '../util';\n\nconst ENUM = 'enum';\n\n/**\n *  Validates an enumerable list.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param callback The callback function.\n *  @param source The source object being validated.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\nfunction enumerable(rule, value, callback, source, options) {\n  const errors = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (value !== undefined) {\n      rules[ENUM](rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n}\n\nexport default enumerable;\n","import rules from '../rule/index.js';\nimport { isEmptyValue } from '../util';\n\n/**\n *  Validates a regular expression pattern.\n *\n *  Performs validation when a rule only contains\n *  a pattern property but is not declared as a string type.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param callback The callback function.\n *  @param source The source object being validated.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\nfunction pattern(rule, value, callback, source, options) {\n  const errors = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value, 'string') && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (!isEmptyValue(value, 'string')) {\n      rules.pattern(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n}\n\nexport default pattern;\n","import rules from '../rule/index.js';\nimport { isEmptyValue } from '../util';\n\nfunction date(rule, value, callback, source, options) {\n  // console.log('integer rule called %j', rule);\n  const errors = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  // console.log('validate on %s value', value);\n  if (validate) {\n    if (isEmptyValue(value, 'date') && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (!isEmptyValue(value, 'date')) {\n      let dateObject;\n\n      if (value instanceof Date) {\n        dateObject = value;\n      } else {\n        dateObject = new Date(value);\n      }\n\n      rules.type(rule, dateObject, source, errors, options);\n      if (dateObject) {\n        rules.range(rule, dateObject.getTime(), source, errors, options);\n      }\n    }\n  }\n  callback(errors);\n}\n\nexport default date;\n","import rules from '../rule/index.js';\n\nfunction required(rule, value, callback, source, options) {\n  const errors = [];\n  const type = Array.isArray(value) ? 'array' : typeof value;\n  rules.required(rule, value, source, errors, options, type);\n  callback(errors);\n}\n\nexport default required;\n","import rules from '../rule/index.js';\nimport { isEmptyValue } from '../util';\n\nfunction type(rule, value, callback, source, options) {\n  const ruleType = rule.type;\n  const errors = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value, ruleType) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options, ruleType);\n    if (!isEmptyValue(value, ruleType)) {\n      rules.type(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n}\n\nexport default type;\n","import rules from '../rule/index.js';\nimport { isEmptyValue } from '../util';\n\n/**\n *  Performs validation for any type.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param callback The callback function.\n *  @param source The source object being validated.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\nfunction any(rule, value, callback, source, options) {\n  const errors = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n  }\n  callback(errors);\n}\n\nexport default any;\n","import string from './string';\nimport method from './method';\nimport number from './number';\nimport boolean from './boolean';\nimport regexp from './regexp';\nimport integer from './integer';\nimport float from './float';\nimport array from './array';\nimport object from './object';\nimport enumValidator from './enum';\nimport pattern from './pattern';\nimport date from './date';\nimport required from './required';\nimport type from './type';\nimport any from './any';\n\nexport default {\n  string,\n  method,\n  number,\n  boolean,\n  regexp,\n  integer,\n  float,\n  array,\n  object,\n  enum: enumValidator,\n  pattern,\n  date,\n  url: type,\n  hex: type,\n  email: type,\n  required,\n  any,\n};\n","export function newMessages() {\n  return {\n    default: 'Validation error on field %s',\n    required: '%s is required',\n    enum: '%s must be one of %s',\n    whitespace: '%s cannot be empty',\n    date: {\n      format: '%s date %s is invalid for format %s',\n      parse: '%s date could not be parsed, %s is invalid ',\n      invalid: '%s date %s is invalid',\n    },\n    types: {\n      string: '%s is not a %s',\n      method: '%s is not a %s (function)',\n      array: '%s is not an %s',\n      object: '%s is not an %s',\n      number: '%s is not a %s',\n      date: '%s is not a %s',\n      boolean: '%s is not a %s',\n      integer: '%s is not an %s',\n      float: '%s is not a %s',\n      regexp: '%s is not a valid %s',\n      email: '%s is not a valid %s',\n      url: '%s is not a valid %s',\n      hex: '%s is not a valid %s',\n    },\n    string: {\n      len: '%s must be exactly %s characters',\n      min: '%s must be at least %s characters',\n      max: '%s cannot be longer than %s characters',\n      range: '%s must be between %s and %s characters',\n    },\n    number: {\n      len: '%s must equal %s',\n      min: '%s cannot be less than %s',\n      max: '%s cannot be greater than %s',\n      range: '%s must be between %s and %s',\n    },\n    array: {\n      len: '%s must be exactly %s in length',\n      min: '%s cannot be less than %s in length',\n      max: '%s cannot be greater than %s in length',\n      range: '%s must be between %s and %s in length',\n    },\n    pattern: {\n      mismatch: '%s value %s does not match pattern %s',\n    },\n    clone() {\n      const cloned = JSON.parse(JSON.stringify(this));\n      cloned.clone = this.clone;\n      return cloned;\n    },\n  };\n}\n\nexport const messages = newMessages();\n","import {\n  format,\n  complementError,\n  asyncMap,\n  warning,\n  deepMerge,\n  convertFieldsError,\n} from './util';\nimport validators from './validator/index';\nimport { messages as defaultMessages, newMessages } from './messages';\n\n/**\n *  Encapsulates a validation schema.\n *\n *  @param descriptor An object declaring validation rules\n *  for this schema.\n */\nfunction Schema(descriptor) {\n  this.rules = null;\n  this._messages = defaultMessages;\n  this.define(descriptor);\n}\n\nSchema.prototype = {\n  messages(messages) {\n    if (messages) {\n      this._messages = deepMerge(newMessages(), messages);\n    }\n    return this._messages;\n  },\n  define(rules) {\n    if (!rules) {\n      throw new Error('Cannot configure a schema with no rules');\n    }\n    if (typeof rules !== 'object' || Array.isArray(rules)) {\n      throw new Error('Rules must be an object');\n    }\n    this.rules = {};\n    let z;\n    let item;\n    for (z in rules) {\n      if (rules.hasOwnProperty(z)) {\n        item = rules[z];\n        this.rules[z] = Array.isArray(item) ? item : [item];\n      }\n    }\n  },\n  validate(source_, o = {}, oc = () => {}) {\n    let source = source_;\n    let options = o;\n    let callback = oc;\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n    if (!this.rules || Object.keys(this.rules).length === 0) {\n      if (callback) {\n        callback();\n      }\n      return Promise.resolve();\n    }\n\n    function complete(results) {\n      let i;\n      let errors = [];\n      let fields = {};\n\n      function add(e) {\n        if (Array.isArray(e)) {\n          errors = errors.concat(...e);\n        } else {\n          errors.push(e);\n        }\n      }\n\n      for (i = 0; i < results.length; i++) {\n        add(results[i]);\n      }\n      if (!errors.length) {\n        errors = null;\n        fields = null;\n      } else {\n        fields = convertFieldsError(errors);\n      }\n      callback(errors, fields);\n    }\n\n    if (options.messages) {\n      let messages = this.messages();\n      if (messages === defaultMessages) {\n        messages = newMessages();\n      }\n      deepMerge(messages, options.messages);\n      options.messages = messages;\n    } else {\n      options.messages = this.messages();\n    }\n    let arr;\n    let value;\n    const series = {};\n    const keys = options.keys || Object.keys(this.rules);\n    keys.forEach(z => {\n      arr = this.rules[z];\n      value = source[z];\n      arr.forEach(r => {\n        let rule = r;\n        if (typeof rule.transform === 'function') {\n          if (source === source_) {\n            source = { ...source };\n          }\n          value = source[z] = rule.transform(value);\n        }\n        if (typeof rule === 'function') {\n          rule = {\n            validator: rule,\n          };\n        } else {\n          rule = { ...rule };\n        }\n        rule.validator = this.getValidationMethod(rule);\n        rule.field = z;\n        rule.fullField = rule.fullField || z;\n        rule.type = this.getType(rule);\n        if (!rule.validator) {\n          return;\n        }\n        series[z] = series[z] || [];\n        series[z].push({\n          rule,\n          value,\n          source,\n          field: z,\n        });\n      });\n    });\n    const errorFields = {};\n    return asyncMap(\n      series,\n      options,\n      (data, doIt) => {\n        const rule = data.rule;\n        let deep =\n          (rule.type === 'object' || rule.type === 'array') &&\n          (typeof rule.fields === 'object' ||\n            typeof rule.defaultField === 'object');\n        deep = deep && (rule.required || (!rule.required && data.value));\n        rule.field = data.field;\n\n        function addFullfield(key, schema) {\n          return {\n            ...schema,\n            fullField: `${rule.fullField}.${key}`,\n          };\n        }\n\n        function cb(e = []) {\n          let errors = e;\n          if (!Array.isArray(errors)) {\n            errors = [errors];\n          }\n          if (!options.suppressWarning && errors.length) {\n            Schema.warning('async-validator:', errors);\n          }\n          if (errors.length && rule.message !== undefined) {\n            errors = [].concat(rule.message);\n          }\n\n          errors = errors.map(complementError(rule));\n\n          if (options.first && errors.length) {\n            errorFields[rule.field] = 1;\n            return doIt(errors);\n          }\n          if (!deep) {\n            doIt(errors);\n          } else {\n            // if rule is required but the target object\n            // does not exist fail at the rule level and don't\n            // go deeper\n            if (rule.required && !data.value) {\n              if (rule.message !== undefined) {\n                errors = [].concat(rule.message).map(complementError(rule));\n              } else if (options.error) {\n                errors = [\n                  options.error(\n                    rule,\n                    format(options.messages.required, rule.field),\n                  ),\n                ];\n              }\n              return doIt(errors);\n            }\n\n            let fieldsSchema = {};\n            if (rule.defaultField) {\n              for (const k in data.value) {\n                if (data.value.hasOwnProperty(k)) {\n                  fieldsSchema[k] = rule.defaultField;\n                }\n              }\n            }\n            fieldsSchema = {\n              ...fieldsSchema,\n              ...data.rule.fields,\n            };\n            for (const f in fieldsSchema) {\n              if (fieldsSchema.hasOwnProperty(f)) {\n                const fieldSchema = Array.isArray(fieldsSchema[f])\n                  ? fieldsSchema[f]\n                  : [fieldsSchema[f]];\n                fieldsSchema[f] = fieldSchema.map(addFullfield.bind(null, f));\n              }\n            }\n            const schema = new Schema(fieldsSchema);\n            schema.messages(options.messages);\n            if (data.rule.options) {\n              data.rule.options.messages = options.messages;\n              data.rule.options.error = options.error;\n            }\n            schema.validate(data.value, data.rule.options || options, errs => {\n              const finalErrors = [];\n              if (errors && errors.length) {\n                finalErrors.push(...errors);\n              }\n              if (errs && errs.length) {\n                finalErrors.push(...errs);\n              }\n              doIt(finalErrors.length ? finalErrors : null);\n            });\n          }\n        }\n\n        let res;\n        if (rule.asyncValidator) {\n          res = rule.asyncValidator(rule, data.value, cb, data.source, options);\n        } else if (rule.validator) {\n          res = rule.validator(rule, data.value, cb, data.source, options);\n          if (res === true) {\n            cb();\n          } else if (res === false) {\n            cb(rule.message || `${rule.field} fails`);\n          } else if (res instanceof Array) {\n            cb(res);\n          } else if (res instanceof Error) {\n            cb(res.message);\n          }\n        }\n        if (res && res.then) {\n          res.then(\n            () => cb(),\n            e => cb(e),\n          );\n        }\n      },\n      results => {\n        complete(results);\n      },\n    );\n  },\n  getType(rule) {\n    if (rule.type === undefined && rule.pattern instanceof RegExp) {\n      rule.type = 'pattern';\n    }\n    if (\n      typeof rule.validator !== 'function' &&\n      rule.type &&\n      !validators.hasOwnProperty(rule.type)\n    ) {\n      throw new Error(format('Unknown rule type %s', rule.type));\n    }\n    return rule.type || 'string';\n  },\n  getValidationMethod(rule) {\n    if (typeof rule.validator === 'function') {\n      return rule.validator;\n    }\n    const keys = Object.keys(rule);\n    const messageIndex = keys.indexOf('message');\n    if (messageIndex !== -1) {\n      keys.splice(messageIndex, 1);\n    }\n    if (keys.length === 1 && keys[0] === 'required') {\n      return validators.required;\n    }\n    return validators[this.getType(rule)] || false;\n  },\n};\n\nSchema.register = function register(type, validator) {\n  if (typeof validator !== 'function') {\n    throw new Error(\n      'Cannot register a validator by type, validator is not a function',\n    );\n  }\n  validators[type] = validator;\n};\n\nSchema.warning = warning;\n\nSchema.messages = defaultMessages;\n\nSchema.validators = validators;\n\nexport default Schema;\n"]},"metadata":{},"sourceType":"module"}