{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _utils = require(\"../utils\");\n\nvar _GenericChartComponent = require(\"../GenericChartComponent\");\n\nvar _GenericChartComponent2 = _interopRequireDefault(_GenericChartComponent);\n\nvar _GenericComponent = require(\"../GenericComponent\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Brush = function (_Component) {\n  _inherits(Brush, _Component);\n\n  function Brush(props, context) {\n    _classCallCheck(this, Brush);\n\n    var _this = _possibleConstructorReturn(this, (Brush.__proto__ || Object.getPrototypeOf(Brush)).call(this, props, context));\n\n    _this.handleZoomStart = _this.handleZoomStart.bind(_this);\n    _this.handleDrawSquare = _this.handleDrawSquare.bind(_this);\n    _this.handleZoomComplete = _this.handleZoomComplete.bind(_this);\n    _this.drawOnCanvas = _this.drawOnCanvas.bind(_this);\n    _this.renderSVG = _this.renderSVG.bind(_this);\n    _this.saveNode = _this.saveNode.bind(_this);\n    _this.terminate = _this.terminate.bind(_this);\n    _this.state = {\n      rect: null\n    };\n    return _this;\n  }\n\n  _createClass(Brush, [{\n    key: \"terminate\",\n    value: function terminate() {\n      this.zoomHappening = false;\n      this.setState({\n        x1y1: null,\n        start: null,\n        end: null,\n        rect: null\n      });\n    }\n  }, {\n    key: \"saveNode\",\n    value: function saveNode(node) {\n      this.node = node;\n    }\n  }, {\n    key: \"drawOnCanvas\",\n    value: function drawOnCanvas(ctx) {\n      var rect = this.state.rect;\n\n      if ((0, _utils.isDefined)(rect)) {\n        var x = rect.x,\n            y = rect.y,\n            height = rect.height,\n            width = rect.width;\n        var _props = this.props,\n            stroke = _props.stroke,\n            fill = _props.fill,\n            strokeDashArray = _props.strokeDashArray;\n        var _props2 = this.props,\n            strokeOpacity = _props2.strokeOpacity,\n            fillOpacity = _props2.fillOpacity;\n        var dashArray = (0, _utils.getStrokeDasharray)(strokeDashArray).split(\",\").map(function (d) {\n          return +d;\n        });\n        ctx.strokeStyle = (0, _utils.hexToRGBA)(stroke, strokeOpacity);\n        ctx.fillStyle = (0, _utils.hexToRGBA)(fill, fillOpacity);\n        ctx.setLineDash(dashArray);\n        ctx.beginPath();\n        ctx.fillRect(x, y, width, height);\n        ctx.strokeRect(x, y, width, height);\n      }\n    }\n  }, {\n    key: \"renderSVG\",\n    value: function renderSVG() {\n      var rect = this.state.rect;\n\n      if ((0, _utils.isDefined)(rect)) {\n        var x = rect.x,\n            y = rect.y,\n            height = rect.height,\n            width = rect.width;\n        var _props3 = this.props,\n            stroke = _props3.stroke,\n            strokeDashArray = _props3.strokeDashArray;\n        var _props4 = this.props,\n            strokeOpacity = _props4.strokeOpacity,\n            fillOpacity = _props4.fillOpacity;\n        var dashArray = (0, _utils.getStrokeDasharray)(strokeDashArray).split(\",\").map(function (d) {\n          return +d;\n        });\n        return _react2.default.createElement(\"rect\", {\n          strokeDasharray: dashArray,\n          stroke: stroke,\n          fill: \"none\",\n          strokeOpacity: strokeOpacity,\n          fillOpacity: fillOpacity,\n          x: x,\n          y: y,\n          width: width,\n          height: height\n        });\n      }\n    }\n  }, {\n    key: \"handleZoomStart\",\n    value: function handleZoomStart(moreProps) {\n      this.zoomHappening = false;\n\n      var _moreProps$mouseXY = _slicedToArray(moreProps.mouseXY, 2),\n          mouseY = _moreProps$mouseXY[1],\n          currentItem = moreProps.currentItem,\n          yScale = moreProps.chartConfig.yScale,\n          xAccessor = moreProps.xAccessor,\n          xScale = moreProps.xScale;\n\n      var x1y1 = [xScale(xAccessor(currentItem)), mouseY];\n      this.setState({\n        selected: true,\n        x1y1: x1y1,\n        start: {\n          item: currentItem,\n          xValue: xAccessor(currentItem),\n          yValue: yScale.invert(mouseY)\n        }\n      });\n    }\n  }, {\n    key: \"handleDrawSquare\",\n    value: function handleDrawSquare(moreProps) {\n      if (this.state.x1y1 == null) return;\n      this.zoomHappening = true;\n\n      var _moreProps$mouseXY2 = _slicedToArray(moreProps.mouseXY, 2),\n          mouseY = _moreProps$mouseXY2[1],\n          currentItem = moreProps.currentItem,\n          yScale = moreProps.chartConfig.yScale,\n          xAccessor = moreProps.xAccessor,\n          xScale = moreProps.xScale;\n\n      var _ref = [xScale(xAccessor(currentItem)), mouseY],\n          x2 = _ref[0],\n          y2 = _ref[1];\n\n      var _state$x1y = _slicedToArray(this.state.x1y1, 2),\n          x1 = _state$x1y[0],\n          y1 = _state$x1y[1];\n\n      var x = Math.min(x1, x2);\n      var y = Math.min(y1, y2);\n      var height = Math.abs(y2 - y1);\n      var width = Math.abs(x2 - x1);\n      this.setState({\n        selected: true,\n        end: {\n          item: currentItem,\n          xValue: xAccessor(currentItem),\n          yValue: yScale.invert(mouseY)\n        },\n        rect: {\n          x: x,\n          y: y,\n          height: height,\n          width: width\n        }\n      });\n    }\n  }, {\n    key: \"handleZoomComplete\",\n    value: function handleZoomComplete(moreProps) {\n      if (this.zoomHappening) {\n        var onBrush = this.props.onBrush;\n        var _state = this.state,\n            start = _state.start,\n            end = _state.end;\n        onBrush({\n          start: start,\n          end: end\n        }, moreProps);\n      }\n\n      this.setState({\n        selected: false,\n        rect: null\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var enabled = this.props.enabled;\n      if (!enabled) return null;\n      return _react2.default.createElement(_GenericChartComponent2.default, {\n        ref: this.saveNode,\n        disablePan: enabled,\n        svgDraw: this.renderSVG,\n        canvasToDraw: _GenericComponent.getMouseCanvas,\n        canvasDraw: this.drawOnCanvas,\n        onMouseDown: this.handleZoomStart,\n        onMouseMove: this.handleDrawSquare,\n        onClick: this.handleZoomComplete,\n        drawOn: [\"mousemove\", \"pan\", \"drag\"]\n      });\n    }\n  }]);\n\n  return Brush;\n}(_react.Component);\n\nBrush.propTypes = {\n  enabled: _propTypes2.default.bool.isRequired,\n  onStart: _propTypes2.default.func.isRequired,\n  onBrush: _propTypes2.default.func.isRequired,\n  type: _propTypes2.default.oneOf([\"1D\", \"2D\"]),\n  stroke: _propTypes2.default.string,\n  fill: _propTypes2.default.string,\n  strokeOpacity: _propTypes2.default.number,\n  fillOpacity: _propTypes2.default.number,\n  interactiveState: _propTypes2.default.object,\n  strokeDashArray: _propTypes2.default.string\n};\nBrush.defaultProps = {\n  type: \"2D\",\n  stroke: \"#000000\",\n  fillOpacity: 0.3,\n  strokeOpacity: 1,\n  fill: \"#3h3h3h\",\n  onBrush: _utils.noop,\n  onStart: _utils.noop,\n  strokeDashArray: \"ShortDash\"\n};\nexports.default = Brush;","map":{"version":3,"mappings":"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","names":["Brush","props","context","_classCallCheck","_this","handleZoomStart","bind","handleDrawSquare","handleZoomComplete","drawOnCanvas","renderSVG","saveNode","terminate","state","rect","zoomHappening","setState","x1y1","start","end","node","ctx","x","y","height","width","stroke","fill","strokeDashArray","strokeOpacity","fillOpacity","dashArray","split","map","d","strokeStyle","fillStyle","setLineDash","beginPath","fillRect","strokeRect","_react2","strokeDasharray","moreProps","mouseXY","mouseY","currentItem","yScale","chartConfig","xAccessor","xScale","selected","item","xValue","yValue","invert","x2","y2","x1","y1","Math","min","abs","onBrush","enabled","ref","disablePan","svgDraw","canvasToDraw","canvasDraw","onMouseDown","onMouseMove","onClick","drawOn","propTypes","_propTypes2","bool","isRequired","onStart","func","type","oneOf","string","number","interactiveState","object","defaultProps"],"sources":["../../../src/lib/interactive/Brush.js"],"sourcesContent":["\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport {\n\tisDefined,\n\tnoop,\n\tgetStrokeDasharray,\n\thexToRGBA,\n} from \"../utils\";\nimport GenericChartComponent from \"../GenericChartComponent\";\nimport { getMouseCanvas } from \"../GenericComponent\";\n\nclass Brush extends Component {\n\tconstructor(props, context) {\n\t\tsuper(props, context);\n\t\tthis.handleZoomStart = this.handleZoomStart.bind(this);\n\t\tthis.handleDrawSquare = this.handleDrawSquare.bind(this);\n\t\tthis.handleZoomComplete = this.handleZoomComplete.bind(this);\n\n\t\tthis.drawOnCanvas = this.drawOnCanvas.bind(this);\n\t\tthis.renderSVG = this.renderSVG.bind(this);\n\t\tthis.saveNode = this.saveNode.bind(this);\n\t\tthis.terminate = this.terminate.bind(this);\n\t\tthis.state = {\n\t\t\trect: null,\n\t\t};\n\t}\n\tterminate() {\n\t\tthis.zoomHappening = false;\n\t\tthis.setState({\n\t\t\tx1y1: null,\n\t\t\tstart: null,\n\t\t\tend: null,\n\t\t\trect: null,\n\t\t});\n\t}\n\tsaveNode(node) {\n\t\tthis.node = node;\n\t}\n\tdrawOnCanvas(ctx) {\n\t\tconst { rect } = this.state;\n\t\tif (isDefined(rect)) {\n\t\t\tconst { x, y, height, width } = rect;\n\t\t\tconst { stroke, fill, strokeDashArray } = this.props;\n\t\t\tconst { strokeOpacity, fillOpacity } = this.props;\n\n\t\t\tconst dashArray = getStrokeDasharray(strokeDashArray)\n\t\t\t\t.split(\",\")\n\t\t\t\t.map(d => +d);\n\n\t\t\tctx.strokeStyle = hexToRGBA(stroke, strokeOpacity);\n\t\t\tctx.fillStyle = hexToRGBA(fill, fillOpacity);\n\t\t\tctx.setLineDash(dashArray);\n\t\t\tctx.beginPath();\n\t\t\tctx.fillRect(x, y, width, height);\n\t\t\tctx.strokeRect(x, y, width, height);\n\t\t}\n\t}\n\trenderSVG() {\n\t\tconst { rect } = this.state;\n\t\tif (isDefined(rect)) {\n\t\t\tconst { x, y, height, width } = rect;\n\t\t\tconst { stroke, strokeDashArray } = this.props;\n\t\t\tconst { strokeOpacity, fillOpacity } = this.props;\n\n\t\t\tconst dashArray = getStrokeDasharray(strokeDashArray)\n\t\t\t\t.split(\",\")\n\t\t\t\t.map(d => +d);\n\n\t\t\treturn (\n\t\t\t\t<rect strokeDasharray={dashArray}\n\t\t\t\t\tstroke={stroke}\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstrokeOpacity={strokeOpacity}\n\t\t\t\t\tfillOpacity={fillOpacity}\n\t\t\t\t\tx={x}\n\t\t\t\t\ty={y}\n\t\t\t\t\twidth={width}\n\t\t\t\t\theight={height}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\t}\n\thandleZoomStart(moreProps) {\n\t\tthis.zoomHappening = false;\n\t\tconst {\n\t\t\tmouseXY: [, mouseY],\n\t\t\tcurrentItem,\n\t\t\tchartConfig: { yScale },\n\t\t\txAccessor,\n\t\t\txScale,\n\t\t} = moreProps;\n\n\t\tconst x1y1 = [\n\t\t\txScale(xAccessor(currentItem)),\n\t\t\tmouseY\n\t\t];\n\n\t\tthis.setState({\n\t\t\tselected: true,\n\t\t\tx1y1,\n\t\t\tstart: {\n\t\t\t\titem: currentItem,\n\t\t\t\txValue: xAccessor(currentItem),\n\t\t\t\tyValue: yScale.invert(mouseY),\n\t\t\t},\n\t\t});\n\t}\n\thandleDrawSquare(moreProps) {\n\t\tif (this.state.x1y1 == null) return;\n\n\t\tthis.zoomHappening = true;\n\n\t\tconst {\n\t\t\tmouseXY: [, mouseY],\n\t\t\tcurrentItem,\n\t\t\tchartConfig: { yScale },\n\t\t\txAccessor,\n\t\t\txScale,\n\t\t} = moreProps;\n\n\t\tconst [x2, y2] = [\n\t\t\txScale(xAccessor(currentItem)),\n\t\t\tmouseY\n\t\t];\n\n\t\tconst { x1y1: [x1, y1] } = this.state;\n\n\t\tconst x = Math.min(x1, x2);\n\t\tconst y = Math.min(y1, y2);\n\t\tconst height = Math.abs(y2 - y1);\n\t\tconst width = Math.abs(x2 - x1);\n\n\t\tthis.setState({\n\t\t\tselected: true,\n\t\t\tend: {\n\t\t\t\titem: currentItem,\n\t\t\t\txValue: xAccessor(currentItem),\n\t\t\t\tyValue: yScale.invert(mouseY),\n\t\t\t},\n\t\t\trect: {\n\t\t\t\tx, y, height, width\n\t\t\t},\n\t\t});\n\t}\n\thandleZoomComplete(moreProps) {\n\t\tif (this.zoomHappening) {\n\t\t\tconst { onBrush } = this.props;\n\t\t\tconst { start, end } = this.state;\n\t\t\tonBrush({ start, end }, moreProps);\n\t\t}\n\t\tthis.setState({\n\t\t\tselected: false,\n\t\t\trect: null,\n\t\t});\n\t}\n\trender() {\n\t\tconst { enabled } = this.props;\n\t\tif (!enabled) return null;\n\n\t\treturn (\n\t\t\t<GenericChartComponent\n\t\t\t\tref={this.saveNode}\n\t\t\t\tdisablePan={enabled}\n\n\t\t\t\tsvgDraw={this.renderSVG}\n\t\t\t\tcanvasToDraw={getMouseCanvas}\n\t\t\t\tcanvasDraw={this.drawOnCanvas}\n\n\t\t\t\tonMouseDown={this.handleZoomStart}\n\t\t\t\tonMouseMove={this.handleDrawSquare}\n\t\t\t\tonClick={this.handleZoomComplete}\n\n\t\t\t\tdrawOn={[\"mousemove\", \"pan\", \"drag\"]}\n\t\t\t/>\n\t\t);\n\t}\n}\n\nBrush.propTypes = {\n\tenabled: PropTypes.bool.isRequired,\n\tonStart: PropTypes.func.isRequired,\n\tonBrush: PropTypes.func.isRequired,\n\n\ttype: PropTypes.oneOf([\"1D\", \"2D\"]),\n\tstroke: PropTypes.string,\n\tfill: PropTypes.string,\n\tstrokeOpacity: PropTypes.number,\n\tfillOpacity: PropTypes.number,\n\tinteractiveState: PropTypes.object,\n\tstrokeDashArray: PropTypes.string,\n};\n\nBrush.defaultProps = {\n\ttype: \"2D\",\n\tstroke: \"#000000\",\n\tfillOpacity: 0.3,\n\tstrokeOpacity: 1,\n\tfill: \"#3h3h3h\",\n\tonBrush: noop,\n\tonStart: noop,\n\tstrokeDashArray: \"ShortDash\",\n};\n\nexport default Brush;\n"]},"metadata":{},"sourceType":"script"}