{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _d3Format = require(\"d3-format\");\n\nvar _d3TimeFormat = require(\"d3-time-format\");\n\nvar _displayValuesFor = require(\"./displayValuesFor\");\n\nvar _displayValuesFor2 = _interopRequireDefault(_displayValuesFor);\n\nvar _GenericChartComponent = require(\"../GenericChartComponent\");\n\nvar _GenericChartComponent2 = _interopRequireDefault(_GenericChartComponent);\n\nvar _utils = require(\"../utils\");\n\nvar _ToolTipText = require(\"./ToolTipText\");\n\nvar _ToolTipText2 = _interopRequireDefault(_ToolTipText);\n\nvar _ToolTipTSpanLabel = require(\"./ToolTipTSpanLabel\");\n\nvar _ToolTipTSpanLabel2 = _interopRequireDefault(_ToolTipTSpanLabel);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar OHLCTooltip = function (_Component) {\n  _inherits(OHLCTooltip, _Component);\n\n  function OHLCTooltip(props) {\n    _classCallCheck(this, OHLCTooltip);\n\n    var _this = _possibleConstructorReturn(this, (OHLCTooltip.__proto__ || Object.getPrototypeOf(OHLCTooltip)).call(this, props));\n\n    _this.renderSVG = _this.renderSVG.bind(_this);\n    return _this;\n  }\n\n  _createClass(OHLCTooltip, [{\n    key: \"renderSVG\",\n    value: function renderSVG(moreProps) {\n      var displayValuesFor = this.props.displayValuesFor;\n      var _props = this.props,\n          xDisplayFormat = _props.xDisplayFormat,\n          accessor = _props.accessor,\n          volumeFormat = _props.volumeFormat,\n          ohlcFormat = _props.ohlcFormat,\n          percentFormat = _props.percentFormat,\n          displayTexts = _props.displayTexts;\n      var _moreProps$chartConfi = moreProps.chartConfig,\n          width = _moreProps$chartConfi.width,\n          height = _moreProps$chartConfi.height;\n      var displayXAccessor = moreProps.displayXAccessor;\n      var currentItem = displayValuesFor(this.props, moreProps);\n      var displayDate = void 0,\n          open = void 0,\n          high = void 0,\n          low = void 0,\n          close = void 0,\n          volume = void 0,\n          percent = void 0;\n      displayDate = open = high = low = close = volume = percent = displayTexts.na;\n\n      if ((0, _utils.isDefined)(currentItem) && (0, _utils.isDefined)(accessor(currentItem))) {\n        var item = accessor(currentItem);\n        volume = (0, _utils.isDefined)(item.volume) ? volumeFormat(item.volume) : displayTexts.na;\n        displayDate = xDisplayFormat(displayXAccessor(item));\n        open = ohlcFormat(item.open);\n        high = ohlcFormat(item.high);\n        low = ohlcFormat(item.low);\n        close = ohlcFormat(item.close);\n        percent = percentFormat((item.close - item.open) / item.open);\n      }\n\n      var originProp = this.props.origin;\n      var origin = (0, _utils.functor)(originProp);\n\n      var _origin = origin(width, height),\n          _origin2 = _slicedToArray(_origin, 2),\n          x = _origin2[0],\n          y = _origin2[1];\n\n      var itemsToDisplay = {\n        displayDate: displayDate,\n        open: open,\n        high: high,\n        low: low,\n        close: close,\n        percent: percent,\n        volume: volume,\n        x: x,\n        y: y\n      };\n      return this.props.children(this.props, moreProps, itemsToDisplay);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _react2.default.createElement(_GenericChartComponent2.default, {\n        clip: false,\n        svgDraw: this.renderSVG,\n        drawOn: [\"mousemove\"]\n      });\n    }\n  }]);\n\n  return OHLCTooltip;\n}(_react.Component);\n\nOHLCTooltip.propTypes = {\n  className: _propTypes2.default.string,\n  accessor: _propTypes2.default.func,\n  xDisplayFormat: _propTypes2.default.func,\n  children: _propTypes2.default.func,\n  volumeFormat: _propTypes2.default.func,\n  percentFormat: _propTypes2.default.func,\n  ohlcFormat: _propTypes2.default.func,\n  origin: _propTypes2.default.oneOfType([_propTypes2.default.array, _propTypes2.default.func]),\n  fontFamily: _propTypes2.default.string,\n  fontSize: _propTypes2.default.number,\n  onClick: _propTypes2.default.func,\n  displayValuesFor: _propTypes2.default.func,\n  textFill: _propTypes2.default.string,\n  labelFill: _propTypes2.default.string,\n  displayTexts: _propTypes2.default.object\n};\nvar displayTextsDefault = {\n  d: \"Date: \",\n  o: \" O: \",\n  h: \" H: \",\n  l: \" L: \",\n  c: \" C: \",\n  v: \" Vol: \",\n  na: \"n/a\"\n};\nOHLCTooltip.defaultProps = {\n  accessor: function accessor(d) {\n    return {\n      date: d.date,\n      open: d.open,\n      high: d.high,\n      low: d.low,\n      close: d.close,\n      volume: d.volume\n    };\n  },\n  xDisplayFormat: (0, _d3TimeFormat.timeFormat)(\"%Y-%m-%d\"),\n  volumeFormat: (0, _d3Format.format)(\".4s\"),\n  percentFormat: (0, _d3Format.format)(\".2%\"),\n  ohlcFormat: (0, _d3Format.format)(\".2f\"),\n  displayValuesFor: _displayValuesFor2.default,\n  origin: [0, 0],\n  children: defaultDisplay,\n  displayTexts: displayTextsDefault\n};\n\nfunction defaultDisplay(props, moreProps, itemsToDisplay) {\n  /* eslint-disable */\n  var className = props.className,\n      textFill = props.textFill,\n      labelFill = props.labelFill,\n      onClick = props.onClick,\n      fontFamily = props.fontFamily,\n      fontSize = props.fontSize,\n      displayTexts = props.displayTexts;\n  /* eslint-enable */\n\n  var displayDate = itemsToDisplay.displayDate,\n      open = itemsToDisplay.open,\n      high = itemsToDisplay.high,\n      low = itemsToDisplay.low,\n      close = itemsToDisplay.close,\n      volume = itemsToDisplay.volume,\n      x = itemsToDisplay.x,\n      y = itemsToDisplay.y;\n  return _react2.default.createElement(\"g\", {\n    className: \"react-stockcharts-tooltip-hover \" + className,\n    transform: \"translate(\" + x + \", \" + y + \")\",\n    onClick: onClick\n  }, _react2.default.createElement(_ToolTipText2.default, {\n    x: 0,\n    y: 0,\n    fontFamily: fontFamily,\n    fontSize: fontSize\n  }, _react2.default.createElement(_ToolTipTSpanLabel2.default, {\n    fill: labelFill,\n    key: \"label\",\n    x: 0,\n    dy: \"5\"\n  }, displayTexts.d), _react2.default.createElement(\"tspan\", {\n    key: \"value\",\n    fill: textFill\n  }, displayDate), _react2.default.createElement(_ToolTipTSpanLabel2.default, {\n    fill: labelFill,\n    key: \"label_O\"\n  }, displayTexts.o), _react2.default.createElement(\"tspan\", {\n    key: \"value_O\",\n    fill: textFill\n  }, open), _react2.default.createElement(_ToolTipTSpanLabel2.default, {\n    fill: labelFill,\n    key: \"label_H\"\n  }, displayTexts.h), _react2.default.createElement(\"tspan\", {\n    key: \"value_H\",\n    fill: textFill\n  }, high), _react2.default.createElement(_ToolTipTSpanLabel2.default, {\n    fill: labelFill,\n    key: \"label_L\"\n  }, displayTexts.l), _react2.default.createElement(\"tspan\", {\n    key: \"value_L\",\n    fill: textFill\n  }, low), _react2.default.createElement(_ToolTipTSpanLabel2.default, {\n    fill: labelFill,\n    key: \"label_C\"\n  }, displayTexts.c), _react2.default.createElement(\"tspan\", {\n    key: \"value_C\",\n    fill: textFill\n  }, close), _react2.default.createElement(_ToolTipTSpanLabel2.default, {\n    fill: labelFill,\n    key: \"label_Vol\"\n  }, displayTexts.v), _react2.default.createElement(\"tspan\", {\n    key: \"value_Vol\",\n    fill: textFill\n  }, volume)));\n}\n\nexports.default = OHLCTooltip;","map":{"version":3,"mappings":"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","names":["OHLCTooltip","props","_classCallCheck","_this","renderSVG","bind","moreProps","displayValuesFor","xDisplayFormat","accessor","volumeFormat","ohlcFormat","percentFormat","displayTexts","chartConfig","width","height","displayXAccessor","currentItem","displayDate","open","high","low","close","volume","percent","na","item","originProp","origin","x","y","itemsToDisplay","children","_react2","clip","svgDraw","drawOn","propTypes","className","_propTypes2","string","func","oneOfType","array","fontFamily","fontSize","number","onClick","textFill","labelFill","object","displayTextsDefault","d","o","h","l","c","v","defaultProps","date","defaultDisplay","transform","fill","key","dy"],"sources":["../../../src/lib/tooltip/OHLCTooltip.js"],"sourcesContent":["\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { format } from \"d3-format\";\nimport { timeFormat } from \"d3-time-format\";\nimport displayValuesFor from \"./displayValuesFor\";\nimport GenericChartComponent from \"../GenericChartComponent\";\n\nimport { isDefined, functor } from \"../utils\";\nimport ToolTipText from \"./ToolTipText\";\nimport ToolTipTSpanLabel from \"./ToolTipTSpanLabel\";\n\nclass OHLCTooltip extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.renderSVG = this.renderSVG.bind(this);\n\t}\n\trenderSVG(moreProps) {\n\t\tconst { displayValuesFor } = this.props;\n\t\tconst {\n\t\t\txDisplayFormat,\n\t\t\taccessor,\n\t\t\tvolumeFormat,\n\t\t\tohlcFormat,\n\t\t\tpercentFormat,\n\t\t\tdisplayTexts\n\t\t} = this.props;\n\n\t\tconst { chartConfig: { width, height } } = moreProps;\n\t\tconst { displayXAccessor } = moreProps;\n\n\t\tconst currentItem = displayValuesFor(this.props, moreProps);\n\n\t\tlet displayDate, open, high, low, close, volume, percent;\n\t\tdisplayDate = open = high = low = close = volume = percent = displayTexts.na;\n\n\t\tif (isDefined(currentItem) && isDefined(accessor(currentItem))) {\n\t\t\tconst item = accessor(currentItem);\n\t\t\tvolume = isDefined(item.volume) ? volumeFormat(item.volume) : displayTexts.na;\n\n\t\t\tdisplayDate = xDisplayFormat(displayXAccessor(item));\n\t\t\topen = ohlcFormat(item.open);\n\t\t\thigh = ohlcFormat(item.high);\n\t\t\tlow = ohlcFormat(item.low);\n\t\t\tclose = ohlcFormat(item.close);\n\t\t\tpercent = percentFormat((item.close - item.open) / item.open);\n\t\t}\n\n\t\tconst { origin: originProp } = this.props;\n\t\tconst origin = functor(originProp);\n\t\tconst [x, y] = origin(width, height);\n\n\t\tconst itemsToDisplay = {\n\t\t\tdisplayDate,\n\t\t\topen,\n\t\t\thigh,\n\t\t\tlow,\n\t\t\tclose,\n\t\t\tpercent,\n\t\t\tvolume,\n\t\t\tx,\n\t\t\ty\n\t\t};\n\t\treturn this.props.children(this.props, moreProps, itemsToDisplay);\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<GenericChartComponent\n\t\t\t\tclip={false}\n\t\t\t\tsvgDraw={this.renderSVG}\n\t\t\t\tdrawOn={[\"mousemove\"]}\n\t\t\t/>\n\t\t);\n\t}\n}\n\nOHLCTooltip.propTypes = {\n\tclassName: PropTypes.string,\n\taccessor: PropTypes.func,\n\txDisplayFormat: PropTypes.func,\n\tchildren: PropTypes.func,\n\tvolumeFormat: PropTypes.func,\n\tpercentFormat: PropTypes.func,\n\tohlcFormat: PropTypes.func,\n\torigin: PropTypes.oneOfType([PropTypes.array, PropTypes.func]),\n\tfontFamily: PropTypes.string,\n\tfontSize: PropTypes.number,\n\tonClick: PropTypes.func,\n\tdisplayValuesFor: PropTypes.func,\n\ttextFill: PropTypes.string,\n\tlabelFill: PropTypes.string,\n\tdisplayTexts: PropTypes.object,\n};\n\nconst displayTextsDefault = {\n\td: \"Date: \",\n\to: \" O: \",\n\th: \" H: \",\n\tl: \" L: \",\n\tc: \" C: \",\n\tv: \" Vol: \",\n\tna: \"n/a\"\n};\n\nOHLCTooltip.defaultProps = {\n\taccessor: d => {\n\t\treturn {\n\t\t\tdate: d.date,\n\t\t\topen: d.open,\n\t\t\thigh: d.high,\n\t\t\tlow: d.low,\n\t\t\tclose: d.close,\n\t\t\tvolume: d.volume\n\t\t};\n\t},\n\txDisplayFormat: timeFormat(\"%Y-%m-%d\"),\n\tvolumeFormat: format(\".4s\"),\n\tpercentFormat: format(\".2%\"),\n\tohlcFormat: format(\".2f\"),\n\tdisplayValuesFor: displayValuesFor,\n\torigin: [0, 0],\n\tchildren: defaultDisplay,\n\tdisplayTexts: displayTextsDefault,\n};\n\nfunction defaultDisplay(props, moreProps, itemsToDisplay) {\n\n\t/* eslint-disable */\n\tconst {\n\t\tclassName,\n\t\ttextFill,\n\t\tlabelFill,\n\t\tonClick,\n\t\tfontFamily,\n\t\tfontSize,\n\t\tdisplayTexts\n\t} = props;\n\t/* eslint-enable */\n\n\tconst {\n\t\tdisplayDate,\n\t\topen,\n\t\thigh,\n\t\tlow,\n\t\tclose,\n\t\tvolume,\n\t\tx,\n\t\ty\n\t} = itemsToDisplay;\n\treturn (\n\t\t<g\n\t\t\tclassName={`react-stockcharts-tooltip-hover ${className}`}\n\t\t\ttransform={`translate(${x}, ${y})`}\n\t\t\tonClick={onClick}\n\t\t>\n\t\t\t<ToolTipText\n\t\t\t\tx={0}\n\t\t\t\ty={0}\n\t\t\t\tfontFamily={fontFamily}\n\t\t\t\tfontSize={fontSize}\n\t\t\t>\n\t\t\t\t<ToolTipTSpanLabel\n\t\t\t\t\tfill={labelFill}\n\t\t\t\t\tkey=\"label\"\n\t\t\t\t\tx={0}\n\t\t\t\t\tdy=\"5\">{displayTexts.d}</ToolTipTSpanLabel>\n\t\t\t\t<tspan key=\"value\" fill={textFill}>{displayDate}</tspan>\n\t\t\t\t<ToolTipTSpanLabel fill={labelFill} key=\"label_O\">{displayTexts.o}</ToolTipTSpanLabel>\n\t\t\t\t<tspan key=\"value_O\" fill={textFill}>{open}</tspan>\n\t\t\t\t<ToolTipTSpanLabel fill={labelFill} key=\"label_H\">{displayTexts.h}</ToolTipTSpanLabel>\n\t\t\t\t<tspan key=\"value_H\" fill={textFill}>{high}</tspan>\n\t\t\t\t<ToolTipTSpanLabel fill={labelFill} key=\"label_L\">{displayTexts.l}</ToolTipTSpanLabel>\n\t\t\t\t<tspan key=\"value_L\" fill={textFill}>{low}</tspan>\n\t\t\t\t<ToolTipTSpanLabel fill={labelFill} key=\"label_C\">{displayTexts.c}</ToolTipTSpanLabel>\n\t\t\t\t<tspan key=\"value_C\" fill={textFill}>{close}</tspan>\n\t\t\t\t<ToolTipTSpanLabel fill={labelFill} key=\"label_Vol\">{displayTexts.v}</ToolTipTSpanLabel>\n\t\t\t\t<tspan key=\"value_Vol\" fill={textFill}>{volume}</tspan>\n\t\t\t</ToolTipText>\n\t\t</g>\n\t);\n}\n\nexport default OHLCTooltip;\n"]},"metadata":{},"sourceType":"script"}