{"ast":null,"code":"import { asin, atan2, cos, degrees, haversin, radians, sin, sqrt } from \"./math.js\";\nexport default function (a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos(y0),\n      sy0 = sin(y0),\n      cy1 = cos(y1),\n      sy1 = sin(y1),\n      kx0 = cy0 * cos(x0),\n      ky0 = cy0 * sin(x0),\n      kx1 = cy1 * cos(x1),\n      ky1 = cy1 * sin(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin(d);\n  var interpolate = d ? function (t) {\n    var B = sin(t *= d) / k,\n        A = sin(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [atan2(y, x) * degrees, atan2(z, sqrt(x * x + y * y)) * degrees];\n  } : function () {\n    return [x0 * degrees, y0 * degrees];\n  };\n  interpolate.distance = d;\n  return interpolate;\n}","map":{"version":3,"names":["asin","atan2","cos","degrees","haversin","radians","sin","sqrt","a","b","x0","y0","x1","y1","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","d","k","interpolate","t","B","A","x","y","z","distance"],"sources":["/home/chenak/QbitesReact/my-app/node_modules/d3-geo/src/interpolate.js"],"sourcesContent":["import {asin, atan2, cos, degrees, haversin, radians, sin, sqrt} from \"./math.js\";\n\nexport default function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos(y0),\n      sy0 = sin(y0),\n      cy1 = cos(y1),\n      sy1 = sin(y1),\n      kx0 = cy0 * cos(x0),\n      ky0 = cy0 * sin(x0),\n      kx1 = cy1 * cos(x1),\n      ky1 = cy1 * sin(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin(t *= d) / k,\n        A = sin(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees,\n      atan2(z, sqrt(x * x + y * y)) * degrees\n    ];\n  } : function() {\n    return [x0 * degrees, y0 * degrees];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n}\n"],"mappings":"AAAA,SAAQA,IAAR,EAAcC,KAAd,EAAqBC,GAArB,EAA0BC,OAA1B,EAAmCC,QAAnC,EAA6CC,OAA7C,EAAsDC,GAAtD,EAA2DC,IAA3D,QAAsE,WAAtE;AAEA,eAAe,UAASC,CAAT,EAAYC,CAAZ,EAAe;EAC5B,IAAIC,EAAE,GAAGF,CAAC,CAAC,CAAD,CAAD,GAAOH,OAAhB;EAAA,IACIM,EAAE,GAAGH,CAAC,CAAC,CAAD,CAAD,GAAOH,OADhB;EAAA,IAEIO,EAAE,GAAGH,CAAC,CAAC,CAAD,CAAD,GAAOJ,OAFhB;EAAA,IAGIQ,EAAE,GAAGJ,CAAC,CAAC,CAAD,CAAD,GAAOJ,OAHhB;EAAA,IAIIS,GAAG,GAAGZ,GAAG,CAACS,EAAD,CAJb;EAAA,IAKII,GAAG,GAAGT,GAAG,CAACK,EAAD,CALb;EAAA,IAMIK,GAAG,GAAGd,GAAG,CAACW,EAAD,CANb;EAAA,IAOII,GAAG,GAAGX,GAAG,CAACO,EAAD,CAPb;EAAA,IAQIK,GAAG,GAAGJ,GAAG,GAAGZ,GAAG,CAACQ,EAAD,CARnB;EAAA,IASIS,GAAG,GAAGL,GAAG,GAAGR,GAAG,CAACI,EAAD,CATnB;EAAA,IAUIU,GAAG,GAAGJ,GAAG,GAAGd,GAAG,CAACU,EAAD,CAVnB;EAAA,IAWIS,GAAG,GAAGL,GAAG,GAAGV,GAAG,CAACM,EAAD,CAXnB;EAAA,IAYIU,CAAC,GAAG,IAAItB,IAAI,CAACO,IAAI,CAACH,QAAQ,CAACS,EAAE,GAAGF,EAAN,CAAR,GAAoBG,GAAG,GAAGE,GAAN,GAAYZ,QAAQ,CAACQ,EAAE,GAAGF,EAAN,CAAzC,CAAL,CAZhB;EAAA,IAaIa,CAAC,GAAGjB,GAAG,CAACgB,CAAD,CAbX;EAeA,IAAIE,WAAW,GAAGF,CAAC,GAAG,UAASG,CAAT,EAAY;IAChC,IAAIC,CAAC,GAAGpB,GAAG,CAACmB,CAAC,IAAIH,CAAN,CAAH,GAAcC,CAAtB;IAAA,IACII,CAAC,GAAGrB,GAAG,CAACgB,CAAC,GAAGG,CAAL,CAAH,GAAaF,CADrB;IAAA,IAEIK,CAAC,GAAGD,CAAC,GAAGT,GAAJ,GAAUQ,CAAC,GAAGN,GAFtB;IAAA,IAGIS,CAAC,GAAGF,CAAC,GAAGR,GAAJ,GAAUO,CAAC,GAAGL,GAHtB;IAAA,IAIIS,CAAC,GAAGH,CAAC,GAAGZ,GAAJ,GAAUW,CAAC,GAAGT,GAJtB;IAKA,OAAO,CACLhB,KAAK,CAAC4B,CAAD,EAAID,CAAJ,CAAL,GAAczB,OADT,EAELF,KAAK,CAAC6B,CAAD,EAAIvB,IAAI,CAACqB,CAAC,GAAGA,CAAJ,GAAQC,CAAC,GAAGA,CAAb,CAAR,CAAL,GAAgC1B,OAF3B,CAAP;EAID,CAVkB,GAUf,YAAW;IACb,OAAO,CAACO,EAAE,GAAGP,OAAN,EAAeQ,EAAE,GAAGR,OAApB,CAAP;EACD,CAZD;EAcAqB,WAAW,CAACO,QAAZ,GAAuBT,CAAvB;EAEA,OAAOE,WAAP;AACD"},"metadata":{},"sourceType":"module"}