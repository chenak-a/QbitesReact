{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _d3Format = require(\"d3-format\");\n\nvar _displayValuesFor = require(\"./displayValuesFor\");\n\nvar _displayValuesFor2 = _interopRequireDefault(_displayValuesFor);\n\nvar _GenericChartComponent = require(\"../GenericChartComponent\");\n\nvar _GenericChartComponent2 = _interopRequireDefault(_GenericChartComponent);\n\nvar _ToolTipText = require(\"./ToolTipText\");\n\nvar _ToolTipText2 = _interopRequireDefault(_ToolTipText);\n\nvar _ToolTipTSpanLabel = require(\"./ToolTipTSpanLabel\");\n\nvar _ToolTipTSpanLabel2 = _interopRequireDefault(_ToolTipTSpanLabel);\n\nvar _utils = require(\"../utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar SingleMAToolTip = function (_Component) {\n  _inherits(SingleMAToolTip, _Component);\n\n  function SingleMAToolTip(props) {\n    _classCallCheck(this, SingleMAToolTip);\n\n    var _this = _possibleConstructorReturn(this, (SingleMAToolTip.__proto__ || Object.getPrototypeOf(SingleMAToolTip)).call(this, props));\n\n    _this.handleClick = _this.handleClick.bind(_this);\n    return _this;\n  }\n\n  _createClass(SingleMAToolTip, [{\n    key: \"handleClick\",\n    value: function handleClick(e) {\n      var _props = this.props,\n          onClick = _props.onClick,\n          forChart = _props.forChart,\n          options = _props.options;\n      onClick(_extends({\n        chartId: forChart\n      }, options), e);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _props2 = this.props,\n          textFill = _props2.textFill,\n          labelFill = _props2.labelFill;\n      var translate = \"translate(\" + this.props.origin[0] + \", \" + this.props.origin[1] + \")\";\n      return _react2.default.createElement(\"g\", {\n        transform: translate\n      }, _react2.default.createElement(\"line\", {\n        x1: 0,\n        y1: 2,\n        x2: 0,\n        y2: 28,\n        stroke: this.props.color,\n        strokeWidth: \"4px\"\n      }), _react2.default.createElement(_ToolTipText2.default, {\n        x: 5,\n        y: 11,\n        fontFamily: this.props.fontFamily,\n        fontSize: this.props.fontSize\n      }, _react2.default.createElement(_ToolTipTSpanLabel2.default, {\n        fill: labelFill\n      }, this.props.displayName), _react2.default.createElement(\"tspan\", {\n        x: \"5\",\n        dy: \"15\",\n        fill: textFill\n      }, this.props.value)), _react2.default.createElement(\"rect\", {\n        x: 0,\n        y: 0,\n        width: 55,\n        height: 30,\n        onClick: this.handleClick,\n        fill: \"none\",\n        stroke: \"none\"\n      }));\n    }\n  }]);\n\n  return SingleMAToolTip;\n}(_react.Component);\n\nSingleMAToolTip.propTypes = {\n  origin: _propTypes2.default.array.isRequired,\n  color: _propTypes2.default.string.isRequired,\n  displayName: _propTypes2.default.string.isRequired,\n  value: _propTypes2.default.string.isRequired,\n  onClick: _propTypes2.default.func,\n  fontFamily: _propTypes2.default.string,\n  textFill: _propTypes2.default.string,\n  labelFill: _propTypes2.default.string,\n  fontSize: _propTypes2.default.number,\n  forChart: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]).isRequired,\n  options: _propTypes2.default.object.isRequired\n};\n\nvar MovingAverageTooltip = function (_Component2) {\n  _inherits(MovingAverageTooltip, _Component2);\n\n  function MovingAverageTooltip(props) {\n    _classCallCheck(this, MovingAverageTooltip);\n\n    var _this2 = _possibleConstructorReturn(this, (MovingAverageTooltip.__proto__ || Object.getPrototypeOf(MovingAverageTooltip)).call(this, props));\n\n    _this2.renderSVG = _this2.renderSVG.bind(_this2);\n    return _this2;\n  }\n\n  _createClass(MovingAverageTooltip, [{\n    key: \"renderSVG\",\n    value: function renderSVG(moreProps) {\n      var displayValuesFor = this.props.displayValuesFor;\n      var chartId = moreProps.chartId;\n      var chartConfig = moreProps.chartConfig;\n      var _props3 = this.props,\n          className = _props3.className,\n          onClick = _props3.onClick,\n          width = _props3.width,\n          fontFamily = _props3.fontFamily,\n          fontSize = _props3.fontSize,\n          textFill = _props3.textFill,\n          labelFill = _props3.labelFill;\n      var _props4 = this.props,\n          originProp = _props4.origin,\n          displayFormat = _props4.displayFormat,\n          options = _props4.options;\n      var height = moreProps.chartConfig.height;\n      var currentItem = displayValuesFor(this.props, moreProps);\n      var config = chartConfig;\n      var origin = (0, _utils.functor)(originProp);\n\n      var _origin = origin(width, height),\n          _origin2 = _slicedToArray(_origin, 2),\n          x = _origin2[0],\n          y = _origin2[1];\n\n      var _config$origin = _slicedToArray(config.origin, 2),\n          ox = _config$origin[0],\n          oy = _config$origin[1];\n\n      return _react2.default.createElement(\"g\", {\n        transform: \"translate(\" + (ox + x) + \", \" + (oy + y) + \")\",\n        className: className\n      }, options.map(function (each, idx) {\n        var yValue = currentItem && each.yAccessor(currentItem);\n        var tooltipLabel = each.type + \" (\" + each.windowSize + \")\";\n        var yDisplayValue = yValue ? displayFormat(yValue) : \"n/a\";\n        return _react2.default.createElement(SingleMAToolTip, {\n          key: idx,\n          origin: [width * idx, 0],\n          color: each.stroke,\n          displayName: tooltipLabel,\n          value: yDisplayValue,\n          options: each,\n          forChart: chartId,\n          onClick: onClick,\n          fontFamily: fontFamily,\n          fontSize: fontSize,\n          textFill: textFill,\n          labelFill: labelFill\n        });\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _react2.default.createElement(_GenericChartComponent2.default, {\n        clip: false,\n        svgDraw: this.renderSVG,\n        drawOn: [\"mousemove\"]\n      });\n    }\n  }]);\n\n  return MovingAverageTooltip;\n}(_react.Component);\n\nMovingAverageTooltip.propTypes = {\n  className: _propTypes2.default.string,\n  displayFormat: _propTypes2.default.func.isRequired,\n  origin: _propTypes2.default.array.isRequired,\n  displayValuesFor: _propTypes2.default.func,\n  onClick: _propTypes2.default.func,\n  textFill: _propTypes2.default.string,\n  labelFill: _propTypes2.default.string,\n  fontFamily: _propTypes2.default.string,\n  fontSize: _propTypes2.default.number,\n  width: _propTypes2.default.number,\n  options: _propTypes2.default.arrayOf(_propTypes2.default.shape({\n    yAccessor: _propTypes2.default.func.isRequired,\n    type: _propTypes2.default.string.isRequired,\n    stroke: _propTypes2.default.string.isRequired,\n    windowSize: _propTypes2.default.number.isRequired,\n    echo: _propTypes2.default.any\n  }))\n};\nMovingAverageTooltip.defaultProps = {\n  className: \"react-stockcharts-tooltip react-stockcharts-moving-average-tooltip\",\n  displayFormat: (0, _d3Format.format)(\".2f\"),\n  displayValuesFor: _displayValuesFor2.default,\n  origin: [0, 10],\n  width: 65\n};\nexports.default = MovingAverageTooltip;","map":{"version":3,"sources":["../../../src/lib/tooltip/MovingAverageTooltip.js"],"names":["SingleMAToolTip","e","onClick","forChart","options","chartId","textFill","labelFill","translate","displayName","value","origin","color","fontFamily","fontSize","isRequired","MovingAverageTooltip","moreProps","displayValuesFor","chartConfig","className","width","originProp","displayFormat","height","currentItem","config","x","y","ox","oy","yValue","each","tooltipLabel","yDisplayValue","yAccessor","type","stroke","windowSize","echo","any"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAA,MAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;;;AACA,IAAA,UAAA,GAAA,OAAA,CAAA,YAAA,CAAA;;;;AACA,IAAA,SAAA,GAAA,OAAA,CAAA,WAAA,CAAA;;AACA,IAAA,iBAAA,GAAA,OAAA,CAAA,oBAAA,CAAA;;;;AACA,IAAA,sBAAA,GAAA,OAAA,CAAA,0BAAA,CAAA;;;;AAEA,IAAA,YAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;;;AACA,IAAA,kBAAA,GAAA,OAAA,CAAA,qBAAA,CAAA;;;;AAEA,IAAA,MAAA,GAAA,OAAA,CAAA,UAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEMA,e;;;AACL,WAAA,eAAA,CAAA,KAAA,EAAmB;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,eAAA,CAAA;;AAAA,QAAA,KAAA,GAAA,0BAAA,CAAA,IAAA,EAAA,CAAA,eAAA,CAAA,SAAA,IAAA,MAAA,CAAA,cAAA,CAAA,eAAA,CAAA,EAAA,IAAA,CAAA,IAAA,EAAA,KAAA,CAAA,CAAA;;AAElB,IAAA,KAAA,CAAA,WAAA,GAAmB,KAAA,CAAA,WAAA,CAAA,IAAA,CAAnB,KAAmB,CAAnB;AAFkB,WAAA,KAAA;AAGlB;;;;gCACWC,C,EAAG;AAAA,UAAA,MAAA,GACyB,KADzB,KAAA;AAAA,UACNC,OADM,GAAA,MAAA,CAAA,OAAA;AAAA,UACGC,QADH,GAAA,MAAA,CAAA,QAAA;AAAA,UACaC,OADb,GAAA,MAAA,CAAA,OAAA;AAEdF,MAAAA,OAAAA,CAAAA,QAAAA,CAAAA;AAAUG,QAAAA,OAAAA,EAAVH;AAAAA,OAAAA,EAAAA,OAAAA,CAAAA,EAAAA,CAAAA,CAAAA;AACA;;;6BACQ;AAAA,UAAA,OAAA,GACwB,KADxB,KAAA;AAAA,UACAI,QADA,GAAA,OAAA,CAAA,QAAA;AAAA,UACUC,SADV,GAAA,OAAA,CAAA,SAAA;AAER,UAAMC,SAAAA,GAAY,eAAe,KAAA,KAAA,CAAA,MAAA,CAAf,CAAe,CAAf,GAAA,IAAA,GAA6C,KAAA,KAAA,CAAA,MAAA,CAA7C,CAA6C,CAA7C,GAAlB,GAAA;AACA,aACC,OAAA,CAAA,OAAA,CAAA,aAAA,CAAA,GAAA,EAAA;AAAG,QAAA,SAAA,EAAH;AAAA,OAAA,EACC,OAAA,CAAA,OAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,QAAA,EAAA,EAAN,CAAA;AAAa,QAAA,EAAA,EAAb,CAAA;AAAoB,QAAA,EAAA,EAApB,CAAA;AAA2B,QAAA,EAAA,EAA3B,EAAA;AAAmC,QAAA,MAAA,EAAQ,KAAA,KAAA,CAA3C,KAAA;AAA6D,QAAA,WAAA,EAD9D;AACC,OAAA,CADD,EAEC,OAAA,CAAA,OAAA,CAAA,aAAA,CAAA,aAAA,CAAA,OAAA,EAAA;AAAa,QAAA,CAAA,EAAb,CAAA;AAAmB,QAAA,CAAA,EAAnB,EAAA;AACC,QAAA,UAAA,EAAY,KAAA,KAAA,CADb,UAAA;AACoC,QAAA,QAAA,EAAU,KAAA,KAAA,CAD9C;AAAA,OAAA,EAEC,OAAA,CAAA,OAAA,CAAA,aAAA,CAAA,mBAAA,CAAA,OAAA,EAAA;AAAmB,QAAA,IAAA,EAAnB;AAAA,OAAA,EAAqC,KAAA,KAAA,CAAWC,WAAhD,CAFD,EAGC,OAAA,CAAA,OAAA,CAAA,aAAA,CAAA,OAAA,EAAA;AAAO,QAAA,CAAA,EAAP,GAAA;AAAa,QAAA,EAAA,EAAb,IAAA;AAAqB,QAAA,IAAA,EAArB;AAAA,OAAA,EAAsC,KAAA,KAAA,CAAWC,KAAjD,CAHD,CAFD,EAOC,OAAA,CAAA,OAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,QAAA,CAAA,EAAN,CAAA;AAAY,QAAA,CAAA,EAAZ,CAAA;AAAkB,QAAA,KAAA,EAAlB,EAAA;AAA6B,QAAA,MAAA,EAA7B,EAAA;AACC,QAAA,OAAA,EAAS,KADV,WAAA;AAEC,QAAA,IAAA,EAFD,MAAA;AAEa,QAAA,MAAA,EAFb;AAAA,OAAA,CAPD,CADD;AAaA;;;;;;AAGFV,eAAAA,CAAAA,SAAAA,GAA4B;AAC3BW,EAAAA,MAAAA,EAAQ,WAAA,CAAA,OAAA,CAAA,KAAA,CADmB,UAAA;AAE3BC,EAAAA,KAAAA,EAAO,WAAA,CAAA,OAAA,CAAA,MAAA,CAFoB,UAAA;AAG3BH,EAAAA,WAAAA,EAAa,WAAA,CAAA,OAAA,CAAA,MAAA,CAHc,UAAA;AAI3BC,EAAAA,KAAAA,EAAO,WAAA,CAAA,OAAA,CAAA,MAAA,CAJoB,UAAA;AAK3BR,EAAAA,OAAAA,EAAS,WAAA,CAAA,OAAA,CALkB,IAAA;AAM3BW,EAAAA,UAAAA,EAAY,WAAA,CAAA,OAAA,CANe,MAAA;AAO3BP,EAAAA,QAAAA,EAAU,WAAA,CAAA,OAAA,CAPiB,MAAA;AAQ3BC,EAAAA,SAAAA,EAAW,WAAA,CAAA,OAAA,CARgB,MAAA;AAS3BO,EAAAA,QAAAA,EAAU,WAAA,CAAA,OAAA,CATiB,MAAA;AAU3BX,EAAAA,QAAAA,EAAU,WAAA,CAAA,OAAA,CAAA,SAAA,CAAoB,CAAC,WAAA,CAAA,OAAA,CAAD,MAAA,EAAmB,WAAA,CAAA,OAAA,CAAvC,MAAoB,CAApB,EAViB,UAAA;AAW3BC,EAAAA,OAAAA,EAAS,WAAA,CAAA,OAAA,CAAA,MAAA,CAAiBW;AAXC,CAA5Bf;;IAcMgB,oB;;;AACL,WAAA,oBAAA,CAAA,KAAA,EAAmB;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,oBAAA,CAAA;;AAAA,QAAA,MAAA,GAAA,0BAAA,CAAA,IAAA,EAAA,CAAA,oBAAA,CAAA,SAAA,IAAA,MAAA,CAAA,cAAA,CAAA,oBAAA,CAAA,EAAA,IAAA,CAAA,IAAA,EAAA,KAAA,CAAA,CAAA;;AAElB,IAAA,MAAA,CAAA,SAAA,GAAiB,MAAA,CAAA,SAAA,CAAA,IAAA,CAAjB,MAAiB,CAAjB;AAFkB,WAAA,MAAA;AAGlB;;;;8BACSC,S,EAAW;AAAA,UACZC,gBADY,GACS,KADT,KACS,CADT,gBAAA;AAAA,UAGZb,OAHY,GAGAY,SAHA,CAAA,OAAA;AAAA,UAIZE,WAJY,GAIIF,SAJJ,CAAA,WAAA;AAAA,UAAA,OAAA,GAM6D,KAN7D,KAAA;AAAA,UAMZG,SANY,GAAA,OAAA,CAAA,SAAA;AAAA,UAMDlB,OANC,GAAA,OAAA,CAAA,OAAA;AAAA,UAMQmB,KANR,GAAA,OAAA,CAAA,KAAA;AAAA,UAMeR,UANf,GAAA,OAAA,CAAA,UAAA;AAAA,UAM2BC,QAN3B,GAAA,OAAA,CAAA,QAAA;AAAA,UAMqCR,QANrC,GAAA,OAAA,CAAA,QAAA;AAAA,UAM+CC,SAN/C,GAAA,OAAA,CAAA,SAAA;AAAA,UAAA,OAAA,GAOmC,KAPnC,KAAA;AAAA,UAOJe,UAPI,GAAA,OAAA,CAAA,MAAA;AAAA,UAOQC,aAPR,GAAA,OAAA,CAAA,aAAA;AAAA,UAOuBnB,OAPvB,GAAA,OAAA,CAAA,OAAA;AAAA,UAQGoB,MARH,GAQgBP,SARhB,CAAA,WAQgBA,CARhB,MAAA;AAUpB,UAAMQ,WAAAA,GAAcP,gBAAAA,CAAiB,KAAjBA,KAAAA,EAApB,SAAoBA,CAApB;AACA,UAAMQ,MAAAA,GAAN,WAAA;AAEA,UAAMf,MAAAA,GAAS,CAAA,GAAA,MAAA,CAAA,OAAA,EAAf,UAAe,CAAf;;AAboB,UAAA,OAAA,GAcLA,MAAAA,CAAAA,KAAAA,EAdK,MAcLA,CAdK;AAAA,UAAA,QAAA,GAAA,cAAA,CAAA,OAAA,EAAA,CAAA,CAAA;AAAA,UAcbgB,CAda,GAAA,QAAA,CAAA,CAAA,CAAA;AAAA,UAcVC,CAdU,GAAA,QAAA,CAAA,CAAA,CAAA;;AAAA,UAAA,cAAA,GAAA,cAAA,CAeHF,MAAAA,CAfG,MAAA,EAAA,CAAA,CAAA;AAAA,UAebG,EAfa,GAAA,cAAA,CAAA,CAAA,CAAA;AAAA,UAeTC,EAfS,GAAA,cAAA,CAAA,CAAA,CAAA;;AAiBpB,aACC,OAAA,CAAA,OAAA,CAAA,aAAA,CAAA,GAAA,EAAA;AAAG,QAAA,SAAA,EAAA,gBAAyBD,EAAAA,GAAzB,CAAA,IAAA,IAAA,IAAsCC,EAAAA,GAAtC,CAAA,IAAH,GAAA;AAAqD,QAAA,SAAA,EAArD;AAAA,OAAA,EACE1B,OAAAA,CAAAA,GAAAA,CACK,UAAA,IAAA,EAAA,GAAA,EAAe;AACnB,YAAM2B,MAAAA,GAASN,WAAAA,IAAeO,IAAAA,CAAAA,SAAAA,CAA9B,WAA8BA,CAA9B;AAEA,YAAMC,YAAAA,GAAkBD,IAAAA,CAAlBC,IAAkBD,GAAlBC,IAAkBD,GAAcA,IAAAA,CAAhCC,UAAkBD,GAAxB,GAAA;AACA,YAAME,aAAAA,GAAgBH,MAAAA,GAASR,aAAAA,CAATQ,MAASR,CAATQ,GAAtB,KAAA;AACA,eAAO,OAAA,CAAA,OAAA,CAAA,aAAA,CAAA,eAAA,EAAA;AACN,UAAA,GAAA,EADM,GAAA;AAEN,UAAA,MAAA,EAAQ,CAACV,KAAAA,GAAD,GAAA,EAFF,CAEE,CAFF;AAGN,UAAA,KAAA,EAAOW,IAAAA,CAHD,MAAA;AAIN,UAAA,WAAA,EAJM,YAAA;AAKN,UAAA,KAAA,EALM,aAAA;AAMN,UAAA,OAAA,EANM,IAAA;AAON,UAAA,QAAA,EAPM,OAAA;AAQN,UAAA,OAAA,EARM,OAAA;AASN,UAAA,UAAA,EATM,UAAA;AAUN,UAAA,QAAA,EAVM,QAAA;AAWN,UAAA,QAAA,EAXM,QAAA;AAYN,UAAA,SAAA,EAAWzB;AAZL,SAAA,CAAP;AANDH,OAAAA,CADF,CADD;AAyBA;;;6BACQ;AACR,aAAO,OAAA,CAAA,OAAA,CAAA,aAAA,CAAA,uBAAA,CAAA,OAAA,EAAA;AACN,QAAA,IAAA,EADM,KAAA;AAEN,QAAA,OAAA,EAAS,KAFH,SAAA;AAGN,QAAA,MAAA,EAAQ,CAAA,WAAA;AAHF,OAAA,CAAP;AAKA;;;;;;AAGFY,oBAAAA,CAAAA,SAAAA,GAAiC;AAChCI,EAAAA,SAAAA,EAAW,WAAA,CAAA,OAAA,CADqB,MAAA;AAEhCG,EAAAA,aAAAA,EAAe,WAAA,CAAA,OAAA,CAAA,IAAA,CAFiB,UAAA;AAGhCZ,EAAAA,MAAAA,EAAQ,WAAA,CAAA,OAAA,CAAA,KAAA,CAHwB,UAAA;AAIhCO,EAAAA,gBAAAA,EAAkB,WAAA,CAAA,OAAA,CAJc,IAAA;AAKhChB,EAAAA,OAAAA,EAAS,WAAA,CAAA,OAAA,CALuB,IAAA;AAMhCI,EAAAA,QAAAA,EAAU,WAAA,CAAA,OAAA,CANsB,MAAA;AAOhCC,EAAAA,SAAAA,EAAW,WAAA,CAAA,OAAA,CAPqB,MAAA;AAQhCM,EAAAA,UAAAA,EAAY,WAAA,CAAA,OAAA,CARoB,MAAA;AAShCC,EAAAA,QAAAA,EAAU,WAAA,CAAA,OAAA,CATsB,MAAA;AAUhCO,EAAAA,KAAAA,EAAO,WAAA,CAAA,OAAA,CAVyB,MAAA;AAWhCjB,EAAAA,OAAAA,EAAS,WAAA,CAAA,OAAA,CAAA,OAAA,CAAkB,WAAA,CAAA,OAAA,CAAA,KAAA,CAAgB;AAC1C+B,IAAAA,SAAAA,EAAW,WAAA,CAAA,OAAA,CAAA,IAAA,CAD+B,UAAA;AAE1CC,IAAAA,IAAAA,EAAM,WAAA,CAAA,OAAA,CAAA,MAAA,CAFoC,UAAA;AAG1CC,IAAAA,MAAAA,EAAQ,WAAA,CAAA,OAAA,CAAA,MAAA,CAHkC,UAAA;AAI1CC,IAAAA,UAAAA,EAAY,WAAA,CAAA,OAAA,CAAA,MAAA,CAJ8B,UAAA;AAK1CC,IAAAA,IAAAA,EAAM,WAAA,CAAA,OAAA,CAAUC;AAL0B,GAAhB,CAAlB;AAXuB,CAAjCxB;AAoBAA,oBAAAA,CAAAA,YAAAA,GAAoC;AACnCI,EAAAA,SAAAA,EADmC,oEAAA;AAEnCG,EAAAA,aAAAA,EAAe,CAAA,GAAA,SAAA,CAAA,MAAA,EAFoB,KAEpB,CAFoB;AAGnCL,EAAAA,gBAAAA,EAAAA,kBAAAA,CAHmC,OAAA;AAInCP,EAAAA,MAAAA,EAAQ,CAAA,CAAA,EAJ2B,EAI3B,CAJ2B;AAKnCU,EAAAA,KAAAA,EAAO;AAL4B,CAApCL;kBAQeA,oB","sourcesContent":["\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { format } from \"d3-format\";\nimport displayValuesFor from \"./displayValuesFor\";\nimport GenericChartComponent from \"../GenericChartComponent\";\n\nimport ToolTipText from \"./ToolTipText\";\nimport ToolTipTSpanLabel from \"./ToolTipTSpanLabel\";\n\nimport { functor } from \"../utils\";\n\nclass SingleMAToolTip extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.handleClick = this.handleClick.bind(this);\n\t}\n\thandleClick(e) {\n\t\tconst { onClick, forChart, options } = this.props;\n\t\tonClick({ chartId: forChart, ...options }, e);\n\t}\n\trender() {\n\t\tconst { textFill, labelFill } = this.props;\n\t\tconst translate = \"translate(\" + this.props.origin[0] + \", \" + this.props.origin[1] + \")\";\n\t\treturn (\n\t\t\t<g transform={translate}>\n\t\t\t\t<line x1={0} y1={2} x2={0} y2={28} stroke={this.props.color} strokeWidth=\"4px\"/>\n\t\t\t\t<ToolTipText x={5} y={11}\n\t\t\t\t\tfontFamily={this.props.fontFamily} fontSize={this.props.fontSize}>\n\t\t\t\t\t<ToolTipTSpanLabel fill={labelFill}>{this.props.displayName}</ToolTipTSpanLabel>\n\t\t\t\t\t<tspan x=\"5\" dy=\"15\" fill={textFill}>{this.props.value}</tspan>\n\t\t\t\t</ToolTipText>\n\t\t\t\t<rect x={0} y={0} width={55} height={30}\n\t\t\t\t\tonClick={this.handleClick}\n\t\t\t\t\tfill=\"none\" stroke=\"none\" />\n\t\t\t</g>\n\t\t);\n\t}\n}\n\nSingleMAToolTip.propTypes = {\n\torigin: PropTypes.array.isRequired,\n\tcolor: PropTypes.string.isRequired,\n\tdisplayName: PropTypes.string.isRequired,\n\tvalue: PropTypes.string.isRequired,\n\tonClick: PropTypes.func,\n\tfontFamily: PropTypes.string,\n\ttextFill: PropTypes.string,\n\tlabelFill: PropTypes.string,\n\tfontSize: PropTypes.number,\n\tforChart: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n\toptions: PropTypes.object.isRequired,\n};\n\nclass MovingAverageTooltip extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.renderSVG = this.renderSVG.bind(this);\n\t}\n\trenderSVG(moreProps) {\n\t\tconst { displayValuesFor } = this.props;\n\n\t\tconst { chartId } = moreProps;\n\t\tconst { chartConfig } = moreProps;\n\n\t\tconst { className, onClick, width, fontFamily, fontSize, textFill, labelFill } = this.props;\n\t\tconst { origin: originProp, displayFormat, options } = this.props;\n\t\tconst { chartConfig: { height } } = moreProps;\n\n\t\tconst currentItem = displayValuesFor(this.props, moreProps);\n\t\tconst config = chartConfig;\n\n\t\tconst origin = functor(originProp);\n\t\tconst [x, y] = origin(width, height);\n\t\tconst [ox, oy] = config.origin;\n\n\t\treturn (\n\t\t\t<g transform={`translate(${ ox + x }, ${ oy + y })`} className={className}>\n\t\t\t\t{options\n\t\t\t\t\t.map((each, idx) => {\n\t\t\t\t\t\tconst yValue = currentItem && each.yAccessor(currentItem);\n\n\t\t\t\t\t\tconst tooltipLabel = `${each.type} (${each.windowSize})`;\n\t\t\t\t\t\tconst yDisplayValue = yValue ? displayFormat(yValue) : \"n/a\";\n\t\t\t\t\t\treturn <SingleMAToolTip\n\t\t\t\t\t\t\tkey={idx}\n\t\t\t\t\t\t\torigin={[width * idx, 0]}\n\t\t\t\t\t\t\tcolor={each.stroke}\n\t\t\t\t\t\t\tdisplayName={tooltipLabel}\n\t\t\t\t\t\t\tvalue={yDisplayValue}\n\t\t\t\t\t\t\toptions={each}\n\t\t\t\t\t\t\tforChart={chartId}\n\t\t\t\t\t\t\tonClick={onClick}\n\t\t\t\t\t\t\tfontFamily={fontFamily}\n\t\t\t\t\t\t\tfontSize={fontSize}\n\t\t\t\t\t\t\ttextFill={textFill}\n\t\t\t\t\t\t\tlabelFill={labelFill}\n\t\t\t\t\t\t/>;\n\t\t\t\t\t})}\n\t\t\t</g>\n\t\t);\n\t}\n\trender() {\n\t\treturn <GenericChartComponent\n\t\t\tclip={false}\n\t\t\tsvgDraw={this.renderSVG}\n\t\t\tdrawOn={[\"mousemove\"]}\n\t\t/>;\n\t}\n}\n\nMovingAverageTooltip.propTypes = {\n\tclassName: PropTypes.string,\n\tdisplayFormat: PropTypes.func.isRequired,\n\torigin: PropTypes.array.isRequired,\n\tdisplayValuesFor: PropTypes.func,\n\tonClick: PropTypes.func,\n\ttextFill: PropTypes.string,\n\tlabelFill: PropTypes.string,\n\tfontFamily: PropTypes.string,\n\tfontSize: PropTypes.number,\n\twidth: PropTypes.number,\n\toptions: PropTypes.arrayOf(PropTypes.shape({\n\t\tyAccessor: PropTypes.func.isRequired,\n\t\ttype: PropTypes.string.isRequired,\n\t\tstroke: PropTypes.string.isRequired,\n\t\twindowSize: PropTypes.number.isRequired,\n\t\techo: PropTypes.any,\n\t})),\n};\n\nMovingAverageTooltip.defaultProps = {\n\tclassName: \"react-stockcharts-tooltip react-stockcharts-moving-average-tooltip\",\n\tdisplayFormat: format(\".2f\"),\n\tdisplayValuesFor: displayValuesFor,\n\torigin: [0, 10],\n\twidth: 65,\n};\n\nexport default MovingAverageTooltip;\n"]},"metadata":{},"sourceType":"script"}