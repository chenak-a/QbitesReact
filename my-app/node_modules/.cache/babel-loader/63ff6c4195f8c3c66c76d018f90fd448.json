{"ast":null,"code":"import { dispatch } from \"d3-dispatch\";\nimport { dragDisable, dragEnable } from \"d3-drag\";\nimport { interpolate } from \"d3-interpolate\";\nimport { pointer, select } from \"d3-selection\";\nimport { interrupt } from \"d3-transition\";\nimport constant from \"./constant.js\";\nimport BrushEvent from \"./event.js\";\nimport noevent, { nopropagation } from \"./noevent.js\";\nvar MODE_DRAG = {\n  name: \"drag\"\n},\n    MODE_SPACE = {\n  name: \"space\"\n},\n    MODE_HANDLE = {\n  name: \"handle\"\n},\n    MODE_CENTER = {\n  name: \"center\"\n};\nconst {\n  abs,\n  max,\n  min\n} = Math;\n\nfunction number1(e) {\n  return [+e[0], +e[1]];\n}\n\nfunction number2(e) {\n  return [number1(e[0]), number1(e[1])];\n}\n\nvar X = {\n  name: \"x\",\n  handles: [\"w\", \"e\"].map(type),\n  input: function (x, e) {\n    return x == null ? null : [[+x[0], e[0][1]], [+x[1], e[1][1]]];\n  },\n  output: function (xy) {\n    return xy && [xy[0][0], xy[1][0]];\n  }\n};\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function (y, e) {\n    return y == null ? null : [[e[0][0], +y[0]], [e[1][0], +y[1]]];\n  },\n  output: function (xy) {\n    return xy && [xy[0][1], xy[1][1]];\n  }\n};\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"w\", \"e\", \"s\", \"nw\", \"ne\", \"sw\", \"se\"].map(type),\n  input: function (xy) {\n    return xy == null ? null : number2(xy);\n  },\n  output: function (xy) {\n    return xy;\n  }\n};\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {\n    type: t\n  };\n} // Ignore right-click, since that should open the context menu.\n\n\nfunction defaultFilter(event) {\n  return !event.ctrlKey && !event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n\n  if (svg.hasAttribute(\"viewBox\")) {\n    svg = svg.viewBox.baseVal;\n    return [[svg.x, svg.y], [svg.x + svg.width, svg.y + svg.height]];\n  }\n\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\nfunction defaultTouchable() {\n  return navigator.maxTouchPoints || \"ontouchstart\" in this;\n} // Like d3.local, but with the name “__brush” rather than auto-generated.\n\n\nfunction local(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0] || extent[0][1] === extent[1][1];\n}\n\nexport function brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\nexport function brushX() {\n  return brush(X);\n}\nexport function brushY() {\n  return brush(Y);\n}\nexport default function () {\n  return brush(XY);\n}\n\nfunction brush(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      touchable = defaultTouchable,\n      keys = true,\n      listeners = dispatch(\"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group.property(\"__brush\", initialize).selectAll(\".overlay\").data([type(\"overlay\")]);\n    overlay.enter().append(\"rect\").attr(\"class\", \"overlay\").attr(\"pointer-events\", \"all\").attr(\"cursor\", cursors.overlay).merge(overlay).each(function () {\n      var extent = local(this).extent;\n      select(this).attr(\"x\", extent[0][0]).attr(\"y\", extent[0][1]).attr(\"width\", extent[1][0] - extent[0][0]).attr(\"height\", extent[1][1] - extent[0][1]);\n    });\n    group.selectAll(\".selection\").data([type(\"selection\")]).enter().append(\"rect\").attr(\"class\", \"selection\").attr(\"cursor\", cursors.selection).attr(\"fill\", \"#777\").attr(\"fill-opacity\", 0.3).attr(\"stroke\", \"#fff\").attr(\"shape-rendering\", \"crispEdges\");\n    var handle = group.selectAll(\".handle\").data(dim.handles, function (d) {\n      return d.type;\n    });\n    handle.exit().remove();\n    handle.enter().append(\"rect\").attr(\"class\", function (d) {\n      return \"handle handle--\" + d.type;\n    }).attr(\"cursor\", function (d) {\n      return cursors[d.type];\n    });\n    group.each(redraw).attr(\"fill\", \"none\").attr(\"pointer-events\", \"all\").on(\"mousedown.brush\", started).filter(touchable).on(\"touchstart.brush\", started).on(\"touchmove.brush\", touchmoved).on(\"touchend.brush touchcancel.brush\", touchended).style(\"touch-action\", \"none\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  brush.move = function (group, selection, event) {\n    if (group.tween) {\n      group.on(\"start.brush\", function (event) {\n        emitter(this, arguments).beforestart().start(event);\n      }).on(\"interrupt.brush end.brush\", function (event) {\n        emitter(this, arguments).end(event);\n      }).tween(\"brush\", function () {\n        var that = this,\n            state = that.__brush,\n            emit = emitter(that, arguments),\n            selection0 = state.selection,\n            selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n            i = interpolate(selection0, selection1);\n\n        function tween(t) {\n          state.selection = t === 1 && selection1 === null ? null : i(t);\n          redraw.call(that);\n          emit.brush();\n        }\n\n        return selection0 !== null && selection1 !== null ? tween : tween(1);\n      });\n    } else {\n      group.each(function () {\n        var that = this,\n            args = arguments,\n            state = that.__brush,\n            selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n            emit = emitter(that, args).beforestart();\n        interrupt(that);\n        state.selection = selection1 === null ? null : selection1;\n        redraw.call(that);\n        emit.start(event).brush(event).end(event);\n      });\n    }\n  };\n\n  brush.clear = function (group, event) {\n    brush.move(group, null, event);\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection = local(this).selection;\n\n    if (selection) {\n      group.selectAll(\".selection\").style(\"display\", null).attr(\"x\", selection[0][0]).attr(\"y\", selection[0][1]).attr(\"width\", selection[1][0] - selection[0][0]).attr(\"height\", selection[1][1] - selection[0][1]);\n      group.selectAll(\".handle\").style(\"display\", null).attr(\"x\", function (d) {\n        return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2;\n      }).attr(\"y\", function (d) {\n        return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2;\n      }).attr(\"width\", function (d) {\n        return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize;\n      }).attr(\"height\", function (d) {\n        return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize;\n      });\n    } else {\n      group.selectAll(\".selection,.handle\").style(\"display\", \"none\").attr(\"x\", null).attr(\"y\", null).attr(\"width\", null).attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args, clean) {\n    var emit = that.__brush.emitter;\n    return emit && (!clean || !emit.clean) ? emit : new Emitter(that, args, clean);\n  }\n\n  function Emitter(that, args, clean) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n    this.clean = clean;\n  }\n\n  Emitter.prototype = {\n    beforestart: function () {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function (event, mode) {\n      if (this.starting) this.starting = false, this.emit(\"start\", event, mode);else this.emit(\"brush\", event);\n      return this;\n    },\n    brush: function (event, mode) {\n      this.emit(\"brush\", event, mode);\n      return this;\n    },\n    end: function (event, mode) {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\", event, mode);\n      return this;\n    },\n    emit: function (type, event, mode) {\n      var d = select(this.that).datum();\n      listeners.call(type, this.that, new BrushEvent(type, {\n        sourceEvent: event,\n        target: brush,\n        selection: dim.output(this.state.selection),\n        mode,\n        dispatch: listeners\n      }), d);\n    }\n  };\n\n  function started(event) {\n    if (touchending && !event.touches) return;\n    if (!filter.apply(this, arguments)) return;\n    var that = this,\n        type = event.target.__data__.type,\n        mode = (keys && event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : keys && event.altKey ? MODE_CENTER : MODE_HANDLE,\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local(that),\n        extent = state.extent,\n        selection = state.selection,\n        W = extent[0][0],\n        w0,\n        w1,\n        N = extent[0][1],\n        n0,\n        n1,\n        E = extent[1][0],\n        e0,\n        e1,\n        S = extent[1][1],\n        s0,\n        s1,\n        dx = 0,\n        dy = 0,\n        moving,\n        shifting = signX && signY && keys && event.shiftKey,\n        lockX,\n        lockY,\n        points = Array.from(event.touches || [event], t => {\n      const i = t.identifier;\n      t = pointer(t, that);\n      t.point0 = t.slice();\n      t.identifier = i;\n      return t;\n    });\n    interrupt(that);\n    var emit = emitter(that, arguments, true).beforestart();\n\n    if (type === \"overlay\") {\n      if (selection) moving = true;\n      const pts = [points[0], points[1] || points[0]];\n      state.selection = selection = [[w0 = dim === Y ? W : min(pts[0][0], pts[1][0]), n0 = dim === X ? N : min(pts[0][1], pts[1][1])], [e0 = dim === Y ? E : max(pts[0][0], pts[1][0]), s0 = dim === X ? S : max(pts[0][1], pts[1][1])]];\n      if (points.length > 1) move(event);\n    } else {\n      w0 = selection[0][0];\n      n0 = selection[0][1];\n      e0 = selection[1][0];\n      s0 = selection[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n    var group = select(that).attr(\"pointer-events\", \"none\");\n    var overlay = group.selectAll(\".overlay\").attr(\"cursor\", cursors[type]);\n\n    if (event.touches) {\n      emit.moved = moved;\n      emit.ended = ended;\n    } else {\n      var view = select(event.view).on(\"mousemove.brush\", moved, true).on(\"mouseup.brush\", ended, true);\n      if (keys) view.on(\"keydown.brush\", keydowned, true).on(\"keyup.brush\", keyupped, true);\n      dragDisable(event.view);\n    }\n\n    redraw.call(that);\n    emit.start(event, mode.name);\n\n    function moved(event) {\n      for (const p of event.changedTouches || [event]) {\n        for (const d of points) if (d.identifier === p.identifier) d.cur = pointer(p, that);\n      }\n\n      if (shifting && !lockX && !lockY && points.length === 1) {\n        const point = points[0];\n        if (abs(point.cur[0] - point[0]) > abs(point.cur[1] - point[1])) lockY = true;else lockX = true;\n      }\n\n      for (const point of points) if (point.cur) point[0] = point.cur[0], point[1] = point.cur[1];\n\n      moving = true;\n      noevent(event);\n      move(event);\n    }\n\n    function move(event) {\n      const point = points[0],\n            point0 = point.point0;\n      var t;\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG:\n          {\n            if (signX) dx = max(W - w0, min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n            if (signY) dy = max(N - n0, min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n            break;\n          }\n\n        case MODE_HANDLE:\n          {\n            if (points[1]) {\n              if (signX) w1 = max(W, min(E, points[0][0])), e1 = max(W, min(E, points[1][0])), signX = 1;\n              if (signY) n1 = max(N, min(S, points[0][1])), s1 = max(N, min(S, points[1][1])), signY = 1;\n            } else {\n              if (signX < 0) dx = max(W - w0, min(E - w0, dx)), w1 = w0 + dx, e1 = e0;else if (signX > 0) dx = max(W - e0, min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n              if (signY < 0) dy = max(N - n0, min(S - n0, dy)), n1 = n0 + dy, s1 = s0;else if (signY > 0) dy = max(N - s0, min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n            }\n\n            break;\n          }\n\n        case MODE_CENTER:\n          {\n            if (signX) w1 = max(W, min(E, w0 - dx * signX)), e1 = max(W, min(E, e0 + dx * signX));\n            if (signY) n1 = max(N, min(S, n0 - dy * signY)), s1 = max(N, min(S, s0 + dy * signY));\n            break;\n          }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection = state.selection; // May be set by brush.move!\n\n      if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n      if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\n      if (selection[0][0] !== w1 || selection[0][1] !== n1 || selection[1][0] !== e1 || selection[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush(event, mode.name);\n      }\n    }\n\n    function ended(event) {\n      nopropagation(event);\n\n      if (event.touches) {\n        if (event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function () {\n          touchending = null;\n        }, 500); // Ghost clicks are delayed!\n      } else {\n        dragEnable(event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\n\n      if (empty(selection)) state.selection = null, redraw.call(that);\n      emit.end(event, mode.name);\n    }\n\n    function keydowned(event) {\n      switch (event.keyCode) {\n        case 16:\n          {\n            // SHIFT\n            shifting = signX && signY;\n            break;\n          }\n\n        case 18:\n          {\n            // ALT\n            if (mode === MODE_HANDLE) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n              move(event);\n            }\n\n            break;\n          }\n\n        case 32:\n          {\n            // SPACE; takes priority over ALT\n            if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n              if (signX < 0) e0 = e1 - dx;else if (signX > 0) w0 = w1 - dx;\n              if (signY < 0) s0 = s1 - dy;else if (signY > 0) n0 = n1 - dy;\n              mode = MODE_SPACE;\n              overlay.attr(\"cursor\", cursors.selection);\n              move(event);\n            }\n\n            break;\n          }\n\n        default:\n          return;\n      }\n\n      noevent(event);\n    }\n\n    function keyupped(event) {\n      switch (event.keyCode) {\n        case 16:\n          {\n            // SHIFT\n            if (shifting) {\n              lockX = lockY = shifting = false;\n              move(event);\n            }\n\n            break;\n          }\n\n        case 18:\n          {\n            // ALT\n            if (mode === MODE_CENTER) {\n              if (signX < 0) e0 = e1;else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1;else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n              move(event);\n            }\n\n            break;\n          }\n\n        case 32:\n          {\n            // SPACE\n            if (mode === MODE_SPACE) {\n              if (event.altKey) {\n                if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n                if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n                mode = MODE_CENTER;\n              } else {\n                if (signX < 0) e0 = e1;else if (signX > 0) w0 = w1;\n                if (signY < 0) s0 = s1;else if (signY > 0) n0 = n1;\n                mode = MODE_HANDLE;\n              }\n\n              overlay.attr(\"cursor\", cursors[type]);\n              move(event);\n            }\n\n            break;\n          }\n\n        default:\n          return;\n      }\n\n      noevent(event);\n    }\n  }\n\n  function touchmoved(event) {\n    emitter(this, arguments).moved(event);\n  }\n\n  function touchended(event) {\n    emitter(this, arguments).ended(event);\n  }\n\n  function initialize() {\n    var state = this.__brush || {\n      selection: null\n    };\n    state.extent = number2(extent.apply(this, arguments));\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function (_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant(number2(_)), brush) : extent;\n  };\n\n  brush.filter = function (_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), brush) : filter;\n  };\n\n  brush.touchable = function (_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), brush) : touchable;\n  };\n\n  brush.handleSize = function (_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.keyModifiers = function (_) {\n    return arguments.length ? (keys = !!_, brush) : keys;\n  };\n\n  brush.on = function () {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}","map":{"version":3,"names":["dispatch","dragDisable","dragEnable","interpolate","pointer","select","interrupt","constant","BrushEvent","noevent","nopropagation","MODE_DRAG","name","MODE_SPACE","MODE_HANDLE","MODE_CENTER","abs","max","min","Math","number1","e","number2","X","handles","map","type","input","x","output","xy","Y","y","XY","cursors","overlay","selection","n","s","w","nw","ne","se","sw","flipX","flipY","signsX","signsY","t","defaultFilter","event","ctrlKey","button","defaultExtent","svg","ownerSVGElement","hasAttribute","viewBox","baseVal","width","height","value","defaultTouchable","navigator","maxTouchPoints","local","node","__brush","parentNode","empty","extent","brushSelection","state","dim","brushX","brush","brushY","filter","touchable","keys","listeners","handleSize","touchending","group","property","initialize","selectAll","data","enter","append","attr","merge","each","handle","d","exit","remove","redraw","on","started","touchmoved","touchended","style","move","tween","emitter","arguments","beforestart","start","end","that","emit","selection0","selection1","apply","i","call","args","clear","length","clean","Emitter","active","prototype","starting","mode","datum","sourceEvent","target","touches","__data__","metaKey","altKey","signX","signY","W","w0","w1","N","n0","n1","E","e0","e1","S","s0","s1","dx","dy","moving","shifting","shiftKey","lockX","lockY","points","Array","from","identifier","point0","slice","pts","moved","ended","view","keydowned","keyupped","p","changedTouches","cur","point","clearTimeout","setTimeout","keyCode","_","keyModifiers"],"sources":["/home/chenak/QbitesReact/my-app/node_modules/d3-brush/src/brush.js"],"sourcesContent":["import {dispatch} from \"d3-dispatch\";\nimport {dragDisable, dragEnable} from \"d3-drag\";\nimport {interpolate} from \"d3-interpolate\";\nimport {pointer, select} from \"d3-selection\";\nimport {interrupt} from \"d3-transition\";\nimport constant from \"./constant.js\";\nimport BrushEvent from \"./event.js\";\nimport noevent, {nopropagation} from \"./noevent.js\";\n\nvar MODE_DRAG = {name: \"drag\"},\n    MODE_SPACE = {name: \"space\"},\n    MODE_HANDLE = {name: \"handle\"},\n    MODE_CENTER = {name: \"center\"};\n\nconst {abs, max, min} = Math;\n\nfunction number1(e) {\n  return [+e[0], +e[1]];\n}\n\nfunction number2(e) {\n  return [number1(e[0]), number1(e[1])];\n}\n\nvar X = {\n  name: \"x\",\n  handles: [\"w\", \"e\"].map(type),\n  input: function(x, e) { return x == null ? null : [[+x[0], e[0][1]], [+x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y == null ? null : [[e[0][0], +y[0]], [e[1][0], +y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"w\", \"e\", \"s\", \"nw\", \"ne\", \"sw\", \"se\"].map(type),\n  input: function(xy) { return xy == null ? null : number2(xy); },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter(event) {\n  return !event.ctrlKey && !event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  if (svg.hasAttribute(\"viewBox\")) {\n    svg = svg.viewBox.baseVal;\n    return [[svg.x, svg.y], [svg.x + svg.width, svg.y + svg.height]];\n  }\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\nfunction defaultTouchable() {\n  return navigator.maxTouchPoints || (\"ontouchstart\" in this);\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nexport function brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nexport function brushX() {\n  return brush(X);\n}\n\nexport function brushY() {\n  return brush(Y);\n}\n\nexport default function() {\n  return brush(XY);\n}\n\nfunction brush(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      touchable = defaultTouchable,\n      keys = true,\n      listeners = dispatch(\"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .on(\"mousedown.brush\", started)\n      .filter(touchable)\n        .on(\"touchstart.brush\", started)\n        .on(\"touchmove.brush\", touchmoved)\n        .on(\"touchend.brush touchcancel.brush\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  brush.move = function(group, selection, event) {\n    if (group.tween) {\n      group\n          .on(\"start.brush\", function(event) { emitter(this, arguments).beforestart().start(event); })\n          .on(\"interrupt.brush end.brush\", function(event) { emitter(this, arguments).end(event); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n                i = interpolate(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && selection1 === null ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 !== null && selection1 !== null ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 === null ? null : selection1;\n            redraw.call(that);\n            emit.start(event).brush(event).end(event);\n          });\n    }\n  };\n\n  brush.clear = function(group, event) {\n    brush.move(group, null, event);\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection = local(this).selection;\n\n    if (selection) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection[0][0])\n          .attr(\"y\", selection[0][1])\n          .attr(\"width\", selection[1][0] - selection[0][0])\n          .attr(\"height\", selection[1][1] - selection[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args, clean) {\n    var emit = that.__brush.emitter;\n    return emit && (!clean || !emit.clean) ? emit : new Emitter(that, args, clean);\n  }\n\n  function Emitter(that, args, clean) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n    this.clean = clean;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function(event, mode) {\n      if (this.starting) this.starting = false, this.emit(\"start\", event, mode);\n      else this.emit(\"brush\", event);\n      return this;\n    },\n    brush: function(event, mode) {\n      this.emit(\"brush\", event, mode);\n      return this;\n    },\n    end: function(event, mode) {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\", event, mode);\n      return this;\n    },\n    emit: function(type, event, mode) {\n      var d = select(this.that).datum();\n      listeners.call(\n        type,\n        this.that,\n        new BrushEvent(type, {\n          sourceEvent: event,\n          target: brush,\n          selection: dim.output(this.state.selection),\n          mode,\n          dispatch: listeners\n        }),\n        d\n      );\n    }\n  };\n\n  function started(event) {\n    if (touchending && !event.touches) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = event.target.__data__.type,\n        mode = (keys && event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (keys && event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local(that),\n        extent = state.extent,\n        selection = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx = 0,\n        dy = 0,\n        moving,\n        shifting = signX && signY && keys && event.shiftKey,\n        lockX,\n        lockY,\n        points = Array.from(event.touches || [event], t => {\n          const i = t.identifier;\n          t = pointer(t, that);\n          t.point0 = t.slice();\n          t.identifier = i;\n          return t;\n        });\n\n    interrupt(that);\n    var emit = emitter(that, arguments, true).beforestart();\n\n    if (type === \"overlay\") {\n      if (selection) moving = true;\n      const pts = [points[0], points[1] || points[0]];\n      state.selection = selection = [[\n          w0 = dim === Y ? W : min(pts[0][0], pts[1][0]),\n          n0 = dim === X ? N : min(pts[0][1], pts[1][1])\n        ], [\n          e0 = dim === Y ? E : max(pts[0][0], pts[1][0]),\n          s0 = dim === X ? S : max(pts[0][1], pts[1][1])\n        ]];\n      if (points.length > 1) move(event);\n    } else {\n      w0 = selection[0][0];\n      n0 = selection[0][1];\n      e0 = selection[1][0];\n      s0 = selection[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (event.touches) {\n      emit.moved = moved;\n      emit.ended = ended;\n    } else {\n      var view = select(event.view)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n      if (keys) view\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n\n      dragDisable(event.view);\n    }\n\n    redraw.call(that);\n    emit.start(event, mode.name);\n\n    function moved(event) {\n      for (const p of event.changedTouches || [event]) {\n        for (const d of points)\n          if (d.identifier === p.identifier) d.cur = pointer(p, that);\n      }\n      if (shifting && !lockX && !lockY && points.length === 1) {\n        const point = points[0];\n        if (abs(point.cur[0] - point[0]) > abs(point.cur[1] - point[1]))\n          lockY = true;\n        else\n          lockX = true;\n      }\n      for (const point of points)\n        if (point.cur) point[0] = point.cur[0], point[1] = point.cur[1];\n      moving = true;\n      noevent(event);\n      move(event);\n    }\n\n    function move(event) {\n      const point = points[0], point0 = point.point0;\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = max(W - w0, min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = max(N - n0, min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (points[1]) {\n            if (signX) w1 = max(W, min(E, points[0][0])), e1 = max(W, min(E, points[1][0])), signX = 1;\n            if (signY) n1 = max(N, min(S, points[0][1])), s1 = max(N, min(S, points[1][1])), signY = 1;\n          } else {\n            if (signX < 0) dx = max(W - w0, min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n            else if (signX > 0) dx = max(W - e0, min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n            if (signY < 0) dy = max(N - n0, min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n            else if (signY > 0) dy = max(N - s0, min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          }\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = max(W, min(E, w0 - dx * signX)), e1 = max(W, min(E, e0 + dx * signX));\n          if (signY) n1 = max(N, min(S, n0 - dy * signY)), s1 = max(N, min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n      if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\n      if (selection[0][0] !== w1\n          || selection[0][1] !== n1\n          || selection[1][0] !== e1\n          || selection[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush(event, mode.name);\n      }\n    }\n\n    function ended(event) {\n      nopropagation(event);\n      if (event.touches) {\n        if (event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n      } else {\n        dragEnable(event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection)) state.selection = null, redraw.call(that);\n      emit.end(event, mode.name);\n    }\n\n    function keydowned(event) {\n      switch (event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move(event);\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move(event);\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent(event);\n    }\n\n    function keyupped(event) {\n      switch (event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move(event);\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move(event);\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move(event);\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent(event);\n    }\n  }\n\n  function touchmoved(event) {\n    emitter(this, arguments).moved(event);\n  }\n\n  function touchended(event) {\n    emitter(this, arguments).ended(event);\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = number2(extent.apply(this, arguments));\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant(number2(_)), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), brush) : filter;\n  };\n\n  brush.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), brush) : touchable;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.keyModifiers = function(_) {\n    return arguments.length ? (keys = !!_, brush) : keys;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}