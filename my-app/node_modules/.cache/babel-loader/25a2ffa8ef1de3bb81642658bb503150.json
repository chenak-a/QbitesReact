{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _d3Format = require(\"d3-format\");\n\nvar _EdgeCoordinateV = require(\"./EdgeCoordinateV3\");\n\nvar _GenericChartComponent = require(\"../GenericChartComponent\");\n\nvar _GenericChartComponent2 = _interopRequireDefault(_GenericChartComponent);\n\nvar _GenericComponent = require(\"../GenericComponent\");\n\nvar _utils = require(\"../utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar EdgeIndicator = function (_Component) {\n  _inherits(EdgeIndicator, _Component);\n\n  function EdgeIndicator(props) {\n    _classCallCheck(this, EdgeIndicator);\n\n    var _this = _possibleConstructorReturn(this, (EdgeIndicator.__proto__ || Object.getPrototypeOf(EdgeIndicator)).call(this, props));\n\n    _this.renderSVG = _this.renderSVG.bind(_this);\n    _this.drawOnCanvas = _this.drawOnCanvas.bind(_this);\n    return _this;\n  }\n\n  _createClass(EdgeIndicator, [{\n    key: \"drawOnCanvas\",\n    value: function drawOnCanvas(ctx, moreProps) {\n      var edge = helper(this.props, moreProps);\n\n      var props = _extends({}, this.props, edge);\n\n      (0, _EdgeCoordinateV.drawOnCanvas)(ctx, props);\n    }\n  }, {\n    key: \"renderSVG\",\n    value: function renderSVG(moreProps) {\n      var edge = helper(this.props, moreProps);\n\n      var props = _extends({}, this.props, edge);\n\n      return (0, _EdgeCoordinateV.renderSVG)(props);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _react2.default.createElement(_GenericChartComponent2.default, {\n        edgeClip: true,\n        clip: false,\n        svgDraw: this.renderSVG,\n        canvasDraw: this.drawOnCanvas,\n        canvasToDraw: _GenericComponent.getAxisCanvas,\n        drawOn: [\"pan\"]\n      });\n    }\n  }]);\n\n  return EdgeIndicator;\n}(_react.Component);\n\nEdgeIndicator.propTypes = {\n  yAccessor: _propTypes2.default.func,\n  type: _propTypes2.default.oneOf([\"horizontal\"]),\n  className: _propTypes2.default.string,\n  fill: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func]),\n  lineStroke: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func]),\n  textFill: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func]),\n  itemType: _propTypes2.default.oneOf([\"first\", \"last\"]).isRequired,\n  orient: _propTypes2.default.oneOf([\"left\", \"right\"]),\n  edgeAt: _propTypes2.default.oneOf([\"left\", \"right\"]),\n  displayFormat: _propTypes2.default.func,\n  rectHeight: _propTypes2.default.number,\n  rectWidth: _propTypes2.default.number,\n  arrowWidth: _propTypes2.default.number,\n  lineStrokeDasharray: _propTypes2.default.oneOf(_utils.strokeDashTypes)\n};\nEdgeIndicator.defaultProps = {\n  className: \"react-stockcharts-edgeindicator\",\n  type: \"horizontal\",\n  orient: \"left\",\n  edgeAt: \"left\",\n  textFill: \"#FFFFFF\",\n  displayFormat: (0, _d3Format.format)(\".2f\"),\n  yAxisPad: 0,\n  rectHeight: 20,\n  rectWidth: 50,\n  arrowWidth: 10,\n  fontFamily: \"Helvetica Neue, Helvetica, Arial, sans-serif\",\n  fontSize: 13,\n  dx: 0,\n  hideLine: false,\n  fill: \"#8a8a8a\",\n  opacity: 1,\n  stroke: _utils.noop,\n  strokeOpacity: 1,\n  strokeWidth: 3,\n  lineStroke: \"#000000\",\n  lineOpacity: 0.3,\n  lineStrokeDasharray: \"ShortDash\"\n};\n\nfunction helper(props, moreProps) {\n  var itemType = props.itemType,\n      yAccessor = props.yAccessor;\n  var plotData = moreProps.plotData;\n  var item = itemType === \"first\" ? (0, _utils.first)(plotData, yAccessor) : (0, _utils.last)(plotData, yAccessor); // var currentItem = ChartDataUtil.getCurrentItemForChartNew(currentItems, forChart);\n\n  var edge = (0, _utils.isDefined)(item) ? getEdge(props, moreProps, item) : null;\n  return edge;\n}\n\nfunction getEdge(props, moreProps, item) {\n  var edgeType = props.type,\n      displayFormat = props.displayFormat,\n      edgeAt = props.edgeAt,\n      yAxisPad = props.yAxisPad,\n      orient = props.orient,\n      lineStroke = props.lineStroke;\n  var yAccessor = props.yAccessor,\n      fill = props.fill,\n      textFill = props.textFill,\n      rectHeight = props.rectHeight,\n      rectWidth = props.rectWidth,\n      arrowWidth = props.arrowWidth;\n  var fontFamily = props.fontFamily,\n      fontSize = props.fontSize;\n  var stroke = props.stroke;\n  var xScale = moreProps.xScale,\n      yScale = moreProps.chartConfig.yScale,\n      xAccessor = moreProps.xAccessor,\n      width = moreProps.width;\n  var yValue = yAccessor(item),\n      xValue = xAccessor(item);\n  var x1 = Math.round(xScale(xValue)),\n      y1 = Math.round(yScale(yValue));\n  var left = 0,\n      right = width;\n  var edgeX = edgeAt === \"left\" ? left - yAxisPad : right + yAxisPad;\n  return {\n    // ...props,\n    coordinate: displayFormat(yValue),\n    show: true,\n    type: edgeType,\n    orient: orient,\n    edgeAt: edgeX,\n    fill: (0, _utils.functor)(fill)(item),\n    lineStroke: (0, _utils.functor)(lineStroke)(item),\n    stroke: (0, _utils.functor)(stroke)(item),\n    fontFamily: fontFamily,\n    fontSize: fontSize,\n    textFill: (0, _utils.functor)(textFill)(item),\n    rectHeight: rectHeight,\n    rectWidth: rectWidth,\n    arrowWidth: arrowWidth,\n    x1: x1,\n    y1: y1,\n    x2: right,\n    y2: y1\n  };\n}\n\nexports.default = EdgeIndicator;","map":{"version":3,"mappings":"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","names":["EdgeIndicator","props","_classCallCheck","_this","renderSVG","bind","drawOnCanvas","ctx","moreProps","edge","helper","_react2","edgeClip","clip","svgDraw","canvasDraw","canvasToDraw","drawOn","propTypes","yAccessor","_propTypes2","func","type","oneOf","className","string","fill","oneOfType","lineStroke","textFill","itemType","isRequired","orient","edgeAt","displayFormat","rectHeight","number","rectWidth","arrowWidth","lineStrokeDasharray","defaultProps","yAxisPad","fontFamily","fontSize","dx","hideLine","opacity","stroke","strokeOpacity","strokeWidth","lineOpacity","plotData","item","getEdge","edgeType","xScale","yScale","chartConfig","xAccessor","width","yValue","xValue","x1","Math","round","y1","left","right","edgeX","coordinate","show","x2","y2"],"sources":["../../../src/lib/coordinates/EdgeIndicator.js"],"sourcesContent":["\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { format } from \"d3-format\";\n\nimport { drawOnCanvas, renderSVG } from \"./EdgeCoordinateV3\";\nimport GenericChartComponent from \"../GenericChartComponent\";\nimport { getAxisCanvas } from \"../GenericComponent\";\n\nimport { first, last, isDefined, functor, noop, strokeDashTypes } from \"../utils\";\n\nclass EdgeIndicator extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.renderSVG = this.renderSVG.bind(this);\n\t\tthis.drawOnCanvas = this.drawOnCanvas.bind(this);\n\t}\n\tdrawOnCanvas(ctx, moreProps) {\n\t\tconst edge = helper(this.props, moreProps);\n\t\tconst props = {\n\t\t\t...this.props,\n\t\t\t...edge,\n\t\t};\n\t\tdrawOnCanvas(ctx, props);\n\t}\n\trenderSVG(moreProps) {\n\t\tconst edge = helper(this.props, moreProps);\n\t\tconst props = {\n\t\t\t...this.props,\n\t\t\t...edge,\n\t\t};\n\t\treturn renderSVG(props);\n\t}\n\trender() {\n\t\treturn <GenericChartComponent\n\t\t\tedgeClip\n\t\t\tclip={false}\n\t\t\tsvgDraw={this.renderSVG}\n\t\t\tcanvasDraw={this.drawOnCanvas}\n\t\t\tcanvasToDraw={getAxisCanvas}\n\t\t\tdrawOn={[\"pan\"]}\n\t\t/>;\n\t}\n}\n\nEdgeIndicator.propTypes = {\n\tyAccessor: PropTypes.func,\n\n\ttype: PropTypes.oneOf([\"horizontal\"]),\n\tclassName: PropTypes.string,\n\tfill: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.func,\n\t]),\n\tlineStroke: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.func,\n\t]),\n\ttextFill: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.func,\n\t]),\n\titemType: PropTypes.oneOf([\"first\", \"last\"]).isRequired,\n\torient: PropTypes.oneOf([\"left\", \"right\"]),\n\tedgeAt: PropTypes.oneOf([\"left\", \"right\"]),\n\tdisplayFormat: PropTypes.func,\n\trectHeight: PropTypes.number,\n\trectWidth: PropTypes.number,\n\tarrowWidth: PropTypes.number,\n\tlineStrokeDasharray: PropTypes.oneOf(strokeDashTypes),\n};\n\nEdgeIndicator.defaultProps = {\n\tclassName: \"react-stockcharts-edgeindicator\",\n\n\ttype: \"horizontal\",\n\torient: \"left\",\n\tedgeAt: \"left\",\n\ttextFill: \"#FFFFFF\",\n\tdisplayFormat: format(\".2f\"),\n\tyAxisPad: 0,\n\trectHeight: 20,\n\trectWidth: 50,\n\tarrowWidth: 10,\n\tfontFamily: \"Helvetica Neue, Helvetica, Arial, sans-serif\",\n\tfontSize: 13,\n\tdx: 0,\n\thideLine: false,\n\tfill: \"#8a8a8a\",\n\topacity: 1,\n\n\tstroke: noop,\n\tstrokeOpacity: 1,\n\tstrokeWidth: 3,\n\tlineStroke: \"#000000\",\n\tlineOpacity: 0.3,\n\tlineStrokeDasharray: \"ShortDash\",\n};\n\nfunction helper(props, moreProps) {\n\tconst { itemType, yAccessor } = props;\n\tconst { plotData } = moreProps;\n\n\tconst item = itemType === \"first\"\n\t\t? first(plotData, yAccessor)\n\t\t: last(plotData, yAccessor);\n\n\t// var currentItem = ChartDataUtil.getCurrentItemForChartNew(currentItems, forChart);\n\tconst edge = isDefined(item)\n\t\t? getEdge(props, moreProps, item)\n\t\t: null;\n\n\treturn edge;\n}\n\nfunction getEdge(props, moreProps, item) {\n\tconst { type: edgeType, displayFormat, edgeAt, yAxisPad, orient, lineStroke } = props;\n\n\tconst { yAccessor, fill, textFill, rectHeight, rectWidth, arrowWidth } = props;\n\tconst { fontFamily, fontSize } = props;\n\tconst { stroke } = props;\n\n\tconst { xScale, chartConfig: { yScale }, xAccessor, width } = moreProps;\n\n\tconst yValue = yAccessor(item),\n\t\txValue = xAccessor(item);\n\n\tconst x1 = Math.round(xScale(xValue)),\n\t\ty1 = Math.round(yScale(yValue));\n\n\tconst [left, right] = [0, width];\n\tconst edgeX = edgeAt === \"left\"\n\t\t? left - yAxisPad\n\t\t: right + yAxisPad;\n\n\treturn {\n\t\t// ...props,\n\t\tcoordinate: displayFormat(yValue),\n\t\tshow: true,\n\t\ttype: edgeType,\n\t\torient,\n\t\tedgeAt: edgeX,\n\t\tfill: functor(fill)(item),\n\t\tlineStroke: functor(lineStroke)(item),\n\t\tstroke: functor(stroke)(item),\n\t\tfontFamily, fontSize,\n\t\ttextFill: functor(textFill)(item),\n\t\trectHeight, rectWidth, arrowWidth,\n\t\tx1,\n\t\ty1,\n\t\tx2: right,\n\t\ty2: y1,\n\t};\n}\n\nexport default EdgeIndicator;\n"]},"metadata":{},"sourceType":"script"}