{"ast":null,"code":"import { useRef } from 'react';\nimport warning from \"rc-util/es/warning\";\n/**\r\n * Keep input cursor in the correct position if possible.\r\n * Is this necessary since we have `formatter` which may mass the content?\r\n */\n\nexport default function useCursor(input, focused) {\n  var selectionRef = useRef(null);\n\n  function recordCursor() {\n    // Record position\n    try {\n      var start = input.selectionStart,\n          end = input.selectionEnd,\n          value = input.value;\n      var beforeTxt = value.substring(0, start);\n      var afterTxt = value.substring(end);\n      selectionRef.current = {\n        start: start,\n        end: end,\n        value: value,\n        beforeTxt: beforeTxt,\n        afterTxt: afterTxt\n      };\n    } catch (e) {// Fix error in Chrome:\n      // Failed to read the 'selectionStart' property from 'HTMLInputElement'\n      // http://stackoverflow.com/q/21177489/3040605\n    }\n  }\n  /**\r\n   * Restore logic:\r\n   *  1. back string same\r\n   *  2. start string same\r\n   */\n\n\n  function restoreCursor() {\n    if (input && selectionRef.current && focused) {\n      try {\n        var value = input.value;\n        var _selectionRef$current = selectionRef.current,\n            beforeTxt = _selectionRef$current.beforeTxt,\n            afterTxt = _selectionRef$current.afterTxt,\n            start = _selectionRef$current.start;\n        var startPos = value.length;\n\n        if (value.endsWith(afterTxt)) {\n          startPos = value.length - selectionRef.current.afterTxt.length;\n        } else if (value.startsWith(beforeTxt)) {\n          startPos = beforeTxt.length;\n        } else {\n          var beforeLastChar = beforeTxt[start - 1];\n          var newIndex = value.indexOf(beforeLastChar, start - 1);\n\n          if (newIndex !== -1) {\n            startPos = newIndex + 1;\n          }\n        }\n\n        input.setSelectionRange(startPos, startPos);\n      } catch (e) {\n        warning(false, \"Something warning of cursor restore. Please fire issue about this: \".concat(e.message));\n      }\n    }\n  }\n\n  return [recordCursor, restoreCursor];\n}","map":{"version":3,"sources":["C:/Users/chena/QbitesReact/my-app/node_modules/rc-input-number/es/hooks/useCursor.js"],"names":["useRef","warning","useCursor","input","focused","selectionRef","recordCursor","start","selectionStart","end","selectionEnd","value","beforeTxt","substring","afterTxt","current","e","restoreCursor","_selectionRef$current","startPos","length","endsWith","startsWith","beforeLastChar","newIndex","indexOf","setSelectionRange","concat","message"],"mappings":"AAAA,SAASA,MAAT,QAAuB,OAAvB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0BC,OAA1B,EAAmC;AAChD,MAAIC,YAAY,GAAGL,MAAM,CAAC,IAAD,CAAzB;;AAEA,WAASM,YAAT,GAAwB;AACtB;AACA,QAAI;AACF,UAAIC,KAAK,GAAGJ,KAAK,CAACK,cAAlB;AAAA,UACIC,GAAG,GAAGN,KAAK,CAACO,YADhB;AAAA,UAEIC,KAAK,GAAGR,KAAK,CAACQ,KAFlB;AAGA,UAAIC,SAAS,GAAGD,KAAK,CAACE,SAAN,CAAgB,CAAhB,EAAmBN,KAAnB,CAAhB;AACA,UAAIO,QAAQ,GAAGH,KAAK,CAACE,SAAN,CAAgBJ,GAAhB,CAAf;AACAJ,MAAAA,YAAY,CAACU,OAAb,GAAuB;AACrBR,QAAAA,KAAK,EAAEA,KADc;AAErBE,QAAAA,GAAG,EAAEA,GAFgB;AAGrBE,QAAAA,KAAK,EAAEA,KAHc;AAIrBC,QAAAA,SAAS,EAAEA,SAJU;AAKrBE,QAAAA,QAAQ,EAAEA;AALW,OAAvB;AAOD,KAbD,CAaE,OAAOE,CAAP,EAAU,CAAC;AACX;AACA;AACD;AACF;AACD;AACF;AACA;AACA;AACA;;;AAGE,WAASC,aAAT,GAAyB;AACvB,QAAId,KAAK,IAAIE,YAAY,CAACU,OAAtB,IAAiCX,OAArC,EAA8C;AAC5C,UAAI;AACF,YAAIO,KAAK,GAAGR,KAAK,CAACQ,KAAlB;AACA,YAAIO,qBAAqB,GAAGb,YAAY,CAACU,OAAzC;AAAA,YACIH,SAAS,GAAGM,qBAAqB,CAACN,SADtC;AAAA,YAEIE,QAAQ,GAAGI,qBAAqB,CAACJ,QAFrC;AAAA,YAGIP,KAAK,GAAGW,qBAAqB,CAACX,KAHlC;AAIA,YAAIY,QAAQ,GAAGR,KAAK,CAACS,MAArB;;AAEA,YAAIT,KAAK,CAACU,QAAN,CAAeP,QAAf,CAAJ,EAA8B;AAC5BK,UAAAA,QAAQ,GAAGR,KAAK,CAACS,MAAN,GAAef,YAAY,CAACU,OAAb,CAAqBD,QAArB,CAA8BM,MAAxD;AACD,SAFD,MAEO,IAAIT,KAAK,CAACW,UAAN,CAAiBV,SAAjB,CAAJ,EAAiC;AACtCO,UAAAA,QAAQ,GAAGP,SAAS,CAACQ,MAArB;AACD,SAFM,MAEA;AACL,cAAIG,cAAc,GAAGX,SAAS,CAACL,KAAK,GAAG,CAAT,CAA9B;AACA,cAAIiB,QAAQ,GAAGb,KAAK,CAACc,OAAN,CAAcF,cAAd,EAA8BhB,KAAK,GAAG,CAAtC,CAAf;;AAEA,cAAIiB,QAAQ,KAAK,CAAC,CAAlB,EAAqB;AACnBL,YAAAA,QAAQ,GAAGK,QAAQ,GAAG,CAAtB;AACD;AACF;;AAEDrB,QAAAA,KAAK,CAACuB,iBAAN,CAAwBP,QAAxB,EAAkCA,QAAlC;AACD,OAtBD,CAsBE,OAAOH,CAAP,EAAU;AACVf,QAAAA,OAAO,CAAC,KAAD,EAAQ,sEAAsE0B,MAAtE,CAA6EX,CAAC,CAACY,OAA/E,CAAR,CAAP;AACD;AACF;AACF;;AAED,SAAO,CAACtB,YAAD,EAAeW,aAAf,CAAP;AACD","sourcesContent":["import { useRef } from 'react';\r\nimport warning from \"rc-util/es/warning\";\r\n/**\r\n * Keep input cursor in the correct position if possible.\r\n * Is this necessary since we have `formatter` which may mass the content?\r\n */\r\n\r\nexport default function useCursor(input, focused) {\r\n  var selectionRef = useRef(null);\r\n\r\n  function recordCursor() {\r\n    // Record position\r\n    try {\r\n      var start = input.selectionStart,\r\n          end = input.selectionEnd,\r\n          value = input.value;\r\n      var beforeTxt = value.substring(0, start);\r\n      var afterTxt = value.substring(end);\r\n      selectionRef.current = {\r\n        start: start,\r\n        end: end,\r\n        value: value,\r\n        beforeTxt: beforeTxt,\r\n        afterTxt: afterTxt\r\n      };\r\n    } catch (e) {// Fix error in Chrome:\r\n      // Failed to read the 'selectionStart' property from 'HTMLInputElement'\r\n      // http://stackoverflow.com/q/21177489/3040605\r\n    }\r\n  }\r\n  /**\r\n   * Restore logic:\r\n   *  1. back string same\r\n   *  2. start string same\r\n   */\r\n\r\n\r\n  function restoreCursor() {\r\n    if (input && selectionRef.current && focused) {\r\n      try {\r\n        var value = input.value;\r\n        var _selectionRef$current = selectionRef.current,\r\n            beforeTxt = _selectionRef$current.beforeTxt,\r\n            afterTxt = _selectionRef$current.afterTxt,\r\n            start = _selectionRef$current.start;\r\n        var startPos = value.length;\r\n\r\n        if (value.endsWith(afterTxt)) {\r\n          startPos = value.length - selectionRef.current.afterTxt.length;\r\n        } else if (value.startsWith(beforeTxt)) {\r\n          startPos = beforeTxt.length;\r\n        } else {\r\n          var beforeLastChar = beforeTxt[start - 1];\r\n          var newIndex = value.indexOf(beforeLastChar, start - 1);\r\n\r\n          if (newIndex !== -1) {\r\n            startPos = newIndex + 1;\r\n          }\r\n        }\r\n\r\n        input.setSelectionRange(startPos, startPos);\r\n      } catch (e) {\r\n        warning(false, \"Something warning of cursor restore. Please fire issue about this: \".concat(e.message));\r\n      }\r\n    }\r\n  }\r\n\r\n  return [recordCursor, restoreCursor];\r\n}"]},"metadata":{},"sourceType":"module"}