{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nexports.getChartOrigin = getChartOrigin;\nexports.getDimensions = getDimensions;\nexports.getNewChartConfig = getNewChartConfig;\nexports.getCurrentCharts = getCurrentCharts;\nexports.getChartConfigWithUpdatedYScales = getChartConfigWithUpdatedYScales;\nexports.getCurrentItem = getCurrentItem;\nexports.getXValue = getXValue;\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _d3Array = require(\"d3-array\");\n\nvar _d3Collection = require(\"d3-collection\");\n\nvar _lodash = require(\"lodash.flattendeep\");\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _Chart = require(\"../Chart\");\n\nvar _Chart2 = _interopRequireDefault(_Chart);\n\nvar _index = require(\"./index\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction getChartOrigin(origin, contextWidth, contextHeight) {\n  var originCoordinates = typeof origin === \"function\" ? origin(contextWidth, contextHeight) : origin;\n  return originCoordinates;\n}\n\nfunction getDimensions(_ref, chartProps) {\n  var width = _ref.width,\n      height = _ref.height;\n  var chartHeight = chartProps.height || height;\n  return {\n    availableHeight: height,\n    width: width,\n    height: chartHeight\n  };\n}\n\nfunction values(func) {\n  return function (d) {\n    var obj = func(d);\n\n    if ((0, _index.isObject)(obj)) {\n      return (0, _index.mapObject)(obj);\n    }\n\n    return obj;\n  };\n}\n\nfunction isArraySize2AndNumber(yExtentsProp) {\n  if (Array.isArray(yExtentsProp) && yExtentsProp.length === 2) {\n    var _yExtentsProp = _slicedToArray(yExtentsProp, 2),\n        a = _yExtentsProp[0],\n        b = _yExtentsProp[1];\n\n    return typeof a == \"number\" && typeof b == \"number\";\n  }\n\n  return false;\n}\n\nfunction getNewChartConfig(innerDimension, children) {\n  var existingChartConfig = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  return _react2.default.Children.map(children, function (each) {\n    if (each && each.type.toString() === _Chart2.default.toString()) {\n      var chartProps = _extends({}, _Chart2.default.defaultProps, each.props);\n\n      var id = chartProps.id,\n          origin = chartProps.origin,\n          padding = chartProps.padding,\n          yExtentsProp = chartProps.yExtents,\n          yScaleProp = chartProps.yScale,\n          flipYScale = chartProps.flipYScale,\n          yExtentsCalculator = chartProps.yExtentsCalculator;\n      var yScale = yScaleProp.copy();\n\n      var _getDimensions = getDimensions(innerDimension, chartProps),\n          width = _getDimensions.width,\n          height = _getDimensions.height,\n          availableHeight = _getDimensions.availableHeight;\n\n      var yPan = chartProps.yPan;\n      var yPanEnabled = chartProps.yPanEnabled; // var { yMousePointerRectWidth: rectWidth, yMousePointerRectHeight: rectHeight, yMousePointerArrowWidth: arrowWidth } = each.props;\n      // var mouseCoordinates = { at, yDisplayFormat, rectHeight, rectWidth, arrowWidth };\n\n      var yExtents = (0, _index.isDefined)(yExtentsProp) ? (Array.isArray(yExtentsProp) ? yExtentsProp : [yExtentsProp]).map(_index.functor) : undefined;\n      var prevChartConfig = (0, _index.find)(existingChartConfig, function (d) {\n        return d.id === id;\n      });\n\n      if (isArraySize2AndNumber(yExtentsProp)) {\n        if ((0, _index.isDefined)(prevChartConfig) && prevChartConfig.yPan && prevChartConfig.yPanEnabled && yPan && yPanEnabled && (0, _index.shallowEqual)(prevChartConfig.originalYExtentsProp, yExtentsProp)) {\n          // console.log(prevChartConfig.originalYExtentsProp, yExtentsProp)\n          // console.log(prevChartConfig.yScale.domain())\n          yScale.domain(prevChartConfig.yScale.domain());\n        } else {\n          var _yExtentsProp2 = _slicedToArray(yExtentsProp, 2),\n              a = _yExtentsProp2[0],\n              b = _yExtentsProp2[1];\n\n          yScale.domain([a, b]);\n        }\n      } else if ((0, _index.isDefined)(prevChartConfig) && prevChartConfig.yPanEnabled) {\n        if (isArraySize2AndNumber(prevChartConfig.originalYExtentsProp)) {// do nothing\n        } else {\n          yScale.domain(prevChartConfig.yScale.domain());\n          yPanEnabled = true;\n        }\n      }\n\n      return {\n        id: id,\n        origin: (0, _index.functor)(origin)(width, availableHeight),\n        padding: padding,\n        originalYExtentsProp: yExtentsProp,\n        yExtents: yExtents,\n        yExtentsCalculator: yExtentsCalculator,\n        flipYScale: flipYScale,\n        // yScale: setRange(yScale.copy(), height, padding, flipYScale),\n        yScale: yScale,\n        yPan: yPan,\n        yPanEnabled: yPanEnabled,\n        // mouseCoordinates,\n        width: width,\n        height: height\n      };\n    }\n\n    return undefined;\n  }).filter(function (each) {\n    return (0, _index.isDefined)(each);\n  });\n}\n\nfunction getCurrentCharts(chartConfig, mouseXY) {\n  var currentCharts = chartConfig.filter(function (eachConfig) {\n    var top = eachConfig.origin[1];\n    var bottom = top + eachConfig.height;\n    return mouseXY[1] > top && mouseXY[1] < bottom;\n  }).map(function (config) {\n    return config.id;\n  });\n  return currentCharts;\n}\n\nfunction setRange(scale, height, padding, flipYScale) {\n  if (scale.rangeRoundPoints || (0, _index.isNotDefined)(scale.invert)) {\n    if (isNaN(padding)) throw new Error(\"padding has to be a number for ordinal scale\");\n    if (scale.rangeRoundPoints) scale.rangeRoundPoints(flipYScale ? [0, height] : [height, 0], padding);\n    if (scale.rangeRound) scale.range(flipYScale ? [0, height] : [height, 0]).padding(padding);\n  } else {\n    var _ref2 = isNaN(padding) ? padding : {\n      top: padding,\n      bottom: padding\n    },\n        top = _ref2.top,\n        bottom = _ref2.bottom;\n\n    scale.range(flipYScale ? [top, height - bottom] : [height - bottom, top]);\n  }\n\n  return scale;\n}\n\nfunction yDomainFromYExtents(yExtents, yScale, plotData) {\n  var yValues = yExtents.map(function (eachExtent) {\n    return plotData.map(values(eachExtent));\n  });\n  var allYValues = (0, _lodash2.default)(yValues); // console.log(allYValues)\n\n  var realYDomain = yScale.invert ? (0, _d3Array.extent)(allYValues) : (0, _d3Collection.set)(allYValues).values();\n  return realYDomain;\n}\n\nfunction getChartConfigWithUpdatedYScales(chartConfig, _ref3, xDomain, dy, chartsToPan) {\n  var plotData = _ref3.plotData,\n      xAccessor = _ref3.xAccessor,\n      displayXAccessor = _ref3.displayXAccessor,\n      fullData = _ref3.fullData;\n  var yDomains = chartConfig.map(function (_ref4) {\n    var yExtentsCalculator = _ref4.yExtentsCalculator,\n        yExtents = _ref4.yExtents,\n        yScale = _ref4.yScale;\n    var realYDomain = (0, _index.isDefined)(yExtentsCalculator) ? yExtentsCalculator({\n      plotData: plotData,\n      xDomain: xDomain,\n      xAccessor: xAccessor,\n      displayXAccessor: displayXAccessor,\n      fullData: fullData\n    }) : yDomainFromYExtents(yExtents, yScale, plotData); // console.log(\"yScale.domain() ->\", yScale.domain())\n\n    var yDomainDY = (0, _index.isDefined)(dy) ? yScale.range().map(function (each) {\n      return each - dy;\n    }).map(yScale.invert) : yScale.domain();\n    return {\n      realYDomain: realYDomain,\n      yDomainDY: yDomainDY,\n      prevYDomain: yScale.domain()\n    };\n  });\n  var combine = (0, _index.zipper)().combine(function (config, _ref5) {\n    var realYDomain = _ref5.realYDomain,\n        yDomainDY = _ref5.yDomainDY,\n        prevYDomain = _ref5.prevYDomain;\n    var id = config.id,\n        padding = config.padding,\n        height = config.height,\n        yScale = config.yScale,\n        yPan = config.yPan,\n        flipYScale = config.flipYScale,\n        _config$yPanEnabled = config.yPanEnabled,\n        yPanEnabled = _config$yPanEnabled === undefined ? false : _config$yPanEnabled;\n    var another = (0, _index.isDefined)(chartsToPan) ? chartsToPan.indexOf(id) > -1 : true;\n    var domain = yPan && yPanEnabled ? another ? yDomainDY : prevYDomain : realYDomain; // console.log(id, yPan, yPanEnabled, another);\n    // console.log(domain, realYDomain, prevYDomain);\n\n    var newYScale = setRange(yScale.copy().domain(domain), height, padding, flipYScale);\n    return _extends({}, config, {\n      yScale: newYScale,\n      realYDomain: realYDomain\n    }); // return { ...config, yScale: yScale.copy().domain(domain).range([height - padding, padding]) };\n  });\n  var updatedChartConfig = combine(chartConfig, yDomains); // console.error(yDomains, dy, chartsToPan, updatedChartConfig.map(d => d.yScale.domain()));\n  // console.log(updatedChartConfig.map(d => ({ id: d.id, domain: d.yScale.domain() })))\n\n  return updatedChartConfig;\n}\n\nfunction getCurrentItem(xScale, xAccessor, mouseXY, plotData) {\n  var xValue = void 0,\n      item = void 0;\n\n  if (xScale.invert) {\n    xValue = xScale.invert(mouseXY[0]);\n    item = (0, _index.getClosestItem)(plotData, xValue, xAccessor);\n  } else {\n    var d = xScale.range().map(function (d, idx) {\n      return {\n        x: Math.abs(d - mouseXY[0]),\n        idx: idx\n      };\n    }).reduce(function (a, b) {\n      return a.x < b.x ? a : b;\n    });\n    item = (0, _index.isDefined)(d) ? plotData[d.idx] : plotData[0]; // console.log(d, item);\n  }\n\n  return item;\n}\n\nfunction getXValue(xScale, xAccessor, mouseXY, plotData) {\n  var xValue = void 0,\n      item = void 0;\n\n  if (xScale.invert) {\n    xValue = xScale.invert(mouseXY[0]);\n\n    if (xValue > xAccessor((0, _index.last)(plotData)) && xScale.value) {\n      return Math.round(xValue);\n    } else {\n      item = (0, _index.getClosestItem)(plotData, xValue, xAccessor);\n    }\n  } else {\n    var d = xScale.range().map(function (d, idx) {\n      return {\n        x: Math.abs(d - mouseXY[0]),\n        idx: idx\n      };\n    }).reduce(function (a, b) {\n      return a.x < b.x ? a : b;\n    });\n    item = (0, _index.isDefined)(d) ? plotData[d.idx] : plotData[0]; // console.log(d, item);\n  }\n\n  return xAccessor(item);\n}","map":{"version":3,"mappings":"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","names":["getChartOrigin","getDimensions","getNewChartConfig","getCurrentCharts","getChartConfigWithUpdatedYScales","getCurrentItem","getXValue","origin","contextWidth","contextHeight","originCoordinates","chartProps","width","height","chartHeight","availableHeight","values","func","d","obj","isArraySize2AndNumber","yExtentsProp","Array","isArray","length","a","b","innerDimension","children","existingChartConfig","_react2","Children","map","each","type","toString","_Chart2","defaultProps","props","id","padding","yExtents","yScaleProp","yScale","flipYScale","yExtentsCalculator","copy","yPan","yPanEnabled","undefined","prevChartConfig","originalYExtentsProp","domain","filter","chartConfig","mouseXY","currentCharts","top","eachConfig","bottom","config","setRange","scale","rangeRoundPoints","invert","isNaN","Error","rangeRound","range","yDomainFromYExtents","plotData","yValues","eachExtent","allYValues","realYDomain","xDomain","dy","chartsToPan","xAccessor","displayXAccessor","fullData","yDomains","yDomainDY","prevYDomain","combine","another","indexOf","newYScale","updatedChartConfig","xScale","xValue","item","idx","x","Math","abs","reduce","value","round"],"sources":["../../../src/lib/utils/ChartDataUtil.js"],"sourcesContent":["\n\nimport React from \"react\";\nimport { extent } from \"d3-array\";\nimport { set } from \"d3-collection\";\nimport flattenDeep from \"lodash.flattendeep\";\n\nimport Chart from \"../Chart\";\n\nimport {\n\tlast,\n\tisObject,\n\tgetClosestItem,\n\tzipper,\n\tisDefined,\n\tisNotDefined,\n\tfunctor,\n\tmapObject,\n\tfind,\n\tshallowEqual\n} from \"./index\";\n\nexport function getChartOrigin(origin, contextWidth, contextHeight) {\n\tconst originCoordinates = typeof origin === \"function\"\n\t\t? origin(contextWidth, contextHeight)\n\t\t: origin;\n\treturn originCoordinates;\n}\n\nexport function getDimensions({ width, height }, chartProps) {\n\n\tconst chartHeight = (chartProps.height || height);\n\n\treturn {\n\t\tavailableHeight: height,\n\t\twidth,\n\t\theight: chartHeight\n\t};\n}\n\nfunction values(func) {\n\treturn (d) => {\n\t\tconst obj = func(d);\n\t\tif (isObject(obj)) {\n\t\t\treturn mapObject(obj);\n\t\t}\n\t\treturn obj;\n\t};\n}\n\nfunction isArraySize2AndNumber(yExtentsProp) {\n\tif (Array.isArray(yExtentsProp) && yExtentsProp.length === 2) {\n\t\tconst [a, b] = yExtentsProp;\n\t\treturn (typeof a == \"number\" && typeof b == \"number\");\n\t}\n\treturn false;\n}\n\nexport function getNewChartConfig(innerDimension, children, existingChartConfig = []) {\n\treturn React.Children.map(children, (each) => {\n\t\tif (each && each.type.toString() === Chart.toString()) {\n\t\t\tconst chartProps = {\n\t\t\t\t...Chart.defaultProps,\n\t\t\t\t...each.props\n\t\t\t};\n\t\t\tconst {\n\t\t\t\tid,\n\t\t\t\torigin,\n\t\t\t\tpadding,\n\t\t\t\tyExtents: yExtentsProp,\n\t\t\t\tyScale: yScaleProp,\n\t\t\t\tflipYScale,\n\t\t\t\tyExtentsCalculator\n\t\t\t} = chartProps;\n\n\t\t\tconst yScale = yScaleProp.copy();\n\t\t\tconst {\n\t\t\t\twidth, height, availableHeight\n\t\t\t} = getDimensions(innerDimension, chartProps);\n\n\t\t\tconst { yPan } = chartProps;\n\t\t\tlet { yPanEnabled } = chartProps;\n\t\t\t// var { yMousePointerRectWidth: rectWidth, yMousePointerRectHeight: rectHeight, yMousePointerArrowWidth: arrowWidth } = each.props;\n\t\t\t// var mouseCoordinates = { at, yDisplayFormat, rectHeight, rectWidth, arrowWidth };\n\t\t\tconst yExtents = isDefined(yExtentsProp)\n\t\t\t\t? (Array.isArray(yExtentsProp) ? yExtentsProp : [yExtentsProp]).map(functor)\n\t\t\t\t: undefined;\n\n\t\t\tconst prevChartConfig = find(existingChartConfig, d => d.id === id);\n\n\t\t\tif (isArraySize2AndNumber(yExtentsProp)) {\n\t\t\t\tif (\n\t\t\t\t\tisDefined(prevChartConfig)\n\t\t\t\t\t&& prevChartConfig.yPan\n\t\t\t\t\t&& prevChartConfig.yPanEnabled\n\t\t\t\t\t&& yPan\n\t\t\t\t\t&& yPanEnabled\n\t\t\t\t\t&& shallowEqual(prevChartConfig.originalYExtentsProp, yExtentsProp)\n\t\t\t\t) {\n\t\t\t\t\t// console.log(prevChartConfig.originalYExtentsProp, yExtentsProp)\n\t\t\t\t\t// console.log(prevChartConfig.yScale.domain())\n\t\t\t\t\tyScale.domain(prevChartConfig.yScale.domain());\n\t\t\t\t} else {\n\t\t\t\t\tconst [a, b] = yExtentsProp;\n\t\t\t\t\tyScale.domain([a, b]);\n\t\t\t\t}\n\t\t\t} else if (isDefined(prevChartConfig) && prevChartConfig.yPanEnabled) {\n\t\t\t\tif (isArraySize2AndNumber(prevChartConfig.originalYExtentsProp)) {\n\t\t\t\t\t// do nothing\n\t\t\t\t} else {\n\t\t\t\t\tyScale.domain(prevChartConfig.yScale.domain());\n\t\t\t\t\tyPanEnabled = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tid,\n\t\t\t\torigin: functor(origin)(width, availableHeight),\n\t\t\t\tpadding,\n\t\t\t\toriginalYExtentsProp: yExtentsProp,\n\t\t\t\tyExtents,\n\t\t\t\tyExtentsCalculator,\n\t\t\t\tflipYScale,\n\t\t\t\t// yScale: setRange(yScale.copy(), height, padding, flipYScale),\n\t\t\t\tyScale: yScale,\n\t\t\t\tyPan,\n\t\t\t\tyPanEnabled,\n\t\t\t\t// mouseCoordinates,\n\t\t\t\twidth,\n\t\t\t\theight\n\t\t\t};\n\t\t}\n\t\treturn undefined;\n\t}).filter(each => isDefined(each));\n}\nexport function getCurrentCharts(chartConfig, mouseXY) {\n\tconst currentCharts = chartConfig.filter(eachConfig => {\n\t\tconst top = eachConfig.origin[1];\n\t\tconst bottom = top + eachConfig.height;\n\t\treturn (mouseXY[1] > top && mouseXY[1] < bottom);\n\t}).map(config => config.id);\n\n\treturn currentCharts;\n}\n\nfunction setRange(scale, height, padding, flipYScale) {\n\tif (scale.rangeRoundPoints || isNotDefined(scale.invert)) {\n\t\tif (isNaN(padding)) throw new Error(\"padding has to be a number for ordinal scale\");\n\t\tif (scale.rangeRoundPoints) scale.rangeRoundPoints(flipYScale ? [0, height] : [height, 0], padding);\n\t\tif (scale.rangeRound) scale.range(flipYScale ? [0, height] : [height, 0]).padding(padding);\n\t} else {\n\t\tconst { top, bottom } = isNaN(padding)\n\t\t\t? padding\n\t\t\t: { top: padding, bottom: padding };\n\n\t\tscale.range(flipYScale ? [top, height - bottom] : [height - bottom, top]);\n\t}\n\treturn scale;\n}\n\nfunction yDomainFromYExtents(yExtents, yScale, plotData) {\n\tconst yValues = yExtents.map(eachExtent =>\n\t\tplotData.map(values(eachExtent)));\n\n\tconst allYValues = flattenDeep(yValues);\n\t// console.log(allYValues)\n\tconst realYDomain = (yScale.invert)\n\t\t? extent(allYValues)\n\t\t: set(allYValues).values();\n\n\treturn realYDomain;\n}\n\n\nexport function getChartConfigWithUpdatedYScales(\n\tchartConfig,\n\t{ plotData, xAccessor, displayXAccessor, fullData },\n\txDomain,\n\tdy,\n\tchartsToPan\n) {\n\tconst yDomains = chartConfig\n\t\t.map(({ yExtentsCalculator, yExtents, yScale }) => {\n\n\t\t\tconst realYDomain = isDefined(yExtentsCalculator)\n\t\t\t\t? yExtentsCalculator({ plotData, xDomain, xAccessor, displayXAccessor, fullData })\n\t\t\t\t: yDomainFromYExtents(yExtents, yScale, plotData);\n\n\t\t\t// console.log(\"yScale.domain() ->\", yScale.domain())\n\n\t\t\tconst yDomainDY = isDefined(dy)\n\t\t\t\t? yScale.range().map(each => each - dy).map(yScale.invert)\n\t\t\t\t: yScale.domain();\n\t\t\treturn {\n\t\t\t\trealYDomain,\n\t\t\t\tyDomainDY,\n\t\t\t\tprevYDomain: yScale.domain(),\n\t\t\t};\n\t\t});\n\n\tconst combine = zipper()\n\t\t.combine((config, { realYDomain, yDomainDY, prevYDomain }) => {\n\t\t\tconst { id, padding, height, yScale, yPan, flipYScale, yPanEnabled = false } = config;\n\n\t\t\tconst another = isDefined(chartsToPan)\n\t\t\t\t? chartsToPan.indexOf(id) > -1\n\t\t\t\t: true;\n\t\t\tconst domain = yPan && yPanEnabled\n\t\t\t\t? another ? yDomainDY : prevYDomain\n\t\t\t\t: realYDomain;\n\n\t\t\t// console.log(id, yPan, yPanEnabled, another);\n\t\t\t// console.log(domain, realYDomain, prevYDomain);\n\t\t\tconst newYScale = setRange(\n\t\t\t\tyScale.copy().domain(domain), height, padding, flipYScale\n\t\t\t);\n\t\t\treturn {\n\t\t\t\t...config,\n\t\t\t\tyScale: newYScale,\n\t\t\t\trealYDomain: realYDomain,\n\t\t\t};\n\t\t\t// return { ...config, yScale: yScale.copy().domain(domain).range([height - padding, padding]) };\n\t\t});\n\n\tconst updatedChartConfig = combine(chartConfig, yDomains);\n\t// console.error(yDomains, dy, chartsToPan, updatedChartConfig.map(d => d.yScale.domain()));\n\t// console.log(updatedChartConfig.map(d => ({ id: d.id, domain: d.yScale.domain() })))\n\n\treturn updatedChartConfig;\n}\n\nexport function getCurrentItem(xScale, xAccessor, mouseXY, plotData) {\n\tlet xValue, item;\n\tif (xScale.invert) {\n\t\txValue = xScale.invert(mouseXY[0]);\n\t\titem = getClosestItem(plotData, xValue, xAccessor);\n\t} else {\n\t\tconst d = xScale.range().map((d, idx) => ({ x: Math.abs(d - mouseXY[0]), idx })).reduce((a, b) => a.x < b.x ? a : b);\n\t\titem = isDefined(d) ? plotData[d.idx] : plotData[0];\n\t\t// console.log(d, item);\n\t}\n\treturn item;\n}\n\nexport function getXValue(xScale, xAccessor, mouseXY, plotData) {\n\n\tlet xValue, item;\n\tif (xScale.invert) {\n\t\txValue = xScale.invert(mouseXY[0]);\n\t\tif (xValue > xAccessor(last(plotData)) && xScale.value) {\n\t\t\treturn Math.round(xValue);\n\t\t} else {\n\t\t\titem = getClosestItem(plotData, xValue, xAccessor);\n\t\t}\n\t} else {\n\t\tconst d = xScale.range().map((d, idx) => ({ x: Math.abs(d - mouseXY[0]), idx })).reduce((a, b) => a.x < b.x ? a : b);\n\t\titem = isDefined(d) ? plotData[d.idx] : plotData[0];\n\t\t// console.log(d, item);\n\t}\n\treturn xAccessor(item);\n}\n"]},"metadata":{},"sourceType":"script"}