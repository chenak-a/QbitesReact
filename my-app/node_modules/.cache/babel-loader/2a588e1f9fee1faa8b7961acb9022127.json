{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport * as React from 'react';\nimport RcUpload from 'rc-upload';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport classNames from 'classnames';\nimport Dragger from './Dragger';\nimport UploadList from './UploadList';\nimport { file2Obj, getFileItem, removeFileItem, updateFileList } from './utils';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport defaultLocale from '../locale/default';\nimport { ConfigContext } from '../config-provider';\nimport devWarning from '../_util/devWarning';\nvar LIST_IGNORE = \"__LIST_IGNORE_\".concat(Date.now(), \"__\");\n\nvar InternalUpload = function InternalUpload(props, ref) {\n  var _classNames2;\n\n  var fileList = props.fileList,\n      defaultFileList = props.defaultFileList,\n      onRemove = props.onRemove,\n      showUploadList = props.showUploadList,\n      listType = props.listType,\n      onPreview = props.onPreview,\n      onDownload = props.onDownload,\n      onChange = props.onChange,\n      onDrop = props.onDrop,\n      previewFile = props.previewFile,\n      disabled = props.disabled,\n      propLocale = props.locale,\n      iconRender = props.iconRender,\n      isImageUrl = props.isImageUrl,\n      progress = props.progress,\n      customizePrefixCls = props.prefixCls,\n      className = props.className,\n      type = props.type,\n      children = props.children,\n      style = props.style,\n      itemRender = props.itemRender,\n      maxCount = props.maxCount;\n\n  var _useMergedState = useMergedState(defaultFileList || [], {\n    value: fileList,\n    postState: function postState(list) {\n      return list !== null && list !== void 0 ? list : [];\n    }\n  }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      mergedFileList = _useMergedState2[0],\n      setMergedFileList = _useMergedState2[1];\n\n  var _React$useState = React.useState('drop'),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      dragState = _React$useState2[0],\n      setDragState = _React$useState2[1];\n\n  var upload = React.useRef();\n  React.useEffect(function () {\n    devWarning('fileList' in props || !('value' in props), 'Upload', '`value` is not a valid prop, do you mean `fileList`?');\n    devWarning(!('transformFile' in props), 'Upload', '`transformFile` is deprecated. Please use `beforeUpload` directly.');\n  }, []); // Control mode will auto fill file uid if not provided\n\n  React.useMemo(function () {\n    var timestamp = Date.now();\n    (fileList || []).forEach(function (file, index) {\n      if (!file.uid && !Object.isFrozen(file)) {\n        file.uid = \"__AUTO__\".concat(timestamp, \"_\").concat(index, \"__\");\n      }\n    });\n  }, [fileList]);\n\n  var onInternalChange = function onInternalChange(file, changedFileList, event) {\n    var cloneList = _toConsumableArray(changedFileList); // Cut to match count\n\n\n    if (maxCount === 1) {\n      cloneList = cloneList.slice(-1);\n    } else if (maxCount) {\n      cloneList = cloneList.slice(0, maxCount);\n    }\n\n    setMergedFileList(cloneList);\n    var changeInfo = {\n      file: file,\n      fileList: cloneList\n    };\n\n    if (event) {\n      changeInfo.event = event;\n    }\n\n    onChange === null || onChange === void 0 ? void 0 : onChange(changeInfo);\n  };\n\n  var mergedBeforeUpload = function mergedBeforeUpload(file, fileListArgs) {\n    return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var beforeUpload, transformFile, parsedFile, result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              beforeUpload = props.beforeUpload, transformFile = props.transformFile;\n              parsedFile = file;\n\n              if (!beforeUpload) {\n                _context.next = 13;\n                break;\n              }\n\n              _context.next = 5;\n              return beforeUpload(file, fileListArgs);\n\n            case 5:\n              result = _context.sent;\n\n              if (!(result === false)) {\n                _context.next = 8;\n                break;\n              }\n\n              return _context.abrupt(\"return\", false);\n\n            case 8:\n              // Hack for LIST_IGNORE, we add additional info to remove from the list\n              delete file[LIST_IGNORE];\n\n              if (!(result === LIST_IGNORE)) {\n                _context.next = 12;\n                break;\n              }\n\n              Object.defineProperty(file, LIST_IGNORE, {\n                value: true,\n                configurable: true\n              });\n              return _context.abrupt(\"return\", false);\n\n            case 12:\n              if (_typeof(result) === 'object' && result) {\n                parsedFile = result;\n              }\n\n            case 13:\n              if (!transformFile) {\n                _context.next = 17;\n                break;\n              }\n\n              _context.next = 16;\n              return transformFile(parsedFile);\n\n            case 16:\n              parsedFile = _context.sent;\n\n            case 17:\n              return _context.abrupt(\"return\", parsedFile);\n\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n  };\n\n  var onBatchStart = function onBatchStart(batchFileInfoList) {\n    // Skip file which marked as `LIST_IGNORE`, these file will not add to file list\n    var filteredFileInfoList = batchFileInfoList.filter(function (info) {\n      return !info.file[LIST_IGNORE];\n    }); // Nothing to do since no file need upload\n\n    if (!filteredFileInfoList.length) {\n      return;\n    }\n\n    var objectFileList = filteredFileInfoList.map(function (info) {\n      return file2Obj(info.file);\n    }); // Concat new files with prev files\n\n    var newFileList = _toConsumableArray(mergedFileList);\n\n    objectFileList.forEach(function (fileObj) {\n      // Replace file if exist\n      newFileList = updateFileList(fileObj, newFileList);\n    });\n    objectFileList.forEach(function (fileObj, index) {\n      // Repeat trigger `onChange` event for compatible\n      var triggerFileObj = fileObj;\n\n      if (!filteredFileInfoList[index].parsedFile) {\n        // `beforeUpload` return false\n        var originFileObj = fileObj.originFileObj;\n        var clone;\n\n        try {\n          clone = new File([originFileObj], originFileObj.name, {\n            type: originFileObj.type\n          });\n        } catch (e) {\n          clone = new Blob([originFileObj], {\n            type: originFileObj.type\n          });\n          clone.name = originFileObj.name;\n          clone.lastModifiedDate = new Date();\n          clone.lastModified = new Date().getTime();\n        }\n\n        clone.uid = fileObj.uid;\n        triggerFileObj = clone;\n      } else {\n        // Inject `uploading` status\n        fileObj.status = 'uploading';\n      }\n\n      onInternalChange(triggerFileObj, newFileList);\n    });\n  };\n\n  var onSuccess = function onSuccess(response, file, xhr) {\n    try {\n      if (typeof response === 'string') {\n        response = JSON.parse(response);\n      }\n    } catch (e) {\n      /* do nothing */\n    } // removed\n\n\n    if (!getFileItem(file, mergedFileList)) {\n      return;\n    }\n\n    var targetItem = file2Obj(file);\n    targetItem.status = 'done';\n    targetItem.percent = 100;\n    targetItem.response = response;\n    targetItem.xhr = xhr;\n    var nextFileList = updateFileList(targetItem, mergedFileList);\n    onInternalChange(targetItem, nextFileList);\n  };\n\n  var onProgress = function onProgress(e, file) {\n    // removed\n    if (!getFileItem(file, mergedFileList)) {\n      return;\n    }\n\n    var targetItem = file2Obj(file);\n    targetItem.status = 'uploading';\n    targetItem.percent = e.percent;\n    var nextFileList = updateFileList(targetItem, mergedFileList);\n    onInternalChange(targetItem, nextFileList, e);\n  };\n\n  var onError = function onError(error, response, file) {\n    // removed\n    if (!getFileItem(file, mergedFileList)) {\n      return;\n    }\n\n    var targetItem = file2Obj(file);\n    targetItem.error = error;\n    targetItem.response = response;\n    targetItem.status = 'error';\n    var nextFileList = updateFileList(targetItem, mergedFileList);\n    onInternalChange(targetItem, nextFileList);\n  };\n\n  var handleRemove = function handleRemove(file) {\n    var currentFile;\n    Promise.resolve(typeof onRemove === 'function' ? onRemove(file) : onRemove).then(function (ret) {\n      var _a; // Prevent removing file\n\n\n      if (ret === false) {\n        return;\n      }\n\n      var removedFileList = removeFileItem(file, mergedFileList);\n\n      if (removedFileList) {\n        currentFile = _extends(_extends({}, file), {\n          status: 'removed'\n        });\n        mergedFileList === null || mergedFileList === void 0 ? void 0 : mergedFileList.forEach(function (item) {\n          var matchKey = currentFile.uid !== undefined ? 'uid' : 'name';\n\n          if (item[matchKey] === currentFile[matchKey] && !Object.isFrozen(item)) {\n            item.status = 'removed';\n          }\n        });\n        (_a = upload.current) === null || _a === void 0 ? void 0 : _a.abort(currentFile);\n        onInternalChange(currentFile, removedFileList);\n      }\n    });\n  };\n\n  var onFileDrop = function onFileDrop(e) {\n    setDragState(e.type);\n\n    if (e.type === 'drop') {\n      onDrop === null || onDrop === void 0 ? void 0 : onDrop(e);\n    }\n  }; // Test needs\n\n\n  React.useImperativeHandle(ref, function () {\n    return {\n      onBatchStart: onBatchStart,\n      onSuccess: onSuccess,\n      onProgress: onProgress,\n      onError: onError,\n      fileList: mergedFileList,\n      upload: upload.current\n    };\n  });\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction;\n\n  var prefixCls = getPrefixCls('upload', customizePrefixCls);\n\n  var rcUploadProps = _extends(_extends({\n    onBatchStart: onBatchStart,\n    onError: onError,\n    onProgress: onProgress,\n    onSuccess: onSuccess\n  }, props), {\n    prefixCls: prefixCls,\n    beforeUpload: mergedBeforeUpload,\n    onChange: undefined\n  });\n\n  delete rcUploadProps.className;\n  delete rcUploadProps.style; // Remove id to avoid open by label when trigger is hidden\n  // !children: https://github.com/ant-design/ant-design/issues/14298\n  // disabled: https://github.com/ant-design/ant-design/issues/16478\n  //           https://github.com/ant-design/ant-design/issues/24197\n\n  if (!children || disabled) {\n    delete rcUploadProps.id;\n  }\n\n  var renderUploadList = function renderUploadList(button) {\n    return showUploadList ? /*#__PURE__*/React.createElement(LocaleReceiver, {\n      componentName: \"Upload\",\n      defaultLocale: defaultLocale.Upload\n    }, function (locale) {\n      var _ref = typeof showUploadList === 'boolean' ? {} : showUploadList,\n          showRemoveIcon = _ref.showRemoveIcon,\n          showPreviewIcon = _ref.showPreviewIcon,\n          showDownloadIcon = _ref.showDownloadIcon,\n          removeIcon = _ref.removeIcon,\n          downloadIcon = _ref.downloadIcon;\n\n      return /*#__PURE__*/React.createElement(UploadList, {\n        listType: listType,\n        items: mergedFileList,\n        previewFile: previewFile,\n        onPreview: onPreview,\n        onDownload: onDownload,\n        onRemove: handleRemove,\n        showRemoveIcon: !disabled && showRemoveIcon,\n        showPreviewIcon: showPreviewIcon,\n        showDownloadIcon: showDownloadIcon,\n        removeIcon: removeIcon,\n        downloadIcon: downloadIcon,\n        iconRender: iconRender,\n        locale: _extends(_extends({}, locale), propLocale),\n        isImageUrl: isImageUrl,\n        progress: progress,\n        appendAction: button,\n        itemRender: itemRender\n      });\n    }) : button;\n  };\n\n  if (type === 'drag') {\n    var _classNames;\n\n    var dragCls = classNames(prefixCls, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-drag\"), true), _defineProperty(_classNames, \"\".concat(prefixCls, \"-drag-uploading\"), mergedFileList.some(function (file) {\n      return file.status === 'uploading';\n    })), _defineProperty(_classNames, \"\".concat(prefixCls, \"-drag-hover\"), dragState === 'dragover'), _defineProperty(_classNames, \"\".concat(prefixCls, \"-disabled\"), disabled), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _classNames), className);\n    return /*#__PURE__*/React.createElement(\"span\", null, /*#__PURE__*/React.createElement(\"div\", {\n      className: dragCls,\n      onDrop: onFileDrop,\n      onDragOver: onFileDrop,\n      onDragLeave: onFileDrop,\n      style: style\n    }, /*#__PURE__*/React.createElement(RcUpload, _extends({}, rcUploadProps, {\n      ref: upload,\n      className: \"\".concat(prefixCls, \"-btn\")\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-drag-container\")\n    }, children))), renderUploadList());\n  }\n\n  var uploadButtonCls = classNames(prefixCls, (_classNames2 = {}, _defineProperty(_classNames2, \"\".concat(prefixCls, \"-select\"), true), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-select-\").concat(listType), true), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-disabled\"), disabled), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _classNames2));\n  var uploadButton = /*#__PURE__*/React.createElement(\"div\", {\n    className: uploadButtonCls,\n    style: children ? undefined : {\n      display: 'none'\n    }\n  }, /*#__PURE__*/React.createElement(RcUpload, _extends({}, rcUploadProps, {\n    ref: upload\n  })));\n\n  if (listType === 'picture-card') {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: classNames(\"\".concat(prefixCls, \"-picture-card-wrapper\"), className)\n    }, renderUploadList(uploadButton));\n  }\n\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: className\n  }, uploadButton, renderUploadList());\n};\n\nvar Upload = /*#__PURE__*/React.forwardRef(InternalUpload);\nUpload.Dragger = Dragger;\nUpload.LIST_IGNORE = LIST_IGNORE;\nUpload.displayName = 'Upload';\nUpload.defaultProps = {\n  type: 'select',\n  multiple: false,\n  action: '',\n  data: {},\n  accept: '',\n  showUploadList: true,\n  listType: 'text',\n  className: '',\n  disabled: false,\n  supportServerRender: true\n};\nexport default Upload;","map":{"version":3,"names":["_defineProperty","_extends","_typeof","_toConsumableArray","_slicedToArray","_regeneratorRuntime","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","React","RcUpload","useMergedState","classNames","Dragger","UploadList","file2Obj","getFileItem","removeFileItem","updateFileList","LocaleReceiver","defaultLocale","ConfigContext","devWarning","LIST_IGNORE","concat","Date","now","InternalUpload","props","ref","_classNames2","fileList","defaultFileList","onRemove","showUploadList","listType","onPreview","onDownload","onChange","onDrop","previewFile","disabled","propLocale","locale","iconRender","isImageUrl","progress","customizePrefixCls","prefixCls","className","type","children","style","itemRender","maxCount","_useMergedState","postState","list","_useMergedState2","mergedFileList","setMergedFileList","_React$useState","useState","_React$useState2","dragState","setDragState","upload","useRef","useEffect","useMemo","timestamp","forEach","file","index","uid","Object","isFrozen","onInternalChange","changedFileList","event","cloneList","slice","changeInfo","mergedBeforeUpload","fileListArgs","mark","_callee","beforeUpload","transformFile","parsedFile","wrap","_callee$","_context","prev","sent","abrupt","defineProperty","configurable","stop","onBatchStart","batchFileInfoList","filteredFileInfoList","filter","info","length","objectFileList","map","newFileList","fileObj","triggerFileObj","originFileObj","clone","File","name","Blob","lastModifiedDate","lastModified","getTime","status","onSuccess","response","xhr","JSON","parse","targetItem","percent","nextFileList","onProgress","onError","error","handleRemove","currentFile","ret","_a","removedFileList","item","matchKey","undefined","current","abort","onFileDrop","useImperativeHandle","_React$useContext","useContext","getPrefixCls","direction","rcUploadProps","id","renderUploadList","button","createElement","componentName","Upload","_ref","showRemoveIcon","showPreviewIcon","showDownloadIcon","removeIcon","downloadIcon","items","appendAction","_classNames","dragCls","some","onDragOver","onDragLeave","uploadButtonCls","uploadButton","display","forwardRef","displayName","defaultProps","multiple","action","data","accept","supportServerRender"],"sources":["/home/chenak/QbitesReact/my-app/node_modules/antd/es/upload/Upload.js"],"sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport * as React from 'react';\nimport RcUpload from 'rc-upload';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport classNames from 'classnames';\nimport Dragger from './Dragger';\nimport UploadList from './UploadList';\nimport { file2Obj, getFileItem, removeFileItem, updateFileList } from './utils';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport defaultLocale from '../locale/default';\nimport { ConfigContext } from '../config-provider';\nimport devWarning from '../_util/devWarning';\nvar LIST_IGNORE = \"__LIST_IGNORE_\".concat(Date.now(), \"__\");\n\nvar InternalUpload = function InternalUpload(props, ref) {\n  var _classNames2;\n\n  var fileList = props.fileList,\n      defaultFileList = props.defaultFileList,\n      onRemove = props.onRemove,\n      showUploadList = props.showUploadList,\n      listType = props.listType,\n      onPreview = props.onPreview,\n      onDownload = props.onDownload,\n      onChange = props.onChange,\n      onDrop = props.onDrop,\n      previewFile = props.previewFile,\n      disabled = props.disabled,\n      propLocale = props.locale,\n      iconRender = props.iconRender,\n      isImageUrl = props.isImageUrl,\n      progress = props.progress,\n      customizePrefixCls = props.prefixCls,\n      className = props.className,\n      type = props.type,\n      children = props.children,\n      style = props.style,\n      itemRender = props.itemRender,\n      maxCount = props.maxCount;\n\n  var _useMergedState = useMergedState(defaultFileList || [], {\n    value: fileList,\n    postState: function postState(list) {\n      return list !== null && list !== void 0 ? list : [];\n    }\n  }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      mergedFileList = _useMergedState2[0],\n      setMergedFileList = _useMergedState2[1];\n\n  var _React$useState = React.useState('drop'),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      dragState = _React$useState2[0],\n      setDragState = _React$useState2[1];\n\n  var upload = React.useRef();\n  React.useEffect(function () {\n    devWarning('fileList' in props || !('value' in props), 'Upload', '`value` is not a valid prop, do you mean `fileList`?');\n    devWarning(!('transformFile' in props), 'Upload', '`transformFile` is deprecated. Please use `beforeUpload` directly.');\n  }, []); // Control mode will auto fill file uid if not provided\n\n  React.useMemo(function () {\n    var timestamp = Date.now();\n    (fileList || []).forEach(function (file, index) {\n      if (!file.uid && !Object.isFrozen(file)) {\n        file.uid = \"__AUTO__\".concat(timestamp, \"_\").concat(index, \"__\");\n      }\n    });\n  }, [fileList]);\n\n  var onInternalChange = function onInternalChange(file, changedFileList, event) {\n    var cloneList = _toConsumableArray(changedFileList); // Cut to match count\n\n\n    if (maxCount === 1) {\n      cloneList = cloneList.slice(-1);\n    } else if (maxCount) {\n      cloneList = cloneList.slice(0, maxCount);\n    }\n\n    setMergedFileList(cloneList);\n    var changeInfo = {\n      file: file,\n      fileList: cloneList\n    };\n\n    if (event) {\n      changeInfo.event = event;\n    }\n\n    onChange === null || onChange === void 0 ? void 0 : onChange(changeInfo);\n  };\n\n  var mergedBeforeUpload = function mergedBeforeUpload(file, fileListArgs) {\n    return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var beforeUpload, transformFile, parsedFile, result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              beforeUpload = props.beforeUpload, transformFile = props.transformFile;\n              parsedFile = file;\n\n              if (!beforeUpload) {\n                _context.next = 13;\n                break;\n              }\n\n              _context.next = 5;\n              return beforeUpload(file, fileListArgs);\n\n            case 5:\n              result = _context.sent;\n\n              if (!(result === false)) {\n                _context.next = 8;\n                break;\n              }\n\n              return _context.abrupt(\"return\", false);\n\n            case 8:\n              // Hack for LIST_IGNORE, we add additional info to remove from the list\n              delete file[LIST_IGNORE];\n\n              if (!(result === LIST_IGNORE)) {\n                _context.next = 12;\n                break;\n              }\n\n              Object.defineProperty(file, LIST_IGNORE, {\n                value: true,\n                configurable: true\n              });\n              return _context.abrupt(\"return\", false);\n\n            case 12:\n              if (_typeof(result) === 'object' && result) {\n                parsedFile = result;\n              }\n\n            case 13:\n              if (!transformFile) {\n                _context.next = 17;\n                break;\n              }\n\n              _context.next = 16;\n              return transformFile(parsedFile);\n\n            case 16:\n              parsedFile = _context.sent;\n\n            case 17:\n              return _context.abrupt(\"return\", parsedFile);\n\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n  };\n\n  var onBatchStart = function onBatchStart(batchFileInfoList) {\n    // Skip file which marked as `LIST_IGNORE`, these file will not add to file list\n    var filteredFileInfoList = batchFileInfoList.filter(function (info) {\n      return !info.file[LIST_IGNORE];\n    }); // Nothing to do since no file need upload\n\n    if (!filteredFileInfoList.length) {\n      return;\n    }\n\n    var objectFileList = filteredFileInfoList.map(function (info) {\n      return file2Obj(info.file);\n    }); // Concat new files with prev files\n\n    var newFileList = _toConsumableArray(mergedFileList);\n\n    objectFileList.forEach(function (fileObj) {\n      // Replace file if exist\n      newFileList = updateFileList(fileObj, newFileList);\n    });\n    objectFileList.forEach(function (fileObj, index) {\n      // Repeat trigger `onChange` event for compatible\n      var triggerFileObj = fileObj;\n\n      if (!filteredFileInfoList[index].parsedFile) {\n        // `beforeUpload` return false\n        var originFileObj = fileObj.originFileObj;\n        var clone;\n\n        try {\n          clone = new File([originFileObj], originFileObj.name, {\n            type: originFileObj.type\n          });\n        } catch (e) {\n          clone = new Blob([originFileObj], {\n            type: originFileObj.type\n          });\n          clone.name = originFileObj.name;\n          clone.lastModifiedDate = new Date();\n          clone.lastModified = new Date().getTime();\n        }\n\n        clone.uid = fileObj.uid;\n        triggerFileObj = clone;\n      } else {\n        // Inject `uploading` status\n        fileObj.status = 'uploading';\n      }\n\n      onInternalChange(triggerFileObj, newFileList);\n    });\n  };\n\n  var onSuccess = function onSuccess(response, file, xhr) {\n    try {\n      if (typeof response === 'string') {\n        response = JSON.parse(response);\n      }\n    } catch (e) {\n      /* do nothing */\n    } // removed\n\n\n    if (!getFileItem(file, mergedFileList)) {\n      return;\n    }\n\n    var targetItem = file2Obj(file);\n    targetItem.status = 'done';\n    targetItem.percent = 100;\n    targetItem.response = response;\n    targetItem.xhr = xhr;\n    var nextFileList = updateFileList(targetItem, mergedFileList);\n    onInternalChange(targetItem, nextFileList);\n  };\n\n  var onProgress = function onProgress(e, file) {\n    // removed\n    if (!getFileItem(file, mergedFileList)) {\n      return;\n    }\n\n    var targetItem = file2Obj(file);\n    targetItem.status = 'uploading';\n    targetItem.percent = e.percent;\n    var nextFileList = updateFileList(targetItem, mergedFileList);\n    onInternalChange(targetItem, nextFileList, e);\n  };\n\n  var onError = function onError(error, response, file) {\n    // removed\n    if (!getFileItem(file, mergedFileList)) {\n      return;\n    }\n\n    var targetItem = file2Obj(file);\n    targetItem.error = error;\n    targetItem.response = response;\n    targetItem.status = 'error';\n    var nextFileList = updateFileList(targetItem, mergedFileList);\n    onInternalChange(targetItem, nextFileList);\n  };\n\n  var handleRemove = function handleRemove(file) {\n    var currentFile;\n    Promise.resolve(typeof onRemove === 'function' ? onRemove(file) : onRemove).then(function (ret) {\n      var _a; // Prevent removing file\n\n\n      if (ret === false) {\n        return;\n      }\n\n      var removedFileList = removeFileItem(file, mergedFileList);\n\n      if (removedFileList) {\n        currentFile = _extends(_extends({}, file), {\n          status: 'removed'\n        });\n        mergedFileList === null || mergedFileList === void 0 ? void 0 : mergedFileList.forEach(function (item) {\n          var matchKey = currentFile.uid !== undefined ? 'uid' : 'name';\n\n          if (item[matchKey] === currentFile[matchKey] && !Object.isFrozen(item)) {\n            item.status = 'removed';\n          }\n        });\n        (_a = upload.current) === null || _a === void 0 ? void 0 : _a.abort(currentFile);\n        onInternalChange(currentFile, removedFileList);\n      }\n    });\n  };\n\n  var onFileDrop = function onFileDrop(e) {\n    setDragState(e.type);\n\n    if (e.type === 'drop') {\n      onDrop === null || onDrop === void 0 ? void 0 : onDrop(e);\n    }\n  }; // Test needs\n\n\n  React.useImperativeHandle(ref, function () {\n    return {\n      onBatchStart: onBatchStart,\n      onSuccess: onSuccess,\n      onProgress: onProgress,\n      onError: onError,\n      fileList: mergedFileList,\n      upload: upload.current\n    };\n  });\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction;\n\n  var prefixCls = getPrefixCls('upload', customizePrefixCls);\n\n  var rcUploadProps = _extends(_extends({\n    onBatchStart: onBatchStart,\n    onError: onError,\n    onProgress: onProgress,\n    onSuccess: onSuccess\n  }, props), {\n    prefixCls: prefixCls,\n    beforeUpload: mergedBeforeUpload,\n    onChange: undefined\n  });\n\n  delete rcUploadProps.className;\n  delete rcUploadProps.style; // Remove id to avoid open by label when trigger is hidden\n  // !children: https://github.com/ant-design/ant-design/issues/14298\n  // disabled: https://github.com/ant-design/ant-design/issues/16478\n  //           https://github.com/ant-design/ant-design/issues/24197\n\n  if (!children || disabled) {\n    delete rcUploadProps.id;\n  }\n\n  var renderUploadList = function renderUploadList(button) {\n    return showUploadList ? /*#__PURE__*/React.createElement(LocaleReceiver, {\n      componentName: \"Upload\",\n      defaultLocale: defaultLocale.Upload\n    }, function (locale) {\n      var _ref = typeof showUploadList === 'boolean' ? {} : showUploadList,\n          showRemoveIcon = _ref.showRemoveIcon,\n          showPreviewIcon = _ref.showPreviewIcon,\n          showDownloadIcon = _ref.showDownloadIcon,\n          removeIcon = _ref.removeIcon,\n          downloadIcon = _ref.downloadIcon;\n\n      return /*#__PURE__*/React.createElement(UploadList, {\n        listType: listType,\n        items: mergedFileList,\n        previewFile: previewFile,\n        onPreview: onPreview,\n        onDownload: onDownload,\n        onRemove: handleRemove,\n        showRemoveIcon: !disabled && showRemoveIcon,\n        showPreviewIcon: showPreviewIcon,\n        showDownloadIcon: showDownloadIcon,\n        removeIcon: removeIcon,\n        downloadIcon: downloadIcon,\n        iconRender: iconRender,\n        locale: _extends(_extends({}, locale), propLocale),\n        isImageUrl: isImageUrl,\n        progress: progress,\n        appendAction: button,\n        itemRender: itemRender\n      });\n    }) : button;\n  };\n\n  if (type === 'drag') {\n    var _classNames;\n\n    var dragCls = classNames(prefixCls, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-drag\"), true), _defineProperty(_classNames, \"\".concat(prefixCls, \"-drag-uploading\"), mergedFileList.some(function (file) {\n      return file.status === 'uploading';\n    })), _defineProperty(_classNames, \"\".concat(prefixCls, \"-drag-hover\"), dragState === 'dragover'), _defineProperty(_classNames, \"\".concat(prefixCls, \"-disabled\"), disabled), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _classNames), className);\n    return /*#__PURE__*/React.createElement(\"span\", null, /*#__PURE__*/React.createElement(\"div\", {\n      className: dragCls,\n      onDrop: onFileDrop,\n      onDragOver: onFileDrop,\n      onDragLeave: onFileDrop,\n      style: style\n    }, /*#__PURE__*/React.createElement(RcUpload, _extends({}, rcUploadProps, {\n      ref: upload,\n      className: \"\".concat(prefixCls, \"-btn\")\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-drag-container\")\n    }, children))), renderUploadList());\n  }\n\n  var uploadButtonCls = classNames(prefixCls, (_classNames2 = {}, _defineProperty(_classNames2, \"\".concat(prefixCls, \"-select\"), true), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-select-\").concat(listType), true), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-disabled\"), disabled), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _classNames2));\n  var uploadButton = /*#__PURE__*/React.createElement(\"div\", {\n    className: uploadButtonCls,\n    style: children ? undefined : {\n      display: 'none'\n    }\n  }, /*#__PURE__*/React.createElement(RcUpload, _extends({}, rcUploadProps, {\n    ref: upload\n  })));\n\n  if (listType === 'picture-card') {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: classNames(\"\".concat(prefixCls, \"-picture-card-wrapper\"), className)\n    }, renderUploadList(uploadButton));\n  }\n\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: className\n  }, uploadButton, renderUploadList());\n};\n\nvar Upload = /*#__PURE__*/React.forwardRef(InternalUpload);\nUpload.Dragger = Dragger;\nUpload.LIST_IGNORE = LIST_IGNORE;\nUpload.displayName = 'Upload';\nUpload.defaultProps = {\n  type: 'select',\n  multiple: false,\n  action: '',\n  data: {},\n  accept: '',\n  showUploadList: true,\n  listType: 'text',\n  className: '',\n  disabled: false,\n  supportServerRender: true\n};\nexport default Upload;"],"mappings":"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"},"metadata":{},"sourceType":"module"}