{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"children\"],\n    _excluded2 = [\"fixed\"];\nimport * as React from 'react';\nimport warning from \"rc-util/es/warning\";\nimport toArray from \"rc-util/es/Children/toArray\";\nimport { INTERNAL_COL_DEFINE } from '../utils/legacyUtil';\nexport function convertChildrenToColumns(children) {\n  return toArray(children).filter(function (node) {\n    return /*#__PURE__*/React.isValidElement(node);\n  }).map(function (_ref) {\n    var key = _ref.key,\n        props = _ref.props;\n\n    var nodeChildren = props.children,\n        restProps = _objectWithoutProperties(props, _excluded);\n\n    var column = _objectSpread({\n      key: key\n    }, restProps);\n\n    if (nodeChildren) {\n      column.children = convertChildrenToColumns(nodeChildren);\n    }\n\n    return column;\n  });\n}\n\nfunction flatColumns(columns) {\n  return columns.reduce(function (list, column) {\n    var fixed = column.fixed; // Convert `fixed='true'` to `fixed='left'` instead\n\n    var parsedFixed = fixed === true ? 'left' : fixed;\n    var subColumns = column.children;\n\n    if (subColumns && subColumns.length > 0) {\n      return [].concat(_toConsumableArray(list), _toConsumableArray(flatColumns(subColumns).map(function (subColum) {\n        return _objectSpread({\n          fixed: parsedFixed\n        }, subColum);\n      })));\n    }\n\n    return [].concat(_toConsumableArray(list), [_objectSpread(_objectSpread({}, column), {}, {\n      fixed: parsedFixed\n    })]);\n  }, []);\n}\n\nfunction warningFixed(flattenColumns) {\n  var allFixLeft = true;\n\n  for (var i = 0; i < flattenColumns.length; i += 1) {\n    var col = flattenColumns[i];\n\n    if (allFixLeft && col.fixed !== 'left') {\n      allFixLeft = false;\n    } else if (!allFixLeft && col.fixed === 'left') {\n      warning(false, \"Index \".concat(i - 1, \" of `columns` missing `fixed='left'` prop.\"));\n      break;\n    }\n  }\n\n  var allFixRight = true;\n\n  for (var _i = flattenColumns.length - 1; _i >= 0; _i -= 1) {\n    var _col = flattenColumns[_i];\n\n    if (allFixRight && _col.fixed !== 'right') {\n      allFixRight = false;\n    } else if (!allFixRight && _col.fixed === 'right') {\n      warning(false, \"Index \".concat(_i + 1, \" of `columns` missing `fixed='right'` prop.\"));\n      break;\n    }\n  }\n}\n\nfunction revertForRtl(columns) {\n  return columns.map(function (column) {\n    var fixed = column.fixed,\n        restProps = _objectWithoutProperties(column, _excluded2); // Convert `fixed='left'` to `fixed='right'` instead\n\n\n    var parsedFixed = fixed;\n\n    if (fixed === 'left') {\n      parsedFixed = 'right';\n    } else if (fixed === 'right') {\n      parsedFixed = 'left';\n    }\n\n    return _objectSpread({\n      fixed: parsedFixed\n    }, restProps);\n  });\n}\n/**\n * Parse `columns` & `children` into `columns`.\n */\n\n\nfunction useColumns(_ref2, transformColumns) {\n  var prefixCls = _ref2.prefixCls,\n      columns = _ref2.columns,\n      children = _ref2.children,\n      expandable = _ref2.expandable,\n      expandedKeys = _ref2.expandedKeys,\n      getRowKey = _ref2.getRowKey,\n      onTriggerExpand = _ref2.onTriggerExpand,\n      expandIcon = _ref2.expandIcon,\n      rowExpandable = _ref2.rowExpandable,\n      expandIconColumnIndex = _ref2.expandIconColumnIndex,\n      direction = _ref2.direction,\n      expandRowByClick = _ref2.expandRowByClick,\n      columnWidth = _ref2.columnWidth,\n      fixed = _ref2.fixed;\n  var baseColumns = React.useMemo(function () {\n    return columns || convertChildrenToColumns(children);\n  }, [columns, children]); // Add expand column\n\n  var withExpandColumns = React.useMemo(function () {\n    if (expandable) {\n      var _expandColumn;\n\n      var expandColIndex = expandIconColumnIndex || 0;\n      var prevColumn = baseColumns[expandColIndex];\n      var fixedColumn;\n\n      if ((fixed === 'left' || fixed) && !expandIconColumnIndex) {\n        fixedColumn = 'left';\n      } else if ((fixed === 'right' || fixed) && expandIconColumnIndex === baseColumns.length) {\n        fixedColumn = 'right';\n      } else {\n        fixedColumn = prevColumn ? prevColumn.fixed : null;\n      }\n\n      var expandColumn = (_expandColumn = {}, _defineProperty(_expandColumn, INTERNAL_COL_DEFINE, {\n        className: \"\".concat(prefixCls, \"-expand-icon-col\")\n      }), _defineProperty(_expandColumn, \"title\", ''), _defineProperty(_expandColumn, \"fixed\", fixedColumn), _defineProperty(_expandColumn, \"className\", \"\".concat(prefixCls, \"-row-expand-icon-cell\")), _defineProperty(_expandColumn, \"width\", columnWidth), _defineProperty(_expandColumn, \"render\", function render(_, record, index) {\n        var rowKey = getRowKey(record, index);\n        var expanded = expandedKeys.has(rowKey);\n        var recordExpandable = rowExpandable ? rowExpandable(record) : true;\n        var icon = expandIcon({\n          prefixCls: prefixCls,\n          expanded: expanded,\n          expandable: recordExpandable,\n          record: record,\n          onExpand: onTriggerExpand\n        });\n\n        if (expandRowByClick) {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            onClick: function onClick(e) {\n              return e.stopPropagation();\n            }\n          }, icon);\n        }\n\n        return icon;\n      }), _expandColumn); // Insert expand column in the target position\n\n      var cloneColumns = baseColumns.slice();\n\n      if (expandColIndex >= 0) {\n        cloneColumns.splice(expandColIndex, 0, expandColumn);\n      }\n\n      return cloneColumns;\n    }\n\n    return baseColumns;\n  }, [expandable, baseColumns, getRowKey, expandedKeys, expandIcon, direction]);\n  var mergedColumns = React.useMemo(function () {\n    var finalColumns = withExpandColumns;\n\n    if (transformColumns) {\n      finalColumns = transformColumns(finalColumns);\n    } // Always provides at least one column for table display\n\n\n    if (!finalColumns.length) {\n      finalColumns = [{\n        render: function render() {\n          return null;\n        }\n      }];\n    }\n\n    return finalColumns;\n  }, [transformColumns, withExpandColumns, direction]);\n  var flattenColumns = React.useMemo(function () {\n    if (direction === 'rtl') {\n      return revertForRtl(flatColumns(mergedColumns));\n    }\n\n    return flatColumns(mergedColumns);\n  }, [mergedColumns, direction]); // Only check out of production since it's waste for each render\n\n  if (process.env.NODE_ENV !== 'production') {\n    warningFixed(flattenColumns);\n  }\n\n  return [mergedColumns, flattenColumns];\n}\n\nexport default useColumns;","map":{"version":3,"names":["_defineProperty","_toConsumableArray","_objectSpread","_objectWithoutProperties","_excluded","_excluded2","React","warning","toArray","INTERNAL_COL_DEFINE","convertChildrenToColumns","children","filter","node","isValidElement","map","_ref","key","props","nodeChildren","restProps","column","flatColumns","columns","reduce","list","fixed","parsedFixed","subColumns","length","concat","subColum","warningFixed","flattenColumns","allFixLeft","i","col","allFixRight","_i","_col","revertForRtl","useColumns","_ref2","transformColumns","prefixCls","expandable","expandedKeys","getRowKey","onTriggerExpand","expandIcon","rowExpandable","expandIconColumnIndex","direction","expandRowByClick","columnWidth","baseColumns","useMemo","withExpandColumns","_expandColumn","expandColIndex","prevColumn","fixedColumn","expandColumn","className","render","_","record","index","rowKey","expanded","has","recordExpandable","icon","onExpand","createElement","onClick","e","stopPropagation","cloneColumns","slice","splice","mergedColumns","finalColumns","process","env","NODE_ENV"],"sources":["/home/chenak/QbitesReact/my-app/node_modules/rc-table/es/hooks/useColumns.js"],"sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"children\"],\n    _excluded2 = [\"fixed\"];\nimport * as React from 'react';\nimport warning from \"rc-util/es/warning\";\nimport toArray from \"rc-util/es/Children/toArray\";\nimport { INTERNAL_COL_DEFINE } from '../utils/legacyUtil';\nexport function convertChildrenToColumns(children) {\n  return toArray(children).filter(function (node) {\n    return /*#__PURE__*/React.isValidElement(node);\n  }).map(function (_ref) {\n    var key = _ref.key,\n        props = _ref.props;\n\n    var nodeChildren = props.children,\n        restProps = _objectWithoutProperties(props, _excluded);\n\n    var column = _objectSpread({\n      key: key\n    }, restProps);\n\n    if (nodeChildren) {\n      column.children = convertChildrenToColumns(nodeChildren);\n    }\n\n    return column;\n  });\n}\n\nfunction flatColumns(columns) {\n  return columns.reduce(function (list, column) {\n    var fixed = column.fixed; // Convert `fixed='true'` to `fixed='left'` instead\n\n    var parsedFixed = fixed === true ? 'left' : fixed;\n    var subColumns = column.children;\n\n    if (subColumns && subColumns.length > 0) {\n      return [].concat(_toConsumableArray(list), _toConsumableArray(flatColumns(subColumns).map(function (subColum) {\n        return _objectSpread({\n          fixed: parsedFixed\n        }, subColum);\n      })));\n    }\n\n    return [].concat(_toConsumableArray(list), [_objectSpread(_objectSpread({}, column), {}, {\n      fixed: parsedFixed\n    })]);\n  }, []);\n}\n\nfunction warningFixed(flattenColumns) {\n  var allFixLeft = true;\n\n  for (var i = 0; i < flattenColumns.length; i += 1) {\n    var col = flattenColumns[i];\n\n    if (allFixLeft && col.fixed !== 'left') {\n      allFixLeft = false;\n    } else if (!allFixLeft && col.fixed === 'left') {\n      warning(false, \"Index \".concat(i - 1, \" of `columns` missing `fixed='left'` prop.\"));\n      break;\n    }\n  }\n\n  var allFixRight = true;\n\n  for (var _i = flattenColumns.length - 1; _i >= 0; _i -= 1) {\n    var _col = flattenColumns[_i];\n\n    if (allFixRight && _col.fixed !== 'right') {\n      allFixRight = false;\n    } else if (!allFixRight && _col.fixed === 'right') {\n      warning(false, \"Index \".concat(_i + 1, \" of `columns` missing `fixed='right'` prop.\"));\n      break;\n    }\n  }\n}\n\nfunction revertForRtl(columns) {\n  return columns.map(function (column) {\n    var fixed = column.fixed,\n        restProps = _objectWithoutProperties(column, _excluded2); // Convert `fixed='left'` to `fixed='right'` instead\n\n\n    var parsedFixed = fixed;\n\n    if (fixed === 'left') {\n      parsedFixed = 'right';\n    } else if (fixed === 'right') {\n      parsedFixed = 'left';\n    }\n\n    return _objectSpread({\n      fixed: parsedFixed\n    }, restProps);\n  });\n}\n/**\n * Parse `columns` & `children` into `columns`.\n */\n\n\nfunction useColumns(_ref2, transformColumns) {\n  var prefixCls = _ref2.prefixCls,\n      columns = _ref2.columns,\n      children = _ref2.children,\n      expandable = _ref2.expandable,\n      expandedKeys = _ref2.expandedKeys,\n      getRowKey = _ref2.getRowKey,\n      onTriggerExpand = _ref2.onTriggerExpand,\n      expandIcon = _ref2.expandIcon,\n      rowExpandable = _ref2.rowExpandable,\n      expandIconColumnIndex = _ref2.expandIconColumnIndex,\n      direction = _ref2.direction,\n      expandRowByClick = _ref2.expandRowByClick,\n      columnWidth = _ref2.columnWidth,\n      fixed = _ref2.fixed;\n  var baseColumns = React.useMemo(function () {\n    return columns || convertChildrenToColumns(children);\n  }, [columns, children]); // Add expand column\n\n  var withExpandColumns = React.useMemo(function () {\n    if (expandable) {\n      var _expandColumn;\n\n      var expandColIndex = expandIconColumnIndex || 0;\n      var prevColumn = baseColumns[expandColIndex];\n      var fixedColumn;\n\n      if ((fixed === 'left' || fixed) && !expandIconColumnIndex) {\n        fixedColumn = 'left';\n      } else if ((fixed === 'right' || fixed) && expandIconColumnIndex === baseColumns.length) {\n        fixedColumn = 'right';\n      } else {\n        fixedColumn = prevColumn ? prevColumn.fixed : null;\n      }\n\n      var expandColumn = (_expandColumn = {}, _defineProperty(_expandColumn, INTERNAL_COL_DEFINE, {\n        className: \"\".concat(prefixCls, \"-expand-icon-col\")\n      }), _defineProperty(_expandColumn, \"title\", ''), _defineProperty(_expandColumn, \"fixed\", fixedColumn), _defineProperty(_expandColumn, \"className\", \"\".concat(prefixCls, \"-row-expand-icon-cell\")), _defineProperty(_expandColumn, \"width\", columnWidth), _defineProperty(_expandColumn, \"render\", function render(_, record, index) {\n        var rowKey = getRowKey(record, index);\n        var expanded = expandedKeys.has(rowKey);\n        var recordExpandable = rowExpandable ? rowExpandable(record) : true;\n        var icon = expandIcon({\n          prefixCls: prefixCls,\n          expanded: expanded,\n          expandable: recordExpandable,\n          record: record,\n          onExpand: onTriggerExpand\n        });\n\n        if (expandRowByClick) {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            onClick: function onClick(e) {\n              return e.stopPropagation();\n            }\n          }, icon);\n        }\n\n        return icon;\n      }), _expandColumn); // Insert expand column in the target position\n\n      var cloneColumns = baseColumns.slice();\n\n      if (expandColIndex >= 0) {\n        cloneColumns.splice(expandColIndex, 0, expandColumn);\n      }\n\n      return cloneColumns;\n    }\n\n    return baseColumns;\n  }, [expandable, baseColumns, getRowKey, expandedKeys, expandIcon, direction]);\n  var mergedColumns = React.useMemo(function () {\n    var finalColumns = withExpandColumns;\n\n    if (transformColumns) {\n      finalColumns = transformColumns(finalColumns);\n    } // Always provides at least one column for table display\n\n\n    if (!finalColumns.length) {\n      finalColumns = [{\n        render: function render() {\n          return null;\n        }\n      }];\n    }\n\n    return finalColumns;\n  }, [transformColumns, withExpandColumns, direction]);\n  var flattenColumns = React.useMemo(function () {\n    if (direction === 'rtl') {\n      return revertForRtl(flatColumns(mergedColumns));\n    }\n\n    return flatColumns(mergedColumns);\n  }, [mergedColumns, direction]); // Only check out of production since it's waste for each render\n\n  if (process.env.NODE_ENV !== 'production') {\n    warningFixed(flattenColumns);\n  }\n\n  return [mergedColumns, flattenColumns];\n}\n\nexport default useColumns;"],"mappings":"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"},"metadata":{},"sourceType":"module"}