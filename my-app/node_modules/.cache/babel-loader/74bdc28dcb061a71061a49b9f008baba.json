{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport * as React from 'react';\nimport findDOMNode from \"rc-util/es/Dom/findDOMNode\";\nimport toArray from \"rc-util/es/Children/toArray\";\nimport warning from \"rc-util/es/warning\";\nimport { composeRef, supportRef } from \"rc-util/es/ref\";\nimport ResizeObserver from 'resize-observer-polyfill';\nvar INTERNAL_PREFIX_KEY = 'rc-observer-key'; // Still need to be compatible with React 15, we use class component here\n\nvar ReactResizeObserver = /*#__PURE__*/function (_React$Component) {\n  _inherits(ReactResizeObserver, _React$Component);\n\n  var _super = _createSuper(ReactResizeObserver);\n\n  function ReactResizeObserver() {\n    var _this;\n\n    _classCallCheck(this, ReactResizeObserver);\n\n    _this = _super.apply(this, arguments);\n    _this.resizeObserver = null;\n    _this.childNode = null;\n    _this.currentElement = null;\n    _this.state = {\n      width: 0,\n      height: 0,\n      offsetHeight: 0,\n      offsetWidth: 0\n    };\n\n    _this.onResize = function (entries) {\n      var onResize = _this.props.onResize;\n      var target = entries[0].target;\n\n      var _target$getBoundingCl = target.getBoundingClientRect(),\n          width = _target$getBoundingCl.width,\n          height = _target$getBoundingCl.height;\n\n      var offsetWidth = target.offsetWidth,\n          offsetHeight = target.offsetHeight;\n      /**\n       * Resize observer trigger when content size changed.\n       * In most case we just care about element size,\n       * let's use `boundary` instead of `contentRect` here to avoid shaking.\n       */\n\n      var fixedWidth = Math.floor(width);\n      var fixedHeight = Math.floor(height);\n\n      if (_this.state.width !== fixedWidth || _this.state.height !== fixedHeight || _this.state.offsetWidth !== offsetWidth || _this.state.offsetHeight !== offsetHeight) {\n        var size = {\n          width: fixedWidth,\n          height: fixedHeight,\n          offsetWidth: offsetWidth,\n          offsetHeight: offsetHeight\n        };\n\n        _this.setState(size);\n\n        if (onResize) {\n          // defer the callback but not defer to next frame\n          Promise.resolve().then(function () {\n            onResize(_objectSpread(_objectSpread({}, size), {}, {\n              offsetWidth: offsetWidth,\n              offsetHeight: offsetHeight\n            }), target);\n          });\n        }\n      }\n    };\n\n    _this.setChildNode = function (node) {\n      _this.childNode = node;\n    };\n\n    return _this;\n  }\n\n  _createClass(ReactResizeObserver, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.onComponentUpdated();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.onComponentUpdated();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.destroyObserver();\n    }\n  }, {\n    key: \"onComponentUpdated\",\n    value: function onComponentUpdated() {\n      var disabled = this.props.disabled; // Unregister if disabled\n\n      if (disabled) {\n        this.destroyObserver();\n        return;\n      } // Unregister if element changed\n\n\n      var element = findDOMNode(this.childNode || this);\n      var elementChanged = element !== this.currentElement;\n\n      if (elementChanged) {\n        this.destroyObserver();\n        this.currentElement = element;\n      }\n\n      if (!this.resizeObserver && element) {\n        this.resizeObserver = new ResizeObserver(this.onResize);\n        this.resizeObserver.observe(element);\n      }\n    }\n  }, {\n    key: \"destroyObserver\",\n    value: function destroyObserver() {\n      if (this.resizeObserver) {\n        this.resizeObserver.disconnect();\n        this.resizeObserver = null;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var childNodes = toArray(children);\n\n      if (childNodes.length > 1) {\n        warning(false, 'Find more than one child node with `children` in ResizeObserver. Will only observe first one.');\n      } else if (childNodes.length === 0) {\n        warning(false, '`children` of ResizeObserver is empty. Nothing is in observe.');\n        return null;\n      }\n\n      var childNode = childNodes[0];\n\n      if ( /*#__PURE__*/React.isValidElement(childNode) && supportRef(childNode)) {\n        var ref = childNode.ref;\n        childNodes[0] = /*#__PURE__*/React.cloneElement(childNode, {\n          ref: composeRef(ref, this.setChildNode)\n        });\n      }\n\n      return childNodes.length === 1 ? childNodes[0] : childNodes.map(function (node, index) {\n        if (! /*#__PURE__*/React.isValidElement(node) || 'key' in node && node.key !== null) {\n          return node;\n        }\n\n        return /*#__PURE__*/React.cloneElement(node, {\n          key: \"\".concat(INTERNAL_PREFIX_KEY, \"-\").concat(index)\n        });\n      });\n    }\n  }]);\n\n  return ReactResizeObserver;\n}(React.Component);\n\nReactResizeObserver.displayName = 'ResizeObserver';\nexport default ReactResizeObserver;","map":{"version":3,"names":["_objectSpread","_classCallCheck","_createClass","_inherits","_createSuper","React","findDOMNode","toArray","warning","composeRef","supportRef","ResizeObserver","INTERNAL_PREFIX_KEY","ReactResizeObserver","_React$Component","_super","_this","apply","arguments","resizeObserver","childNode","currentElement","state","width","height","offsetHeight","offsetWidth","onResize","entries","props","target","_target$getBoundingCl","getBoundingClientRect","fixedWidth","Math","floor","fixedHeight","size","setState","Promise","resolve","then","setChildNode","node","key","value","componentDidMount","onComponentUpdated","componentDidUpdate","componentWillUnmount","destroyObserver","disabled","element","elementChanged","observe","disconnect","render","children","childNodes","length","isValidElement","ref","cloneElement","map","index","concat","Component","displayName"],"sources":["/home/chenak/QbitesReact/my-app/node_modules/rc-resize-observer/es/index.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport * as React from 'react';\nimport findDOMNode from \"rc-util/es/Dom/findDOMNode\";\nimport toArray from \"rc-util/es/Children/toArray\";\nimport warning from \"rc-util/es/warning\";\nimport { composeRef, supportRef } from \"rc-util/es/ref\";\nimport ResizeObserver from 'resize-observer-polyfill';\nvar INTERNAL_PREFIX_KEY = 'rc-observer-key'; // Still need to be compatible with React 15, we use class component here\n\nvar ReactResizeObserver = /*#__PURE__*/function (_React$Component) {\n  _inherits(ReactResizeObserver, _React$Component);\n\n  var _super = _createSuper(ReactResizeObserver);\n\n  function ReactResizeObserver() {\n    var _this;\n\n    _classCallCheck(this, ReactResizeObserver);\n\n    _this = _super.apply(this, arguments);\n    _this.resizeObserver = null;\n    _this.childNode = null;\n    _this.currentElement = null;\n    _this.state = {\n      width: 0,\n      height: 0,\n      offsetHeight: 0,\n      offsetWidth: 0\n    };\n\n    _this.onResize = function (entries) {\n      var onResize = _this.props.onResize;\n      var target = entries[0].target;\n\n      var _target$getBoundingCl = target.getBoundingClientRect(),\n          width = _target$getBoundingCl.width,\n          height = _target$getBoundingCl.height;\n\n      var offsetWidth = target.offsetWidth,\n          offsetHeight = target.offsetHeight;\n      /**\n       * Resize observer trigger when content size changed.\n       * In most case we just care about element size,\n       * let's use `boundary` instead of `contentRect` here to avoid shaking.\n       */\n\n      var fixedWidth = Math.floor(width);\n      var fixedHeight = Math.floor(height);\n\n      if (_this.state.width !== fixedWidth || _this.state.height !== fixedHeight || _this.state.offsetWidth !== offsetWidth || _this.state.offsetHeight !== offsetHeight) {\n        var size = {\n          width: fixedWidth,\n          height: fixedHeight,\n          offsetWidth: offsetWidth,\n          offsetHeight: offsetHeight\n        };\n\n        _this.setState(size);\n\n        if (onResize) {\n          // defer the callback but not defer to next frame\n          Promise.resolve().then(function () {\n            onResize(_objectSpread(_objectSpread({}, size), {}, {\n              offsetWidth: offsetWidth,\n              offsetHeight: offsetHeight\n            }), target);\n          });\n        }\n      }\n    };\n\n    _this.setChildNode = function (node) {\n      _this.childNode = node;\n    };\n\n    return _this;\n  }\n\n  _createClass(ReactResizeObserver, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.onComponentUpdated();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.onComponentUpdated();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.destroyObserver();\n    }\n  }, {\n    key: \"onComponentUpdated\",\n    value: function onComponentUpdated() {\n      var disabled = this.props.disabled; // Unregister if disabled\n\n      if (disabled) {\n        this.destroyObserver();\n        return;\n      } // Unregister if element changed\n\n\n      var element = findDOMNode(this.childNode || this);\n      var elementChanged = element !== this.currentElement;\n\n      if (elementChanged) {\n        this.destroyObserver();\n        this.currentElement = element;\n      }\n\n      if (!this.resizeObserver && element) {\n        this.resizeObserver = new ResizeObserver(this.onResize);\n        this.resizeObserver.observe(element);\n      }\n    }\n  }, {\n    key: \"destroyObserver\",\n    value: function destroyObserver() {\n      if (this.resizeObserver) {\n        this.resizeObserver.disconnect();\n        this.resizeObserver = null;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var childNodes = toArray(children);\n\n      if (childNodes.length > 1) {\n        warning(false, 'Find more than one child node with `children` in ResizeObserver. Will only observe first one.');\n      } else if (childNodes.length === 0) {\n        warning(false, '`children` of ResizeObserver is empty. Nothing is in observe.');\n        return null;\n      }\n\n      var childNode = childNodes[0];\n\n      if ( /*#__PURE__*/React.isValidElement(childNode) && supportRef(childNode)) {\n        var ref = childNode.ref;\n        childNodes[0] = /*#__PURE__*/React.cloneElement(childNode, {\n          ref: composeRef(ref, this.setChildNode)\n        });\n      }\n\n      return childNodes.length === 1 ? childNodes[0] : childNodes.map(function (node, index) {\n        if (! /*#__PURE__*/React.isValidElement(node) || 'key' in node && node.key !== null) {\n          return node;\n        }\n\n        return /*#__PURE__*/React.cloneElement(node, {\n          key: \"\".concat(INTERNAL_PREFIX_KEY, \"-\").concat(index)\n        });\n      });\n    }\n  }]);\n\n  return ReactResizeObserver;\n}(React.Component);\n\nReactResizeObserver.displayName = 'ResizeObserver';\nexport default ReactResizeObserver;"],"mappings":"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"},"metadata":{},"sourceType":"module"}