{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _d3Format = require(\"d3-format\");\n\nvar _displayValuesFor = require(\"./displayValuesFor\");\n\nvar _displayValuesFor2 = _interopRequireDefault(_displayValuesFor);\n\nvar _GenericChartComponent = require(\"../GenericChartComponent\");\n\nvar _GenericChartComponent2 = _interopRequireDefault(_GenericChartComponent);\n\nvar _ToolTipText = require(\"./ToolTipText\");\n\nvar _ToolTipText2 = _interopRequireDefault(_ToolTipText);\n\nvar _ToolTipTSpanLabel = require(\"./ToolTipTSpanLabel\");\n\nvar _ToolTipTSpanLabel2 = _interopRequireDefault(_ToolTipTSpanLabel);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar VALID_LAYOUTS = [\"horizontal\", \"horizontalRows\", \"horizontalInline\", \"vertical\", \"verticalRows\"];\n\nvar SingleTooltip = function (_Component) {\n  _inherits(SingleTooltip, _Component);\n\n  function SingleTooltip(props) {\n    _classCallCheck(this, SingleTooltip);\n\n    var _this = _possibleConstructorReturn(this, (SingleTooltip.__proto__ || Object.getPrototypeOf(SingleTooltip)).call(this, props));\n\n    _this.handleClick = _this.handleClick.bind(_this);\n    return _this;\n  }\n\n  _createClass(SingleTooltip, [{\n    key: \"handleClick\",\n    value: function handleClick(e) {\n      var _props = this.props,\n          onClick = _props.onClick,\n          forChart = _props.forChart,\n          options = _props.options;\n      onClick(_extends({\n        chartId: forChart\n      }, options), e);\n    }\n    /**\n     * Renders the value next to the label.\n     */\n\n  }, {\n    key: \"renderValueNextToLabel\",\n    value: function renderValueNextToLabel() {\n      var _props2 = this.props,\n          origin = _props2.origin,\n          yLabel = _props2.yLabel,\n          yValue = _props2.yValue,\n          labelFill = _props2.labelFill,\n          valueFill = _props2.valueFill,\n          withShape = _props2.withShape,\n          fontSize = _props2.fontSize,\n          fontFamily = _props2.fontFamily;\n      return _react2.default.createElement(\"g\", {\n        transform: \"translate(\" + origin[0] + \", \" + origin[1] + \")\",\n        onClick: this.handleClick\n      }, withShape ? _react2.default.createElement(\"rect\", {\n        x: \"0\",\n        y: \"-6\",\n        width: \"6\",\n        height: \"6\",\n        fill: valueFill\n      }) : null, _react2.default.createElement(_ToolTipText2.default, {\n        x: withShape ? 8 : 0,\n        y: 0,\n        fontFamily: fontFamily,\n        fontSize: fontSize\n      }, _react2.default.createElement(_ToolTipTSpanLabel2.default, {\n        fill: labelFill\n      }, yLabel, \": \"), _react2.default.createElement(\"tspan\", {\n        fill: valueFill\n      }, yValue)));\n    }\n    /**\n     * Renders the value beneath the label.\n     */\n\n  }, {\n    key: \"renderValueBeneathToLabel\",\n    value: function renderValueBeneathToLabel() {\n      var _props3 = this.props,\n          origin = _props3.origin,\n          yLabel = _props3.yLabel,\n          yValue = _props3.yValue,\n          labelFill = _props3.labelFill,\n          valueFill = _props3.valueFill,\n          withShape = _props3.withShape,\n          fontSize = _props3.fontSize,\n          fontFamily = _props3.fontFamily;\n      return _react2.default.createElement(\"g\", {\n        transform: \"translate(\" + origin[0] + \", \" + origin[1] + \")\",\n        onClick: this.handleClick\n      }, withShape ? _react2.default.createElement(\"line\", {\n        x1: 0,\n        y1: 2,\n        x2: 0,\n        y2: 28,\n        stroke: valueFill,\n        strokeWidth: \"4px\"\n      }) : null, _react2.default.createElement(_ToolTipText2.default, {\n        x: 5,\n        y: 11,\n        fontFamily: fontFamily,\n        fontSize: fontSize\n      }, _react2.default.createElement(_ToolTipTSpanLabel2.default, {\n        fill: labelFill\n      }, yLabel), _react2.default.createElement(\"tspan\", {\n        x: \"5\",\n        dy: \"15\",\n        fill: valueFill\n      }, yValue)));\n    }\n    /**\n     * Renders the value next to the label.\n     * The parent component must have a \"text\"-element.\n     */\n\n  }, {\n    key: \"renderInline\",\n    value: function renderInline() {\n      var _props4 = this.props,\n          yLabel = _props4.yLabel,\n          yValue = _props4.yValue,\n          labelFill = _props4.labelFill,\n          valueFill = _props4.valueFill,\n          fontSize = _props4.fontSize,\n          fontFamily = _props4.fontFamily;\n      return _react2.default.createElement(\"tspan\", {\n        onClick: this.handleClick,\n        fontFamily: fontFamily,\n        fontSize: fontSize\n      }, _react2.default.createElement(_ToolTipTSpanLabel2.default, {\n        fill: labelFill\n      }, yLabel, \":\\xA0\"), _react2.default.createElement(\"tspan\", {\n        fill: valueFill\n      }, yValue, \"\\xA0\\xA0\"));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var layout = this.props.layout;\n      var comp = null;\n\n      switch (layout) {\n        case \"horizontal\":\n          comp = this.renderValueNextToLabel();\n          break;\n\n        case \"horizontalRows\":\n          comp = this.renderValueBeneathToLabel();\n          break;\n\n        case \"horizontalInline\":\n          comp = this.renderInline();\n          break;\n\n        case \"vertical\":\n          comp = this.renderValueNextToLabel();\n          break;\n\n        case \"verticalRows\":\n          comp = this.renderValueBeneathToLabel();\n          break;\n\n        default:\n          comp = this.renderValueNextToLabel();\n      }\n\n      return comp;\n    }\n  }]);\n\n  return SingleTooltip;\n}(_react.Component);\n\nSingleTooltip.propTypes = {\n  origin: _propTypes2.default.array.isRequired,\n  yLabel: _propTypes2.default.string.isRequired,\n  yValue: _propTypes2.default.string.isRequired,\n  onClick: _propTypes2.default.func,\n  fontFamily: _propTypes2.default.string,\n  labelFill: _propTypes2.default.string.isRequired,\n  valueFill: _propTypes2.default.string.isRequired,\n  fontSize: _propTypes2.default.number,\n  withShape: _propTypes2.default.bool,\n  forChart: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]).isRequired,\n  options: _propTypes2.default.object.isRequired,\n  layout: _propTypes2.default.oneOf(VALID_LAYOUTS).isRequired\n};\nSingleTooltip.defaultProps = {\n  labelFill: \"#4682B4\",\n  valueFill: \"#000000\",\n  withShape: false\n};\n\nvar GroupTooltip = function (_Component2) {\n  _inherits(GroupTooltip, _Component2);\n\n  function GroupTooltip(props) {\n    _classCallCheck(this, GroupTooltip);\n\n    var _this2 = _possibleConstructorReturn(this, (GroupTooltip.__proto__ || Object.getPrototypeOf(GroupTooltip)).call(this, props));\n\n    _this2.renderSVG = _this2.renderSVG.bind(_this2);\n    return _this2;\n  }\n\n  _createClass(GroupTooltip, [{\n    key: \"getPosition\",\n    value: function getPosition(moreProps) {\n      var position = this.props.position;\n      var _moreProps$chartConfi = moreProps.chartConfig,\n          height = _moreProps$chartConfi.height,\n          width = _moreProps$chartConfi.width;\n      var dx = 20;\n      var dy = 40;\n      var textAnchor = null;\n      var xyPos = null;\n\n      if (position !== undefined) {\n        switch (position) {\n          case \"topRight\":\n            xyPos = [width - dx, null];\n            textAnchor = \"end\";\n            break;\n\n          case \"bottomLeft\":\n            xyPos = [null, height - dy];\n            break;\n\n          case \"bottomRight\":\n            xyPos = [width - dx, height - dy];\n            textAnchor = \"end\";\n            break;\n\n          default:\n            xyPos = [null, null];\n        }\n      } else {\n        xyPos = [null, null];\n      }\n\n      return {\n        xyPos: xyPos,\n        textAnchor: textAnchor\n      };\n    }\n  }, {\n    key: \"renderSVG\",\n    value: function renderSVG(moreProps) {\n      var displayValuesFor = this.props.displayValuesFor;\n      var chartId = moreProps.chartId;\n      var _props5 = this.props,\n          className = _props5.className,\n          onClick = _props5.onClick,\n          width = _props5.width,\n          verticalSize = _props5.verticalSize,\n          fontFamily = _props5.fontFamily,\n          fontSize = _props5.fontSize,\n          layout = _props5.layout;\n      var _props6 = this.props,\n          origin = _props6.origin,\n          displayFormat = _props6.displayFormat,\n          options = _props6.options;\n      var currentItem = displayValuesFor(this.props, moreProps);\n\n      var _getPosition = this.getPosition(moreProps),\n          xyPos = _getPosition.xyPos,\n          textAnchor = _getPosition.textAnchor;\n\n      var xPos = xyPos != null && xyPos[0] != null ? xyPos[0] : origin[0];\n      var yPos = xyPos != null && xyPos[1] != null ? xyPos[1] : origin[1];\n      var singleTooltip = options.map(function (each, idx) {\n        var yValue = currentItem && each.yAccessor(currentItem);\n        var yDisplayValue = yValue ? displayFormat(yValue) : \"n/a\";\n\n        var orig = function orig() {\n          if (layout === \"horizontal\" || layout === \"horizontalRows\") {\n            return [width * idx, 0];\n          }\n\n          if (layout === \"vertical\") {\n            return [0, verticalSize * idx];\n          }\n\n          if (layout === \"verticalRows\") {\n            return [0, verticalSize * 2.3 * idx];\n          }\n\n          return [0, 0];\n        };\n\n        return _react2.default.createElement(SingleTooltip, {\n          key: idx,\n          layout: layout,\n          origin: orig(),\n          yLabel: each.yLabel,\n          yValue: yDisplayValue,\n          options: each,\n          forChart: chartId,\n          onClick: onClick,\n          fontFamily: fontFamily,\n          fontSize: fontSize,\n          labelFill: each.labelFill,\n          valueFill: each.valueFill,\n          withShape: each.withShape\n        });\n      });\n      return _react2.default.createElement(\"g\", {\n        transform: \"translate(\" + xPos + \", \" + yPos + \")\",\n        className: className,\n        textAnchor: textAnchor\n      }, layout === \"horizontalInline\" ? _react2.default.createElement(_ToolTipText2.default, {\n        x: 0,\n        y: 0,\n        fontFamily: fontFamily,\n        fontSize: fontSize\n      }, singleTooltip) : singleTooltip);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _react2.default.createElement(_GenericChartComponent2.default, {\n        clip: false,\n        svgDraw: this.renderSVG,\n        drawOn: [\"mousemove\"]\n      });\n    }\n  }]);\n\n  return GroupTooltip;\n}(_react.Component);\n\nGroupTooltip.propTypes = {\n  className: _propTypes2.default.string,\n  layout: _propTypes2.default.oneOf(VALID_LAYOUTS).isRequired,\n  position: _propTypes2.default.oneOf([\"topRight\", \"bottomLeft\", \"bottomRight\"]),\n  displayFormat: _propTypes2.default.func.isRequired,\n  origin: _propTypes2.default.array.isRequired,\n  displayValuesFor: _propTypes2.default.func,\n  onClick: _propTypes2.default.func,\n  fontFamily: _propTypes2.default.string,\n  fontSize: _propTypes2.default.number,\n  width: _propTypes2.default.number,\n  // \"width\" only be used, if layout is \"horizontal\" or \"horizontalRows\".\n  verticalSize: _propTypes2.default.number,\n  // \"verticalSize\" only be used, if layout is \"vertical\", \"verticalRows\".\n  options: _propTypes2.default.arrayOf(_propTypes2.default.shape({\n    yLabel: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func]).isRequired,\n    yAccessor: _propTypes2.default.func.isRequired,\n    labelFill: _propTypes2.default.string,\n    valueFill: _propTypes2.default.string,\n    withShape: _propTypes2.default.bool // \"withShape\" is ignored, if layout is \"horizontalInline\" or \"vertical\".\n\n  }))\n};\nGroupTooltip.defaultProps = {\n  className: \"react-stockcharts-tooltip react-stockcharts-group-tooltip\",\n  layout: \"horizontal\",\n  displayFormat: (0, _d3Format.format)(\".2f\"),\n  displayValuesFor: _displayValuesFor2.default,\n  origin: [0, 0],\n  width: 60,\n  verticalSize: 13\n};\nexports.default = GroupTooltip;","map":{"version":3,"sources":["../../../src/lib/tooltip/GroupTooltip.js"],"names":["VALID_LAYOUTS","SingleTooltip","e","onClick","forChart","options","chartId","origin","yLabel","yValue","labelFill","valueFill","withShape","fontSize","fontFamily","layout","comp","isRequired","GroupTooltip","moreProps","position","height","width","dx","dy","textAnchor","xyPos","displayValuesFor","className","verticalSize","displayFormat","currentItem","xPos","yPos","singleTooltip","each","yDisplayValue","orig","yAccessor"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { format } from \"d3-format\";\nimport displayValuesFor from \"./displayValuesFor\";\nimport GenericChartComponent from \"../GenericChartComponent\";\nimport ToolTipText from \"./ToolTipText\";\nimport ToolTipTSpanLabel from \"./ToolTipTSpanLabel\";\n\nconst VALID_LAYOUTS = [\n\t\"horizontal\",\n\t\"horizontalRows\",\n\t\"horizontalInline\",\n\t\"vertical\",\n\t\"verticalRows\"\n];\n\nclass SingleTooltip extends Component {\n\n\tconstructor( props ) {\n\t\tsuper( props );\n\t\tthis.handleClick = this.handleClick.bind( this );\n\t}\n\n\thandleClick( e ) {\n\t\tconst { onClick, forChart, options } = this.props;\n\t\tonClick( { chartId: forChart, ...options }, e );\n\t}\n\n\t/**\n\t * Renders the value next to the label.\n\t */\n\trenderValueNextToLabel() {\n\t\tconst { origin, yLabel, yValue, labelFill, valueFill, withShape, fontSize, fontFamily } = this.props;\n\n\t\treturn (\n\t\t\t<g transform={`translate(${origin[0]}, ${origin[1]})`} onClick={this.handleClick}>\n\t\t\t\t{withShape ? <rect x=\"0\" y=\"-6\" width=\"6\" height=\"6\" fill={valueFill} /> : null}\n\t\t\t\t<ToolTipText x={withShape ? 8 : 0} y={0} fontFamily={fontFamily} fontSize={fontSize}>\n\t\t\t\t\t<ToolTipTSpanLabel fill={labelFill}>{yLabel}: </ToolTipTSpanLabel>\n\t\t\t\t\t<tspan fill={valueFill}>{yValue}</tspan>\n\t\t\t\t</ToolTipText>\n\t\t\t</g>\n\t\t);\n\t}\n\n\t/**\n\t * Renders the value beneath the label.\n\t */\n\trenderValueBeneathToLabel() {\n\t\tconst { origin, yLabel, yValue, labelFill, valueFill, withShape, fontSize, fontFamily } = this.props;\n\n\t\treturn (\n\t\t\t<g transform={`translate(${origin[0]}, ${origin[1]})`} onClick={this.handleClick}>\n\t\t\t\t{withShape ? <line x1={0} y1={2} x2={0} y2={28} stroke={valueFill} strokeWidth=\"4px\" /> : null}\n\t\t\t\t<ToolTipText x={5} y={11} fontFamily={fontFamily} fontSize={fontSize}>\n\t\t\t\t\t<ToolTipTSpanLabel fill={labelFill}>{yLabel}</ToolTipTSpanLabel>\n\t\t\t\t\t<tspan x=\"5\" dy=\"15\" fill={valueFill}>{yValue}</tspan>\n\t\t\t\t</ToolTipText>\n\t\t\t</g>\n\t\t);\n\t}\n\n\t/**\n\t * Renders the value next to the label.\n\t * The parent component must have a \"text\"-element.\n\t */\n\trenderInline() {\n\t\tconst { yLabel, yValue, labelFill, valueFill, fontSize, fontFamily } = this.props;\n\n\t\treturn (\n\t\t\t<tspan onClick={this.handleClick} fontFamily={fontFamily} fontSize={fontSize}>\n\t\t\t\t<ToolTipTSpanLabel fill={labelFill}>{yLabel}:&nbsp;</ToolTipTSpanLabel>\n\t\t\t\t<tspan fill={valueFill}>{yValue}&nbsp;&nbsp;</tspan>\n\t\t\t</tspan>\n\t\t);\n\t}\n\n\trender() {\n\n\t\tconst { layout } = this.props;\n\t\tlet comp = null;\n\n\t\tswitch ( layout ) {\n\t\t\tcase \"horizontal\":\n\t\t\t\tcomp = this.renderValueNextToLabel();\n\t\t\t\tbreak;\n\t\t\tcase \"horizontalRows\":\n\t\t\t\tcomp = this.renderValueBeneathToLabel();\n\t\t\t\tbreak;\n\t\t\tcase \"horizontalInline\":\n\t\t\t\tcomp = this.renderInline();\n\t\t\t\tbreak;\n\t\t\tcase \"vertical\":\n\t\t\t\tcomp = this.renderValueNextToLabel();\n\t\t\t\tbreak;\n\t\t\tcase \"verticalRows\":\n\t\t\t\tcomp = this.renderValueBeneathToLabel();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tcomp = this.renderValueNextToLabel();\n\t\t}\n\n\t\treturn comp;\n\t}\n}\n\nSingleTooltip.propTypes = {\n\torigin: PropTypes.array.isRequired,\n\tyLabel: PropTypes.string.isRequired,\n\tyValue: PropTypes.string.isRequired,\n\tonClick: PropTypes.func,\n\tfontFamily: PropTypes.string,\n\tlabelFill: PropTypes.string.isRequired,\n\tvalueFill: PropTypes.string.isRequired,\n\tfontSize: PropTypes.number,\n\twithShape: PropTypes.bool,\n\tforChart: PropTypes.oneOfType( [PropTypes.number, PropTypes.string] ).isRequired,\n\toptions: PropTypes.object.isRequired,\n\tlayout: PropTypes.oneOf(VALID_LAYOUTS).isRequired,\n};\n\nSingleTooltip.defaultProps = {\n\tlabelFill: \"#4682B4\",\n\tvalueFill: \"#000000\",\n\twithShape: false,\n};\n\nclass GroupTooltip extends Component {\n\tconstructor( props ) {\n\t\tsuper( props );\n\t\tthis.renderSVG = this.renderSVG.bind( this );\n\t}\n\n\tgetPosition(moreProps) {\n\t\tconst { position } = this.props;\n\t\tconst { height, width } = moreProps.chartConfig;\n\n\t\tconst dx = 20;\n\t\tconst dy = 40;\n\t\tlet textAnchor = null;\n\t\tlet xyPos = null;\n\n\t\tif (position !== undefined) {\n\t\t\tswitch ( position ) {\n\t\t\t\tcase \"topRight\":\n\t\t\t\t\txyPos = [width - dx, null];\n\t\t\t\t\ttextAnchor = \"end\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"bottomLeft\":\n\t\t\t\t\txyPos = [null, height - dy];\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"bottomRight\":\n\t\t\t\t\txyPos = [width - dx, height - dy];\n\t\t\t\t\ttextAnchor = \"end\";\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\txyPos = [null, null];\n\t\t\t}\n\t\t} else {\n\t\t\txyPos = [null, null];\n\t\t}\n\n\t\treturn { xyPos, textAnchor };\n\t}\n\n\n\trenderSVG( moreProps ) {\n\n\t\tconst { displayValuesFor } = this.props;\n\t\tconst { chartId } = moreProps;\n\n\t\tconst { className, onClick, width, verticalSize, fontFamily, fontSize, layout } = this.props;\n\t\tconst { origin, displayFormat, options } = this.props;\n\t\tconst currentItem = displayValuesFor( this.props, moreProps );\n\t\tconst { xyPos, textAnchor } = this.getPosition(moreProps);\n\n\t\tconst xPos = xyPos != null && xyPos[0] != null ? xyPos[0] : origin[0];\n\t\tconst yPos = xyPos != null && xyPos[1] != null ? xyPos[1] : origin[1];\n\n\t\tconst singleTooltip = options.map( ( each, idx ) => {\n\n\t\t\tconst yValue = currentItem && each.yAccessor( currentItem );\n\t\t\tconst yDisplayValue = yValue ? displayFormat( yValue ) : \"n/a\";\n\n\t\t\tconst orig = () => {\n\t\t\t\tif ( layout === \"horizontal\" || layout === \"horizontalRows\" ) {\n\t\t\t\t\treturn [width * idx, 0];\n\t\t\t\t}\n\t\t\t\tif ( layout === \"vertical\" ) {\n\t\t\t\t\treturn [0, verticalSize * idx];\n\t\t\t\t}\n\t\t\t\tif ( layout === \"verticalRows\" ) {\n\t\t\t\t\treturn [0, verticalSize * 2.3 * idx];\n\t\t\t\t}\n\t\t\t\treturn [0, 0];\n\t\t\t};\n\n\t\t\treturn <SingleTooltip\n\t\t\t\tkey={idx}\n\t\t\t\tlayout={layout}\n\t\t\t\torigin={orig()}\n\t\t\t\tyLabel={each.yLabel}\n\t\t\t\tyValue={yDisplayValue}\n\t\t\t\toptions={each}\n\t\t\t\tforChart={chartId}\n\t\t\t\tonClick={onClick}\n\t\t\t\tfontFamily={fontFamily}\n\t\t\t\tfontSize={fontSize}\n\t\t\t\tlabelFill={each.labelFill}\n\t\t\t\tvalueFill={each.valueFill}\n\t\t\t\twithShape={each.withShape}\n\t\t\t/>;\n\t\t} );\n\n\t\treturn (\n\t\t\t<g transform={`translate(${xPos}, ${yPos})`} className={className} textAnchor={textAnchor}>\n\t\t\t\t{layout === \"horizontalInline\"\n\t\t\t\t\t? <ToolTipText x={0} y={0} fontFamily={fontFamily} fontSize={fontSize}>{singleTooltip}</ToolTipText>\n\t\t\t\t\t: singleTooltip\n\t\t\t\t}\n\t\t\t</g>\n\t\t);\n\t}\n\trender() {\n\t\treturn <GenericChartComponent\n\t\t\tclip={false}\n\t\t\tsvgDraw={this.renderSVG}\n\t\t\tdrawOn={[\"mousemove\"]}\n\t\t/>;\n\t}\n}\n\n\nGroupTooltip.propTypes = {\n\tclassName: PropTypes.string,\n\tlayout: PropTypes.oneOf(VALID_LAYOUTS).isRequired,\n\tposition: PropTypes.oneOf( [\n\t\t\"topRight\",\n\t\t\"bottomLeft\",\n\t\t\"bottomRight\"] ),\n\tdisplayFormat: PropTypes.func.isRequired,\n\torigin: PropTypes.array.isRequired,\n\tdisplayValuesFor: PropTypes.func,\n\tonClick: PropTypes.func,\n\tfontFamily: PropTypes.string,\n\tfontSize: PropTypes.number,\n\twidth: PropTypes.number, // \"width\" only be used, if layout is \"horizontal\" or \"horizontalRows\".\n\tverticalSize: PropTypes.number,  // \"verticalSize\" only be used, if layout is \"vertical\", \"verticalRows\".\n\toptions: PropTypes.arrayOf( PropTypes.shape( {\n\t\tyLabel: PropTypes.oneOfType( [\n\t\t\tPropTypes.string,\n\t\t\tPropTypes.func] ).isRequired,\n\t\tyAccessor: PropTypes.func.isRequired,\n\t\tlabelFill: PropTypes.string,\n\t\tvalueFill: PropTypes.string,\n\t\twithShape: PropTypes.bool, // \"withShape\" is ignored, if layout is \"horizontalInline\" or \"vertical\".\n\t} ) ),\n};\n\nGroupTooltip.defaultProps = {\n\tclassName: \"react-stockcharts-tooltip react-stockcharts-group-tooltip\",\n\tlayout: \"horizontal\",\n\tdisplayFormat: format( \".2f\" ),\n\tdisplayValuesFor: displayValuesFor,\n\torigin: [0, 0],\n\twidth: 60,\n\tverticalSize: 13,\n};\n\nexport default GroupTooltip;\n"]},"metadata":{},"sourceType":"script"}