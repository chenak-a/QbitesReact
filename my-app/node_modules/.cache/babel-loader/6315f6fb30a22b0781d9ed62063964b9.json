{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.rotateXY = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nexports.identityStack = identityStack;\nexports.drawOnCanvasHelper = drawOnCanvasHelper;\nexports.svgHelper = svgHelper;\nexports.getBarsSVG2 = getBarsSVG2;\nexports.drawOnCanvas2 = drawOnCanvas2;\nexports.getBars = getBars;\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _d3Collection = require(\"d3-collection\");\n\nvar _d3Array = require(\"d3-array\");\n\nvar _d3Shape = require(\"d3-shape\");\n\nvar _GenericChartComponent = require(\"../GenericChartComponent\");\n\nvar _GenericChartComponent2 = _interopRequireDefault(_GenericChartComponent);\n\nvar _GenericComponent = require(\"../GenericComponent\");\n\nvar _utils = require(\"../utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar StackedBarSeries = function (_Component) {\n  _inherits(StackedBarSeries, _Component);\n\n  function StackedBarSeries(props) {\n    _classCallCheck(this, StackedBarSeries);\n\n    var _this = _possibleConstructorReturn(this, (StackedBarSeries.__proto__ || Object.getPrototypeOf(StackedBarSeries)).call(this, props));\n\n    _this.renderSVG = _this.renderSVG.bind(_this);\n    _this.drawOnCanvas = _this.drawOnCanvas.bind(_this);\n    return _this;\n  }\n\n  _createClass(StackedBarSeries, [{\n    key: \"drawOnCanvas\",\n    value: function drawOnCanvas(ctx, moreProps) {\n      var xAccessor = moreProps.xAccessor; // var { xScale, chartConfig: { yScale }, plotData } = moreProps;\n\n      drawOnCanvasHelper(ctx, this.props, moreProps, xAccessor, _d3Shape.stack);\n    }\n  }, {\n    key: \"renderSVG\",\n    value: function renderSVG(moreProps) {\n      var xAccessor = moreProps.xAccessor;\n      return _react2.default.createElement(\"g\", null, svgHelper(this.props, moreProps, xAccessor, _d3Shape.stack));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var clip = this.props.clip;\n      return _react2.default.createElement(_GenericChartComponent2.default, {\n        clip: clip,\n        svgDraw: this.renderSVG,\n        canvasDraw: this.drawOnCanvas,\n        canvasToDraw: _GenericComponent.getAxisCanvas,\n        drawOn: [\"pan\"]\n      });\n    }\n  }]);\n\n  return StackedBarSeries;\n}(_react.Component);\n\nStackedBarSeries.propTypes = {\n  baseAt: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.func]).isRequired,\n  direction: _propTypes2.default.oneOf([\"up\", \"down\"]).isRequired,\n  stroke: _propTypes2.default.bool.isRequired,\n  width: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.func]).isRequired,\n  opacity: _propTypes2.default.number.isRequired,\n  fill: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.string]).isRequired,\n  className: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.string]).isRequired,\n  clip: _propTypes2.default.bool.isRequired\n};\nStackedBarSeries.defaultProps = {\n  baseAt: function baseAt(xScale, yScale\n  /* , d*/\n  ) {\n    return (0, _utils.head)(yScale.range());\n  },\n  direction: \"up\",\n  className: \"bar\",\n  stroke: true,\n  fill: \"#4682B4\",\n  opacity: 0.5,\n  width: _utils.plotDataLengthBarWidth,\n  widthRatio: 0.8,\n  clip: true,\n  swapScales: false\n};\n\nfunction identityStack() {\n  var keys = [];\n\n  function stack(data) {\n    var response = keys.map(function (key, i) {\n      // eslint-disable-next-line prefer-const\n      var arrays = data.map(function (d) {\n        // eslint-disable-next-line prefer-const\n        var array = [0, d[key]];\n        array.data = d;\n        return array;\n      });\n      arrays.key = key;\n      arrays.index = i;\n      return arrays;\n    });\n    return response;\n  }\n\n  stack.keys = function (x) {\n    if (!arguments.length) {\n      return keys;\n    }\n\n    keys = x;\n    return stack;\n  };\n\n  return stack;\n}\n\nfunction drawOnCanvasHelper(ctx, props, moreProps, xAccessor, stackFn) {\n  var defaultPostAction = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : _utils.identity;\n  var postRotateAction = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : rotateXY;\n  var xScale = moreProps.xScale,\n      yScale = moreProps.chartConfig.yScale,\n      plotData = moreProps.plotData;\n  var bars = doStuff(props, xAccessor, plotData, xScale, yScale, stackFn, postRotateAction, defaultPostAction);\n  drawOnCanvas2(props, ctx, bars);\n}\n\nfunction convertToArray(item) {\n  return Array.isArray(item) ? item : [item];\n}\n\nfunction svgHelper(props, moreProps, xAccessor, stackFn) {\n  var defaultPostAction = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : _utils.identity;\n  var postRotateAction = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : rotateXY;\n  var xScale = moreProps.xScale,\n      yScale = moreProps.chartConfig.yScale,\n      plotData = moreProps.plotData;\n  var bars = doStuff(props, xAccessor, plotData, xScale, yScale, stackFn, postRotateAction, defaultPostAction);\n  return getBarsSVG2(props, bars);\n}\n\nfunction doStuff(props, xAccessor, plotData, xScale, yScale, stackFn, postRotateAction, defaultPostAction) {\n  var yAccessor = props.yAccessor,\n      swapScales = props.swapScales;\n  var modifiedYAccessor = swapScales ? convertToArray(props.xAccessor) : convertToArray(yAccessor);\n  var modifiedXAccessor = swapScales ? yAccessor : xAccessor;\n  var modifiedXScale = swapScales ? yScale : xScale;\n  var modifiedYScale = swapScales ? xScale : yScale;\n  var postProcessor = swapScales ? postRotateAction : defaultPostAction;\n  var bars = getBars(props, modifiedXAccessor, modifiedYAccessor, modifiedXScale, modifiedYScale, plotData, stackFn, postProcessor);\n  return bars;\n}\n\nvar rotateXY = exports.rotateXY = function rotateXY(array) {\n  return array.map(function (each) {\n    return _extends({}, each, {\n      x: each.y,\n      y: each.x,\n      height: each.width,\n      width: each.height\n    });\n  });\n};\n\nfunction getBarsSVG2(props, bars) {\n  /* eslint-disable react/prop-types */\n  var opacity = props.opacity;\n  /* eslint-enable react/prop-types */\n\n  return bars.map(function (d, idx) {\n    if (d.width <= 1) {\n      return _react2.default.createElement(\"line\", {\n        key: idx,\n        className: d.className,\n        stroke: d.fill,\n        x1: d.x,\n        y1: d.y,\n        x2: d.x,\n        y2: d.y + d.height\n      });\n    }\n\n    return _react2.default.createElement(\"rect\", {\n      key: idx,\n      className: d.className,\n      stroke: d.stroke,\n      fill: d.fill,\n      x: d.x,\n      y: d.y,\n      width: d.width,\n      fillOpacity: opacity,\n      height: d.height\n    });\n  });\n}\n\nfunction drawOnCanvas2(props, ctx, bars) {\n  var stroke = props.stroke;\n  var nest = (0, _d3Collection.nest)().key(function (d) {\n    return d.fill;\n  }).entries(bars);\n  nest.forEach(function (outer) {\n    var key = outer.key,\n        values = outer.values;\n\n    if ((0, _utils.head)(values).width > 1) {\n      ctx.strokeStyle = key;\n    }\n\n    var fillStyle = (0, _utils.head)(values).width <= 1 ? key : (0, _utils.hexToRGBA)(key, props.opacity);\n    ctx.fillStyle = fillStyle;\n    values.forEach(function (d) {\n      if (d.width <= 1) {\n        /* <line key={idx} className={d.className}\n        \t\t\tstroke={stroke}\n        \t\t\tfill={fill}\n        \t\t\tx1={d.x} y1={d.y}\n        \t\t\tx2={d.x} y2={d.y + d.height} />*/\n\n        /*\n        ctx.beginPath();\n        ctx.moveTo(d.x, d.y);\n        ctx.lineTo(d.x, d.y + d.height);\n        ctx.stroke();\n        */\n        ctx.fillRect(d.x - 0.5, d.y, 1, d.height);\n      } else {\n        /* <rect key={idx} className={d.className}\n        \t\tstroke={stroke}\n        \t\tfill={fill}\n        \t\tx={d.x}\n        \t\ty={d.y}\n        \t\twidth={d.width}\n        \t\theight={d.height} /> */\n\n        /*\n        ctx.beginPath();\n        ctx.rect(d.x, d.y, d.width, d.height);\n        ctx.fill();\n        */\n        ctx.fillRect(d.x, d.y, d.width, d.height);\n        if (stroke) ctx.strokeRect(d.x, d.y, d.width, d.height);\n      }\n    });\n  });\n}\n\nfunction getBars(props, xAccessor, yAccessor, xScale, yScale, plotData) {\n  var stack = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : identityStack;\n  var after = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : _utils.identity;\n  var baseAt = props.baseAt,\n      className = props.className,\n      fill = props.fill,\n      stroke = props.stroke,\n      _props$spaceBetweenBa = props.spaceBetweenBar,\n      spaceBetweenBar = _props$spaceBetweenBa === undefined ? 0 : _props$spaceBetweenBa;\n  var getClassName = (0, _utils.functor)(className);\n  var getFill = (0, _utils.functor)(fill);\n  var getBase = (0, _utils.functor)(baseAt);\n  var widthFunctor = (0, _utils.functor)(props.width);\n  var width = widthFunctor(props, {\n    xScale: xScale,\n    xAccessor: xAccessor,\n    plotData: plotData\n  });\n  var barWidth = Math.round(width);\n  var eachBarWidth = (barWidth - spaceBetweenBar * (yAccessor.length - 1)) / yAccessor.length;\n  var offset = barWidth === 1 ? 0 : 0.5 * width;\n  var ds = plotData.map(function (each) {\n    // eslint-disable-next-line prefer-const\n    var d = {\n      appearance: {},\n      x: xAccessor(each)\n    };\n    yAccessor.forEach(function (eachYAccessor, i) {\n      var key = \"y\" + i;\n      d[key] = eachYAccessor(each);\n      var appearance = {\n        className: getClassName(each, i),\n        stroke: stroke ? getFill(each, i) : \"none\",\n        fill: getFill(each, i)\n      };\n      d.appearance[key] = appearance;\n    });\n    return d;\n  });\n  var keys = yAccessor.map(function (_, i) {\n    return \"y\" + i;\n  }); // console.log(ds);\n\n  var data = stack().keys(keys)(ds); // console.log(data);\n\n  var newData = data.map(function (each, i) {\n    var key = each.key;\n    return each.map(function (d) {\n      // eslint-disable-next-line prefer-const\n      var array = [d[0], d[1]];\n      array.data = {\n        x: d.data.x,\n        i: i,\n        appearance: d.data.appearance[key]\n      };\n      return array;\n    });\n  }); // console.log(newData);\n  // console.log(merge(newData));\n\n  var bars = (0, _d3Array.merge)(newData) // .filter(d => isDefined(d.y))\n  .map(function (d) {\n    // let baseValue = yScale.invert(getBase(xScale, yScale, d.datum));\n    var y = yScale(d[1]);\n    /* let h = isDefined(d.y0) && d.y0 !== 0 && !isNaN(d.y0)\n    \t\t? yScale(d.y0) - y\n    \t\t: getBase(xScale, yScale, d.datum) - yScale(d.y)*/\n\n    var h = getBase(xScale, yScale, d.data) - yScale(d[1] - d[0]); // console.log(d.y, yScale.domain(), yScale.range())\n    // let h = ;\n    // if (d.y < 0) h = -h;\n    // console.log(d, y, h)\n\n    if (h < 0) {\n      y = y + h;\n      h = -h;\n    } // console.log(d.data.i, Math.round(offset - (d.data.i > 0 ? (eachBarWidth + spaceBetweenBar) * d.data.i : 0)))\n\n    /* console.log(d.series, d.datum.date, d.x,\n    \t\tgetBase(xScale, yScale, d.datum), `d.y=${d.y}, d.y0=${d.y0}, y=${y}, h=${h}`)*/\n\n\n    return _extends({}, d.data.appearance, {\n      // series: d.series,\n      // i: d.x,\n      x: Math.round(xScale(d.data.x) - width / 2),\n      y: y,\n      groupOffset: Math.round(offset - (d.data.i > 0 ? (eachBarWidth + spaceBetweenBar) * d.data.i : 0)),\n      groupWidth: Math.round(eachBarWidth),\n      offset: Math.round(offset),\n      height: h,\n      width: barWidth\n    });\n  }).filter(function (bar) {\n    return !isNaN(bar.y);\n  });\n  return after(bars);\n}\n\nexports.default = StackedBarSeries;","map":{"version":3,"mappings":"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","names":["identityStack","drawOnCanvasHelper","svgHelper","getBarsSVG2","drawOnCanvas2","getBars","StackedBarSeries","props","_classCallCheck","_this","renderSVG","bind","drawOnCanvas","ctx","moreProps","xAccessor","_react2","clip","svgDraw","canvasDraw","canvasToDraw","drawOn","propTypes","baseAt","_propTypes2","oneOfType","number","func","isRequired","direction","oneOf","stroke","bool","width","opacity","fill","string","className","defaultProps","xScale","yScale","range","widthRatio","swapScales","keys","stack","data","response","map","key","i","arrays","array","d","index","x","arguments","length","stackFn","defaultPostAction","postRotateAction","rotateXY","chartConfig","plotData","bars","doStuff","convertToArray","item","Array","isArray","yAccessor","modifiedYAccessor","modifiedXAccessor","modifiedXScale","modifiedYScale","postProcessor","each","y","height","idx","x1","y1","x2","y2","fillOpacity","nest","entries","forEach","outer","values","strokeStyle","fillStyle","fillRect","strokeRect","after","spaceBetweenBar","getClassName","getFill","getBase","widthFunctor","barWidth","Math","round","eachBarWidth","offset","ds","appearance","eachYAccessor","_","newData","h","groupOffset","groupWidth","filter","isNaN","bar"],"sources":["../../../src/lib/series/StackedBarSeries.js"],"sourcesContent":["\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { nest as d3Nest } from \"d3-collection\";\nimport { merge } from \"d3-array\";\nimport { stack as d3Stack } from \"d3-shape\";\n\nimport GenericChartComponent from \"../GenericChartComponent\";\nimport { getAxisCanvas } from \"../GenericComponent\";\n\nimport { identity, hexToRGBA, head, functor, plotDataLengthBarWidth } from \"../utils\";\n\nclass StackedBarSeries extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.renderSVG = this.renderSVG.bind(this);\n\t\tthis.drawOnCanvas = this.drawOnCanvas.bind(this);\n\t}\n\tdrawOnCanvas(ctx, moreProps) {\n\t\tconst { xAccessor } = moreProps;\n\t\t// var { xScale, chartConfig: { yScale }, plotData } = moreProps;\n\n\t\tdrawOnCanvasHelper(ctx, this.props, moreProps, xAccessor, d3Stack);\n\t}\n\trenderSVG(moreProps) {\n\t\tconst { xAccessor } = moreProps;\n\n\t\treturn <g>{svgHelper(this.props, moreProps, xAccessor, d3Stack)}</g>;\n\t}\n\trender() {\n\t\tconst { clip } = this.props;\n\n\t\treturn <GenericChartComponent\n\t\t\tclip={clip}\n\t\t\tsvgDraw={this.renderSVG}\n\t\t\tcanvasDraw={this.drawOnCanvas}\n\t\t\tcanvasToDraw={getAxisCanvas}\n\t\t\tdrawOn={[\"pan\"]}\n\t\t/>;\n\t}\n}\n\nStackedBarSeries.propTypes = {\n\tbaseAt: PropTypes.oneOfType([\n\t\tPropTypes.number,\n\t\tPropTypes.func,\n\t]).isRequired,\n\tdirection: PropTypes.oneOf([\"up\", \"down\"]).isRequired,\n\tstroke: PropTypes.bool.isRequired,\n\twidth: PropTypes.oneOfType([\n\t\tPropTypes.number,\n\t\tPropTypes.func\n\t]).isRequired,\n\topacity: PropTypes.number.isRequired,\n\tfill: PropTypes.oneOfType([\n\t\tPropTypes.func, PropTypes.string\n\t]).isRequired,\n\tclassName: PropTypes.oneOfType([\n\t\tPropTypes.func, PropTypes.string\n\t]).isRequired,\n\tclip: PropTypes.bool.isRequired,\n};\n\nStackedBarSeries.defaultProps = {\n\tbaseAt: (xScale, yScale/* , d*/) => head(yScale.range()),\n\tdirection: \"up\",\n\tclassName: \"bar\",\n\tstroke: true,\n\tfill: \"#4682B4\",\n\topacity: 0.5,\n\twidth: plotDataLengthBarWidth,\n\twidthRatio: 0.8,\n\tclip: true,\n\tswapScales: false,\n};\n\nexport function identityStack() {\n\tlet keys = [];\n\tfunction stack(data) {\n\t\tconst response = keys.map((key, i) => {\n\t\t\t// eslint-disable-next-line prefer-const\n\t\t\tlet arrays = data.map(d => {\n\t\t\t\t// eslint-disable-next-line prefer-const\n\t\t\t\tlet array = [0, d[key]];\n\t\t\t\tarray.data = d;\n\t\t\t\treturn array;\n\t\t\t});\n\t\t\tarrays.key = key;\n\t\t\tarrays.index = i;\n\t\t\treturn arrays;\n\t\t});\n\t\treturn response;\n\t}\n\tstack.keys = function(x) {\n\t\tif (!arguments.length) {\n\t\t\treturn keys;\n\t\t}\n\t\tkeys = x;\n\t\treturn stack;\n\t};\n\treturn stack;\n}\n\n\nexport function drawOnCanvasHelper(ctx, props, moreProps, xAccessor, stackFn, defaultPostAction = identity, postRotateAction = rotateXY) {\n\tconst { xScale, chartConfig: { yScale }, plotData } = moreProps;\n\n\tconst bars = doStuff(props, xAccessor, plotData, xScale, yScale, stackFn, postRotateAction, defaultPostAction);\n\n\tdrawOnCanvas2(props, ctx, bars);\n}\n\nfunction convertToArray(item) {\n\treturn Array.isArray(item) ? item : [item];\n}\n\nexport function svgHelper(props, moreProps, xAccessor, stackFn, defaultPostAction = identity, postRotateAction = rotateXY) {\n\tconst { xScale, chartConfig: { yScale }, plotData } = moreProps;\n\tconst bars = doStuff(props, xAccessor, plotData, xScale, yScale, stackFn, postRotateAction, defaultPostAction);\n\treturn getBarsSVG2(props, bars);\n}\n\nfunction doStuff(props, xAccessor, plotData, xScale, yScale, stackFn, postRotateAction, defaultPostAction) {\n\tconst { yAccessor, swapScales } = props;\n\n\tconst modifiedYAccessor = swapScales ? convertToArray(props.xAccessor) : convertToArray(yAccessor);\n\tconst modifiedXAccessor = swapScales ? yAccessor : xAccessor;\n\n\tconst modifiedXScale = swapScales ? yScale : xScale;\n\tconst modifiedYScale = swapScales ? xScale : yScale;\n\n\tconst postProcessor =  swapScales ? postRotateAction : defaultPostAction;\n\n\tconst bars = getBars(props, modifiedXAccessor, modifiedYAccessor, modifiedXScale, modifiedYScale, plotData, stackFn, postProcessor);\n\n\treturn bars;\n}\n\nexport const rotateXY = (array) => array.map(each => {\n\treturn {\n\t\t...each,\n\t\tx: each.y,\n\t\ty: each.x,\n\t\theight: each.width,\n\t\twidth: each.height\n\t};\n});\n\nexport function getBarsSVG2(props, bars) {\n\t/* eslint-disable react/prop-types */\n\tconst { opacity } = props;\n\t/* eslint-enable react/prop-types */\n\n\treturn bars.map((d, idx) => {\n\t\tif (d.width <= 1) {\n\t\t\treturn <line key={idx} className={d.className}\n\t\t\t\tstroke={d.fill}\n\t\t\t\tx1={d.x} y1={d.y}\n\t\t\t\tx2={d.x} y2={d.y + d.height} />;\n\t\t}\n\t\treturn <rect key={idx} className={d.className}\n\t\t\tstroke={d.stroke}\n\t\t\tfill={d.fill}\n\t\t\tx={d.x}\n\t\t\ty={d.y}\n\t\t\twidth={d.width}\n\t\t\tfillOpacity={opacity}\n\t\t\theight={d.height} />;\n\t});\n}\n\nexport function drawOnCanvas2(props, ctx, bars) {\n\tconst { stroke } = props;\n\n\tconst nest = d3Nest()\n\t\t.key(d => d.fill)\n\t\t.entries(bars);\n\n\tnest.forEach(outer => {\n\t\tconst { key, values } = outer;\n\t\tif (head(values).width > 1) {\n\t\t\tctx.strokeStyle = key;\n\t\t}\n\t\tconst fillStyle = head(values).width <= 1\n\t\t\t? key\n\t\t\t: hexToRGBA(key, props.opacity);\n\t\tctx.fillStyle = fillStyle;\n\n\t\tvalues.forEach(d => {\n\t\t\tif (d.width <= 1) {\n\t\t\t\t/* <line key={idx} className={d.className}\n\t\t\t\t\t\t\tstroke={stroke}\n\t\t\t\t\t\t\tfill={fill}\n\t\t\t\t\t\t\tx1={d.x} y1={d.y}\n\t\t\t\t\t\t\tx2={d.x} y2={d.y + d.height} />*/\n\t\t\t\t/*\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(d.x, d.y);\n\t\t\t\tctx.lineTo(d.x, d.y + d.height);\n\t\t\t\tctx.stroke();\n\t\t\t\t*/\n\t\t\t\tctx.fillRect(d.x - 0.5, d.y, 1, d.height);\n\t\t\t} else {\n\t\t\t\t/* <rect key={idx} className={d.className}\n\t\t\t\t\t\tstroke={stroke}\n\t\t\t\t\t\tfill={fill}\n\t\t\t\t\t\tx={d.x}\n\t\t\t\t\t\ty={d.y}\n\t\t\t\t\t\twidth={d.width}\n\t\t\t\t\t\theight={d.height} /> */\n\t\t\t\t/*\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.rect(d.x, d.y, d.width, d.height);\n\t\t\t\tctx.fill();\n\t\t\t\t*/\n\t\t\t\tctx.fillRect(d.x, d.y, d.width, d.height);\n\t\t\t\tif (stroke) ctx.strokeRect(d.x, d.y, d.width, d.height);\n\t\t\t}\n\n\t\t});\n\t});\n}\n\nexport function getBars(props, xAccessor, yAccessor, xScale, yScale, plotData, stack = identityStack, after = identity) {\n\tconst { baseAt, className, fill, stroke, spaceBetweenBar = 0 } = props;\n\n\tconst getClassName = functor(className);\n\tconst getFill = functor(fill);\n\tconst getBase = functor(baseAt);\n\n\tconst widthFunctor = functor(props.width);\n\tconst width = widthFunctor(props, {\n\t\txScale,\n\t\txAccessor,\n\t\tplotData\n\t});\n\n\tconst barWidth = Math.round(width);\n\n\tconst eachBarWidth = (barWidth - spaceBetweenBar * (yAccessor.length - 1)) / yAccessor.length;\n\n\tconst offset = (barWidth === 1 ? 0 : 0.5 * width);\n\n\tconst ds = plotData\n\t\t.map(each => {\n\t\t\t// eslint-disable-next-line prefer-const\n\t\t\tlet d = {\n\t\t\t\tappearance: {\n\t\t\t\t},\n\t\t\t\tx: xAccessor(each),\n\t\t\t};\n\t\t\tyAccessor.forEach((eachYAccessor, i) => {\n\t\t\t\tconst key = `y${i}`;\n\t\t\t\td[key] = eachYAccessor(each);\n\t\t\t\tconst appearance = {\n\t\t\t\t\tclassName: getClassName(each, i),\n\t\t\t\t\tstroke: stroke ? getFill(each, i) : \"none\",\n\t\t\t\t\tfill: getFill(each, i),\n\t\t\t\t};\n\t\t\t\td.appearance[key] = appearance;\n\t\t\t});\n\t\t\treturn d;\n\t\t});\n\n\tconst keys = yAccessor.map((_, i) => `y${i}`);\n\n\t// console.log(ds);\n\n\tconst data = stack().keys(keys)(ds);\n\n\t// console.log(data);\n\n\tconst newData = data.map((each, i) => {\n\t\tconst key = each.key;\n\t\treturn each.map((d) => {\n\t\t\t// eslint-disable-next-line prefer-const\n\t\t\tlet array = [d[0], d[1]];\n\t\t\tarray.data = {\n\t\t\t\tx: d.data.x,\n\t\t\t\ti,\n\t\t\t\tappearance: d.data.appearance[key]\n\t\t\t};\n\t\t\treturn array;\n\t\t});\n\t});\n\t// console.log(newData);\n\t// console.log(merge(newData));\n\n\tconst bars = merge(newData)\n\t\t// .filter(d => isDefined(d.y))\n\t\t.map(d => {\n\t\t\t// let baseValue = yScale.invert(getBase(xScale, yScale, d.datum));\n\t\t\tlet y = yScale(d[1]);\n\t\t\t/* let h = isDefined(d.y0) && d.y0 !== 0 && !isNaN(d.y0)\n\t\t\t\t\t? yScale(d.y0) - y\n\t\t\t\t\t: getBase(xScale, yScale, d.datum) - yScale(d.y)*/\n\t\t\tlet h = getBase(xScale, yScale, d.data) - yScale(d[1] - d[0]);\n\t\t\t// console.log(d.y, yScale.domain(), yScale.range())\n\t\t\t// let h = ;\n\t\t\t// if (d.y < 0) h = -h;\n\t\t\t// console.log(d, y, h)\n\t\t\tif (h < 0) {\n\t\t\t\ty = y + h;\n\t\t\t\th = -h;\n\t\t\t}\n\t\t\t// console.log(d.data.i, Math.round(offset - (d.data.i > 0 ? (eachBarWidth + spaceBetweenBar) * d.data.i : 0)))\n\t\t\t/* console.log(d.series, d.datum.date, d.x,\n\t\t\t\t\tgetBase(xScale, yScale, d.datum), `d.y=${d.y}, d.y0=${d.y0}, y=${y}, h=${h}`)*/\n\t\t\treturn {\n\t\t\t\t...d.data.appearance,\n\t\t\t\t// series: d.series,\n\t\t\t\t// i: d.x,\n\t\t\t\tx: Math.round(xScale(d.data.x) - width / 2),\n\t\t\t\ty: y,\n\t\t\t\tgroupOffset: Math.round(offset - (d.data.i > 0 ? (eachBarWidth + spaceBetweenBar) * d.data.i : 0)),\n\t\t\t\tgroupWidth: Math.round(eachBarWidth),\n\t\t\t\toffset: Math.round(offset),\n\t\t\t\theight: h,\n\t\t\t\twidth: barWidth,\n\t\t\t};\n\t\t})\n\t\t.filter(bar => !isNaN(bar.y));\n\n\treturn after(bars);\n}\n\nexport default StackedBarSeries;\n"]},"metadata":{},"sourceType":"script"}