{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nexports.getChartOrigin = getChartOrigin;\nexports.getDimensions = getDimensions;\nexports.getNewChartConfig = getNewChartConfig;\nexports.getCurrentCharts = getCurrentCharts;\nexports.getChartConfigWithUpdatedYScales = getChartConfigWithUpdatedYScales;\nexports.getCurrentItem = getCurrentItem;\nexports.getXValue = getXValue;\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _d3Array = require(\"d3-array\");\n\nvar _d3Collection = require(\"d3-collection\");\n\nvar _lodash = require(\"lodash.flattendeep\");\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _Chart = require(\"../Chart\");\n\nvar _Chart2 = _interopRequireDefault(_Chart);\n\nvar _index = require(\"./index\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction getChartOrigin(origin, contextWidth, contextHeight) {\n  var originCoordinates = typeof origin === \"function\" ? origin(contextWidth, contextHeight) : origin;\n  return originCoordinates;\n}\n\nfunction getDimensions(_ref, chartProps) {\n  var width = _ref.width,\n      height = _ref.height;\n  var chartHeight = chartProps.height || height;\n  return {\n    availableHeight: height,\n    width: width,\n    height: chartHeight\n  };\n}\n\nfunction values(func) {\n  return function (d) {\n    var obj = func(d);\n\n    if ((0, _index.isObject)(obj)) {\n      return (0, _index.mapObject)(obj);\n    }\n\n    return obj;\n  };\n}\n\nfunction isArraySize2AndNumber(yExtentsProp) {\n  if (Array.isArray(yExtentsProp) && yExtentsProp.length === 2) {\n    var _yExtentsProp = _slicedToArray(yExtentsProp, 2),\n        a = _yExtentsProp[0],\n        b = _yExtentsProp[1];\n\n    return typeof a == \"number\" && typeof b == \"number\";\n  }\n\n  return false;\n}\n\nfunction getNewChartConfig(innerDimension, children) {\n  var existingChartConfig = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  return _react2.default.Children.map(children, function (each) {\n    if (each && each.type.toString() === _Chart2.default.toString()) {\n      var chartProps = _extends({}, _Chart2.default.defaultProps, each.props);\n\n      var id = chartProps.id,\n          origin = chartProps.origin,\n          padding = chartProps.padding,\n          yExtentsProp = chartProps.yExtents,\n          yScaleProp = chartProps.yScale,\n          flipYScale = chartProps.flipYScale,\n          yExtentsCalculator = chartProps.yExtentsCalculator;\n      var yScale = yScaleProp.copy();\n\n      var _getDimensions = getDimensions(innerDimension, chartProps),\n          width = _getDimensions.width,\n          height = _getDimensions.height,\n          availableHeight = _getDimensions.availableHeight;\n\n      var yPan = chartProps.yPan;\n      var yPanEnabled = chartProps.yPanEnabled; // var { yMousePointerRectWidth: rectWidth, yMousePointerRectHeight: rectHeight, yMousePointerArrowWidth: arrowWidth } = each.props;\n      // var mouseCoordinates = { at, yDisplayFormat, rectHeight, rectWidth, arrowWidth };\n\n      var yExtents = (0, _index.isDefined)(yExtentsProp) ? (Array.isArray(yExtentsProp) ? yExtentsProp : [yExtentsProp]).map(_index.functor) : undefined;\n      var prevChartConfig = (0, _index.find)(existingChartConfig, function (d) {\n        return d.id === id;\n      });\n\n      if (isArraySize2AndNumber(yExtentsProp)) {\n        if ((0, _index.isDefined)(prevChartConfig) && prevChartConfig.yPan && prevChartConfig.yPanEnabled && yPan && yPanEnabled && (0, _index.shallowEqual)(prevChartConfig.originalYExtentsProp, yExtentsProp)) {\n          // console.log(prevChartConfig.originalYExtentsProp, yExtentsProp)\n          // console.log(prevChartConfig.yScale.domain())\n          yScale.domain(prevChartConfig.yScale.domain());\n        } else {\n          var _yExtentsProp2 = _slicedToArray(yExtentsProp, 2),\n              a = _yExtentsProp2[0],\n              b = _yExtentsProp2[1];\n\n          yScale.domain([a, b]);\n        }\n      } else if ((0, _index.isDefined)(prevChartConfig) && prevChartConfig.yPanEnabled) {\n        if (isArraySize2AndNumber(prevChartConfig.originalYExtentsProp)) {// do nothing\n        } else {\n          yScale.domain(prevChartConfig.yScale.domain());\n          yPanEnabled = true;\n        }\n      }\n\n      return {\n        id: id,\n        origin: (0, _index.functor)(origin)(width, availableHeight),\n        padding: padding,\n        originalYExtentsProp: yExtentsProp,\n        yExtents: yExtents,\n        yExtentsCalculator: yExtentsCalculator,\n        flipYScale: flipYScale,\n        // yScale: setRange(yScale.copy(), height, padding, flipYScale),\n        yScale: yScale,\n        yPan: yPan,\n        yPanEnabled: yPanEnabled,\n        // mouseCoordinates,\n        width: width,\n        height: height\n      };\n    }\n\n    return undefined;\n  }).filter(function (each) {\n    return (0, _index.isDefined)(each);\n  });\n}\n\nfunction getCurrentCharts(chartConfig, mouseXY) {\n  var currentCharts = chartConfig.filter(function (eachConfig) {\n    var top = eachConfig.origin[1];\n    var bottom = top + eachConfig.height;\n    return mouseXY[1] > top && mouseXY[1] < bottom;\n  }).map(function (config) {\n    return config.id;\n  });\n  return currentCharts;\n}\n\nfunction setRange(scale, height, padding, flipYScale) {\n  if (scale.rangeRoundPoints || (0, _index.isNotDefined)(scale.invert)) {\n    if (isNaN(padding)) throw new Error(\"padding has to be a number for ordinal scale\");\n    if (scale.rangeRoundPoints) scale.rangeRoundPoints(flipYScale ? [0, height] : [height, 0], padding);\n    if (scale.rangeRound) scale.range(flipYScale ? [0, height] : [height, 0]).padding(padding);\n  } else {\n    var _ref2 = isNaN(padding) ? padding : {\n      top: padding,\n      bottom: padding\n    },\n        top = _ref2.top,\n        bottom = _ref2.bottom;\n\n    scale.range(flipYScale ? [top, height - bottom] : [height - bottom, top]);\n  }\n\n  return scale;\n}\n\nfunction yDomainFromYExtents(yExtents, yScale, plotData) {\n  var yValues = yExtents.map(function (eachExtent) {\n    return plotData.map(values(eachExtent));\n  });\n  var allYValues = (0, _lodash2.default)(yValues); // console.log(allYValues)\n\n  var realYDomain = yScale.invert ? (0, _d3Array.extent)(allYValues) : (0, _d3Collection.set)(allYValues).values();\n  return realYDomain;\n}\n\nfunction getChartConfigWithUpdatedYScales(chartConfig, _ref3, xDomain, dy, chartsToPan) {\n  var plotData = _ref3.plotData,\n      xAccessor = _ref3.xAccessor,\n      displayXAccessor = _ref3.displayXAccessor,\n      fullData = _ref3.fullData;\n  var yDomains = chartConfig.map(function (_ref4) {\n    var yExtentsCalculator = _ref4.yExtentsCalculator,\n        yExtents = _ref4.yExtents,\n        yScale = _ref4.yScale;\n    var realYDomain = (0, _index.isDefined)(yExtentsCalculator) ? yExtentsCalculator({\n      plotData: plotData,\n      xDomain: xDomain,\n      xAccessor: xAccessor,\n      displayXAccessor: displayXAccessor,\n      fullData: fullData\n    }) : yDomainFromYExtents(yExtents, yScale, plotData); // console.log(\"yScale.domain() ->\", yScale.domain())\n\n    var yDomainDY = (0, _index.isDefined)(dy) ? yScale.range().map(function (each) {\n      return each - dy;\n    }).map(yScale.invert) : yScale.domain();\n    return {\n      realYDomain: realYDomain,\n      yDomainDY: yDomainDY,\n      prevYDomain: yScale.domain()\n    };\n  });\n  var combine = (0, _index.zipper)().combine(function (config, _ref5) {\n    var realYDomain = _ref5.realYDomain,\n        yDomainDY = _ref5.yDomainDY,\n        prevYDomain = _ref5.prevYDomain;\n    var id = config.id,\n        padding = config.padding,\n        height = config.height,\n        yScale = config.yScale,\n        yPan = config.yPan,\n        flipYScale = config.flipYScale,\n        _config$yPanEnabled = config.yPanEnabled,\n        yPanEnabled = _config$yPanEnabled === undefined ? false : _config$yPanEnabled;\n    var another = (0, _index.isDefined)(chartsToPan) ? chartsToPan.indexOf(id) > -1 : true;\n    var domain = yPan && yPanEnabled ? another ? yDomainDY : prevYDomain : realYDomain; // console.log(id, yPan, yPanEnabled, another);\n    // console.log(domain, realYDomain, prevYDomain);\n\n    var newYScale = setRange(yScale.copy().domain(domain), height, padding, flipYScale);\n    return _extends({}, config, {\n      yScale: newYScale,\n      realYDomain: realYDomain\n    }); // return { ...config, yScale: yScale.copy().domain(domain).range([height - padding, padding]) };\n  });\n  var updatedChartConfig = combine(chartConfig, yDomains); // console.error(yDomains, dy, chartsToPan, updatedChartConfig.map(d => d.yScale.domain()));\n  // console.log(updatedChartConfig.map(d => ({ id: d.id, domain: d.yScale.domain() })))\n\n  return updatedChartConfig;\n}\n\nfunction getCurrentItem(xScale, xAccessor, mouseXY, plotData) {\n  var xValue = void 0,\n      item = void 0;\n\n  if (xScale.invert) {\n    xValue = xScale.invert(mouseXY[0]);\n    item = (0, _index.getClosestItem)(plotData, xValue, xAccessor);\n  } else {\n    var d = xScale.range().map(function (d, idx) {\n      return {\n        x: Math.abs(d - mouseXY[0]),\n        idx: idx\n      };\n    }).reduce(function (a, b) {\n      return a.x < b.x ? a : b;\n    });\n    item = (0, _index.isDefined)(d) ? plotData[d.idx] : plotData[0]; // console.log(d, item);\n  }\n\n  return item;\n}\n\nfunction getXValue(xScale, xAccessor, mouseXY, plotData) {\n  var xValue = void 0,\n      item = void 0;\n\n  if (xScale.invert) {\n    xValue = xScale.invert(mouseXY[0]);\n\n    if (xValue > xAccessor((0, _index.last)(plotData)) && xScale.value) {\n      return Math.round(xValue);\n    } else {\n      item = (0, _index.getClosestItem)(plotData, xValue, xAccessor);\n    }\n  } else {\n    var d = xScale.range().map(function (d, idx) {\n      return {\n        x: Math.abs(d - mouseXY[0]),\n        idx: idx\n      };\n    }).reduce(function (a, b) {\n      return a.x < b.x ? a : b;\n    });\n    item = (0, _index.isDefined)(d) ? plotData[d.idx] : plotData[0]; // console.log(d, item);\n  }\n\n  return xAccessor(item);\n}","map":{"version":3,"sources":["../../../src/lib/utils/ChartDataUtil.js"],"names":["getChartOrigin","originCoordinates","origin","getDimensions","width","height","chartHeight","chartProps","availableHeight","obj","func","Array","yExtentsProp","a","b","getNewChartConfig","existingChartConfig","each","id","padding","yScaleProp","flipYScale","yExtentsCalculator","yScale","yPan","yPanEnabled","yExtents","prevChartConfig","d","isArraySize2AndNumber","originalYExtentsProp","getCurrentCharts","currentCharts","top","eachConfig","bottom","mouseXY","config","scale","isNaN","yValues","plotData","values","allYValues","realYDomain","getChartConfigWithUpdatedYScales","xAccessor","displayXAccessor","fullData","yDomains","xDomain","yDomainFromYExtents","yDomainDY","prevYDomain","combine","another","chartsToPan","domain","newYScale","setRange","updatedChartConfig","getCurrentItem","xValue","item","xScale","x","Math","idx","getXValue"],"mappings":"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","sourcesContent":["\n\nimport React from \"react\";\nimport { extent } from \"d3-array\";\nimport { set } from \"d3-collection\";\nimport flattenDeep from \"lodash.flattendeep\";\n\nimport Chart from \"../Chart\";\n\nimport {\n\tlast,\n\tisObject,\n\tgetClosestItem,\n\tzipper,\n\tisDefined,\n\tisNotDefined,\n\tfunctor,\n\tmapObject,\n\tfind,\n\tshallowEqual\n} from \"./index\";\n\nexport function getChartOrigin(origin, contextWidth, contextHeight) {\n\tconst originCoordinates = typeof origin === \"function\"\n\t\t? origin(contextWidth, contextHeight)\n\t\t: origin;\n\treturn originCoordinates;\n}\n\nexport function getDimensions({ width, height }, chartProps) {\n\n\tconst chartHeight = (chartProps.height || height);\n\n\treturn {\n\t\tavailableHeight: height,\n\t\twidth,\n\t\theight: chartHeight\n\t};\n}\n\nfunction values(func) {\n\treturn (d) => {\n\t\tconst obj = func(d);\n\t\tif (isObject(obj)) {\n\t\t\treturn mapObject(obj);\n\t\t}\n\t\treturn obj;\n\t};\n}\n\nfunction isArraySize2AndNumber(yExtentsProp) {\n\tif (Array.isArray(yExtentsProp) && yExtentsProp.length === 2) {\n\t\tconst [a, b] = yExtentsProp;\n\t\treturn (typeof a == \"number\" && typeof b == \"number\");\n\t}\n\treturn false;\n}\n\nexport function getNewChartConfig(innerDimension, children, existingChartConfig = []) {\n\treturn React.Children.map(children, (each) => {\n\t\tif (each && each.type.toString() === Chart.toString()) {\n\t\t\tconst chartProps = {\n\t\t\t\t...Chart.defaultProps,\n\t\t\t\t...each.props\n\t\t\t};\n\t\t\tconst {\n\t\t\t\tid,\n\t\t\t\torigin,\n\t\t\t\tpadding,\n\t\t\t\tyExtents: yExtentsProp,\n\t\t\t\tyScale: yScaleProp,\n\t\t\t\tflipYScale,\n\t\t\t\tyExtentsCalculator\n\t\t\t} = chartProps;\n\n\t\t\tconst yScale = yScaleProp.copy();\n\t\t\tconst {\n\t\t\t\twidth, height, availableHeight\n\t\t\t} = getDimensions(innerDimension, chartProps);\n\n\t\t\tconst { yPan } = chartProps;\n\t\t\tlet { yPanEnabled } = chartProps;\n\t\t\t// var { yMousePointerRectWidth: rectWidth, yMousePointerRectHeight: rectHeight, yMousePointerArrowWidth: arrowWidth } = each.props;\n\t\t\t// var mouseCoordinates = { at, yDisplayFormat, rectHeight, rectWidth, arrowWidth };\n\t\t\tconst yExtents = isDefined(yExtentsProp)\n\t\t\t\t? (Array.isArray(yExtentsProp) ? yExtentsProp : [yExtentsProp]).map(functor)\n\t\t\t\t: undefined;\n\n\t\t\tconst prevChartConfig = find(existingChartConfig, d => d.id === id);\n\n\t\t\tif (isArraySize2AndNumber(yExtentsProp)) {\n\t\t\t\tif (\n\t\t\t\t\tisDefined(prevChartConfig)\n\t\t\t\t\t&& prevChartConfig.yPan\n\t\t\t\t\t&& prevChartConfig.yPanEnabled\n\t\t\t\t\t&& yPan\n\t\t\t\t\t&& yPanEnabled\n\t\t\t\t\t&& shallowEqual(prevChartConfig.originalYExtentsProp, yExtentsProp)\n\t\t\t\t) {\n\t\t\t\t\t// console.log(prevChartConfig.originalYExtentsProp, yExtentsProp)\n\t\t\t\t\t// console.log(prevChartConfig.yScale.domain())\n\t\t\t\t\tyScale.domain(prevChartConfig.yScale.domain());\n\t\t\t\t} else {\n\t\t\t\t\tconst [a, b] = yExtentsProp;\n\t\t\t\t\tyScale.domain([a, b]);\n\t\t\t\t}\n\t\t\t} else if (isDefined(prevChartConfig) && prevChartConfig.yPanEnabled) {\n\t\t\t\tif (isArraySize2AndNumber(prevChartConfig.originalYExtentsProp)) {\n\t\t\t\t\t// do nothing\n\t\t\t\t} else {\n\t\t\t\t\tyScale.domain(prevChartConfig.yScale.domain());\n\t\t\t\t\tyPanEnabled = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tid,\n\t\t\t\torigin: functor(origin)(width, availableHeight),\n\t\t\t\tpadding,\n\t\t\t\toriginalYExtentsProp: yExtentsProp,\n\t\t\t\tyExtents,\n\t\t\t\tyExtentsCalculator,\n\t\t\t\tflipYScale,\n\t\t\t\t// yScale: setRange(yScale.copy(), height, padding, flipYScale),\n\t\t\t\tyScale: yScale,\n\t\t\t\tyPan,\n\t\t\t\tyPanEnabled,\n\t\t\t\t// mouseCoordinates,\n\t\t\t\twidth,\n\t\t\t\theight\n\t\t\t};\n\t\t}\n\t\treturn undefined;\n\t}).filter(each => isDefined(each));\n}\nexport function getCurrentCharts(chartConfig, mouseXY) {\n\tconst currentCharts = chartConfig.filter(eachConfig => {\n\t\tconst top = eachConfig.origin[1];\n\t\tconst bottom = top + eachConfig.height;\n\t\treturn (mouseXY[1] > top && mouseXY[1] < bottom);\n\t}).map(config => config.id);\n\n\treturn currentCharts;\n}\n\nfunction setRange(scale, height, padding, flipYScale) {\n\tif (scale.rangeRoundPoints || isNotDefined(scale.invert)) {\n\t\tif (isNaN(padding)) throw new Error(\"padding has to be a number for ordinal scale\");\n\t\tif (scale.rangeRoundPoints) scale.rangeRoundPoints(flipYScale ? [0, height] : [height, 0], padding);\n\t\tif (scale.rangeRound) scale.range(flipYScale ? [0, height] : [height, 0]).padding(padding);\n\t} else {\n\t\tconst { top, bottom } = isNaN(padding)\n\t\t\t? padding\n\t\t\t: { top: padding, bottom: padding };\n\n\t\tscale.range(flipYScale ? [top, height - bottom] : [height - bottom, top]);\n\t}\n\treturn scale;\n}\n\nfunction yDomainFromYExtents(yExtents, yScale, plotData) {\n\tconst yValues = yExtents.map(eachExtent =>\n\t\tplotData.map(values(eachExtent)));\n\n\tconst allYValues = flattenDeep(yValues);\n\t// console.log(allYValues)\n\tconst realYDomain = (yScale.invert)\n\t\t? extent(allYValues)\n\t\t: set(allYValues).values();\n\n\treturn realYDomain;\n}\n\n\nexport function getChartConfigWithUpdatedYScales(\n\tchartConfig,\n\t{ plotData, xAccessor, displayXAccessor, fullData },\n\txDomain,\n\tdy,\n\tchartsToPan\n) {\n\tconst yDomains = chartConfig\n\t\t.map(({ yExtentsCalculator, yExtents, yScale }) => {\n\n\t\t\tconst realYDomain = isDefined(yExtentsCalculator)\n\t\t\t\t? yExtentsCalculator({ plotData, xDomain, xAccessor, displayXAccessor, fullData })\n\t\t\t\t: yDomainFromYExtents(yExtents, yScale, plotData);\n\n\t\t\t// console.log(\"yScale.domain() ->\", yScale.domain())\n\n\t\t\tconst yDomainDY = isDefined(dy)\n\t\t\t\t? yScale.range().map(each => each - dy).map(yScale.invert)\n\t\t\t\t: yScale.domain();\n\t\t\treturn {\n\t\t\t\trealYDomain,\n\t\t\t\tyDomainDY,\n\t\t\t\tprevYDomain: yScale.domain(),\n\t\t\t};\n\t\t});\n\n\tconst combine = zipper()\n\t\t.combine((config, { realYDomain, yDomainDY, prevYDomain }) => {\n\t\t\tconst { id, padding, height, yScale, yPan, flipYScale, yPanEnabled = false } = config;\n\n\t\t\tconst another = isDefined(chartsToPan)\n\t\t\t\t? chartsToPan.indexOf(id) > -1\n\t\t\t\t: true;\n\t\t\tconst domain = yPan && yPanEnabled\n\t\t\t\t? another ? yDomainDY : prevYDomain\n\t\t\t\t: realYDomain;\n\n\t\t\t// console.log(id, yPan, yPanEnabled, another);\n\t\t\t// console.log(domain, realYDomain, prevYDomain);\n\t\t\tconst newYScale = setRange(\n\t\t\t\tyScale.copy().domain(domain), height, padding, flipYScale\n\t\t\t);\n\t\t\treturn {\n\t\t\t\t...config,\n\t\t\t\tyScale: newYScale,\n\t\t\t\trealYDomain: realYDomain,\n\t\t\t};\n\t\t\t// return { ...config, yScale: yScale.copy().domain(domain).range([height - padding, padding]) };\n\t\t});\n\n\tconst updatedChartConfig = combine(chartConfig, yDomains);\n\t// console.error(yDomains, dy, chartsToPan, updatedChartConfig.map(d => d.yScale.domain()));\n\t// console.log(updatedChartConfig.map(d => ({ id: d.id, domain: d.yScale.domain() })))\n\n\treturn updatedChartConfig;\n}\n\nexport function getCurrentItem(xScale, xAccessor, mouseXY, plotData) {\n\tlet xValue, item;\n\tif (xScale.invert) {\n\t\txValue = xScale.invert(mouseXY[0]);\n\t\titem = getClosestItem(plotData, xValue, xAccessor);\n\t} else {\n\t\tconst d = xScale.range().map((d, idx) => ({ x: Math.abs(d - mouseXY[0]), idx })).reduce((a, b) => a.x < b.x ? a : b);\n\t\titem = isDefined(d) ? plotData[d.idx] : plotData[0];\n\t\t// console.log(d, item);\n\t}\n\treturn item;\n}\n\nexport function getXValue(xScale, xAccessor, mouseXY, plotData) {\n\n\tlet xValue, item;\n\tif (xScale.invert) {\n\t\txValue = xScale.invert(mouseXY[0]);\n\t\tif (xValue > xAccessor(last(plotData)) && xScale.value) {\n\t\t\treturn Math.round(xValue);\n\t\t} else {\n\t\t\titem = getClosestItem(plotData, xValue, xAccessor);\n\t\t}\n\t} else {\n\t\tconst d = xScale.range().map((d, idx) => ({ x: Math.abs(d - mouseXY[0]), idx })).reduce((a, b) => a.x < b.x ? a : b);\n\t\titem = isDefined(d) ? plotData[d.idx] : plotData[0];\n\t\t// console.log(d, item);\n\t}\n\treturn xAccessor(item);\n}\n"]},"metadata":{},"sourceType":"script"}