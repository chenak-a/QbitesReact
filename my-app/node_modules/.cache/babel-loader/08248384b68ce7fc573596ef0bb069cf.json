{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _d3Format = require(\"d3-format\");\n\nvar _displayValuesFor = require(\"./displayValuesFor\");\n\nvar _displayValuesFor2 = _interopRequireDefault(_displayValuesFor);\n\nvar _GenericChartComponent = require(\"../GenericChartComponent\");\n\nvar _GenericChartComponent2 = _interopRequireDefault(_GenericChartComponent);\n\nvar _ToolTipText = require(\"./ToolTipText\");\n\nvar _ToolTipText2 = _interopRequireDefault(_ToolTipText);\n\nvar _ToolTipTSpanLabel = require(\"./ToolTipTSpanLabel\");\n\nvar _ToolTipTSpanLabel2 = _interopRequireDefault(_ToolTipTSpanLabel);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar VALID_LAYOUTS = [\"horizontal\", \"horizontalRows\", \"horizontalInline\", \"vertical\", \"verticalRows\"];\n\nvar SingleTooltip = function (_Component) {\n  _inherits(SingleTooltip, _Component);\n\n  function SingleTooltip(props) {\n    _classCallCheck(this, SingleTooltip);\n\n    var _this = _possibleConstructorReturn(this, (SingleTooltip.__proto__ || Object.getPrototypeOf(SingleTooltip)).call(this, props));\n\n    _this.handleClick = _this.handleClick.bind(_this);\n    return _this;\n  }\n\n  _createClass(SingleTooltip, [{\n    key: \"handleClick\",\n    value: function handleClick(e) {\n      var _props = this.props,\n          onClick = _props.onClick,\n          forChart = _props.forChart,\n          options = _props.options;\n      onClick(_extends({\n        chartId: forChart\n      }, options), e);\n    }\n    /**\n     * Renders the value next to the label.\n     */\n\n  }, {\n    key: \"renderValueNextToLabel\",\n    value: function renderValueNextToLabel() {\n      var _props2 = this.props,\n          origin = _props2.origin,\n          yLabel = _props2.yLabel,\n          yValue = _props2.yValue,\n          labelFill = _props2.labelFill,\n          valueFill = _props2.valueFill,\n          withShape = _props2.withShape,\n          fontSize = _props2.fontSize,\n          fontFamily = _props2.fontFamily;\n      return _react2.default.createElement(\"g\", {\n        transform: \"translate(\" + origin[0] + \", \" + origin[1] + \")\",\n        onClick: this.handleClick\n      }, withShape ? _react2.default.createElement(\"rect\", {\n        x: \"0\",\n        y: \"-6\",\n        width: \"6\",\n        height: \"6\",\n        fill: valueFill\n      }) : null, _react2.default.createElement(_ToolTipText2.default, {\n        x: withShape ? 8 : 0,\n        y: 0,\n        fontFamily: fontFamily,\n        fontSize: fontSize\n      }, _react2.default.createElement(_ToolTipTSpanLabel2.default, {\n        fill: labelFill\n      }, yLabel, \": \"), _react2.default.createElement(\"tspan\", {\n        fill: valueFill\n      }, yValue)));\n    }\n    /**\n     * Renders the value beneath the label.\n     */\n\n  }, {\n    key: \"renderValueBeneathToLabel\",\n    value: function renderValueBeneathToLabel() {\n      var _props3 = this.props,\n          origin = _props3.origin,\n          yLabel = _props3.yLabel,\n          yValue = _props3.yValue,\n          labelFill = _props3.labelFill,\n          valueFill = _props3.valueFill,\n          withShape = _props3.withShape,\n          fontSize = _props3.fontSize,\n          fontFamily = _props3.fontFamily;\n      return _react2.default.createElement(\"g\", {\n        transform: \"translate(\" + origin[0] + \", \" + origin[1] + \")\",\n        onClick: this.handleClick\n      }, withShape ? _react2.default.createElement(\"line\", {\n        x1: 0,\n        y1: 2,\n        x2: 0,\n        y2: 28,\n        stroke: valueFill,\n        strokeWidth: \"4px\"\n      }) : null, _react2.default.createElement(_ToolTipText2.default, {\n        x: 5,\n        y: 11,\n        fontFamily: fontFamily,\n        fontSize: fontSize\n      }, _react2.default.createElement(_ToolTipTSpanLabel2.default, {\n        fill: labelFill\n      }, yLabel), _react2.default.createElement(\"tspan\", {\n        x: \"5\",\n        dy: \"15\",\n        fill: valueFill\n      }, yValue)));\n    }\n    /**\n     * Renders the value next to the label.\n     * The parent component must have a \"text\"-element.\n     */\n\n  }, {\n    key: \"renderInline\",\n    value: function renderInline() {\n      var _props4 = this.props,\n          yLabel = _props4.yLabel,\n          yValue = _props4.yValue,\n          labelFill = _props4.labelFill,\n          valueFill = _props4.valueFill,\n          fontSize = _props4.fontSize,\n          fontFamily = _props4.fontFamily;\n      return _react2.default.createElement(\"tspan\", {\n        onClick: this.handleClick,\n        fontFamily: fontFamily,\n        fontSize: fontSize\n      }, _react2.default.createElement(_ToolTipTSpanLabel2.default, {\n        fill: labelFill\n      }, yLabel, \":\\xA0\"), _react2.default.createElement(\"tspan\", {\n        fill: valueFill\n      }, yValue, \"\\xA0\\xA0\"));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var layout = this.props.layout;\n      var comp = null;\n\n      switch (layout) {\n        case \"horizontal\":\n          comp = this.renderValueNextToLabel();\n          break;\n\n        case \"horizontalRows\":\n          comp = this.renderValueBeneathToLabel();\n          break;\n\n        case \"horizontalInline\":\n          comp = this.renderInline();\n          break;\n\n        case \"vertical\":\n          comp = this.renderValueNextToLabel();\n          break;\n\n        case \"verticalRows\":\n          comp = this.renderValueBeneathToLabel();\n          break;\n\n        default:\n          comp = this.renderValueNextToLabel();\n      }\n\n      return comp;\n    }\n  }]);\n\n  return SingleTooltip;\n}(_react.Component);\n\nSingleTooltip.propTypes = {\n  origin: _propTypes2.default.array.isRequired,\n  yLabel: _propTypes2.default.string.isRequired,\n  yValue: _propTypes2.default.string.isRequired,\n  onClick: _propTypes2.default.func,\n  fontFamily: _propTypes2.default.string,\n  labelFill: _propTypes2.default.string.isRequired,\n  valueFill: _propTypes2.default.string.isRequired,\n  fontSize: _propTypes2.default.number,\n  withShape: _propTypes2.default.bool,\n  forChart: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]).isRequired,\n  options: _propTypes2.default.object.isRequired,\n  layout: _propTypes2.default.oneOf(VALID_LAYOUTS).isRequired\n};\nSingleTooltip.defaultProps = {\n  labelFill: \"#4682B4\",\n  valueFill: \"#000000\",\n  withShape: false\n};\n\nvar GroupTooltip = function (_Component2) {\n  _inherits(GroupTooltip, _Component2);\n\n  function GroupTooltip(props) {\n    _classCallCheck(this, GroupTooltip);\n\n    var _this2 = _possibleConstructorReturn(this, (GroupTooltip.__proto__ || Object.getPrototypeOf(GroupTooltip)).call(this, props));\n\n    _this2.renderSVG = _this2.renderSVG.bind(_this2);\n    return _this2;\n  }\n\n  _createClass(GroupTooltip, [{\n    key: \"getPosition\",\n    value: function getPosition(moreProps) {\n      var position = this.props.position;\n      var _moreProps$chartConfi = moreProps.chartConfig,\n          height = _moreProps$chartConfi.height,\n          width = _moreProps$chartConfi.width;\n      var dx = 20;\n      var dy = 40;\n      var textAnchor = null;\n      var xyPos = null;\n\n      if (position !== undefined) {\n        switch (position) {\n          case \"topRight\":\n            xyPos = [width - dx, null];\n            textAnchor = \"end\";\n            break;\n\n          case \"bottomLeft\":\n            xyPos = [null, height - dy];\n            break;\n\n          case \"bottomRight\":\n            xyPos = [width - dx, height - dy];\n            textAnchor = \"end\";\n            break;\n\n          default:\n            xyPos = [null, null];\n        }\n      } else {\n        xyPos = [null, null];\n      }\n\n      return {\n        xyPos: xyPos,\n        textAnchor: textAnchor\n      };\n    }\n  }, {\n    key: \"renderSVG\",\n    value: function renderSVG(moreProps) {\n      var displayValuesFor = this.props.displayValuesFor;\n      var chartId = moreProps.chartId;\n      var _props5 = this.props,\n          className = _props5.className,\n          onClick = _props5.onClick,\n          width = _props5.width,\n          verticalSize = _props5.verticalSize,\n          fontFamily = _props5.fontFamily,\n          fontSize = _props5.fontSize,\n          layout = _props5.layout;\n      var _props6 = this.props,\n          origin = _props6.origin,\n          displayFormat = _props6.displayFormat,\n          options = _props6.options;\n      var currentItem = displayValuesFor(this.props, moreProps);\n\n      var _getPosition = this.getPosition(moreProps),\n          xyPos = _getPosition.xyPos,\n          textAnchor = _getPosition.textAnchor;\n\n      var xPos = xyPos != null && xyPos[0] != null ? xyPos[0] : origin[0];\n      var yPos = xyPos != null && xyPos[1] != null ? xyPos[1] : origin[1];\n      var singleTooltip = options.map(function (each, idx) {\n        var yValue = currentItem && each.yAccessor(currentItem);\n        var yDisplayValue = yValue ? displayFormat(yValue) : \"n/a\";\n\n        var orig = function orig() {\n          if (layout === \"horizontal\" || layout === \"horizontalRows\") {\n            return [width * idx, 0];\n          }\n\n          if (layout === \"vertical\") {\n            return [0, verticalSize * idx];\n          }\n\n          if (layout === \"verticalRows\") {\n            return [0, verticalSize * 2.3 * idx];\n          }\n\n          return [0, 0];\n        };\n\n        return _react2.default.createElement(SingleTooltip, {\n          key: idx,\n          layout: layout,\n          origin: orig(),\n          yLabel: each.yLabel,\n          yValue: yDisplayValue,\n          options: each,\n          forChart: chartId,\n          onClick: onClick,\n          fontFamily: fontFamily,\n          fontSize: fontSize,\n          labelFill: each.labelFill,\n          valueFill: each.valueFill,\n          withShape: each.withShape\n        });\n      });\n      return _react2.default.createElement(\"g\", {\n        transform: \"translate(\" + xPos + \", \" + yPos + \")\",\n        className: className,\n        textAnchor: textAnchor\n      }, layout === \"horizontalInline\" ? _react2.default.createElement(_ToolTipText2.default, {\n        x: 0,\n        y: 0,\n        fontFamily: fontFamily,\n        fontSize: fontSize\n      }, singleTooltip) : singleTooltip);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _react2.default.createElement(_GenericChartComponent2.default, {\n        clip: false,\n        svgDraw: this.renderSVG,\n        drawOn: [\"mousemove\"]\n      });\n    }\n  }]);\n\n  return GroupTooltip;\n}(_react.Component);\n\nGroupTooltip.propTypes = {\n  className: _propTypes2.default.string,\n  layout: _propTypes2.default.oneOf(VALID_LAYOUTS).isRequired,\n  position: _propTypes2.default.oneOf([\"topRight\", \"bottomLeft\", \"bottomRight\"]),\n  displayFormat: _propTypes2.default.func.isRequired,\n  origin: _propTypes2.default.array.isRequired,\n  displayValuesFor: _propTypes2.default.func,\n  onClick: _propTypes2.default.func,\n  fontFamily: _propTypes2.default.string,\n  fontSize: _propTypes2.default.number,\n  width: _propTypes2.default.number,\n  // \"width\" only be used, if layout is \"horizontal\" or \"horizontalRows\".\n  verticalSize: _propTypes2.default.number,\n  // \"verticalSize\" only be used, if layout is \"vertical\", \"verticalRows\".\n  options: _propTypes2.default.arrayOf(_propTypes2.default.shape({\n    yLabel: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func]).isRequired,\n    yAccessor: _propTypes2.default.func.isRequired,\n    labelFill: _propTypes2.default.string,\n    valueFill: _propTypes2.default.string,\n    withShape: _propTypes2.default.bool // \"withShape\" is ignored, if layout is \"horizontalInline\" or \"vertical\".\n\n  }))\n};\nGroupTooltip.defaultProps = {\n  className: \"react-stockcharts-tooltip react-stockcharts-group-tooltip\",\n  layout: \"horizontal\",\n  displayFormat: (0, _d3Format.format)(\".2f\"),\n  displayValuesFor: _displayValuesFor2.default,\n  origin: [0, 0],\n  width: 60,\n  verticalSize: 13\n};\nexports.default = GroupTooltip;","map":{"version":3,"mappings":"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","names":["VALID_LAYOUTS","SingleTooltip","props","_classCallCheck","_this","handleClick","bind","e","onClick","forChart","options","chartId","origin","yLabel","yValue","labelFill","valueFill","withShape","fontSize","fontFamily","_react2","transform","x","y","width","height","fill","x1","y1","x2","y2","stroke","strokeWidth","dy","layout","comp","renderValueNextToLabel","renderValueBeneathToLabel","renderInline","propTypes","_propTypes2","array","isRequired","string","func","number","bool","oneOfType","object","oneOf","defaultProps","GroupTooltip","_this2","renderSVG","moreProps","position","chartConfig","dx","textAnchor","xyPos","undefined","displayValuesFor","className","verticalSize","displayFormat","currentItem","getPosition","xPos","yPos","singleTooltip","map","each","idx","yAccessor","yDisplayValue","orig","key","clip","svgDraw","drawOn","arrayOf","shape"],"sources":["../../../src/lib/tooltip/GroupTooltip.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { format } from \"d3-format\";\nimport displayValuesFor from \"./displayValuesFor\";\nimport GenericChartComponent from \"../GenericChartComponent\";\nimport ToolTipText from \"./ToolTipText\";\nimport ToolTipTSpanLabel from \"./ToolTipTSpanLabel\";\n\nconst VALID_LAYOUTS = [\n\t\"horizontal\",\n\t\"horizontalRows\",\n\t\"horizontalInline\",\n\t\"vertical\",\n\t\"verticalRows\"\n];\n\nclass SingleTooltip extends Component {\n\n\tconstructor( props ) {\n\t\tsuper( props );\n\t\tthis.handleClick = this.handleClick.bind( this );\n\t}\n\n\thandleClick( e ) {\n\t\tconst { onClick, forChart, options } = this.props;\n\t\tonClick( { chartId: forChart, ...options }, e );\n\t}\n\n\t/**\n\t * Renders the value next to the label.\n\t */\n\trenderValueNextToLabel() {\n\t\tconst { origin, yLabel, yValue, labelFill, valueFill, withShape, fontSize, fontFamily } = this.props;\n\n\t\treturn (\n\t\t\t<g transform={`translate(${origin[0]}, ${origin[1]})`} onClick={this.handleClick}>\n\t\t\t\t{withShape ? <rect x=\"0\" y=\"-6\" width=\"6\" height=\"6\" fill={valueFill} /> : null}\n\t\t\t\t<ToolTipText x={withShape ? 8 : 0} y={0} fontFamily={fontFamily} fontSize={fontSize}>\n\t\t\t\t\t<ToolTipTSpanLabel fill={labelFill}>{yLabel}: </ToolTipTSpanLabel>\n\t\t\t\t\t<tspan fill={valueFill}>{yValue}</tspan>\n\t\t\t\t</ToolTipText>\n\t\t\t</g>\n\t\t);\n\t}\n\n\t/**\n\t * Renders the value beneath the label.\n\t */\n\trenderValueBeneathToLabel() {\n\t\tconst { origin, yLabel, yValue, labelFill, valueFill, withShape, fontSize, fontFamily } = this.props;\n\n\t\treturn (\n\t\t\t<g transform={`translate(${origin[0]}, ${origin[1]})`} onClick={this.handleClick}>\n\t\t\t\t{withShape ? <line x1={0} y1={2} x2={0} y2={28} stroke={valueFill} strokeWidth=\"4px\" /> : null}\n\t\t\t\t<ToolTipText x={5} y={11} fontFamily={fontFamily} fontSize={fontSize}>\n\t\t\t\t\t<ToolTipTSpanLabel fill={labelFill}>{yLabel}</ToolTipTSpanLabel>\n\t\t\t\t\t<tspan x=\"5\" dy=\"15\" fill={valueFill}>{yValue}</tspan>\n\t\t\t\t</ToolTipText>\n\t\t\t</g>\n\t\t);\n\t}\n\n\t/**\n\t * Renders the value next to the label.\n\t * The parent component must have a \"text\"-element.\n\t */\n\trenderInline() {\n\t\tconst { yLabel, yValue, labelFill, valueFill, fontSize, fontFamily } = this.props;\n\n\t\treturn (\n\t\t\t<tspan onClick={this.handleClick} fontFamily={fontFamily} fontSize={fontSize}>\n\t\t\t\t<ToolTipTSpanLabel fill={labelFill}>{yLabel}:&nbsp;</ToolTipTSpanLabel>\n\t\t\t\t<tspan fill={valueFill}>{yValue}&nbsp;&nbsp;</tspan>\n\t\t\t</tspan>\n\t\t);\n\t}\n\n\trender() {\n\n\t\tconst { layout } = this.props;\n\t\tlet comp = null;\n\n\t\tswitch ( layout ) {\n\t\t\tcase \"horizontal\":\n\t\t\t\tcomp = this.renderValueNextToLabel();\n\t\t\t\tbreak;\n\t\t\tcase \"horizontalRows\":\n\t\t\t\tcomp = this.renderValueBeneathToLabel();\n\t\t\t\tbreak;\n\t\t\tcase \"horizontalInline\":\n\t\t\t\tcomp = this.renderInline();\n\t\t\t\tbreak;\n\t\t\tcase \"vertical\":\n\t\t\t\tcomp = this.renderValueNextToLabel();\n\t\t\t\tbreak;\n\t\t\tcase \"verticalRows\":\n\t\t\t\tcomp = this.renderValueBeneathToLabel();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tcomp = this.renderValueNextToLabel();\n\t\t}\n\n\t\treturn comp;\n\t}\n}\n\nSingleTooltip.propTypes = {\n\torigin: PropTypes.array.isRequired,\n\tyLabel: PropTypes.string.isRequired,\n\tyValue: PropTypes.string.isRequired,\n\tonClick: PropTypes.func,\n\tfontFamily: PropTypes.string,\n\tlabelFill: PropTypes.string.isRequired,\n\tvalueFill: PropTypes.string.isRequired,\n\tfontSize: PropTypes.number,\n\twithShape: PropTypes.bool,\n\tforChart: PropTypes.oneOfType( [PropTypes.number, PropTypes.string] ).isRequired,\n\toptions: PropTypes.object.isRequired,\n\tlayout: PropTypes.oneOf(VALID_LAYOUTS).isRequired,\n};\n\nSingleTooltip.defaultProps = {\n\tlabelFill: \"#4682B4\",\n\tvalueFill: \"#000000\",\n\twithShape: false,\n};\n\nclass GroupTooltip extends Component {\n\tconstructor( props ) {\n\t\tsuper( props );\n\t\tthis.renderSVG = this.renderSVG.bind( this );\n\t}\n\n\tgetPosition(moreProps) {\n\t\tconst { position } = this.props;\n\t\tconst { height, width } = moreProps.chartConfig;\n\n\t\tconst dx = 20;\n\t\tconst dy = 40;\n\t\tlet textAnchor = null;\n\t\tlet xyPos = null;\n\n\t\tif (position !== undefined) {\n\t\t\tswitch ( position ) {\n\t\t\t\tcase \"topRight\":\n\t\t\t\t\txyPos = [width - dx, null];\n\t\t\t\t\ttextAnchor = \"end\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"bottomLeft\":\n\t\t\t\t\txyPos = [null, height - dy];\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"bottomRight\":\n\t\t\t\t\txyPos = [width - dx, height - dy];\n\t\t\t\t\ttextAnchor = \"end\";\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\txyPos = [null, null];\n\t\t\t}\n\t\t} else {\n\t\t\txyPos = [null, null];\n\t\t}\n\n\t\treturn { xyPos, textAnchor };\n\t}\n\n\n\trenderSVG( moreProps ) {\n\n\t\tconst { displayValuesFor } = this.props;\n\t\tconst { chartId } = moreProps;\n\n\t\tconst { className, onClick, width, verticalSize, fontFamily, fontSize, layout } = this.props;\n\t\tconst { origin, displayFormat, options } = this.props;\n\t\tconst currentItem = displayValuesFor( this.props, moreProps );\n\t\tconst { xyPos, textAnchor } = this.getPosition(moreProps);\n\n\t\tconst xPos = xyPos != null && xyPos[0] != null ? xyPos[0] : origin[0];\n\t\tconst yPos = xyPos != null && xyPos[1] != null ? xyPos[1] : origin[1];\n\n\t\tconst singleTooltip = options.map( ( each, idx ) => {\n\n\t\t\tconst yValue = currentItem && each.yAccessor( currentItem );\n\t\t\tconst yDisplayValue = yValue ? displayFormat( yValue ) : \"n/a\";\n\n\t\t\tconst orig = () => {\n\t\t\t\tif ( layout === \"horizontal\" || layout === \"horizontalRows\" ) {\n\t\t\t\t\treturn [width * idx, 0];\n\t\t\t\t}\n\t\t\t\tif ( layout === \"vertical\" ) {\n\t\t\t\t\treturn [0, verticalSize * idx];\n\t\t\t\t}\n\t\t\t\tif ( layout === \"verticalRows\" ) {\n\t\t\t\t\treturn [0, verticalSize * 2.3 * idx];\n\t\t\t\t}\n\t\t\t\treturn [0, 0];\n\t\t\t};\n\n\t\t\treturn <SingleTooltip\n\t\t\t\tkey={idx}\n\t\t\t\tlayout={layout}\n\t\t\t\torigin={orig()}\n\t\t\t\tyLabel={each.yLabel}\n\t\t\t\tyValue={yDisplayValue}\n\t\t\t\toptions={each}\n\t\t\t\tforChart={chartId}\n\t\t\t\tonClick={onClick}\n\t\t\t\tfontFamily={fontFamily}\n\t\t\t\tfontSize={fontSize}\n\t\t\t\tlabelFill={each.labelFill}\n\t\t\t\tvalueFill={each.valueFill}\n\t\t\t\twithShape={each.withShape}\n\t\t\t/>;\n\t\t} );\n\n\t\treturn (\n\t\t\t<g transform={`translate(${xPos}, ${yPos})`} className={className} textAnchor={textAnchor}>\n\t\t\t\t{layout === \"horizontalInline\"\n\t\t\t\t\t? <ToolTipText x={0} y={0} fontFamily={fontFamily} fontSize={fontSize}>{singleTooltip}</ToolTipText>\n\t\t\t\t\t: singleTooltip\n\t\t\t\t}\n\t\t\t</g>\n\t\t);\n\t}\n\trender() {\n\t\treturn <GenericChartComponent\n\t\t\tclip={false}\n\t\t\tsvgDraw={this.renderSVG}\n\t\t\tdrawOn={[\"mousemove\"]}\n\t\t/>;\n\t}\n}\n\n\nGroupTooltip.propTypes = {\n\tclassName: PropTypes.string,\n\tlayout: PropTypes.oneOf(VALID_LAYOUTS).isRequired,\n\tposition: PropTypes.oneOf( [\n\t\t\"topRight\",\n\t\t\"bottomLeft\",\n\t\t\"bottomRight\"] ),\n\tdisplayFormat: PropTypes.func.isRequired,\n\torigin: PropTypes.array.isRequired,\n\tdisplayValuesFor: PropTypes.func,\n\tonClick: PropTypes.func,\n\tfontFamily: PropTypes.string,\n\tfontSize: PropTypes.number,\n\twidth: PropTypes.number, // \"width\" only be used, if layout is \"horizontal\" or \"horizontalRows\".\n\tverticalSize: PropTypes.number,  // \"verticalSize\" only be used, if layout is \"vertical\", \"verticalRows\".\n\toptions: PropTypes.arrayOf( PropTypes.shape( {\n\t\tyLabel: PropTypes.oneOfType( [\n\t\t\tPropTypes.string,\n\t\t\tPropTypes.func] ).isRequired,\n\t\tyAccessor: PropTypes.func.isRequired,\n\t\tlabelFill: PropTypes.string,\n\t\tvalueFill: PropTypes.string,\n\t\twithShape: PropTypes.bool, // \"withShape\" is ignored, if layout is \"horizontalInline\" or \"vertical\".\n\t} ) ),\n};\n\nGroupTooltip.defaultProps = {\n\tclassName: \"react-stockcharts-tooltip react-stockcharts-group-tooltip\",\n\tlayout: \"horizontal\",\n\tdisplayFormat: format( \".2f\" ),\n\tdisplayValuesFor: displayValuesFor,\n\torigin: [0, 0],\n\twidth: 60,\n\tverticalSize: 13,\n};\n\nexport default GroupTooltip;\n"]},"metadata":{},"sourceType":"script"}