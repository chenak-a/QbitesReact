{"ast":null,"code":"import constant from \"./constant.js\";\nexport default function (x) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      xz;\n  if (typeof x !== \"function\") x = constant(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i,\n        n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function (_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function (_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.x = function (_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : x;\n  };\n\n  return force;\n}","map":{"version":3,"names":["constant","x","strength","nodes","strengths","xz","force","alpha","i","n","length","node","vx","initialize","Array","isNaN","_","arguments"],"sources":["/home/chenak/QbitesReact/my-app/node_modules/d3/node_modules/d3-force/src/x.js"],"sourcesContent":["import constant from \"./constant.js\";\n\nexport default function(x) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : x;\n  };\n\n  return force;\n}\n"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,eAArB;AAEA,eAAe,UAASC,CAAT,EAAY;EACzB,IAAIC,QAAQ,GAAGF,QAAQ,CAAC,GAAD,CAAvB;EAAA,IACIG,KADJ;EAAA,IAEIC,SAFJ;EAAA,IAGIC,EAHJ;EAKA,IAAI,OAAOJ,CAAP,KAAa,UAAjB,EAA6BA,CAAC,GAAGD,QAAQ,CAACC,CAAC,IAAI,IAAL,GAAY,CAAZ,GAAgB,CAACA,CAAlB,CAAZ;;EAE7B,SAASK,KAAT,CAAeC,KAAf,EAAsB;IACpB,KAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGN,KAAK,CAACO,MAArB,EAA6BC,IAAlC,EAAwCH,CAAC,GAAGC,CAA5C,EAA+C,EAAED,CAAjD,EAAoD;MAClDG,IAAI,GAAGR,KAAK,CAACK,CAAD,CAAZ,EAAiBG,IAAI,CAACC,EAAL,IAAW,CAACP,EAAE,CAACG,CAAD,CAAF,GAAQG,IAAI,CAACV,CAAd,IAAmBG,SAAS,CAACI,CAAD,CAA5B,GAAkCD,KAA9D;IACD;EACF;;EAED,SAASM,UAAT,GAAsB;IACpB,IAAI,CAACV,KAAL,EAAY;IACZ,IAAIK,CAAJ;IAAA,IAAOC,CAAC,GAAGN,KAAK,CAACO,MAAjB;IACAN,SAAS,GAAG,IAAIU,KAAJ,CAAUL,CAAV,CAAZ;IACAJ,EAAE,GAAG,IAAIS,KAAJ,CAAUL,CAAV,CAAL;;IACA,KAAKD,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGC,CAAhB,EAAmB,EAAED,CAArB,EAAwB;MACtBJ,SAAS,CAACI,CAAD,CAAT,GAAeO,KAAK,CAACV,EAAE,CAACG,CAAD,CAAF,GAAQ,CAACP,CAAC,CAACE,KAAK,CAACK,CAAD,CAAN,EAAWA,CAAX,EAAcL,KAAd,CAAX,CAAL,GAAwC,CAAxC,GAA4C,CAACD,QAAQ,CAACC,KAAK,CAACK,CAAD,CAAN,EAAWA,CAAX,EAAcL,KAAd,CAApE;IACD;EACF;;EAEDG,KAAK,CAACO,UAAN,GAAmB,UAASG,CAAT,EAAY;IAC7Bb,KAAK,GAAGa,CAAR;IACAH,UAAU;EACX,CAHD;;EAKAP,KAAK,CAACJ,QAAN,GAAiB,UAASc,CAAT,EAAY;IAC3B,OAAOC,SAAS,CAACP,MAAV,IAAoBR,QAAQ,GAAG,OAAOc,CAAP,KAAa,UAAb,GAA0BA,CAA1B,GAA8BhB,QAAQ,CAAC,CAACgB,CAAF,CAAjD,EAAuDH,UAAU,EAAjE,EAAqEP,KAAzF,IAAkGJ,QAAzG;EACD,CAFD;;EAIAI,KAAK,CAACL,CAAN,GAAU,UAASe,CAAT,EAAY;IACpB,OAAOC,SAAS,CAACP,MAAV,IAAoBT,CAAC,GAAG,OAAOe,CAAP,KAAa,UAAb,GAA0BA,CAA1B,GAA8BhB,QAAQ,CAAC,CAACgB,CAAF,CAA1C,EAAgDH,UAAU,EAA1D,EAA8DP,KAAlF,IAA2FL,CAAlG;EACD,CAFD;;EAIA,OAAOK,KAAP;AACD"},"metadata":{},"sourceType":"module"}