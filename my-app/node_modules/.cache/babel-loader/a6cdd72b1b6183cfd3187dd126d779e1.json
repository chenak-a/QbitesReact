{"ast":null,"code":"import defaultSource from \"./defaultSource.js\";\nimport normal from \"./normal.js\";\nexport default (function sourceRandomGamma(source) {\n  var randomNormal = normal.source(source)();\n\n  function randomGamma(k, theta) {\n    if ((k = +k) < 0) throw new RangeError(\"invalid k\"); // degenerate distribution if k === 0\n\n    if (k === 0) return () => 0;\n    theta = theta == null ? 1 : +theta; // exponential distribution if k === 1\n\n    if (k === 1) return () => -Math.log1p(-source()) * theta;\n    var d = (k < 1 ? k + 1 : k) - 1 / 3,\n        c = 1 / (3 * Math.sqrt(d)),\n        multiplier = k < 1 ? () => Math.pow(source(), 1 / k) : () => 1;\n    return function () {\n      do {\n        do {\n          var x = randomNormal(),\n              v = 1 + c * x;\n        } while (v <= 0);\n\n        v *= v * v;\n        var u = 1 - source();\n      } while (u >= 1 - 0.0331 * x * x * x * x && Math.log(u) >= 0.5 * x * x + d * (1 - v + Math.log(v)));\n\n      return d * v * multiplier() * theta;\n    };\n  }\n\n  randomGamma.source = sourceRandomGamma;\n  return randomGamma;\n})(defaultSource);","map":{"version":3,"names":["defaultSource","normal","sourceRandomGamma","source","randomNormal","randomGamma","k","theta","RangeError","Math","log1p","d","c","sqrt","multiplier","pow","x","v","u","log"],"sources":["/home/chenak/QbitesReact/my-app/node_modules/d3-random/src/gamma.js"],"sourcesContent":["import defaultSource from \"./defaultSource.js\";\nimport normal from \"./normal.js\";\n\nexport default (function sourceRandomGamma(source) {\n  var randomNormal = normal.source(source)();\n\n  function randomGamma(k, theta) {\n    if ((k = +k) < 0) throw new RangeError(\"invalid k\");\n    // degenerate distribution if k === 0\n    if (k === 0) return () => 0;\n    theta = theta == null ? 1 : +theta;\n    // exponential distribution if k === 1\n    if (k === 1) return () => -Math.log1p(-source()) * theta;\n\n    var d = (k < 1 ? k + 1 : k) - 1 / 3,\n        c = 1 / (3 * Math.sqrt(d)),\n        multiplier = k < 1 ? () => Math.pow(source(), 1 / k) : () => 1;\n    return function() {\n      do {\n        do {\n          var x = randomNormal(),\n              v = 1 + c * x;\n        } while (v <= 0);\n        v *= v * v;\n        var u = 1 - source();\n      } while (u >= 1 - 0.0331 * x * x * x * x && Math.log(u) >= 0.5 * x * x + d * (1 - v + Math.log(v)));\n      return d * v * multiplier() * theta;\n    };\n  }\n\n  randomGamma.source = sourceRandomGamma;\n\n  return randomGamma;\n})(defaultSource);\n"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,oBAA1B;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,eAAe,CAAC,SAASC,iBAAT,CAA2BC,MAA3B,EAAmC;EACjD,IAAIC,YAAY,GAAGH,MAAM,CAACE,MAAP,CAAcA,MAAd,GAAnB;;EAEA,SAASE,WAAT,CAAqBC,CAArB,EAAwBC,KAAxB,EAA+B;IAC7B,IAAI,CAACD,CAAC,GAAG,CAACA,CAAN,IAAW,CAAf,EAAkB,MAAM,IAAIE,UAAJ,CAAe,WAAf,CAAN,CADW,CAE7B;;IACA,IAAIF,CAAC,KAAK,CAAV,EAAa,OAAO,MAAM,CAAb;IACbC,KAAK,GAAGA,KAAK,IAAI,IAAT,GAAgB,CAAhB,GAAoB,CAACA,KAA7B,CAJ6B,CAK7B;;IACA,IAAID,CAAC,KAAK,CAAV,EAAa,OAAO,MAAM,CAACG,IAAI,CAACC,KAAL,CAAW,CAACP,MAAM,EAAlB,CAAD,GAAyBI,KAAtC;IAEb,IAAII,CAAC,GAAG,CAACL,CAAC,GAAG,CAAJ,GAAQA,CAAC,GAAG,CAAZ,GAAgBA,CAAjB,IAAsB,IAAI,CAAlC;IAAA,IACIM,CAAC,GAAG,KAAK,IAAIH,IAAI,CAACI,IAAL,CAAUF,CAAV,CAAT,CADR;IAAA,IAEIG,UAAU,GAAGR,CAAC,GAAG,CAAJ,GAAQ,MAAMG,IAAI,CAACM,GAAL,CAASZ,MAAM,EAAf,EAAmB,IAAIG,CAAvB,CAAd,GAA0C,MAAM,CAFjE;IAGA,OAAO,YAAW;MAChB,GAAG;QACD,GAAG;UACD,IAAIU,CAAC,GAAGZ,YAAY,EAApB;UAAA,IACIa,CAAC,GAAG,IAAIL,CAAC,GAAGI,CADhB;QAED,CAHD,QAGSC,CAAC,IAAI,CAHd;;QAIAA,CAAC,IAAIA,CAAC,GAAGA,CAAT;QACA,IAAIC,CAAC,GAAG,IAAIf,MAAM,EAAlB;MACD,CAPD,QAOSe,CAAC,IAAI,IAAI,SAASF,CAAT,GAAaA,CAAb,GAAiBA,CAAjB,GAAqBA,CAA9B,IAAmCP,IAAI,CAACU,GAAL,CAASD,CAAT,KAAe,MAAMF,CAAN,GAAUA,CAAV,GAAcL,CAAC,IAAI,IAAIM,CAAJ,GAAQR,IAAI,CAACU,GAAL,CAASF,CAAT,CAAZ,CAP1E;;MAQA,OAAON,CAAC,GAAGM,CAAJ,GAAQH,UAAU,EAAlB,GAAuBP,KAA9B;IACD,CAVD;EAWD;;EAEDF,WAAW,CAACF,MAAZ,GAAqBD,iBAArB;EAEA,OAAOG,WAAP;AACD,CA9Bc,EA8BZL,aA9BY,CAAf"},"metadata":{},"sourceType":"module"}