{"ast":null,"code":"export default function (ring, hole) {\n  var i = -1,\n      n = hole.length,\n      c;\n\n  while (++i < n) if (c = ringContains(ring, hole[i])) return c;\n\n  return 0;\n}\n\nfunction ringContains(ring, point) {\n  var x = point[0],\n      y = point[1],\n      contains = -1;\n\n  for (var i = 0, n = ring.length, j = n - 1; i < n; j = i++) {\n    var pi = ring[i],\n        xi = pi[0],\n        yi = pi[1],\n        pj = ring[j],\n        xj = pj[0],\n        yj = pj[1];\n    if (segmentContains(pi, pj, point)) return 0;\n    if (yi > y !== yj > y && x < (xj - xi) * (y - yi) / (yj - yi) + xi) contains = -contains;\n  }\n\n  return contains;\n}\n\nfunction segmentContains(a, b, c) {\n  var i;\n  return collinear(a, b, c) && within(a[i = +(a[0] === b[0])], c[i], b[i]);\n}\n\nfunction collinear(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) === (c[0] - a[0]) * (b[1] - a[1]);\n}\n\nfunction within(p, q, r) {\n  return p <= q && q <= r || r <= q && q <= p;\n}","map":{"version":3,"names":["ring","hole","i","n","length","c","ringContains","point","x","y","contains","j","pi","xi","yi","pj","xj","yj","segmentContains","a","b","collinear","within","p","q","r"],"sources":["/home/chenak/QbitesReact/my-app/node_modules/d3-contour/src/contains.js"],"sourcesContent":["export default function(ring, hole) {\n  var i = -1, n = hole.length, c;\n  while (++i < n) if (c = ringContains(ring, hole[i])) return c;\n  return 0;\n}\n\nfunction ringContains(ring, point) {\n  var x = point[0], y = point[1], contains = -1;\n  for (var i = 0, n = ring.length, j = n - 1; i < n; j = i++) {\n    var pi = ring[i], xi = pi[0], yi = pi[1], pj = ring[j], xj = pj[0], yj = pj[1];\n    if (segmentContains(pi, pj, point)) return 0;\n    if (((yi > y) !== (yj > y)) && ((x < (xj - xi) * (y - yi) / (yj - yi) + xi))) contains = -contains;\n  }\n  return contains;\n}\n\nfunction segmentContains(a, b, c) {\n  var i; return collinear(a, b, c) && within(a[i = +(a[0] === b[0])], c[i], b[i]);\n}\n\nfunction collinear(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) === (c[0] - a[0]) * (b[1] - a[1]);\n}\n\nfunction within(p, q, r) {\n  return p <= q && q <= r || r <= q && q <= p;\n}\n"],"mappings":"AAAA,eAAe,UAASA,IAAT,EAAeC,IAAf,EAAqB;EAClC,IAAIC,CAAC,GAAG,CAAC,CAAT;EAAA,IAAYC,CAAC,GAAGF,IAAI,CAACG,MAArB;EAAA,IAA6BC,CAA7B;;EACA,OAAO,EAAEH,CAAF,GAAMC,CAAb,EAAgB,IAAIE,CAAC,GAAGC,YAAY,CAACN,IAAD,EAAOC,IAAI,CAACC,CAAD,CAAX,CAApB,EAAqC,OAAOG,CAAP;;EACrD,OAAO,CAAP;AACD;;AAED,SAASC,YAAT,CAAsBN,IAAtB,EAA4BO,KAA5B,EAAmC;EACjC,IAAIC,CAAC,GAAGD,KAAK,CAAC,CAAD,CAAb;EAAA,IAAkBE,CAAC,GAAGF,KAAK,CAAC,CAAD,CAA3B;EAAA,IAAgCG,QAAQ,GAAG,CAAC,CAA5C;;EACA,KAAK,IAAIR,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGH,IAAI,CAACI,MAApB,EAA4BO,CAAC,GAAGR,CAAC,GAAG,CAAzC,EAA4CD,CAAC,GAAGC,CAAhD,EAAmDQ,CAAC,GAAGT,CAAC,EAAxD,EAA4D;IAC1D,IAAIU,EAAE,GAAGZ,IAAI,CAACE,CAAD,CAAb;IAAA,IAAkBW,EAAE,GAAGD,EAAE,CAAC,CAAD,CAAzB;IAAA,IAA8BE,EAAE,GAAGF,EAAE,CAAC,CAAD,CAArC;IAAA,IAA0CG,EAAE,GAAGf,IAAI,CAACW,CAAD,CAAnD;IAAA,IAAwDK,EAAE,GAAGD,EAAE,CAAC,CAAD,CAA/D;IAAA,IAAoEE,EAAE,GAAGF,EAAE,CAAC,CAAD,CAA3E;IACA,IAAIG,eAAe,CAACN,EAAD,EAAKG,EAAL,EAASR,KAAT,CAAnB,EAAoC,OAAO,CAAP;IACpC,IAAMO,EAAE,GAAGL,CAAN,KAAcQ,EAAE,GAAGR,CAApB,IAA6BD,CAAC,GAAG,CAACQ,EAAE,GAAGH,EAAN,KAAaJ,CAAC,GAAGK,EAAjB,KAAwBG,EAAE,GAAGH,EAA7B,IAAmCD,EAAxE,EAA8EH,QAAQ,GAAG,CAACA,QAAZ;EAC/E;;EACD,OAAOA,QAAP;AACD;;AAED,SAASQ,eAAT,CAAyBC,CAAzB,EAA4BC,CAA5B,EAA+Bf,CAA/B,EAAkC;EAChC,IAAIH,CAAJ;EAAO,OAAOmB,SAAS,CAACF,CAAD,EAAIC,CAAJ,EAAOf,CAAP,CAAT,IAAsBiB,MAAM,CAACH,CAAC,CAACjB,CAAC,GAAG,EAAEiB,CAAC,CAAC,CAAD,CAAD,KAASC,CAAC,CAAC,CAAD,CAAZ,CAAL,CAAF,EAA0Bf,CAAC,CAACH,CAAD,CAA3B,EAAgCkB,CAAC,CAAClB,CAAD,CAAjC,CAAnC;AACR;;AAED,SAASmB,SAAT,CAAmBF,CAAnB,EAAsBC,CAAtB,EAAyBf,CAAzB,EAA4B;EAC1B,OAAO,CAACe,CAAC,CAAC,CAAD,CAAD,GAAOD,CAAC,CAAC,CAAD,CAAT,KAAiBd,CAAC,CAAC,CAAD,CAAD,GAAOc,CAAC,CAAC,CAAD,CAAzB,MAAkC,CAACd,CAAC,CAAC,CAAD,CAAD,GAAOc,CAAC,CAAC,CAAD,CAAT,KAAiBC,CAAC,CAAC,CAAD,CAAD,GAAOD,CAAC,CAAC,CAAD,CAAzB,CAAzC;AACD;;AAED,SAASG,MAAT,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsBC,CAAtB,EAAyB;EACvB,OAAOF,CAAC,IAAIC,CAAL,IAAUA,CAAC,IAAIC,CAAf,IAAoBA,CAAC,IAAID,CAAL,IAAUA,CAAC,IAAID,CAA1C;AACD"},"metadata":{},"sourceType":"module"}