{"ast":null,"code":"var _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { extent as d3Extent, min, max } from \"d3-array\";\nimport { head, last, isDefined, isNotDefined, clearCanvas, shallowEqual, identity, noop, functor, getLogger } from \"./utils\";\n/* eslint-disable no-unused-vars */\n\nimport { mouseBasedZoomAnchor, lastVisibleItemBasedZoomAnchor, rightDomainBasedZoomAnchor } from \"./utils/zoomBehavior\";\n/* eslint-enable no-unused-vars */\n\nimport { getNewChartConfig, getChartConfigWithUpdatedYScales, getCurrentCharts, getCurrentItem } from \"./utils/ChartDataUtil\";\nimport EventCapture from \"./EventCapture\";\nimport CanvasContainer from \"./CanvasContainer\";\nimport evaluator from \"./scale/evaluator\";\nvar log = getLogger(\"ChartCanvas\");\nvar CANDIDATES_FOR_RESET = [\"seriesName\"];\n\nfunction shouldResetChart(thisProps, nextProps) {\n  return !CANDIDATES_FOR_RESET.every(function (key) {\n    var result = shallowEqual(thisProps[key], nextProps[key]); // console.log(key, result);\n\n    return result;\n  });\n}\n\nfunction getCursorStyle() {\n  var tooltipStyle = \"\\n\\t.react-stockcharts-grabbing-cursor {\\n\\t\\tpointer-events: all;\\n\\t\\tcursor: -moz-grabbing;\\n\\t\\tcursor: -webkit-grabbing;\\n\\t\\tcursor: grabbing;\\n\\t}\\n\\t.react-stockcharts-crosshair-cursor {\\n\\t\\tpointer-events: all;\\n\\t\\tcursor: crosshair;\\n\\t}\\n\\t.react-stockcharts-tooltip-hover {\\n\\t\\tpointer-events: all;\\n\\t\\tcursor: pointer;\\n\\t}\\n\\t.react-stockcharts-avoid-interaction {\\n\\t\\tpointer-events: none;\\n\\t}\\n\\t.react-stockcharts-enable-interaction {\\n\\t\\tpointer-events: all;\\n\\t}\\n\\t.react-stockcharts-tooltip {\\n\\t\\tpointer-events: all;\\n\\t\\tcursor: pointer;\\n\\t}\\n\\t.react-stockcharts-default-cursor {\\n\\t\\tcursor: default;\\n\\t}\\n\\t.react-stockcharts-move-cursor {\\n\\t\\tcursor: move;\\n\\t}\\n\\t.react-stockcharts-pointer-cursor {\\n\\t\\tcursor: pointer;\\n\\t}\\n\\t.react-stockcharts-ns-resize-cursor {\\n\\t\\tcursor: ns-resize;\\n\\t}\\n\\t.react-stockcharts-ew-resize-cursor {\\n\\t\\tcursor: ew-resize;\\n\\t}\";\n  return React.createElement(\"style\", {\n    type: \"text/css\"\n  }, tooltipStyle);\n}\n\nfunction getDimensions(props) {\n  return {\n    height: props.height - props.margin.top - props.margin.bottom,\n    width: props.width - props.margin.left - props.margin.right\n  };\n}\n\nfunction getXScaleDirection(flipXScale) {\n  return flipXScale ? -1 : 1;\n}\n\nfunction calculateFullData(props) {\n  var fullData = props.data,\n      plotFull = props.plotFull,\n      xScale = props.xScale,\n      clamp = props.clamp,\n      pointsPerPxThreshold = props.pointsPerPxThreshold,\n      flipXScale = props.flipXScale;\n  var xAccessor = props.xAccessor,\n      displayXAccessor = props.displayXAccessor,\n      minPointsPerPxThreshold = props.minPointsPerPxThreshold;\n  var useWholeData = isDefined(plotFull) ? plotFull : xAccessor === identity;\n\n  var _evaluator = evaluator({\n    xScale: xScale,\n    useWholeData: useWholeData,\n    clamp: clamp,\n    pointsPerPxThreshold: pointsPerPxThreshold,\n    minPointsPerPxThreshold: minPointsPerPxThreshold,\n    flipXScale: flipXScale\n  }),\n      filterData = _evaluator.filterData;\n\n  return {\n    xAccessor: xAccessor,\n    displayXAccessor: displayXAccessor || xAccessor,\n    xScale: xScale.copy(),\n    fullData: fullData,\n    filterData: filterData\n  };\n}\n\nfunction resetChart(props) {\n  var firstCalculation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  if (process.env.NODE_ENV !== \"production\") {\n    if (!firstCalculation) log(\"CHART RESET\");\n  }\n\n  var state = calculateState(props);\n  var xAccessor = state.xAccessor,\n      displayXAccessor = state.displayXAccessor,\n      fullData = state.fullData;\n  var initialPlotData = state.plotData,\n      xScale = state.xScale;\n  var postCalculator = props.postCalculator,\n      children = props.children;\n  var plotData = postCalculator(initialPlotData);\n  var dimensions = getDimensions(props);\n  var chartConfig = getChartConfigWithUpdatedYScales(getNewChartConfig(dimensions, children), {\n    plotData: plotData,\n    xAccessor: xAccessor,\n    displayXAccessor: displayXAccessor,\n    fullData: fullData\n  }, xScale.domain());\n  return _extends({}, state, {\n    xScale: xScale,\n    plotData: plotData,\n    chartConfig: chartConfig\n  });\n}\n\nfunction updateChart(newState, initialXScale, props, lastItemWasVisible, initialChartConfig) {\n  var fullData = newState.fullData,\n      xScale = newState.xScale,\n      xAccessor = newState.xAccessor,\n      displayXAccessor = newState.displayXAccessor,\n      filterData = newState.filterData;\n  var lastItem = last(fullData);\n\n  var _initialXScale$domain = initialXScale.domain(),\n      _initialXScale$domain2 = _slicedToArray(_initialXScale$domain, 2),\n      start = _initialXScale$domain2[0],\n      end = _initialXScale$domain2[1];\n\n  if (process.env.NODE_ENV !== \"production\") {\n    log(\"TRIVIAL CHANGE\");\n  }\n\n  var postCalculator = props.postCalculator,\n      children = props.children,\n      padding = props.padding,\n      flipXScale = props.flipXScale;\n  var maintainPointsPerPixelOnResize = props.maintainPointsPerPixelOnResize;\n  var direction = getXScaleDirection(flipXScale);\n  var dimensions = getDimensions(props);\n  var updatedXScale = setXRange(xScale, dimensions, padding, direction); // console.log(\"lastItemWasVisible =\", lastItemWasVisible, end, xAccessor(lastItem), end >= xAccessor(lastItem));\n\n  var initialPlotData = void 0;\n\n  if (!lastItemWasVisible || end >= xAccessor(lastItem)) {\n    // resize comes here...\n    var _initialXScale$range = initialXScale.range(),\n        _initialXScale$range2 = _slicedToArray(_initialXScale$range, 2),\n        rangeStart = _initialXScale$range2[0],\n        rangeEnd = _initialXScale$range2[1];\n\n    var _updatedXScale$range = updatedXScale.range(),\n        _updatedXScale$range2 = _slicedToArray(_updatedXScale$range, 2),\n        newRangeStart = _updatedXScale$range2[0],\n        newRangeEnd = _updatedXScale$range2[1];\n\n    var newDomainExtent = (newRangeEnd - newRangeStart) / (rangeEnd - rangeStart) * (end - start);\n    var newStart = maintainPointsPerPixelOnResize ? end - newDomainExtent : start;\n    var lastItemX = initialXScale(xAccessor(lastItem)); // console.log(\"pointsPerPixel => \", newStart, start, end, updatedXScale(end));\n\n    var response = filterData(fullData, [newStart, end], xAccessor, updatedXScale, {\n      fallbackStart: start,\n      fallbackEnd: {\n        lastItem: lastItem,\n        lastItemX: lastItemX\n      }\n    });\n    initialPlotData = response.plotData;\n    updatedXScale.domain(response.domain); // console.log(\"HERE!!!!!\", start, end);\n  } else if (lastItemWasVisible && end < xAccessor(lastItem)) {\n    // this is when a new item is added and last item was visible\n    // so slide over and show the new item also\n    // get plotData between [xAccessor(l) - (end - start), xAccessor(l)] and DO change the domain\n    var dx = initialXScale(xAccessor(lastItem)) - initialXScale.range()[1];\n\n    var _initialXScale$range$ = initialXScale.range().map(function (x) {\n      return x + dx;\n    }).map(initialXScale.invert),\n        _initialXScale$range$2 = _slicedToArray(_initialXScale$range$, 2),\n        _newStart = _initialXScale$range$2[0],\n        newEnd = _initialXScale$range$2[1];\n\n    var _response = filterData(fullData, [_newStart, newEnd], xAccessor, updatedXScale);\n\n    initialPlotData = _response.plotData;\n    updatedXScale.domain(_response.domain); // if last item was visible, then shift\n  } // plotData = getDataOfLength(fullData, showingInterval, plotData.length)\n\n\n  var plotData = postCalculator(initialPlotData);\n  var chartConfig = getChartConfigWithUpdatedYScales(getNewChartConfig(dimensions, children, initialChartConfig), {\n    plotData: plotData,\n    xAccessor: xAccessor,\n    displayXAccessor: displayXAccessor,\n    fullData: fullData\n  }, updatedXScale.domain());\n  return {\n    xScale: updatedXScale,\n    xAccessor: xAccessor,\n    chartConfig: chartConfig,\n    plotData: plotData,\n    fullData: fullData,\n    filterData: filterData\n  };\n}\n\nfunction calculateState(props) {\n  var inputXAccesor = props.xAccessor,\n      xExtentsProp = props.xExtents,\n      data = props.data,\n      padding = props.padding,\n      flipXScale = props.flipXScale;\n\n  if (process.env.NODE_ENV !== \"production\" && isDefined(props.xScale.invert)) {\n    for (var i = 1; i < data.length; i++) {\n      var prev = data[i - 1];\n      var curr = data[i];\n\n      if (inputXAccesor(prev) > inputXAccesor(curr)) {\n        throw new Error(\"'data' is not sorted on 'xAccessor', send 'data' sorted in ascending order of 'xAccessor'\");\n      }\n    }\n  }\n\n  var direction = getXScaleDirection(flipXScale);\n  var dimensions = getDimensions(props);\n  var extent = typeof xExtentsProp === \"function\" ? xExtentsProp(data) : d3Extent(xExtentsProp.map(function (d) {\n    return functor(d);\n  }).map(function (each) {\n    return each(data, inputXAccesor);\n  }));\n\n  var _calculateFullData = calculateFullData(props),\n      xAccessor = _calculateFullData.xAccessor,\n      displayXAccessor = _calculateFullData.displayXAccessor,\n      xScale = _calculateFullData.xScale,\n      fullData = _calculateFullData.fullData,\n      filterData = _calculateFullData.filterData;\n\n  var updatedXScale = setXRange(xScale, dimensions, padding, direction);\n\n  var _filterData = filterData(fullData, extent, inputXAccesor, updatedXScale),\n      plotData = _filterData.plotData,\n      domain = _filterData.domain;\n\n  if (process.env.NODE_ENV !== \"production\" && plotData.length <= 1) {\n    throw new Error(\"Showing \" + plotData.length + \" datapoints, review the 'xExtents' prop of ChartCanvas\");\n  }\n\n  return {\n    plotData: plotData,\n    xScale: updatedXScale.domain(domain),\n    xAccessor: xAccessor,\n    displayXAccessor: displayXAccessor,\n    fullData: fullData,\n    filterData: filterData\n  };\n}\n\nfunction setXRange(xScale, dimensions, padding) {\n  var direction = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n\n  if (xScale.rangeRoundPoints) {\n    if (isNaN(padding)) throw new Error(\"padding has to be a number for ordinal scale\");\n    xScale.rangeRoundPoints([0, dimensions.width], padding);\n  } else if (xScale.padding) {\n    if (isNaN(padding)) throw new Error(\"padding has to be a number for ordinal scale\");\n    xScale.range([0, dimensions.width]);\n    xScale.padding(padding / 2);\n  } else {\n    var _ref = isNaN(padding) ? padding : {\n      left: padding,\n      right: padding\n    },\n        left = _ref.left,\n        right = _ref.right;\n\n    if (direction > 0) {\n      xScale.range([left, dimensions.width - right]);\n    } else {\n      xScale.range([dimensions.width - right, left]);\n    }\n  }\n\n  return xScale;\n}\n\nfunction pinchCoordinates(pinch) {\n  var touch1Pos = pinch.touch1Pos,\n      touch2Pos = pinch.touch2Pos;\n  return {\n    topLeft: [Math.min(touch1Pos[0], touch2Pos[0]), Math.min(touch1Pos[1], touch2Pos[1])],\n    bottomRight: [Math.max(touch1Pos[0], touch2Pos[0]), Math.max(touch1Pos[1], touch2Pos[1])]\n  };\n}\n\nvar ChartCanvas = function (_Component) {\n  _inherits(ChartCanvas, _Component);\n\n  function ChartCanvas() {\n    _classCallCheck(this, ChartCanvas);\n\n    var _this = _possibleConstructorReturn(this, (ChartCanvas.__proto__ || Object.getPrototypeOf(ChartCanvas)).call(this));\n\n    _this.getDataInfo = _this.getDataInfo.bind(_this);\n    _this.getCanvasContexts = _this.getCanvasContexts.bind(_this);\n    _this.handleMouseMove = _this.handleMouseMove.bind(_this);\n    _this.handleMouseEnter = _this.handleMouseEnter.bind(_this);\n    _this.handleMouseLeave = _this.handleMouseLeave.bind(_this);\n    _this.handleZoom = _this.handleZoom.bind(_this);\n    _this.handlePinchZoom = _this.handlePinchZoom.bind(_this);\n    _this.handlePinchZoomEnd = _this.handlePinchZoomEnd.bind(_this);\n    _this.handlePan = _this.handlePan.bind(_this);\n    _this.handlePanEnd = _this.handlePanEnd.bind(_this);\n    _this.handleClick = _this.handleClick.bind(_this);\n    _this.handleMouseDown = _this.handleMouseDown.bind(_this);\n    _this.handleDoubleClick = _this.handleDoubleClick.bind(_this);\n    _this.handleContextMenu = _this.handleContextMenu.bind(_this);\n    _this.handleDragStart = _this.handleDragStart.bind(_this);\n    _this.handleDrag = _this.handleDrag.bind(_this);\n    _this.handleDragEnd = _this.handleDragEnd.bind(_this);\n    _this.panHelper = _this.panHelper.bind(_this);\n    _this.pinchZoomHelper = _this.pinchZoomHelper.bind(_this);\n    _this.xAxisZoom = _this.xAxisZoom.bind(_this);\n    _this.yAxisZoom = _this.yAxisZoom.bind(_this);\n    _this.resetYDomain = _this.resetYDomain.bind(_this);\n    _this.calculateStateForDomain = _this.calculateStateForDomain.bind(_this);\n    _this.generateSubscriptionId = _this.generateSubscriptionId.bind(_this);\n    _this.draw = _this.draw.bind(_this);\n    _this.redraw = _this.redraw.bind(_this);\n    _this.getAllPanConditions = _this.getAllPanConditions.bind(_this);\n    _this.subscriptions = [];\n    _this.subscribe = _this.subscribe.bind(_this);\n    _this.unsubscribe = _this.unsubscribe.bind(_this);\n    _this.amIOnTop = _this.amIOnTop.bind(_this);\n    _this.saveEventCaptureNode = _this.saveEventCaptureNode.bind(_this);\n    _this.saveCanvasContainerNode = _this.saveCanvasContainerNode.bind(_this);\n    _this.setCursorClass = _this.setCursorClass.bind(_this);\n    _this.getMutableState = _this.getMutableState.bind(_this); // this.canvasDrawCallbackList = [];\n\n    _this.interactiveState = [];\n    _this.panInProgress = false;\n    _this.state = {};\n    _this.mutableState = {};\n    _this.lastSubscriptionId = 0;\n    return _this;\n  }\n\n  _createClass(ChartCanvas, [{\n    key: \"saveEventCaptureNode\",\n    value: function saveEventCaptureNode(node) {\n      this.eventCaptureNode = node;\n    }\n  }, {\n    key: \"saveCanvasContainerNode\",\n    value: function saveCanvasContainerNode(node) {\n      this.canvasContainerNode = node;\n    }\n  }, {\n    key: \"getMutableState\",\n    value: function getMutableState() {\n      return this.mutableState;\n    }\n  }, {\n    key: \"getDataInfo\",\n    value: function getDataInfo() {\n      return _extends({}, this.state, {\n        fullData: this.fullData\n      });\n    }\n  }, {\n    key: \"getCanvasContexts\",\n    value: function getCanvasContexts() {\n      if (this.canvasContainerNode) {\n        return this.canvasContainerNode.getCanvasContexts();\n      }\n    }\n  }, {\n    key: \"generateSubscriptionId\",\n    value: function generateSubscriptionId() {\n      this.lastSubscriptionId++;\n      return this.lastSubscriptionId;\n    }\n  }, {\n    key: \"clearBothCanvas\",\n    value: function clearBothCanvas() {\n      var canvases = this.getCanvasContexts();\n\n      if (canvases && canvases.axes) {\n        clearCanvas([canvases.axes, // canvases.hover,\n        canvases.mouseCoord], this.props.ratio);\n      }\n    }\n  }, {\n    key: \"clearMouseCanvas\",\n    value: function clearMouseCanvas() {\n      var canvases = this.getCanvasContexts();\n\n      if (canvases && canvases.mouseCoord) {\n        clearCanvas([canvases.mouseCoord], this.props.ratio);\n      }\n    }\n  }, {\n    key: \"clearThreeCanvas\",\n    value: function clearThreeCanvas() {\n      var canvases = this.getCanvasContexts();\n\n      if (canvases && canvases.axes) {\n        clearCanvas([canvases.axes, // canvases.hover,\n        canvases.mouseCoord, canvases.bg], this.props.ratio);\n      }\n    }\n  }, {\n    key: \"subscribe\",\n    value: function subscribe(id, rest) {\n      var _rest$getPanCondition = rest.getPanConditions,\n          getPanConditions = _rest$getPanCondition === undefined ? functor({\n        draggable: false,\n        panEnabled: true\n      }) : _rest$getPanCondition;\n      this.subscriptions = this.subscriptions.concat(_extends({\n        id: id\n      }, rest, {\n        getPanConditions: getPanConditions\n      }));\n    }\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe(id) {\n      this.subscriptions = this.subscriptions.filter(function (each) {\n        return each.id !== id;\n      });\n    }\n  }, {\n    key: \"getAllPanConditions\",\n    value: function getAllPanConditions() {\n      return this.subscriptions.map(function (each) {\n        return each.getPanConditions();\n      });\n    }\n  }, {\n    key: \"setCursorClass\",\n    value: function setCursorClass(className) {\n      if (this.eventCaptureNode != null) {\n        this.eventCaptureNode.setCursorClass(className);\n      }\n    }\n  }, {\n    key: \"amIOnTop\",\n    value: function amIOnTop(id) {\n      var dragableComponents = this.subscriptions.filter(function (each) {\n        return each.getPanConditions().draggable;\n      });\n      return dragableComponents.length > 0 && last(dragableComponents).id === id;\n    }\n  }, {\n    key: \"handleContextMenu\",\n    value: function handleContextMenu(mouseXY, e) {\n      var _state = this.state,\n          xAccessor = _state.xAccessor,\n          chartConfig = _state.chartConfig,\n          plotData = _state.plotData,\n          xScale = _state.xScale;\n      var currentCharts = getCurrentCharts(chartConfig, mouseXY);\n      var currentItem = getCurrentItem(xScale, xAccessor, mouseXY, plotData);\n      this.triggerEvent(\"contextmenu\", {\n        mouseXY: mouseXY,\n        currentItem: currentItem,\n        currentCharts: currentCharts\n      }, e);\n    }\n  }, {\n    key: \"calculateStateForDomain\",\n    value: function calculateStateForDomain(newDomain) {\n      var _state2 = this.state,\n          xAccessor = _state2.xAccessor,\n          displayXAccessor = _state2.displayXAccessor,\n          initialXScale = _state2.xScale,\n          initialChartConfig = _state2.chartConfig,\n          initialPlotData = _state2.plotData;\n      var filterData = this.state.filterData;\n      var fullData = this.fullData;\n      var postCalculator = this.props.postCalculator;\n\n      var _filterData2 = filterData(fullData, newDomain, xAccessor, initialXScale, {\n        currentPlotData: initialPlotData,\n        currentDomain: initialXScale.domain()\n      }),\n          beforePlotData = _filterData2.plotData,\n          domain = _filterData2.domain;\n\n      var plotData = postCalculator(beforePlotData);\n      var updatedScale = initialXScale.copy().domain(domain);\n      var chartConfig = getChartConfigWithUpdatedYScales(initialChartConfig, {\n        plotData: plotData,\n        xAccessor: xAccessor,\n        displayXAccessor: displayXAccessor,\n        fullData: fullData\n      }, updatedScale.domain());\n      return {\n        xScale: updatedScale,\n        plotData: plotData,\n        chartConfig: chartConfig\n      };\n    }\n  }, {\n    key: \"pinchZoomHelper\",\n    value: function pinchZoomHelper(initialPinch, finalPinch) {\n      var initialPinchXScale = initialPinch.xScale;\n      var _state3 = this.state,\n          initialXScale = _state3.xScale,\n          initialChartConfig = _state3.chartConfig,\n          initialPlotData = _state3.plotData,\n          xAccessor = _state3.xAccessor,\n          displayXAccessor = _state3.displayXAccessor;\n      var filterData = this.state.filterData;\n      var fullData = this.fullData;\n      var postCalculator = this.props.postCalculator;\n\n      var _pinchCoordinates = pinchCoordinates(initialPinch),\n          iTL = _pinchCoordinates.topLeft,\n          iBR = _pinchCoordinates.bottomRight;\n\n      var _pinchCoordinates2 = pinchCoordinates(finalPinch),\n          fTL = _pinchCoordinates2.topLeft,\n          fBR = _pinchCoordinates2.bottomRight;\n\n      var e = initialPinchXScale.range()[1];\n      var xDash = Math.round(-(iBR[0] * fTL[0] - iTL[0] * fBR[0]) / (iTL[0] - iBR[0]));\n      var yDash = Math.round(e + ((e - iBR[0]) * (e - fTL[0]) - (e - iTL[0]) * (e - fBR[0])) / (e - iTL[0] - (e - iBR[0])));\n      var x = Math.round(-xDash * iTL[0] / (-xDash + fTL[0]));\n      var y = Math.round(e - (yDash - e) * (e - iTL[0]) / (yDash + (e - fTL[0])));\n      var newDomain = [x, y].map(initialPinchXScale.invert); // var domainR = initial.right + right;\n\n      var _filterData3 = filterData(fullData, newDomain, xAccessor, initialPinchXScale, {\n        currentPlotData: initialPlotData,\n        currentDomain: initialXScale.domain()\n      }),\n          beforePlotData = _filterData3.plotData,\n          domain = _filterData3.domain;\n\n      var plotData = postCalculator(beforePlotData);\n      var updatedScale = initialXScale.copy().domain(domain);\n      var mouseXY = finalPinch.touch1Pos;\n      var chartConfig = getChartConfigWithUpdatedYScales(initialChartConfig, {\n        plotData: plotData,\n        xAccessor: xAccessor,\n        displayXAccessor: displayXAccessor,\n        fullData: fullData\n      }, updatedScale.domain());\n      var currentItem = getCurrentItem(updatedScale, xAccessor, mouseXY, plotData);\n      return {\n        chartConfig: chartConfig,\n        xScale: updatedScale,\n        plotData: plotData,\n        mouseXY: mouseXY,\n        currentItem: currentItem\n      };\n    }\n  }, {\n    key: \"cancelDrag\",\n    value: function cancelDrag() {\n      this.eventCaptureNode.cancelDrag();\n      this.triggerEvent(\"dragcancel\");\n    }\n  }, {\n    key: \"handlePinchZoom\",\n    value: function handlePinchZoom(initialPinch, finalPinch, e) {\n      var _this2 = this;\n\n      if (!this.waitingForPinchZoomAnimationFrame) {\n        this.waitingForPinchZoomAnimationFrame = true;\n        var state = this.pinchZoomHelper(initialPinch, finalPinch);\n        this.triggerEvent(\"pinchzoom\", state, e);\n        this.finalPinch = finalPinch;\n        requestAnimationFrame(function () {\n          _this2.clearBothCanvas();\n\n          _this2.draw({\n            trigger: \"pinchzoom\"\n          });\n\n          _this2.waitingForPinchZoomAnimationFrame = false;\n        });\n      }\n    }\n  }, {\n    key: \"handlePinchZoomEnd\",\n    value: function handlePinchZoomEnd(initialPinch, e) {\n      var xAccessor = this.state.xAccessor;\n\n      if (this.finalPinch) {\n        var state = this.pinchZoomHelper(initialPinch, this.finalPinch);\n        var xScale = state.xScale;\n        this.triggerEvent(\"pinchzoom\", state, e);\n        this.finalPinch = null;\n        this.clearThreeCanvas();\n        var fullData = this.fullData;\n        var firstItem = head(fullData);\n        var start = head(xScale.domain());\n        var end = xAccessor(firstItem);\n        var onLoadMore = this.props.onLoadMore;\n        this.setState(state, function () {\n          if (start < end) {\n            onLoadMore(start, end);\n          }\n        });\n      }\n    }\n  }, {\n    key: \"handleZoom\",\n    value: function handleZoom(zoomDirection, mouseXY, e) {\n      if (this.panInProgress) return; // console.log(\"zoomDirection \", zoomDirection, \" mouseXY \", mouseXY);\n\n      var _state4 = this.state,\n          xAccessor = _state4.xAccessor,\n          initialXScale = _state4.xScale,\n          initialPlotData = _state4.plotData;\n      var _props = this.props,\n          zoomMultiplier = _props.zoomMultiplier,\n          zoomAnchor = _props.zoomAnchor;\n      var fullData = this.fullData;\n      var item = zoomAnchor({\n        xScale: initialXScale,\n        xAccessor: xAccessor,\n        mouseXY: mouseXY,\n        plotData: initialPlotData,\n        fullData: fullData\n      });\n      var cx = initialXScale(item);\n      var c = zoomDirection > 0 ? 1 * zoomMultiplier : 1 / zoomMultiplier;\n      var newDomain = initialXScale.range().map(function (x) {\n        return cx + (x - cx) * c;\n      }).map(initialXScale.invert);\n\n      var _calculateStateForDom = this.calculateStateForDomain(newDomain),\n          xScale = _calculateStateForDom.xScale,\n          plotData = _calculateStateForDom.plotData,\n          chartConfig = _calculateStateForDom.chartConfig;\n\n      var currentItem = getCurrentItem(xScale, xAccessor, mouseXY, plotData);\n      var currentCharts = getCurrentCharts(chartConfig, mouseXY);\n      this.clearThreeCanvas();\n      var firstItem = head(fullData);\n      var start = head(xScale.domain());\n      var end = xAccessor(firstItem);\n      var onLoadMore = this.props.onLoadMore;\n      this.mutableState = {\n        mouseXY: mouseXY,\n        currentItem: currentItem,\n        currentCharts: currentCharts\n      };\n      this.triggerEvent(\"zoom\", {\n        xScale: xScale,\n        plotData: plotData,\n        chartConfig: chartConfig,\n        mouseXY: mouseXY,\n        currentCharts: currentCharts,\n        currentItem: currentItem,\n        show: true\n      }, e);\n      this.setState({\n        xScale: xScale,\n        plotData: plotData,\n        chartConfig: chartConfig\n      }, function () {\n        if (start < end) {\n          onLoadMore(start, end);\n        }\n      });\n    }\n  }, {\n    key: \"xAxisZoom\",\n    value: function xAxisZoom(newDomain) {\n      var _calculateStateForDom2 = this.calculateStateForDomain(newDomain),\n          xScale = _calculateStateForDom2.xScale,\n          plotData = _calculateStateForDom2.plotData,\n          chartConfig = _calculateStateForDom2.chartConfig;\n\n      this.clearThreeCanvas();\n      var xAccessor = this.state.xAccessor;\n      var fullData = this.fullData;\n      var firstItem = head(fullData);\n      var start = head(xScale.domain());\n      var end = xAccessor(firstItem);\n      var onLoadMore = this.props.onLoadMore;\n      this.setState({\n        xScale: xScale,\n        plotData: plotData,\n        chartConfig: chartConfig\n      }, function () {\n        if (start < end) onLoadMore(start, end);\n      });\n    }\n  }, {\n    key: \"yAxisZoom\",\n    value: function yAxisZoom(chartId, newDomain) {\n      this.clearThreeCanvas();\n      var initialChartConfig = this.state.chartConfig;\n      var chartConfig = initialChartConfig.map(function (each) {\n        if (each.id === chartId) {\n          var yScale = each.yScale;\n          return _extends({}, each, {\n            yScale: yScale.copy().domain(newDomain),\n            yPanEnabled: true\n          });\n        } else {\n          return each;\n        }\n      });\n      this.setState({\n        chartConfig: chartConfig\n      });\n    }\n  }, {\n    key: \"triggerEvent\",\n    value: function triggerEvent(type, props, e) {\n      var _this3 = this; // console.log(\"triggering ->\", type);\n\n\n      this.subscriptions.forEach(function (each) {\n        var state = _extends({}, _this3.state, {\n          fullData: _this3.fullData,\n          subscriptions: _this3.subscriptions\n        });\n\n        each.listener(type, props, state, e);\n      });\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(props) {\n      this.subscriptions.forEach(function (each) {\n        if (isDefined(each.draw)) each.draw(props);\n      });\n    }\n  }, {\n    key: \"redraw\",\n    value: function redraw() {\n      this.clearThreeCanvas();\n      this.draw({\n        force: true\n      });\n    }\n  }, {\n    key: \"panHelper\",\n    value: function panHelper(mouseXY, initialXScale, _ref2, chartsToPan) {\n      var dx = _ref2.dx,\n          dy = _ref2.dy;\n      var _state5 = this.state,\n          xAccessor = _state5.xAccessor,\n          displayXAccessor = _state5.displayXAccessor,\n          initialChartConfig = _state5.chartConfig;\n      var filterData = this.state.filterData;\n      var fullData = this.fullData;\n      var postCalculator = this.props.postCalculator; // console.log(dx, dy);\n\n      if (isNotDefined(initialXScale.invert)) throw new Error(\"xScale provided does not have an invert() method.\" + \"You are likely using an ordinal scale. This scale does not support zoom, pan\");\n      var newDomain = initialXScale.range().map(function (x) {\n        return x - dx;\n      }).map(initialXScale.invert);\n\n      var _filterData4 = filterData(fullData, newDomain, xAccessor, initialXScale, {\n        currentPlotData: this.hackyWayToStopPanBeyondBounds__plotData,\n        currentDomain: this.hackyWayToStopPanBeyondBounds__domain\n      }),\n          beforePlotData = _filterData4.plotData,\n          domain = _filterData4.domain;\n\n      var updatedScale = initialXScale.copy().domain(domain);\n      var plotData = postCalculator(beforePlotData); // console.log(last(plotData));\n\n      var currentItem = getCurrentItem(updatedScale, xAccessor, mouseXY, plotData);\n      var chartConfig = getChartConfigWithUpdatedYScales(initialChartConfig, {\n        plotData: plotData,\n        xAccessor: xAccessor,\n        displayXAccessor: displayXAccessor,\n        fullData: fullData\n      }, updatedScale.domain(), dy, chartsToPan);\n      var currentCharts = getCurrentCharts(chartConfig, mouseXY); // console.log(initialXScale.domain(), newDomain, updatedScale.domain());\n\n      return {\n        xScale: updatedScale,\n        plotData: plotData,\n        chartConfig: chartConfig,\n        mouseXY: mouseXY,\n        currentCharts: currentCharts,\n        currentItem: currentItem\n      };\n    }\n  }, {\n    key: \"handlePan\",\n    value: function handlePan(mousePosition, panStartXScale, dxdy, chartsToPan, e) {\n      var _this4 = this;\n\n      if (!this.waitingForPanAnimationFrame) {\n        this.waitingForPanAnimationFrame = true;\n        this.hackyWayToStopPanBeyondBounds__plotData = this.hackyWayToStopPanBeyondBounds__plotData || this.state.plotData;\n        this.hackyWayToStopPanBeyondBounds__domain = this.hackyWayToStopPanBeyondBounds__domain || this.state.xScale.domain();\n        var state = this.panHelper(mousePosition, panStartXScale, dxdy, chartsToPan);\n        this.hackyWayToStopPanBeyondBounds__plotData = state.plotData;\n        this.hackyWayToStopPanBeyondBounds__domain = state.xScale.domain();\n        this.panInProgress = true; // console.log(panStartXScale.domain(), state.xScale.domain());\n\n        this.triggerEvent(\"pan\", state, e);\n        this.mutableState = {\n          mouseXY: state.mouseXY,\n          currentItem: state.currentItem,\n          currentCharts: state.currentCharts\n        };\n        requestAnimationFrame(function () {\n          _this4.waitingForPanAnimationFrame = false;\n\n          _this4.clearBothCanvas();\n\n          _this4.draw({\n            trigger: \"pan\"\n          });\n        });\n      }\n    }\n  }, {\n    key: \"handlePanEnd\",\n    value: function handlePanEnd(mousePosition, panStartXScale, dxdy, chartsToPan, e) {\n      var _this5 = this;\n\n      var state = this.panHelper(mousePosition, panStartXScale, dxdy, chartsToPan); // console.log(this.canvasDrawCallbackList.map(d => d.type));\n\n      this.hackyWayToStopPanBeyondBounds__plotData = null;\n      this.hackyWayToStopPanBeyondBounds__domain = null;\n      this.panInProgress = false; // console.log(\"PANEND\", panEnd++);\n\n      var xScale = state.xScale,\n          plotData = state.plotData,\n          chartConfig = state.chartConfig;\n      this.triggerEvent(\"panend\", state, e);\n      requestAnimationFrame(function () {\n        var xAccessor = _this5.state.xAccessor;\n        var fullData = _this5.fullData;\n        var firstItem = head(fullData);\n        var start = head(xScale.domain());\n        var end = xAccessor(firstItem); // console.log(start, end, start < end ? \"Load more\" : \"I have it\");\n\n        var onLoadMore = _this5.props.onLoadMore;\n\n        _this5.clearThreeCanvas();\n\n        _this5.setState({\n          xScale: xScale,\n          plotData: plotData,\n          chartConfig: chartConfig\n        }, function () {\n          if (start < end) onLoadMore(start, end);\n        });\n      });\n    }\n  }, {\n    key: \"handleMouseDown\",\n    value: function handleMouseDown(mousePosition, currentCharts, e) {\n      this.triggerEvent(\"mousedown\", this.mutableState, e);\n    }\n  }, {\n    key: \"handleMouseEnter\",\n    value: function handleMouseEnter(e) {\n      this.triggerEvent(\"mouseenter\", {\n        show: true\n      }, e);\n    }\n  }, {\n    key: \"handleMouseMove\",\n    value: function handleMouseMove(mouseXY, inputType, e) {\n      var _this6 = this;\n\n      if (!this.waitingForMouseMoveAnimationFrame) {\n        this.waitingForMouseMoveAnimationFrame = true;\n        var _state6 = this.state,\n            chartConfig = _state6.chartConfig,\n            plotData = _state6.plotData,\n            xScale = _state6.xScale,\n            xAccessor = _state6.xAccessor;\n        var currentCharts = getCurrentCharts(chartConfig, mouseXY);\n        var currentItem = getCurrentItem(xScale, xAccessor, mouseXY, plotData);\n        this.triggerEvent(\"mousemove\", {\n          show: true,\n          mouseXY: mouseXY,\n          // prevMouseXY is used in interactive components\n          prevMouseXY: this.prevMouseXY,\n          currentItem: currentItem,\n          currentCharts: currentCharts\n        }, e);\n        this.prevMouseXY = mouseXY;\n        this.mutableState = {\n          mouseXY: mouseXY,\n          currentItem: currentItem,\n          currentCharts: currentCharts\n        };\n        requestAnimationFrame(function () {\n          _this6.clearMouseCanvas();\n\n          _this6.draw({\n            trigger: \"mousemove\"\n          });\n\n          _this6.waitingForMouseMoveAnimationFrame = false;\n        });\n      }\n    }\n  }, {\n    key: \"handleMouseLeave\",\n    value: function handleMouseLeave(e) {\n      this.triggerEvent(\"mouseleave\", {\n        show: false\n      }, e);\n      this.clearMouseCanvas();\n      this.draw({\n        trigger: \"mouseleave\"\n      });\n    }\n  }, {\n    key: \"handleDragStart\",\n    value: function handleDragStart(_ref3, e) {\n      var startPos = _ref3.startPos;\n      this.triggerEvent(\"dragstart\", {\n        startPos: startPos\n      }, e);\n    }\n  }, {\n    key: \"handleDrag\",\n    value: function handleDrag(_ref4, e) {\n      var _this7 = this;\n\n      var startPos = _ref4.startPos,\n          mouseXY = _ref4.mouseXY;\n      var _state7 = this.state,\n          chartConfig = _state7.chartConfig,\n          plotData = _state7.plotData,\n          xScale = _state7.xScale,\n          xAccessor = _state7.xAccessor;\n      var currentCharts = getCurrentCharts(chartConfig, mouseXY);\n      var currentItem = getCurrentItem(xScale, xAccessor, mouseXY, plotData);\n      this.triggerEvent(\"drag\", {\n        startPos: startPos,\n        mouseXY: mouseXY,\n        currentItem: currentItem,\n        currentCharts: currentCharts\n      }, e);\n      this.mutableState = {\n        mouseXY: mouseXY,\n        currentItem: currentItem,\n        currentCharts: currentCharts\n      };\n      requestAnimationFrame(function () {\n        _this7.clearMouseCanvas();\n\n        _this7.draw({\n          trigger: \"drag\"\n        });\n      });\n    }\n  }, {\n    key: \"handleDragEnd\",\n    value: function handleDragEnd(_ref5, e) {\n      var _this8 = this;\n\n      var mouseXY = _ref5.mouseXY;\n      this.triggerEvent(\"dragend\", {\n        mouseXY: mouseXY\n      }, e);\n      requestAnimationFrame(function () {\n        _this8.clearMouseCanvas();\n\n        _this8.draw({\n          trigger: \"dragend\"\n        });\n      });\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick(mousePosition, e) {\n      var _this9 = this;\n\n      this.triggerEvent(\"click\", this.mutableState, e);\n      requestAnimationFrame(function () {\n        _this9.clearMouseCanvas();\n\n        _this9.draw({\n          trigger: \"click\"\n        });\n      });\n    }\n  }, {\n    key: \"handleDoubleClick\",\n    value: function handleDoubleClick(mousePosition, e) {\n      this.triggerEvent(\"dblclick\", {}, e);\n    }\n  }, {\n    key: \"getChildContext\",\n    value: function getChildContext() {\n      var dimensions = getDimensions(this.props);\n      return {\n        fullData: this.fullData,\n        plotData: this.state.plotData,\n        width: dimensions.width,\n        height: dimensions.height,\n        chartConfig: this.state.chartConfig,\n        xScale: this.state.xScale,\n        xAccessor: this.state.xAccessor,\n        displayXAccessor: this.state.displayXAccessor,\n        chartCanvasType: this.props.type,\n        margin: this.props.margin,\n        ratio: this.props.ratio,\n        xAxisZoom: this.xAxisZoom,\n        yAxisZoom: this.yAxisZoom,\n        getCanvasContexts: this.getCanvasContexts,\n        redraw: this.redraw,\n        subscribe: this.subscribe,\n        unsubscribe: this.unsubscribe,\n        generateSubscriptionId: this.generateSubscriptionId,\n        getMutableState: this.getMutableState,\n        amIOnTop: this.amIOnTop,\n        setCursorClass: this.setCursorClass\n      };\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _resetChart = resetChart(this.props, true),\n          fullData = _resetChart.fullData,\n          state = _objectWithoutProperties(_resetChart, [\"fullData\"]);\n\n      this.setState(state);\n      this.fullData = fullData;\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var reset = shouldResetChart(this.props, nextProps);\n      var interaction = isInteractionEnabled(this.state.xScale, this.state.xAccessor, this.state.plotData);\n      var initialChartConfig = this.state.chartConfig;\n      var newState = void 0;\n\n      if (!interaction || reset || !shallowEqual(this.props.xExtents, nextProps.xExtents)) {\n        if (process.env.NODE_ENV !== \"production\") {\n          if (!interaction) log(\"RESET CHART, changes to a non interactive chart\");else if (reset) log(\"RESET CHART, one or more of these props changed\", CANDIDATES_FOR_RESET);else log(\"xExtents changed\");\n        } // do reset\n\n\n        newState = resetChart(nextProps);\n        this.mutableState = {};\n      } else {\n        var _state$xScale$domain = this.state.xScale.domain(),\n            _state$xScale$domain2 = _slicedToArray(_state$xScale$domain, 2),\n            start = _state$xScale$domain2[0],\n            end = _state$xScale$domain2[1];\n\n        var prevLastItem = last(this.fullData);\n        var calculatedState = calculateFullData(nextProps);\n        var xAccessor = calculatedState.xAccessor;\n        var lastItemWasVisible = xAccessor(prevLastItem) <= end && xAccessor(prevLastItem) >= start;\n\n        if (process.env.NODE_ENV !== \"production\") {\n          if (this.props.data !== nextProps.data) log(\"data is changed but seriesName did not, change the seriesName if you wish to reset the chart and lastItemWasVisible = \", lastItemWasVisible);else log(\"Trivial change, may be width/height or type changed, but that does not matter\");\n        }\n\n        newState = updateChart(calculatedState, this.state.xScale, nextProps, lastItemWasVisible, initialChartConfig);\n      }\n\n      var _newState = newState,\n          fullData = _newState.fullData,\n          state = _objectWithoutProperties(_newState, [\"fullData\"]);\n\n      if (this.panInProgress) {\n        if (process.env.NODE_ENV !== \"production\") {\n          log(\"Pan is in progress\");\n        }\n      } else {\n        /*\n        if (!reset) {\n        \tstate.chartConfig\n        \t\t.forEach((each) => {\n        \t\t\t// const sourceChartConfig = initialChartConfig.filter(d => d.id === each.id);\n        \t\t\tconst prevChartConfig = find(initialChartConfig, d => d.id === each.id);\n        \t\t\tif (isDefined(prevChartConfig) && prevChartConfig.yPanEnabled) {\n        \t\t\t\teach.yScale.domain(prevChartConfig.yScale.domain());\n        \t\t\t\teach.yPanEnabled = prevChartConfig.yPanEnabled;\n        \t\t\t}\n        \t\t});\n        }\n        */\n        this.clearThreeCanvas();\n        this.setState(state);\n      }\n\n      this.fullData = fullData;\n    }\n    /*\n    componentDidUpdate(prevProps, prevState) {\n    \tconsole.error(this.state.chartConfig, this.state.chartConfig.map(d => d.yScale.domain()));\n    }\n    */\n\n  }, {\n    key: \"resetYDomain\",\n    value: function resetYDomain(chartId) {\n      var chartConfig = this.state.chartConfig;\n      var changed = false;\n      var newChartConfig = chartConfig.map(function (each) {\n        if ((isNotDefined(chartId) || each.id === chartId) && !shallowEqual(each.yScale.domain(), each.realYDomain)) {\n          changed = true;\n          return _extends({}, each, {\n            yScale: each.yScale.domain(each.realYDomain),\n            yPanEnabled: false\n          });\n        }\n\n        return each;\n      });\n\n      if (changed) {\n        this.clearThreeCanvas();\n        this.setState({\n          chartConfig: newChartConfig\n        });\n      }\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate() {\n      // console.log(\"Happneing.....\", !this.panInProgress)\n      return !this.panInProgress;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _props2 = this.props,\n          type = _props2.type,\n          height = _props2.height,\n          width = _props2.width,\n          margin = _props2.margin,\n          className = _props2.className,\n          zIndex = _props2.zIndex,\n          defaultFocus = _props2.defaultFocus,\n          ratio = _props2.ratio,\n          mouseMoveEvent = _props2.mouseMoveEvent,\n          panEvent = _props2.panEvent,\n          zoomEvent = _props2.zoomEvent;\n      var _props3 = this.props,\n          useCrossHairStyleCursor = _props3.useCrossHairStyleCursor,\n          onSelect = _props3.onSelect;\n      var _state8 = this.state,\n          plotData = _state8.plotData,\n          xScale = _state8.xScale,\n          xAccessor = _state8.xAccessor,\n          chartConfig = _state8.chartConfig;\n      var dimensions = getDimensions(this.props);\n      var interaction = isInteractionEnabled(xScale, xAccessor, plotData);\n      var cursorStyle = useCrossHairStyleCursor && interaction;\n      var cursor = getCursorStyle();\n      return React.createElement(\"div\", {\n        style: {\n          position: \"relative\",\n          width: width,\n          height: height\n        },\n        className: className,\n        onClick: onSelect\n      }, React.createElement(CanvasContainer, {\n        ref: this.saveCanvasContainerNode,\n        type: type,\n        ratio: ratio,\n        width: width,\n        height: height,\n        zIndex: zIndex\n      }), React.createElement(\"svg\", {\n        className: className,\n        width: width,\n        height: height,\n        style: {\n          position: \"absolute\",\n          zIndex: zIndex + 5\n        }\n      }, cursor, React.createElement(\"defs\", null, React.createElement(\"clipPath\", {\n        id: \"chart-area-clip\"\n      }, React.createElement(\"rect\", {\n        x: \"0\",\n        y: \"0\",\n        width: dimensions.width,\n        height: dimensions.height\n      })), chartConfig.map(function (each, idx) {\n        return React.createElement(\"clipPath\", {\n          key: idx,\n          id: \"chart-area-clip-\" + each.id\n        }, React.createElement(\"rect\", {\n          x: \"0\",\n          y: \"0\",\n          width: each.width,\n          height: each.height\n        }));\n      })), React.createElement(\"g\", {\n        transform: \"translate(\" + (margin.left + 0.5) + \", \" + (margin.top + 0.5) + \")\"\n      }, React.createElement(EventCapture, {\n        ref: this.saveEventCaptureNode,\n        useCrossHairStyleCursor: cursorStyle,\n        mouseMove: mouseMoveEvent && interaction,\n        zoom: zoomEvent && interaction,\n        pan: panEvent && interaction,\n        width: dimensions.width,\n        height: dimensions.height,\n        chartConfig: chartConfig,\n        xScale: xScale,\n        xAccessor: xAccessor,\n        focus: defaultFocus,\n        disableInteraction: this.props.disableInteraction,\n        getAllPanConditions: this.getAllPanConditions,\n        onContextMenu: this.handleContextMenu,\n        onClick: this.handleClick,\n        onDoubleClick: this.handleDoubleClick,\n        onMouseDown: this.handleMouseDown,\n        onMouseMove: this.handleMouseMove,\n        onMouseEnter: this.handleMouseEnter,\n        onMouseLeave: this.handleMouseLeave,\n        onDragStart: this.handleDragStart,\n        onDrag: this.handleDrag,\n        onDragComplete: this.handleDragEnd,\n        onZoom: this.handleZoom,\n        onPinchZoom: this.handlePinchZoom,\n        onPinchZoomEnd: this.handlePinchZoomEnd,\n        onPan: this.handlePan,\n        onPanEnd: this.handlePanEnd\n      }), React.createElement(\"g\", {\n        className: \"react-stockcharts-avoid-interaction\"\n      }, this.props.children))));\n    }\n  }]);\n\n  return ChartCanvas;\n}(Component);\n\nfunction isInteractionEnabled(xScale, xAccessor, data) {\n  var interaction = !isNaN(xScale(xAccessor(head(data)))) && isDefined(xScale.invert);\n  return interaction;\n}\n\nChartCanvas.propTypes = {\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  margin: PropTypes.object,\n  ratio: PropTypes.number.isRequired,\n  // interval: PropTypes.oneOf([\"D\", \"W\", \"M\"]), // ,\"m1\", \"m5\", \"m15\", \"W\", \"M\"\n  type: PropTypes.oneOf([\"svg\", \"hybrid\"]),\n  pointsPerPxThreshold: PropTypes.number,\n  minPointsPerPxThreshold: PropTypes.number,\n  data: PropTypes.array.isRequired,\n  // initialDisplay: PropTypes.number,\n  xAccessor: PropTypes.func,\n  xExtents: PropTypes.oneOfType([PropTypes.array, PropTypes.func]),\n  zoomAnchor: PropTypes.func,\n  className: PropTypes.string,\n  seriesName: PropTypes.string.isRequired,\n  zIndex: PropTypes.number,\n  children: PropTypes.node.isRequired,\n  xScale: PropTypes.func.isRequired,\n  postCalculator: PropTypes.func,\n  flipXScale: PropTypes.bool,\n  useCrossHairStyleCursor: PropTypes.bool,\n  padding: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    left: PropTypes.number,\n    right: PropTypes.number\n  })]),\n  defaultFocus: PropTypes.bool,\n  zoomMultiplier: PropTypes.number,\n  onLoadMore: PropTypes.func,\n  displayXAccessor: function displayXAccessor(props, propName\n  /* , componentName */\n  ) {\n    if (isNotDefined(props[propName])) {\n      console.warn(\"`displayXAccessor` is not defined,\" + \" will use the value from `xAccessor` as `displayXAccessor`.\" + \" This might be ok if you do not use a discontinuous scale\" + \" but if you do, provide a `displayXAccessor` prop to `ChartCanvas`\");\n    } else if (typeof props[propName] !== \"function\") {\n      return new Error(\"displayXAccessor has to be a function\");\n    }\n  },\n  mouseMoveEvent: PropTypes.bool,\n  panEvent: PropTypes.bool,\n  clamp: PropTypes.oneOfType([PropTypes.string, PropTypes.bool, PropTypes.func]),\n  zoomEvent: PropTypes.bool,\n  onSelect: PropTypes.func,\n  maintainPointsPerPixelOnResize: PropTypes.bool,\n  disableInteraction: PropTypes.bool\n};\nChartCanvas.defaultProps = {\n  margin: {\n    top: 20,\n    right: 30,\n    bottom: 30,\n    left: 80\n  },\n  type: \"hybrid\",\n  pointsPerPxThreshold: 2,\n  minPointsPerPxThreshold: 1 / 100,\n  className: \"react-stockchart\",\n  zIndex: 1,\n  xExtents: [min, max],\n  postCalculator: identity,\n  padding: 0,\n  xAccessor: identity,\n  flipXScale: false,\n  useCrossHairStyleCursor: true,\n  defaultFocus: true,\n  onLoadMore: noop,\n  onSelect: noop,\n  mouseMoveEvent: true,\n  panEvent: true,\n  zoomEvent: true,\n  zoomMultiplier: 1.1,\n  clamp: false,\n  zoomAnchor: mouseBasedZoomAnchor,\n  maintainPointsPerPixelOnResize: true,\n  // ratio: 2,\n  disableInteraction: false\n};\nChartCanvas.childContextTypes = {\n  plotData: PropTypes.array,\n  fullData: PropTypes.array,\n  chartConfig: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n    origin: PropTypes.arrayOf(PropTypes.number).isRequired,\n    padding: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n      top: PropTypes.number,\n      bottom: PropTypes.number\n    })]),\n    yExtents: PropTypes.arrayOf(PropTypes.func),\n    yExtentsProvider: PropTypes.func,\n    yScale: PropTypes.func.isRequired,\n    mouseCoordinates: PropTypes.shape({\n      at: PropTypes.string,\n      format: PropTypes.func\n    }),\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired\n  })).isRequired,\n  xScale: PropTypes.func.isRequired,\n  xAccessor: PropTypes.func.isRequired,\n  displayXAccessor: PropTypes.func.isRequired,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  chartCanvasType: PropTypes.oneOf([\"svg\", \"hybrid\"]).isRequired,\n  margin: PropTypes.object.isRequired,\n  ratio: PropTypes.number.isRequired,\n  getCanvasContexts: PropTypes.func,\n  xAxisZoom: PropTypes.func,\n  yAxisZoom: PropTypes.func,\n  amIOnTop: PropTypes.func,\n  redraw: PropTypes.func,\n  subscribe: PropTypes.func,\n  unsubscribe: PropTypes.func,\n  setCursorClass: PropTypes.func,\n  generateSubscriptionId: PropTypes.func,\n  getMutableState: PropTypes.func\n};\n\nChartCanvas.ohlcv = function (d) {\n  return {\n    date: d.date,\n    open: d.open,\n    high: d.high,\n    low: d.low,\n    close: d.close,\n    volume: d.volume\n  };\n};\n\nexport default ChartCanvas;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAUC,QAAnB,EAA6BC,GAA7B,EAAkCC,GAAlC,QAA6C,UAA7C;AAEA,SACCC,IADD,EAECC,IAFD,EAGCC,SAHD,EAICC,YAJD,EAKCC,WALD,EAMCC,YAND,EAOCC,QAPD,EAQCC,IARD,EASCC,OATD,EAUCC,SAVD,QAWO,SAXP;AAaA;;AACA,SACCC,oBADD,EAECC,8BAFD,EAGCC,0BAHD,QAIO,sBAJP;AAKA;;AAEA,SAASC,iBAAT,EAA4BC,gCAA5B,EAA8DC,gBAA9D,EAAgFC,cAAhF,QAAsG,uBAAtG;AAEA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AAEA,IAAMC,MAAMX,UAAU,aAAVA,CAAZ;AAEA,IAAMY,uBAAuB,CAC5B,YAD4B,CAA7B;;AAMA,SAASC,gBAAT,CAA0BC,SAA1B,EAAqCC,SAArC,EAAgD;EAC/C,OAAO,CAACH,qBAAqBI,KAArBJ,CAA2B,eAAO;IACzC,IAAMK,SAASrB,aAAakB,UAAUI,GAAVJ,CAAblB,EAA6BmB,UAAUG,GAAVH,CAA7BnB,CAAf,CADyC,CAEzC;;IACA,OAAOqB,MAAP;EAHO,EAAR;AAKA;;AAED,SAASE,cAAT,GAA0B;EACzB,IAAMC,05BAAN;EAwCA,OAAQpC;IAAOqC,MAAK;EAAZ,GAAwBD,YAAxB,CAAR;AACA;;AAED,SAASE,aAAT,CAAuBC,KAAvB,EAA8B;EAC7B,OAAO;IACNC,QAAQD,MAAMC,MAAND,GAAeA,MAAME,MAANF,CAAaG,GAA5BH,GAAkCA,MAAME,MAANF,CAAaI,MADjD;IAENC,OAAOL,MAAMK,KAANL,GAAcA,MAAME,MAANF,CAAaM,IAA3BN,GAAkCA,MAAME,MAANF,CAAaO;EAFhD,CAAP;AAIA;;AAED,SAASC,kBAAT,CAA4BC,UAA5B,EAAwC;EACvC,OAAOA,aAAa,CAAC,CAAdA,GAAkB,CAAzB;AACA;;AAED,SAASC,iBAAT,CAA2BV,KAA3B,EAAkC;EAAA,IACnBW,QADmB,GACqDX,KADrD,CACzBY,IADyB;EAAA,IACTC,QADS,GACqDb,KADrD,CACTa,QADS;EAAA,IACCC,MADD,GACqDd,KADrD,CACCc,MADD;EAAA,IACSC,KADT,GACqDf,KADrD,CACSe,KADT;EAAA,IACgBC,oBADhB,GACqDhB,KADrD,CACgBgB,oBADhB;EAAA,IACsCP,UADtC,GACqDT,KADrD,CACsCS,UADtC;EAAA,IAEzBQ,SAFyB,GAEgCjB,KAFhC,CAEzBiB,SAFyB;EAAA,IAEdC,gBAFc,GAEgClB,KAFhC,CAEdkB,gBAFc;EAAA,IAEIC,uBAFJ,GAEgCnB,KAFhC,CAEImB,uBAFJ;EAIjC,IAAMC,eAAelD,UAAU2C,QAAV3C,IAClB2C,QADkB3C,GAElB+C,cAAc3C,QAFjB;;EAJiC,iBAQVa,UAAU;IAChC2B,cADgC;IAEhCM,0BAFgC;IAGhCL,YAHgC;IAIhCC,0CAJgC;IAKhCG,gDALgC;IAMhCV;EANgC,CAAVtB,CARU;EAAA,IAQzBkC,UARyB,cAQzBA,UARyB;;EAiBjC,OAAO;IACNJ,oBADM;IAENC,kBAAkBA,oBAAoBD,SAFhC;IAGNH,QAAQA,OAAOQ,IAAPR,EAHF;IAINH,kBAJM;IAKNU;EALM,CAAP;AAOA;;AACD,SAASE,UAAT,CAAoBvB,KAApB,EAAqD;EAAA,IAA1BwB,gBAA0B,uEAAP,KAAO;;EACpD,IAAIC,QAAQC,GAARD,CAAYE,QAAZF,KAAyB,YAA7B,EAA2C;IAC1C,IAAI,CAACD,gBAAL,EAAuBpC,IAAI,aAAJA;EACvB;;EAED,IAAMwC,QAAQC,eAAe7B,KAAf6B,CAAd;EALoD,IAM5CZ,SAN4C,GAMFW,KANE,CAM5CX,SAN4C;EAAA,IAMjCC,gBANiC,GAMFU,KANE,CAMjCV,gBANiC;EAAA,IAMfP,QANe,GAMFiB,KANE,CAMfjB,QANe;EAAA,IAOlCmB,eAPkC,GAONF,KAPM,CAO5CG,QAP4C;EAAA,IAOjBjB,MAPiB,GAONc,KAPM,CAOjBd,MAPiB;EAAA,IAQ5CkB,cAR4C,GAQfhC,KARe,CAQ5CgC,cAR4C;EAAA,IAQ5BC,QAR4B,GAQfjC,KARe,CAQ5BiC,QAR4B;EAUpD,IAAMF,WAAWC,eAAeF,eAAfE,CAAjB;EAEA,IAAME,aAAanC,cAAcC,KAAdD,CAAnB;EACA,IAAMoC,cAAcrD,iCACnBD,kBAAkBqD,UAAlBrD,EAA8BoD,QAA9BpD,CADmBC,EAEnB;IAAEiD,kBAAF;IAAYd,oBAAZ;IAAuBC,kCAAvB;IAAyCP;EAAzC,CAFmB7B,EAGnBgC,OAAOsB,MAAPtB,EAHmBhC,CAApB;EAMA,oBACI8C,KADJ;IAECd,cAFD;IAGCiB,kBAHD;IAICI;EAJD;AAMA;;AAED,SAASE,WAAT,CACCC,QADD,EAECC,aAFD,EAGCvC,KAHD,EAICwC,kBAJD,EAKCC,kBALD,EAME;EAAA,IAEO9B,QAFP,GAEqE2B,QAFrE,CAEO3B,QAFP;EAAA,IAEiBG,MAFjB,GAEqEwB,QAFrE,CAEiBxB,MAFjB;EAAA,IAEyBG,SAFzB,GAEqEqB,QAFrE,CAEyBrB,SAFzB;EAAA,IAEoCC,gBAFpC,GAEqEoB,QAFrE,CAEoCpB,gBAFpC;EAAA,IAEsDG,UAFtD,GAEqEiB,QAFrE,CAEsDjB,UAFtD;EAID,IAAMqB,WAAWzE,KAAK0C,QAAL1C,CAAjB;;EAJC,4BAKoBsE,cAAcH,MAAdG,EALpB;EAAA;EAAA,IAKMI,KALN;EAAA,IAKaC,GALb;;EAOD,IAAInB,QAAQC,GAARD,CAAYE,QAAZF,KAAyB,YAA7B,EAA2C;IAC1CrC,IAAI,gBAAJA;EACA;;EATA,IAWO4C,cAXP,GAWyDhC,KAXzD,CAWOgC,cAXP;EAAA,IAWuBC,QAXvB,GAWyDjC,KAXzD,CAWuBiC,QAXvB;EAAA,IAWiCY,OAXjC,GAWyD7C,KAXzD,CAWiC6C,OAXjC;EAAA,IAW0CpC,UAX1C,GAWyDT,KAXzD,CAW0CS,UAX1C;EAAA,IAYOqC,8BAZP,GAY0C9C,KAZ1C,CAYO8C,8BAZP;EAaD,IAAMC,YAAYvC,mBAAmBC,UAAnBD,CAAlB;EACA,IAAM0B,aAAanC,cAAcC,KAAdD,CAAnB;EAEA,IAAMiD,gBAAgBC,UAAUnC,MAAVmC,EAAkBf,UAAlBe,EAA8BJ,OAA9BI,EAAuCF,SAAvCE,CAAtB,CAhBC,CAkBD;;EACA,IAAInB,wBAAJ;;EACA,IAAI,CAACU,kBAAD,IAAuBI,OAAO3B,UAAUyB,QAAVzB,CAAlC,EAAuD;IACtD;IADsD,2BAGvBsB,cAAcW,KAAdX,EAHuB;IAAA;IAAA,IAG/CY,UAH+C;IAAA,IAGnCC,QAHmC;;IAAA,2BAIjBJ,cAAcE,KAAdF,EAJiB;IAAA;IAAA,IAI/CK,aAJ+C;IAAA,IAIhCC,WAJgC;;IAKtD,IAAMC,kBAAmB,CAACD,cAAcD,aAAf,KAAiCD,WAAWD,UAA5C,KAA4DP,MAAMD,KAAlE,CAAzB;IACA,IAAMa,WAAWV,iCACdF,MAAMW,eADQT,GAEdH,KAFH;IAIA,IAAMc,YAAYlB,cAActB,UAAUyB,QAAVzB,CAAdsB,CAAlB,CAVsD,CAWtD;;IACA,IAAMmB,WAAWrC,WAChBV,QADgBU,EACN,CAACmC,QAAD,EAAWZ,GAAX,CADMvB,EACWJ,SADXI,EACsB2B,aADtB3B,EAEhB;MAAEsC,eAAehB,KAAjB;MAAwBiB,aAAa;QAAElB,kBAAF;QAAYe;MAAZ;IAArC,CAFgBpC,CAAjB;IAIAS,kBAAkB4B,SAAS3B,QAA3BD;IACAkB,cAAcZ,MAAdY,CAAqBU,SAAStB,MAA9BY,EAjBsD,CAkBtD;EAlBD,OAmBO,IAAIR,sBACNI,MAAM3B,UAAUyB,QAAVzB,CADJ,EACyB;IAC/B;IACA;IAEA;IACA,IAAM4C,KAAKtB,cAActB,UAAUyB,QAAVzB,CAAdsB,IAAqCA,cAAcW,KAAdX,GAAsB,CAAtBA,CAAhD;;IAL+B,4BAMJA,cAAcW,KAAdX,GAAsBuB,GAAtBvB,CAA0B;MAAA,OAAKwB,IAAIF,EAAT;IAA1B,GAAuCC,GAAvCvB,CAA2CA,cAAcyB,MAAzDzB,CANI;IAAA;IAAA,IAMxBiB,SANwB;IAAA,IAMdS,MANc;;IAS/B,IAAMP,YAAWrC,WAAWV,QAAXU,EAAqB,CAACmC,SAAD,EAAWS,MAAX,CAArB5C,EAAyCJ,SAAzCI,EAAoD2B,aAApD3B,CAAjB;;IACAS,kBAAkB4B,UAAS3B,QAA3BD;IACAkB,cAAcZ,MAAdY,CAAqBU,UAAStB,MAA9BY,EAX+B,CAWS;EACxC,CApDA,CAqDD;;;EACA,IAAMjB,WAAWC,eAAeF,eAAfE,CAAjB;EACA,IAAMG,cAAcrD,iCACnBD,kBAAkBqD,UAAlBrD,EAA8BoD,QAA9BpD,EAAwC4D,kBAAxC5D,CADmBC,EAEnB;IAAEiD,kBAAF;IAAYd,oBAAZ;IAAuBC,kCAAvB;IAAyCP;EAAzC,CAFmB7B,EAGnBkE,cAAcZ,MAAdY,EAHmBlE,CAApB;EAMA,OAAO;IACNgC,QAAQkC,aADF;IAEN/B,oBAFM;IAGNkB,wBAHM;IAINJ,kBAJM;IAKNpB,kBALM;IAMNU;EANM,CAAP;AAQA;;AAED,SAASQ,cAAT,CAAwB7B,KAAxB,EAA+B;EAAA,IAGlBkE,aAHkB,GAI1BlE,KAJ0B,CAG7BiB,SAH6B;EAAA,IAGOkD,YAHP,GAI1BnE,KAJ0B,CAGHoE,QAHG;EAAA,IAGqBxD,IAHrB,GAI1BZ,KAJ0B,CAGqBY,IAHrB;EAAA,IAG2BiC,OAH3B,GAI1B7C,KAJ0B,CAG2B6C,OAH3B;EAAA,IAGoCpC,UAHpC,GAI1BT,KAJ0B,CAGoCS,UAHpC;;EAM9B,IAAIgB,QAAQC,GAARD,CAAYE,QAAZF,KAAyB,YAAzBA,IAAyCvD,UAAU8B,MAAMc,MAANd,CAAagE,MAAvB9F,CAA7C,EAA6E;IAC5E,KAAK,IAAImG,IAAI,CAAb,EAAgBA,IAAIzD,KAAK0D,MAAzB,EAAiCD,GAAjC,EAAsC;MACrC,IAAME,OAAO3D,KAAKyD,IAAI,CAATzD,CAAb;MACA,IAAM4D,OAAO5D,KAAKyD,CAALzD,CAAb;;MACA,IAAIsD,cAAcK,IAAdL,IAAsBA,cAAcM,IAAdN,CAA1B,EAA+C;QAC9C,MAAM,IAAIO,KAAJ,CAAU,2FAAV,CAAN;MACA;IACD;EACD;;EAED,IAAM1B,YAAYvC,mBAAmBC,UAAnBD,CAAlB;EACA,IAAM0B,aAAanC,cAAcC,KAAdD,CAAnB;EAEA,IAAMnC,SAAS,OAAOuG,YAAP,KAAwB,UAAxB,GACZA,aAAavD,IAAbuD,CADY,GAEZtG,SAASsG,aAAaL,GAAbK,CAAiB;IAAA,OAAK3F,QAAQkG,CAARlG,CAAL;EAAjB,GAAkCsF,GAAlCK,CAAsC;IAAA,OAAQQ,KAAK/D,IAAL+D,EAAWT,aAAXS,CAAR;EAAtC,EAAT9G,CAFH;;EAnB8B,yBAuBwC6C,kBAAkBV,KAAlBU,CAvBxC;EAAA,IAuBtBO,SAvBsB,sBAuBtBA,SAvBsB;EAAA,IAuBXC,gBAvBW,sBAuBXA,gBAvBW;EAAA,IAuBOJ,MAvBP,sBAuBOA,MAvBP;EAAA,IAuBeH,QAvBf,sBAuBeA,QAvBf;EAAA,IAuByBU,UAvBzB,sBAuByBA,UAvBzB;;EAwB9B,IAAM2B,gBAAgBC,UAAUnC,MAAVmC,EAAkBf,UAAlBe,EAA8BJ,OAA9BI,EAAuCF,SAAvCE,CAAtB;;EAxB8B,kBA0BD5B,WAAWV,QAAXU,EAAqBzD,MAArByD,EAA6B6C,aAA7B7C,EAA4C2B,aAA5C3B,CA1BC;EAAA,IA0BtBU,QA1BsB,eA0BtBA,QA1BsB;EAAA,IA0BZK,MA1BY,eA0BZA,MA1BY;;EA4B9B,IAAIX,QAAQC,GAARD,CAAYE,QAAZF,KAAyB,YAAzBA,IAAyCM,SAASuC,MAATvC,IAAmB,CAAhE,EAAmE;IAClE,MAAM,IAAI0C,KAAJ,cAAqB1C,SAASuC,MAA9B,4DAAN;EACA;;EACD,OAAO;IACNvC,kBADM;IAENjB,QAAQkC,cAAcZ,MAAdY,CAAqBZ,MAArBY,CAFF;IAGN/B,oBAHM;IAINC,kCAJM;IAKNP,kBALM;IAMNU;EANM,CAAP;AAQA;;AAED,SAAS4B,SAAT,CAAmBnC,MAAnB,EAA2BoB,UAA3B,EAAuCW,OAAvC,EAA+D;EAAA,IAAfE,SAAe,uEAAH,CAAG;;EAC9D,IAAIjC,OAAO8D,gBAAX,EAA6B;IAC5B,IAAIC,MAAMhC,OAANgC,CAAJ,EAAoB,MAAM,IAAIJ,KAAJ,CAAU,8CAAV,CAAN;IACpB3D,OAAO8D,gBAAP9D,CAAwB,CAAC,CAAD,EAAIoB,WAAW7B,KAAf,CAAxBS,EAA+C+B,OAA/C/B;EAFD,OAGO,IAAIA,OAAO+B,OAAX,EAAoB;IAC1B,IAAIgC,MAAMhC,OAANgC,CAAJ,EAAoB,MAAM,IAAIJ,KAAJ,CAAU,8CAAV,CAAN;IACpB3D,OAAOoC,KAAPpC,CAAa,CAAC,CAAD,EAAIoB,WAAW7B,KAAf,CAAbS;IACAA,OAAO+B,OAAP/B,CAAe+B,UAAU,CAAzB/B;EAHM,OAIA;IAAA,WACkB+D,MAAMhC,OAANgC,IACrBhC,OADqBgC,GAErB;MAAEvE,MAAMuC,OAAR;MAAiBtC,OAAOsC;IAAxB,CAHG;IAAA,IACEvC,IADF,QACEA,IADF;IAAA,IACQC,KADR,QACQA,KADR;;IAIN,IAAIwC,YAAY,CAAhB,EAAmB;MAClBjC,OAAOoC,KAAPpC,CAAa,CAACR,IAAD,EAAO4B,WAAW7B,KAAX6B,GAAmB3B,KAA1B,CAAbO;IADD,OAEO;MACNA,OAAOoC,KAAPpC,CAAa,CAACoB,WAAW7B,KAAX6B,GAAmB3B,KAApB,EAA2BD,IAA3B,CAAbQ;IACA;EACD;;EACD,OAAOA,MAAP;AACA;;AAED,SAASgE,gBAAT,CAA0BC,KAA1B,EAAiC;EAAA,IACxBC,SADwB,GACCD,KADD,CACxBC,SADwB;EAAA,IACbC,SADa,GACCF,KADD,CACbE,SADa;EAGhC,OAAO;IACNC,SAAS,CAACC,KAAKrH,GAALqH,CAASH,UAAU,CAAVA,CAATG,EAAuBF,UAAU,CAAVA,CAAvBE,CAAD,EAAuCA,KAAKrH,GAALqH,CAASH,UAAU,CAAVA,CAATG,EAAuBF,UAAU,CAAVA,CAAvBE,CAAvC,CADH;IAENC,aAAa,CAACD,KAAKpH,GAALoH,CAASH,UAAU,CAAVA,CAATG,EAAuBF,UAAU,CAAVA,CAAvBE,CAAD,EAAuCA,KAAKpH,GAALoH,CAASH,UAAU,CAAVA,CAATG,EAAuBF,UAAU,CAAVA,CAAvBE,CAAvC;EAFP,CAAP;AAIA;;IAGKE,W;;;EACL,uBAAc;IAAAC;;IAAA;;IAEbC,MAAKC,WAAL,GAAmBD,MAAKC,WAAL,CAAiBC,IAAjB,OAAnB;IACAF,MAAKG,iBAAL,GAAyBH,MAAKG,iBAAL,CAAuBD,IAAvB,OAAzB;IAEAF,MAAKI,eAAL,GAAuBJ,MAAKI,eAAL,CAAqBF,IAArB,OAAvB;IACAF,MAAKK,gBAAL,GAAwBL,MAAKK,gBAAL,CAAsBH,IAAtB,OAAxB;IACAF,MAAKM,gBAAL,GAAwBN,MAAKM,gBAAL,CAAsBJ,IAAtB,OAAxB;IACAF,MAAKO,UAAL,GAAkBP,MAAKO,UAAL,CAAgBL,IAAhB,OAAlB;IACAF,MAAKQ,eAAL,GAAuBR,MAAKQ,eAAL,CAAqBN,IAArB,OAAvB;IACAF,MAAKS,kBAAL,GAA0BT,MAAKS,kBAAL,CAAwBP,IAAxB,OAA1B;IACAF,MAAKU,SAAL,GAAiBV,MAAKU,SAAL,CAAeR,IAAf,OAAjB;IACAF,MAAKW,YAAL,GAAoBX,MAAKW,YAAL,CAAkBT,IAAlB,OAApB;IACAF,MAAKY,WAAL,GAAmBZ,MAAKY,WAAL,CAAiBV,IAAjB,OAAnB;IACAF,MAAKa,eAAL,GAAuBb,MAAKa,eAAL,CAAqBX,IAArB,OAAvB;IACAF,MAAKc,iBAAL,GAAyBd,MAAKc,iBAAL,CAAuBZ,IAAvB,OAAzB;IACAF,MAAKe,iBAAL,GAAyBf,MAAKe,iBAAL,CAAuBb,IAAvB,OAAzB;IACAF,MAAKgB,eAAL,GAAuBhB,MAAKgB,eAAL,CAAqBd,IAArB,OAAvB;IACAF,MAAKiB,UAAL,GAAkBjB,MAAKiB,UAAL,CAAgBf,IAAhB,OAAlB;IACAF,MAAKkB,aAAL,GAAqBlB,MAAKkB,aAAL,CAAmBhB,IAAnB,OAArB;IAEAF,MAAKmB,SAAL,GAAiBnB,MAAKmB,SAAL,CAAejB,IAAf,OAAjB;IACAF,MAAKoB,eAAL,GAAuBpB,MAAKoB,eAAL,CAAqBlB,IAArB,OAAvB;IACAF,MAAKqB,SAAL,GAAiBrB,MAAKqB,SAAL,CAAenB,IAAf,OAAjB;IACAF,MAAKsB,SAAL,GAAiBtB,MAAKsB,SAAL,CAAepB,IAAf,OAAjB;IACAF,MAAKuB,YAAL,GAAoBvB,MAAKuB,YAAL,CAAkBrB,IAAlB,OAApB;IACAF,MAAKwB,uBAAL,GAA+BxB,MAAKwB,uBAAL,CAA6BtB,IAA7B,OAA/B;IACAF,MAAKyB,sBAAL,GAA8BzB,MAAKyB,sBAAL,CAA4BvB,IAA5B,OAA9B;IACAF,MAAK0B,IAAL,GAAY1B,MAAK0B,IAAL,CAAUxB,IAAV,OAAZ;IACAF,MAAK2B,MAAL,GAAc3B,MAAK2B,MAAL,CAAYzB,IAAZ,OAAd;IACAF,MAAK4B,mBAAL,GAA2B5B,MAAK4B,mBAAL,CAAyB1B,IAAzB,OAA3B;IAEAF,MAAK6B,aAAL,GAAqB,EAArB;IACA7B,MAAK8B,SAAL,GAAiB9B,MAAK8B,SAAL,CAAe5B,IAAf,OAAjB;IACAF,MAAK+B,WAAL,GAAmB/B,MAAK+B,WAAL,CAAiB7B,IAAjB,OAAnB;IACAF,MAAKgC,QAAL,GAAgBhC,MAAKgC,QAAL,CAAc9B,IAAd,OAAhB;IACAF,MAAKiC,oBAAL,GAA4BjC,MAAKiC,oBAAL,CAA0B/B,IAA1B,OAA5B;IACAF,MAAKkC,uBAAL,GAA+BlC,MAAKkC,uBAAL,CAA6BhC,IAA7B,OAA/B;IACAF,MAAKmC,cAAL,GAAsBnC,MAAKmC,cAAL,CAAoBjC,IAApB,OAAtB;IACAF,MAAKoC,eAAL,GAAuBpC,MAAKoC,eAAL,CAAqBlC,IAArB,OAAvB,CAvCa,CAwCb;;IACAF,MAAKqC,gBAAL,GAAwB,EAAxB;IACArC,MAAKsC,aAAL,GAAqB,KAArB;IAEAtC,MAAK3D,KAAL,GAAa,EAAb;IACA2D,MAAKuC,YAAL,GAAoB,EAApB;IACAvC,MAAKwC,kBAAL,GAA0B,CAA1B;IA9Ca;EA+Cb;;;;yCACoBC,MAAM;MAC1B,KAAKC,gBAAL,GAAwBD,IAAxB;IACA;;;4CACuBA,MAAM;MAC7B,KAAKE,mBAAL,GAA2BF,IAA3B;IACA;;;sCACiB;MACjB,OAAO,KAAKF,YAAZ;IACA;;;kCACa;MACb,oBACI,KAAKlG,KADT;QAECjB,UAAU,KAAKA;MAFhB;IAIA;;;wCACmB;MACnB,IAAI,KAAKuH,mBAAT,EAA8B;QAC7B,OAAO,KAAKA,mBAAL,CAAyBxC,iBAAzB,EAAP;MACA;IACD;;;6CACwB;MACxB,KAAKqC,kBAAL;MACA,OAAO,KAAKA,kBAAZ;IACA;;;sCACiB;MACjB,IAAMI,WAAW,KAAKzC,iBAAL,EAAjB;;MACA,IAAIyC,YAAYA,SAASC,IAAzB,EAA+B;QAC9BhK,YAAY,CACX+J,SAASC,IADE,EAEX;QACAD,SAASE,UAHE,CAAZjK,EAIG,KAAK4B,KAAL,CAAWsI,KAJdlK;MAKA;IACD;;;uCACkB;MAClB,IAAM+J,WAAW,KAAKzC,iBAAL,EAAjB;;MACA,IAAIyC,YAAYA,SAASE,UAAzB,EAAqC;QACpCjK,YAAY,CACX+J,SAASE,UADE,CAAZjK,EAGG,KAAK4B,KAAL,CAAWsI,KAHdlK;MAIA;IACD;;;uCACkB;MAClB,IAAM+J,WAAW,KAAKzC,iBAAL,EAAjB;;MACA,IAAIyC,YAAYA,SAASC,IAAzB,EAA+B;QAC9BhK,YAAY,CACX+J,SAASC,IADE,EAEX;QACAD,SAASE,UAHE,EAIXF,SAASI,EAJE,CAAZnK,EAKG,KAAK4B,KAAL,CAAWsI,KALdlK;MAMA;IACD;;;8BACSoK,IAAIC,MAAM;MAAA,4BAIZA,IAJY,CACXC,gBADW;MAAA,IACXA,gBADW,yCACQlK,QAAQ;QAClCmK,WAAW,KADuB;QAElCC,YAAY;MAFsB,CAARpK,CADR;MAKnB,KAAK4I,aAAL,GAAqB,KAAKA,aAAL,CAAmByB,MAAnB;QACpBL;MADoB,GAEjBC,IAFiB;QAGpBC;MAHoB,GAArB;IAKA;;;gCACWF,IAAI;MACf,KAAKpB,aAAL,GAAqB,KAAKA,aAAL,CAAmB0B,MAAnB,CAA0B;QAAA,OAAQnE,KAAK6D,EAAL7D,KAAY6D,EAApB;MAA1B,EAArB;IACA;;;0CACqB;MACrB,OAAO,KAAKpB,aAAL,CACLtD,GADK,CACD;QAAA,OAAQa,KAAK+D,gBAAL/D,EAAR;MADC,EAAP;IAEA;;;mCACcoE,WAAW;MACzB,IAAI,KAAKd,gBAAL,IAAyB,IAA7B,EAAmC;QAClC,KAAKA,gBAAL,CAAsBP,cAAtB,CAAqCqB,SAArC;MACA;IACD;;;6BACQP,IAAI;MACZ,IAAMQ,qBAAqB,KAAK5B,aAAL,CACzB0B,MADyB,CAClB;QAAA,OAAQnE,KAAK+D,gBAAL/D,GAAwBgE,SAAhC;MADkB,EAA3B;MAGA,OAAOK,mBAAmB1E,MAAnB0E,GAA4B,CAA5BA,IACH/K,KAAK+K,kBAAL/K,EAAyBuK,EAAzBvK,KAAgCuK,EADpC;IAEA;;;sCACiBS,SAASC,GAAG;MAAA,aACwB,KAAKtH,KAD7B;MAAA,IACrBX,SADqB,UACrBA,SADqB;MAAA,IACVkB,WADU,UACVA,WADU;MAAA,IACGJ,QADH,UACGA,QADH;MAAA,IACajB,MADb,UACaA,MADb;MAG7B,IAAMqI,gBAAgBpK,iBAAiBoD,WAAjBpD,EAA8BkK,OAA9BlK,CAAtB;MACA,IAAMqK,cAAcpK,eAAe8B,MAAf9B,EAAuBiC,SAAvBjC,EAAkCiK,OAAlCjK,EAA2C+C,QAA3C/C,CAApB;MAEA,KAAKqK,YAAL,CAAkB,aAAlB,EAAiC;QAChCJ,gBADgC;QAEhCG,wBAFgC;QAGhCD;MAHgC,CAAjC,EAIGD,CAJH;IAKA;;;4CACuBI,WAAW;MAAA,cAO9B,KAAK1H,KAPyB;MAAA,IAEjCX,SAFiC,WAEjCA,SAFiC;MAAA,IAGjCC,gBAHiC,WAGjCA,gBAHiC;MAAA,IAIzBqB,aAJyB,WAIjCzB,MAJiC;MAAA,IAKpB2B,kBALoB,WAKjCN,WALiC;MAAA,IAMvBL,eANuB,WAMjCC,QANiC;MAAA,IAQ1BV,UAR0B,GAQX,KAAKO,KAAL,CAAfP,UAR0B;MAAA,IAS1BV,QAT0B,GASb,KAAbA,QAT0B;MAAA,IAU1BqB,cAV0B,GAUP,KAAKhC,KAAL,CAAnBgC,cAV0B;;MAAA,mBAYWX,WAC5CV,QAD4CU,EAE5CiI,SAF4CjI,EAG5CJ,SAH4CI,EAI5CkB,aAJ4ClB,EAK5C;QACCkI,iBAAiBzH,eADlB;QAEC0H,eAAejH,cAAcH,MAAdG;MAFhB,CAL4ClB,CAZX;MAAA,IAYhBoI,cAZgB,gBAY1B1H,QAZ0B;MAAA,IAYAK,MAZA,gBAYAA,MAZA;;MAuBlC,IAAML,WAAWC,eAAeyH,cAAfzH,CAAjB;MACA,IAAM0H,eAAenH,cAAcjB,IAAdiB,GAAqBH,MAArBG,CAA4BH,MAA5BG,CAArB;MACA,IAAMJ,cAAcrD,iCACnB2D,kBADmB3D,EAEnB;QAAEiD,kBAAF;QAAYd,oBAAZ;QAAuBC,kCAAvB;QAAyCP;MAAzC,CAFmB7B,EAGnB4K,aAAatH,MAAbsH,EAHmB5K,CAApB;MAMA,OAAO;QACNgC,QAAQ4I,YADF;QAEN3H,kBAFM;QAGNI;MAHM,CAAP;IAKA;;;oCACewH,cAAcC,YAAY;MAAA,IACzBC,kBADyB,GACFF,YADE,CACjC7I,MADiC;MAAA,cASrC,KAAKc,KATgC;MAAA,IAIhCW,aAJgC,WAIxCzB,MAJwC;MAAA,IAK3B2B,kBAL2B,WAKxCN,WALwC;MAAA,IAM9BL,eAN8B,WAMxCC,QANwC;MAAA,IAOxCd,SAPwC,WAOxCA,SAPwC;MAAA,IAQxCC,gBARwC,WAQxCA,gBARwC;MAAA,IAUjCG,UAViC,GAUlB,KAAKO,KAAL,CAAfP,UAViC;MAAA,IAWjCV,QAXiC,GAWpB,KAAbA,QAXiC;MAAA,IAYjCqB,cAZiC,GAYd,KAAKhC,KAAL,CAAnBgC,cAZiC;;MAAA,wBAcE8C,iBAAiB6E,YAAjB7E,CAdF;MAAA,IAcxBgF,GAdwB,qBAcjC5E,OAdiC;MAAA,IAcN6E,GAdM,qBAcnB3E,WAdmB;;MAAA,yBAeEN,iBAAiB8E,UAAjB9E,CAfF;MAAA,IAexBkF,GAfwB,sBAejC9E,OAfiC;MAAA,IAeN+E,GAfM,sBAenB7E,WAfmB;;MAiBzC,IAAM8D,IAAIW,mBAAmB3G,KAAnB2G,GAA2B,CAA3BA,CAAV;MAEA,IAAMK,QAAQ/E,KAAKgF,KAALhF,CAAW,EAAE4E,IAAI,CAAJA,IAASC,IAAI,CAAJA,CAATD,GAAkBD,IAAI,CAAJA,IAASG,IAAI,CAAJA,CAA7B,KAAwCH,IAAI,CAAJA,IAASC,IAAI,CAAJA,CAAjD,CAAX5E,CAAd;MACA,IAAMiF,QAAQjF,KAAKgF,KAALhF,CAAW+D,IAAI,CAAC,CAACA,IAAIa,IAAI,CAAJA,CAAL,KAAgBb,IAAIc,IAAI,CAAJA,CAApB,IAA8B,CAACd,IAAIY,IAAI,CAAJA,CAAL,KAAgBZ,IAAIe,IAAI,CAAJA,CAApB,CAA/B,KAAgEf,IAAIY,IAAI,CAAJA,CAAJZ,IAAeA,IAAIa,IAAI,CAAJA,CAAnBb,CAAhE,CAAf/D,CAAd;MAEA,IAAMpB,IAAIoB,KAAKgF,KAALhF,CAAW,CAAC+E,KAAD,GAASJ,IAAI,CAAJA,CAAT,IAAmB,CAACI,KAAD,GAASF,IAAI,CAAJA,CAA5B,CAAX7E,CAAV;MACA,IAAMkF,IAAIlF,KAAKgF,KAALhF,CAAW+D,IAAI,CAACkB,QAAQlB,CAAT,KAAeA,IAAIY,IAAI,CAAJA,CAAnB,KAA8BM,SAASlB,IAAIc,IAAI,CAAJA,CAAbI,CAA9B,CAAfjF,CAAV;MAEA,IAAMmE,YAAY,CAACvF,CAAD,EAAIsG,CAAJ,EAAOvG,GAAP,CAAW+F,mBAAmB7F,MAA9B,CAAlB,CAzByC,CA0BzC;;MA1ByC,mBA4BI3C,WAC5CV,QAD4CU,EAE5CiI,SAF4CjI,EAG5CJ,SAH4CI,EAI5CwI,kBAJ4CxI,EAK5C;QACCkI,iBAAiBzH,eADlB;QAEC0H,eAAejH,cAAcH,MAAdG;MAFhB,CAL4ClB,CA5BJ;MAAA,IA4BvBoI,cA5BuB,gBA4BjC1H,QA5BiC;MAAA,IA4BPK,MA5BO,gBA4BPA,MA5BO;;MAuCzC,IAAML,WAAWC,eAAeyH,cAAfzH,CAAjB;MACA,IAAM0H,eAAenH,cAAcjB,IAAdiB,GAAqBH,MAArBG,CAA4BH,MAA5BG,CAArB;MAEA,IAAM0G,UAAUW,WAAW5E,SAA3B;MACA,IAAM7C,cAAcrD,iCACnB2D,kBADmB3D,EAEnB;QAAEiD,kBAAF;QAAYd,oBAAZ;QAAuBC,kCAAvB;QAAyCP;MAAzC,CAFmB7B,EAGnB4K,aAAatH,MAAbsH,EAHmB5K,CAApB;MAKA,IAAMsK,cAAcpK,eAAe0K,YAAf1K,EAA6BiC,SAA7BjC,EAAwCiK,OAAxCjK,EAAiD+C,QAAjD/C,CAApB;MAEA,OAAO;QACNmD,wBADM;QAENrB,QAAQ4I,YAFF;QAGN3H,kBAHM;QAINkH,gBAJM;QAKNG;MALM,CAAP;IAOA;;;iCACY;MACZ,KAAKnB,gBAAL,CAAsBqC,UAAtB;MACA,KAAKjB,YAAL,CAAkB,YAAlB;IACA;;;oCACeM,cAAcC,YAAYV,GAAG;MAAA;;MAC5C,IAAI,CAAC,KAAKqB,iCAAV,EAA6C;QAC5C,KAAKA,iCAAL,GAAyC,IAAzC;QACA,IAAM3I,QAAQ,KAAK+E,eAAL,CAAqBgD,YAArB,EAAmCC,UAAnC,CAAd;QAEA,KAAKP,YAAL,CAAkB,WAAlB,EAA+BzH,KAA/B,EAAsCsH,CAAtC;QAEA,KAAKU,UAAL,GAAkBA,UAAlB;QAEAY,sBAAsB,YAAM;UAC3BC,OAAKC,eAAL;;UACAD,OAAKxD,IAAL,CAAU;YAAE0D,SAAS;UAAX,CAAV;;UACAF,OAAKF,iCAAL,GAAyC,KAAzC;QAHD;MAKA;IACD;;;uCACkBZ,cAAcT,GAAG;MAAA,IAC3BjI,SAD2B,GACb,KAAKW,KAAL,CAAdX,SAD2B;;MAGnC,IAAI,KAAK2I,UAAT,EAAqB;QACpB,IAAMhI,QAAQ,KAAK+E,eAAL,CAAqBgD,YAArB,EAAmC,KAAKC,UAAxC,CAAd;QADoB,IAEZ9I,MAFY,GAEDc,KAFC,CAEZd,MAFY;QAGpB,KAAKuI,YAAL,CAAkB,WAAlB,EAA+BzH,KAA/B,EAAsCsH,CAAtC;QAEA,KAAKU,UAAL,GAAkB,IAAlB;QAEA,KAAKgB,gBAAL;QAPoB,IASZjK,QATY,GASC,KAAbA,QATY;QAUpB,IAAMkK,YAAY7M,KAAK2C,QAAL3C,CAAlB;QAEA,IAAM2E,QAAQ3E,KAAK8C,OAAOsB,MAAPtB,EAAL9C,CAAd;QACA,IAAM4E,MAAM3B,UAAU4J,SAAV5J,CAAZ;QAboB,IAcZ6J,UAdY,GAcG,KAAK9K,KAAL,CAAf8K,UAdY;QAgBpB,KAAKC,QAAL,CAAcnJ,KAAd,EAAqB,YAAM;UAC1B,IAAIe,QAAQC,GAAZ,EAAiB;YAChBkI,WAAWnI,KAAXmI,EAAkBlI,GAAlBkI;UACA;QAHF;MAKA;IACD;;;+BACUE,eAAe/B,SAASC,GAAG;MACrC,IAAI,KAAKrB,aAAT,EACC,OAFoC,CAGrC;;MAHqC,cAImC,KAAKjG,KAJxC;MAAA,IAI7BX,SAJ6B,WAI7BA,SAJ6B;MAAA,IAIVsB,aAJU,WAIlBzB,MAJkB;MAAA,IAIegB,eAJf,WAIKC,QAJL;MAAA,aAKE,KAAK/B,KALP;MAAA,IAK7BiL,cAL6B,UAK7BA,cAL6B;MAAA,IAKbC,UALa,UAKbA,UALa;MAAA,IAM7BvK,QAN6B,GAMhB,KAAbA,QAN6B;MAOrC,IAAMwK,OAAOD,WAAW;QACvBpK,QAAQyB,aADe;QAEvBtB,oBAFuB;QAGvBgI,gBAHuB;QAIvBlH,UAAUD,eAJa;QAKvBnB;MALuB,CAAXuK,CAAb;MAQA,IAAME,KAAK7I,cAAc4I,IAAd5I,CAAX;MACA,IAAM8I,IAAIL,gBAAgB,CAAhBA,GAAoB,IAAIC,cAAxBD,GAAyC,IAAIC,cAAvD;MACA,IAAM3B,YAAY/G,cAAcW,KAAdX,GAAsBuB,GAAtBvB,CAA0B;QAAA,OAAK6I,KAAK,CAACrH,IAAIqH,EAAL,IAAWC,CAArB;MAA1B,GAAkDvH,GAAlDvB,CAAsDA,cAAcyB,MAApEzB,CAAlB;;MAjBqC,4BAmBK,KAAKwE,uBAAL,CAA6BuC,SAA7B,CAnBL;MAAA,IAmB7BxI,MAnB6B,yBAmB7BA,MAnB6B;MAAA,IAmBrBiB,QAnBqB,yBAmBrBA,QAnBqB;MAAA,IAmBXI,WAnBW,yBAmBXA,WAnBW;;MAqBrC,IAAMiH,cAAcpK,eAAe8B,MAAf9B,EAAuBiC,SAAvBjC,EAAkCiK,OAAlCjK,EAA2C+C,QAA3C/C,CAApB;MACA,IAAMmK,gBAAgBpK,iBAAiBoD,WAAjBpD,EAA8BkK,OAA9BlK,CAAtB;MAEA,KAAK6L,gBAAL;MAEA,IAAMC,YAAY7M,KAAK2C,QAAL3C,CAAlB;MAEA,IAAM2E,QAAQ3E,KAAK8C,OAAOsB,MAAPtB,EAAL9C,CAAd;MACA,IAAM4E,MAAM3B,UAAU4J,SAAV5J,CAAZ;MA7BqC,IA8B7B6J,UA9B6B,GA8Bd,KAAK9K,KAAL,CAAf8K,UA9B6B;MAgCrC,KAAKhD,YAAL,GAAoB;QACnBmB,SAASA,OADU;QAEnBG,aAAaA,WAFM;QAGnBD,eAAeA;MAHI,CAApB;MAMA,KAAKE,YAAL,CAAkB,MAAlB,EAA0B;QACzBvI,cADyB;QAEzBiB,kBAFyB;QAGzBI,wBAHyB;QAIzB8G,gBAJyB;QAKzBE,4BALyB;QAMzBC,wBANyB;QAOzBkC,MAAM;MAPmB,CAA1B,EAQGpC,CARH;MAUA,KAAK6B,QAAL,CAAc;QACbjK,cADa;QAEbiB,kBAFa;QAGbI;MAHa,CAAd,EAIG,YAAM;QACR,IAAIQ,QAAQC,GAAZ,EAAiB;UAChBkI,WAAWnI,KAAXmI,EAAkBlI,GAAlBkI;QACA;MAPF;IASA;;;8BACSxB,WAAW;MAAA,6BACsB,KAAKvC,uBAAL,CAA6BuC,SAA7B,CADtB;MAAA,IACZxI,MADY,0BACZA,MADY;MAAA,IACJiB,QADI,0BACJA,QADI;MAAA,IACMI,WADN,0BACMA,WADN;;MAEpB,KAAKyI,gBAAL;MAFoB,IAIZ3J,SAJY,GAIE,KAAKW,KAAL,CAAdX,SAJY;MAAA,IAKZN,QALY,GAKC,KAAbA,QALY;MAMpB,IAAMkK,YAAY7M,KAAK2C,QAAL3C,CAAlB;MACA,IAAM2E,QAAQ3E,KAAK8C,OAAOsB,MAAPtB,EAAL9C,CAAd;MACA,IAAM4E,MAAM3B,UAAU4J,SAAV5J,CAAZ;MARoB,IASZ6J,UATY,GASG,KAAK9K,KAAL,CAAf8K,UATY;MAWpB,KAAKC,QAAL,CAAc;QACbjK,cADa;QAEbiB,kBAFa;QAGbI;MAHa,CAAd,EAIG,YAAM;QACR,IAAIQ,QAAQC,GAAZ,EAAiBkI,WAAWnI,KAAXmI,EAAkBlI,GAAlBkI;MALlB;IAOA;;;8BACSS,SAASjC,WAAW;MAC7B,KAAKsB,gBAAL;MAD6B,IAERnI,kBAFQ,GAEe,KAAKb,KAAL,CAApCO,WAFqB;MAG7B,IAAMA,cAAcM,mBAClBqB,GADkBrB,CACd,gBAAQ;QACZ,IAAIkC,KAAK6D,EAAL7D,KAAY4G,OAAhB,EAAyB;UAAA,IAChBC,MADgB,GACL7G,IADK,CAChB6G,MADgB;UAExB,oBACI7G,IADJ;YAEC6G,QAAQA,OAAOlK,IAAPkK,GAAcpJ,MAAdoJ,CAAqBlC,SAArBkC,CAFT;YAGCC,aAAa;UAHd;QAFD,OAOO;UACN,OAAO9G,IAAP;QACA;MAXiB,EAApB;MAcA,KAAKoG,QAAL,CAAc;QACb5I;MADa,CAAd;IAGA;;;iCACYrC,MAAME,OAAOkJ,GAAG;MAAA,mBAC5B;;;MAEA,KAAK9B,aAAL,CAAmBsE,OAAnB,CAA2B,gBAAQ;QAClC,IAAM9J,qBACF+J,OAAK/J,KADHA;UAELjB,UAAUgL,OAAKhL,QAFV;UAGLyG,eAAeuE,OAAKvE;QAHf,EAAN;;QAKAzC,KAAKiH,QAALjH,CAAc7E,IAAd6E,EAAoB3E,KAApB2E,EAA2B/C,KAA3B+C,EAAkCuE,CAAlCvE;MAND;IAQA;;;yBACI3E,OAAO;MACX,KAAKoH,aAAL,CAAmBsE,OAAnB,CAA2B,gBAAQ;QAClC,IAAIxN,UAAUyG,KAAKsC,IAAf/I,CAAJ,EACCyG,KAAKsC,IAALtC,CAAU3E,KAAV2E;MAFF;IAIA;;;6BACQ;MACR,KAAKiG,gBAAL;MACA,KAAK3D,IAAL,CAAU;QAAE4E,OAAO;MAAT,CAAV;IACA;;;8BACS5C,SAAS1G,e,OAA2BuJ,aAAa;MAAA,IAAvBjI,EAAuB,SAAvBA,EAAuB;MAAA,IAAnBkI,EAAmB,SAAnBA,EAAmB;MAAA,cACe,KAAKnK,KADpB;MAAA,IAClDX,SADkD,WAClDA,SADkD;MAAA,IACvCC,gBADuC,WACvCA,gBADuC;MAAA,IACRuB,kBADQ,WACrBN,WADqB;MAAA,IAElDd,UAFkD,GAEnC,KAAKO,KAAL,CAAfP,UAFkD;MAAA,IAGlDV,QAHkD,GAGrC,KAAbA,QAHkD;MAAA,IAIlDqB,cAJkD,GAI/B,KAAKhC,KAAL,CAAnBgC,cAJkD,EAM1D;;MACA,IAAI7D,aAAaoE,cAAcyB,MAA3B7F,CAAJ,EACC,MAAM,IAAIsG,KAAJ,CAAU,sDACb,8EADG,CAAN;MAGD,IAAM6E,YAAY/G,cAAcW,KAAdX,GAAsBuB,GAAtBvB,CAA0B;QAAA,OAAKwB,IAAIF,EAAT;MAA1B,GAAuCC,GAAvCvB,CAA2CA,cAAcyB,MAAzDzB,CAAlB;;MAX0D,mBAablB,WAC5CV,QAD4CU,EAE5CiI,SAF4CjI,EAG5CJ,SAH4CI,EAI5CkB,aAJ4ClB,EAK5C;QACCkI,iBAAiB,KAAKyC,uCADvB;QAECxC,eAAe,KAAKyC;MAFrB,CAL4C5K,CAba;MAAA,IAaxCoI,cAbwC,gBAalD1H,QAbkD;MAAA,IAaxBK,MAbwB,gBAaxBA,MAbwB;;MAwB1D,IAAMsH,eAAenH,cAAcjB,IAAdiB,GAAqBH,MAArBG,CAA4BH,MAA5BG,CAArB;MACA,IAAMR,WAAWC,eAAeyH,cAAfzH,CAAjB,CAzB0D,CA0B1D;;MAEA,IAAMoH,cAAcpK,eAAe0K,YAAf1K,EAA6BiC,SAA7BjC,EAAwCiK,OAAxCjK,EAAiD+C,QAAjD/C,CAApB;MACA,IAAMmD,cAAcrD,iCACnB2D,kBADmB3D,EAEnB;QAAEiD,kBAAF;QAAYd,oBAAZ;QAAuBC,kCAAvB;QAAyCP;MAAzC,CAFmB7B,EAGnB4K,aAAatH,MAAbsH,EAHmB5K,EAInBiN,EAJmBjN,EAKnBgN,WALmBhN,CAApB;MAOA,IAAMqK,gBAAgBpK,iBAAiBoD,WAAjBpD,EAA8BkK,OAA9BlK,CAAtB,CApC0D,CAsC1D;;MACA,OAAO;QACN+B,QAAQ4I,YADF;QAEN3H,kBAFM;QAGNI,wBAHM;QAIN8G,gBAJM;QAKNE,4BALM;QAMNC;MANM,CAAP;IAQA;;;8BACS8C,eAAeC,gBAAgBC,MAAMN,aAAa5C,GAAG;MAAA;;MAC9D,IAAI,CAAC,KAAKmD,2BAAV,EAAuC;QACtC,KAAKA,2BAAL,GAAmC,IAAnC;QAEA,KAAKL,uCAAL,GAA+C,KAAKA,uCAAL,IAAgD,KAAKpK,KAAL,CAAWG,QAA1G;QACA,KAAKkK,qCAAL,GAA6C,KAAKA,qCAAL,IAA8C,KAAKrK,KAAL,CAAWd,MAAX,CAAkBsB,MAAlB,EAA3F;QAEA,IAAMR,QAAQ,KAAK8E,SAAL,CAAewF,aAAf,EAA8BC,cAA9B,EAA8CC,IAA9C,EAAoDN,WAApD,CAAd;QAEA,KAAKE,uCAAL,GAA+CpK,MAAMG,QAArD;QACA,KAAKkK,qCAAL,GAA6CrK,MAAMd,MAANc,CAAaQ,MAAbR,EAA7C;QAEA,KAAKiG,aAAL,GAAqB,IAArB,CAXsC,CAYtC;;QAEA,KAAKwB,YAAL,CAAkB,KAAlB,EAAyBzH,KAAzB,EAAgCsH,CAAhC;QAEA,KAAKpB,YAAL,GAAoB;UACnBmB,SAASrH,MAAMqH,OADI;UAEnBG,aAAaxH,MAAMwH,WAFA;UAGnBD,eAAevH,MAAMuH;QAHF,CAApB;QAKAqB,sBAAsB,YAAM;UAC3B8B,OAAKD,2BAAL,GAAmC,KAAnC;;UACAC,OAAK5B,eAAL;;UACA4B,OAAKrF,IAAL,CAAU;YAAE0D,SAAS;UAAX,CAAV;QAHD;MAKA;IACD;;;iCACYuB,eAAeC,gBAAgBC,MAAMN,aAAa5C,GAAG;MAAA;;MACjE,IAAMtH,QAAQ,KAAK8E,SAAL,CAAewF,aAAf,EAA8BC,cAA9B,EAA8CC,IAA9C,EAAoDN,WAApD,CAAd,CADiE,CAEjE;;MACA,KAAKE,uCAAL,GAA+C,IAA/C;MACA,KAAKC,qCAAL,GAA6C,IAA7C;MAEA,KAAKpE,aAAL,GAAqB,KAArB,CANiE,CAQjE;;MARiE,IAUhE/G,MAVgE,GAa7Dc,KAb6D,CAUhEd,MAVgE;MAAA,IAWhEiB,QAXgE,GAa7DH,KAb6D,CAWhEG,QAXgE;MAAA,IAYhEI,WAZgE,GAa7DP,KAb6D,CAYhEO,WAZgE;MAejE,KAAKkH,YAAL,CAAkB,QAAlB,EAA4BzH,KAA5B,EAAmCsH,CAAnC;MAEAsB,sBAAsB,YAAM;QAAA,IACnBvJ,SADmB,GACLsL,OAAK3K,KAAL,CAAdX,SADmB;QAAA,IAEnBN,QAFmB,UAEnBA,QAFmB;QAI3B,IAAMkK,YAAY7M,KAAK2C,QAAL3C,CAAlB;QACA,IAAM2E,QAAQ3E,KAAK8C,OAAOsB,MAAPtB,EAAL9C,CAAd;QACA,IAAM4E,MAAM3B,UAAU4J,SAAV5J,CAAZ,CAN2B,CAO3B;;QAP2B,IASnB6J,UATmB,GASJyB,OAAKvM,KAAL,CAAf8K,UATmB;;QAW3ByB,OAAK3B,gBAAL;;QAEA2B,OAAKxB,QAAL,CAAc;UACbjK,cADa;UAEbiB,kBAFa;UAGbI;QAHa,CAAd,EAIG,YAAM;UACR,IAAIQ,QAAQC,GAAZ,EAAiBkI,WAAWnI,KAAXmI,EAAkBlI,GAAlBkI;QALlB;MAbD;IAqBA;;;oCACeoB,eAAe/C,eAAeD,GAAG;MAChD,KAAKG,YAAL,CAAkB,WAAlB,EAA+B,KAAKvB,YAApC,EAAkDoB,CAAlD;IACA;;;qCACgBA,GAAG;MACnB,KAAKG,YAAL,CAAkB,YAAlB,EAAgC;QAC/BiC,MAAM;MADyB,CAAhC,EAEGpC,CAFH;IAGA;;;oCACeD,SAASuD,WAAWtD,GAAG;MAAA;;MACtC,IAAI,CAAC,KAAKuD,iCAAV,EAA6C;QAC5C,KAAKA,iCAAL,GAAyC,IAAzC;QAD4C,cAGS,KAAK7K,KAHd;QAAA,IAGpCO,WAHoC,WAGpCA,WAHoC;QAAA,IAGvBJ,QAHuB,WAGvBA,QAHuB;QAAA,IAGbjB,MAHa,WAGbA,MAHa;QAAA,IAGLG,SAHK,WAGLA,SAHK;QAI5C,IAAMkI,gBAAgBpK,iBAAiBoD,WAAjBpD,EAA8BkK,OAA9BlK,CAAtB;QACA,IAAMqK,cAAcpK,eAAe8B,MAAf9B,EAAuBiC,SAAvBjC,EAAkCiK,OAAlCjK,EAA2C+C,QAA3C/C,CAApB;QACA,KAAKqK,YAAL,CAAkB,WAAlB,EAA+B;UAC9BiC,MAAM,IADwB;UAE9BrC,gBAF8B;UAG9B;UACAyD,aAAa,KAAKA,WAJY;UAK9BtD,wBAL8B;UAM9BD;QAN8B,CAA/B,EAOGD,CAPH;QASA,KAAKwD,WAAL,GAAmBzD,OAAnB;QACA,KAAKnB,YAAL,GAAoB;UACnBmB,gBADmB;UAEnBG,wBAFmB;UAGnBD;QAHmB,CAApB;QAMAqB,sBAAsB,YAAM;UAC3BmC,OAAKC,gBAAL;;UACAD,OAAK1F,IAAL,CAAU;YAAE0D,SAAS;UAAX,CAAV;;UACAgC,OAAKF,iCAAL,GAAyC,KAAzC;QAHD;MAKA;IACD;;;qCACgBvD,GAAG;MACnB,KAAKG,YAAL,CAAkB,YAAlB,EAAgC;QAAEiC,MAAM;MAAR,CAAhC,EAAiDpC,CAAjD;MACA,KAAK0D,gBAAL;MACA,KAAK3F,IAAL,CAAU;QAAE0D,SAAS;MAAX,CAAV;IACA;;;2CAC6BzB,GAAG;MAAA,IAAf2D,QAAe,SAAfA,QAAe;MAChC,KAAKxD,YAAL,CAAkB,WAAlB,EAA+B;QAAEwD;MAAF,CAA/B,EAA6C3D,CAA7C;IACA;;;sCACiCA,GAAG;MAAA;;MAAA,IAAxB2D,QAAwB,SAAxBA,QAAwB;MAAA,IAAd5D,OAAc,SAAdA,OAAc;MAAA,cACiB,KAAKrH,KADtB;MAAA,IAC5BO,WAD4B,WAC5BA,WAD4B;MAAA,IACfJ,QADe,WACfA,QADe;MAAA,IACLjB,MADK,WACLA,MADK;MAAA,IACGG,SADH,WACGA,SADH;MAEpC,IAAMkI,gBAAgBpK,iBAAiBoD,WAAjBpD,EAA8BkK,OAA9BlK,CAAtB;MACA,IAAMqK,cAAcpK,eAAe8B,MAAf9B,EAAuBiC,SAAvBjC,EAAkCiK,OAAlCjK,EAA2C+C,QAA3C/C,CAApB;MAEA,KAAKqK,YAAL,CAAkB,MAAlB,EAA0B;QACzBwD,kBADyB;QAEzB5D,gBAFyB;QAGzBG,wBAHyB;QAIzBD;MAJyB,CAA1B,EAKGD,CALH;MAOA,KAAKpB,YAAL,GAAoB;QACnBmB,gBADmB;QAEnBG,wBAFmB;QAGnBD;MAHmB,CAApB;MAMAqB,sBAAsB,YAAM;QAC3BsC,OAAKF,gBAAL;;QACAE,OAAK7F,IAAL,CAAU;UAAE0D,SAAS;QAAX,CAAV;MAFD;IAIA;;;yCAC0BzB,GAAG;MAAA;;MAAA,IAAdD,OAAc,SAAdA,OAAc;MAC7B,KAAKI,YAAL,CAAkB,SAAlB,EAA6B;QAAEJ;MAAF,CAA7B,EAA0CC,CAA1C;MAEAsB,sBAAsB,YAAM;QAC3BuC,OAAKH,gBAAL;;QACAG,OAAK9F,IAAL,CAAU;UAAE0D,SAAS;QAAX,CAAV;MAFD;IAIA;;;gCACWuB,eAAehD,GAAG;MAAA;;MAC7B,KAAKG,YAAL,CAAkB,OAAlB,EAA2B,KAAKvB,YAAhC,EAA8CoB,CAA9C;MAEAsB,sBAAsB,YAAM;QAC3BwC,OAAKJ,gBAAL;;QACAI,OAAK/F,IAAL,CAAU;UAAE0D,SAAS;QAAX,CAAV;MAFD;IAIA;;;sCACiBuB,eAAehD,GAAG;MACnC,KAAKG,YAAL,CAAkB,UAAlB,EAA8B,EAA9B,EAAkCH,CAAlC;IACA;;;sCACiB;MACjB,IAAMhH,aAAanC,cAAc,KAAKC,KAAnBD,CAAnB;MACA,OAAO;QACNY,UAAU,KAAKA,QADT;QAENoB,UAAU,KAAKH,KAAL,CAAWG,QAFf;QAGN1B,OAAO6B,WAAW7B,KAHZ;QAINJ,QAAQiC,WAAWjC,MAJb;QAKNkC,aAAa,KAAKP,KAAL,CAAWO,WALlB;QAMNrB,QAAQ,KAAKc,KAAL,CAAWd,MANb;QAONG,WAAW,KAAKW,KAAL,CAAWX,SAPhB;QAQNC,kBAAkB,KAAKU,KAAL,CAAWV,gBARvB;QASN+L,iBAAiB,KAAKjN,KAAL,CAAWF,IATtB;QAUNI,QAAQ,KAAKF,KAAL,CAAWE,MAVb;QAWNoI,OAAO,KAAKtI,KAAL,CAAWsI,KAXZ;QAYN1B,WAAW,KAAKA,SAZV;QAaNC,WAAW,KAAKA,SAbV;QAcNnB,mBAAmB,KAAKA,iBAdlB;QAeNwB,QAAQ,KAAKA,MAfP;QAgBNG,WAAW,KAAKA,SAhBV;QAiBNC,aAAa,KAAKA,WAjBZ;QAkBNN,wBAAwB,KAAKA,sBAlBvB;QAmBNW,iBAAiB,KAAKA,eAnBhB;QAoBNJ,UAAU,KAAKA,QApBT;QAqBNG,gBAAgB,KAAKA;MArBf,CAAP;IAuBA;;;yCACoB;MAAA,kBACWnG,WAAW,KAAKvB,KAAhBuB,EAAuB,IAAvBA,CADX;MAAA,IACZZ,QADY,eACZA,QADY;MAAA,IACCiB,KADD;;MAEpB,KAAKmJ,QAAL,CAAcnJ,KAAd;MACA,KAAKjB,QAAL,GAAgBA,QAAhB;IACA;;;8CACyBnB,WAAW;MACpC,IAAM0N,QAAQ5N,iBAAiB,KAAKU,KAAtBV,EAA6BE,SAA7BF,CAAd;MAEA,IAAM6N,cAAcC,qBAAqB,KAAKxL,KAAL,CAAWd,MAAhCsM,EAAwC,KAAKxL,KAAL,CAAWX,SAAnDmM,EAA8D,KAAKxL,KAAL,CAAWG,QAAzEqL,CAApB;MAHoC,IAIf3K,kBAJe,GAIQ,KAAKb,KAAL,CAApCO,WAJ4B;MAMpC,IAAIG,iBAAJ;;MACA,IAAI,CAAC6K,WAAD,IAAgBD,KAAhB,IAAyB,CAAC7O,aAAa,KAAK2B,KAAL,CAAWoE,QAAxB/F,EAAkCmB,UAAU4E,QAA5C/F,CAA9B,EAAqF;QACpF,IAAIoD,QAAQC,GAARD,CAAYE,QAAZF,KAAyB,YAA7B,EAA2C;UAC1C,IAAI,CAAC0L,WAAL,EACC/N,IAAI,iDAAJA,EADD,KAEK,IAAI8N,KAAJ,EACJ9N,IAAI,iDAAJA,EAAuDC,oBAAvDD,EADI,KAGJA,IAAI,kBAAJA;QACD,CARmF,CASpF;;;QACAkD,WAAWf,WAAW/B,SAAX+B,CAAXe;QACA,KAAKwF,YAAL,GAAoB,EAApB;MAXD,OAYO;QAAA,2BAEe,KAAKlG,KAAL,CAAWd,MAAX,CAAkBsB,MAAlB,EAFf;QAAA;QAAA,IAECO,KAFD;QAAA,IAEQC,GAFR;;QAGN,IAAMyK,eAAepP,KAAK,KAAK0C,QAAV1C,CAArB;QAEA,IAAMqP,kBAAkB5M,kBAAkBlB,SAAlBkB,CAAxB;QALM,IAMEO,SANF,GAMgBqM,eANhB,CAMErM,SANF;QAON,IAAMuB,qBAAqBvB,UAAUoM,YAAVpM,KAA2B2B,GAA3B3B,IAAkCA,UAAUoM,YAAVpM,KAA2B0B,KAAxF;;QAEA,IAAIlB,QAAQC,GAARD,CAAYE,QAAZF,KAAyB,YAA7B,EAA2C;UAC1C,IAAI,KAAKzB,KAAL,CAAWY,IAAX,KAAoBpB,UAAUoB,IAAlC,EACCxB,IAAI,wHAAJA,EAA8HoD,kBAA9HpD,EADD,KAGCA,IAAI,+EAAJA;QACD;;QAEDkD,WAAWD,YACViL,eADUjL,EAEV,KAAKT,KAAL,CAAWd,MAFDuB,EAGV7C,SAHU6C,EAIVG,kBAJUH,EAKVI,kBALUJ,CAAXC;MAOA;;MA1CmC,gBA4CLA,QA5CK;MAAA,IA4C5B3B,QA5C4B,aA4C5BA,QA5C4B;MAAA,IA4CfiB,KA5Ce;;MA8CpC,IAAI,KAAKiG,aAAT,EAAwB;QACvB,IAAIpG,QAAQC,GAARD,CAAYE,QAAZF,KAAyB,YAA7B,EAA2C;UAC1CrC,IAAI,oBAAJA;QACA;MAHF,OAIO;QACN;;;;;;;;;;;;;QAaA,KAAKwL,gBAAL;QAEA,KAAKG,QAAL,CAAcnJ,KAAd;MACA;;MACD,KAAKjB,QAAL,GAAgBA,QAAhB;IACA;IACD;;;;;;;;iCAKa4K,SAAS;MAAA,IACbpJ,WADa,GACG,KAAKP,KAAL,CAAhBO,WADa;MAErB,IAAIoL,UAAU,KAAd;MACA,IAAMC,iBAAiBrL,YACrB2B,GADqB3B,CACjB,gBAAQ;QACZ,IAAI,CAAChE,aAAaoN,OAAbpN,KAAyBwG,KAAK6D,EAAL7D,KAAY4G,OAAtC,KACC,CAAClN,aAAasG,KAAK6G,MAAL7G,CAAYvC,MAAZuC,EAAbtG,EAAmCsG,KAAK8I,WAAxCpP,CADN,EAC4D;UAC3DkP,UAAU,IAAVA;UACA,oBACI5I,IADJ;YAEC6G,QAAQ7G,KAAK6G,MAAL7G,CAAYvC,MAAZuC,CAAmBA,KAAK8I,WAAxB9I,CAFT;YAGC8G,aAAa;UAHd;QAKA;;QACD,OAAO9G,IAAP;MAXqB,EAAvB;;MAcA,IAAI4I,OAAJ,EAAa;QACZ,KAAK3C,gBAAL;QACA,KAAKG,QAAL,CAAc;UACb5I,aAAaqL;QADA,CAAd;MAGA;IACD;;;4CACuB;MACvB;MACA,OAAO,CAAC,KAAK3F,aAAb;IACA;;;6BACQ;MAAA,cAE6G,KAAK7H,KAFlH;MAAA,IAEAF,IAFA,WAEAA,IAFA;MAAA,IAEMG,MAFN,WAEMA,MAFN;MAAA,IAEcI,KAFd,WAEcA,KAFd;MAAA,IAEqBH,MAFrB,WAEqBA,MAFrB;MAAA,IAE6B6I,SAF7B,WAE6BA,SAF7B;MAAA,IAEwC2E,MAFxC,WAEwCA,MAFxC;MAAA,IAEgDC,YAFhD,WAEgDA,YAFhD;MAAA,IAE8DrF,KAF9D,WAE8DA,KAF9D;MAAA,IAEqEsF,cAFrE,WAEqEA,cAFrE;MAAA,IAEqFC,QAFrF,WAEqFA,QAFrF;MAAA,IAE+FC,SAF/F,WAE+FA,SAF/F;MAAA,cAGsC,KAAK9N,KAH3C;MAAA,IAGA+N,uBAHA,WAGAA,uBAHA;MAAA,IAGyBC,QAHzB,WAGyBA,QAHzB;MAAA,cAK6C,KAAKpM,KALlD;MAAA,IAKAG,QALA,WAKAA,QALA;MAAA,IAKUjB,MALV,WAKUA,MALV;MAAA,IAKkBG,SALlB,WAKkBA,SALlB;MAAA,IAK6BkB,WAL7B,WAK6BA,WAL7B;MAMR,IAAMD,aAAanC,cAAc,KAAKC,KAAnBD,CAAnB;MAEA,IAAMoN,cAAcC,qBAAqBtM,MAArBsM,EAA6BnM,SAA7BmM,EAAwCrL,QAAxCqL,CAApB;MAEA,IAAMa,cAAcF,2BAA2BZ,WAA/C;MACA,IAAMe,SAAStO,gBAAf;MACA,OACCnC;QAAK0Q,OAAO;UAAEC,UAAU,UAAZ;UAAwB/N,YAAxB;UAA+BJ;QAA/B,CAAZ;QAAqD8I,WAAWA,SAAhE;QAA2EsF,SAASL;MAApF,GACCvQ,oBAACyB,eAAD;QAAiBoP,KAAK,KAAK7G,uBAA3B;QACC3H,MAAMA,IADP;QAECwI,OAAOA,KAFR;QAGCjI,OAAOA,KAHR;QAGeJ,QAAQA,MAHvB;QAG+ByN,QAAQA;MAHvC,EADD,EAKCjQ;QAAKsL,WAAWA,SAAhB;QAA2B1I,OAAOA,KAAlC;QAAyCJ,QAAQA,MAAjD;QAAyDkO,OAAO;UAAEC,UAAU,UAAZ;UAAwBV,QAASA,SAAS;QAA1C;MAAhE,GACEQ,MADF,EAECzQ,kCACCA;QAAU+K,IAAG;MAAb,GACC/K;QAAMsG,GAAE,GAAR;QAAYsG,GAAE,GAAd;QAAkBhK,OAAO6B,WAAW7B,KAApC;QAA2CJ,QAAQiC,WAAWjC;MAA9D,EADD,CADD,EAIEkC,YACC2B,GADD3B,CACK,UAACwC,IAAD,EAAO4J,GAAP;QAAA,OAAe9Q;UAAUkC,KAAK4O,GAAf;UAAoB/F,yBAAuB7D,KAAK6D;QAAhD,GACnB/K;UAAMsG,GAAE,GAAR;UAAYsG,GAAE,GAAd;UAAkBhK,OAAOsE,KAAKtE,KAA9B;UAAqCJ,QAAQ0E,KAAK1E;QAAlD,EADmB,CAAf;MADL,EAJF,CAFD,EAWCxC;QAAG+Q,2BAAwBtO,OAAOI,IAAPJ,GAAc,GAAtC,YAA8CA,OAAOC,GAAPD,GAAa,GAA3D;MAAH,GACCzC,oBAACwB,YAAD;QACCqP,KAAK,KAAK9G,oBADX;QAECuG,yBAAyBE,WAF1B;QAGCQ,WAAWb,kBAAkBT,WAH9B;QAICuB,MAAMZ,aAAaX,WAJpB;QAKCwB,KAAKd,YAAYV,WALlB;QAOC9M,OAAO6B,WAAW7B,KAPnB;QAQCJ,QAAQiC,WAAWjC,MARpB;QASCkC,aAAaA,WATd;QAUCrB,QAAQA,MAVT;QAWCG,WAAWA,SAXZ;QAYC2N,OAAOjB,YAZR;QAaCkB,oBAAoB,KAAK7O,KAAL,CAAW6O,kBAbhC;QAeC1H,qBAAqB,KAAKA,mBAf3B;QAgBC2H,eAAe,KAAKxI,iBAhBrB;QAiBC+H,SAAS,KAAKlI,WAjBf;QAkBC4I,eAAe,KAAK1I,iBAlBrB;QAmBC2I,aAAa,KAAK5I,eAnBnB;QAoBC6I,aAAa,KAAKtJ,eApBnB;QAqBCuJ,cAAc,KAAKtJ,gBArBpB;QAsBCuJ,cAAc,KAAKtJ,gBAtBpB;QAwBCuJ,aAAa,KAAK7I,eAxBnB;QAyBC8I,QAAQ,KAAK7I,UAzBd;QA0BC8I,gBAAgB,KAAK7I,aA1BtB;QA4BC8I,QAAQ,KAAKzJ,UA5Bd;QA6BC0J,aAAa,KAAKzJ,eA7BnB;QA8BC0J,gBAAgB,KAAKzJ,kBA9BtB;QA+BC0J,OAAO,KAAKzJ,SA/Bb;QAgCC0J,UAAU,KAAKzJ;MAhChB,EADD,EAoCCzI;QAAGsL,WAAU;MAAb,GACE,KAAK/I,KAAL,CAAWiC,QADb,CApCD,CAXD,CALD,CADD;IA4DA;;;;EAhzBwBvE,S;;AAmzB1B,SAAS0P,oBAAT,CAA8BtM,MAA9B,EAAsCG,SAAtC,EAAiDL,IAAjD,EAAuD;EACtD,IAAMuM,cAAc,CAACtI,MAAM/D,OAAOG,UAAUjD,KAAK4C,IAAL5C,CAAViD,CAAPH,CAAN+D,CAAD,IAAyC3G,UAAU4C,OAAOkD,MAAjB9F,CAA7D;EACA,OAAOiP,WAAP;AACA;;AAED9H,YAAYuK,SAAZvK,GAAwB;EACvBhF,OAAO1C,UAAUkS,MAAVlS,CAAiBmS,UADD;EAEvB7P,QAAQtC,UAAUkS,MAAVlS,CAAiBmS,UAFF;EAGvB5P,QAAQvC,UAAUoS,MAHK;EAIvBzH,OAAO3K,UAAUkS,MAAVlS,CAAiBmS,UAJD;EAKvB;EACAhQ,MAAMnC,UAAUqS,KAAVrS,CAAgB,CAAC,KAAD,EAAQ,QAAR,CAAhBA,CANiB;EAOvBqD,sBAAsBrD,UAAUkS,MAPT;EAQvB1O,yBAAyBxD,UAAUkS,MARZ;EASvBjP,MAAMjD,UAAUsS,KAAVtS,CAAgBmS,UATC;EAUvB;EACA7O,WAAWtD,UAAUuS,IAXE;EAYvB9L,UAAUzG,UAAUwS,SAAVxS,CAAoB,CAC7BA,UAAUsS,KADmB,EAE7BtS,UAAUuS,IAFmB,CAApBvS,CAZa;EAgBvBuN,YAAYvN,UAAUuS,IAhBC;EAkBvBnH,WAAWpL,UAAUyS,MAlBE;EAmBvBC,YAAY1S,UAAUyS,MAAVzS,CAAiBmS,UAnBN;EAoBvBpC,QAAQ/P,UAAUkS,MApBK;EAqBvB5N,UAAUtE,UAAUqK,IAAVrK,CAAemS,UArBF;EAsBvBhP,QAAQnD,UAAUuS,IAAVvS,CAAemS,UAtBA;EAuBvB9N,gBAAgBrE,UAAUuS,IAvBH;EAwBvBzP,YAAY9C,UAAU2S,IAxBC;EAyBvBvC,yBAAyBpQ,UAAU2S,IAzBZ;EA0BvBzN,SAASlF,UAAUwS,SAAVxS,CAAoB,CAC5BA,UAAUkS,MADkB,EAE5BlS,UAAU4S,KAAV5S,CAAgB;IACf2C,MAAM3C,UAAUkS,MADD;IAEftP,OAAO5C,UAAUkS;EAFF,CAAhBlS,CAF4B,CAApBA,CA1Bc;EAiCvBgQ,cAAchQ,UAAU2S,IAjCD;EAkCvBrF,gBAAgBtN,UAAUkS,MAlCH;EAmCvB/E,YAAYnN,UAAUuS,IAnCC;EAoCvBhP,kBAAkB,0BAASlB,KAAT,EAAgBwQ;EAAQ;EAAxB,EAA+C;IAChE,IAAIrS,aAAa6B,MAAMwQ,QAANxQ,CAAb7B,CAAJ,EAAmC;MAClCsS,QAAQC,IAARD,CAAa,uCACV,6DADU,GAEV,2DAFU,GAGV,oEAHHA;IADD,OAKO,IAAI,OAAOzQ,MAAMwQ,QAANxQ,CAAP,KAA2B,UAA/B,EAA2C;MACjD,OAAO,IAAIyE,KAAJ,CAAU,uCAAV,CAAP;IACA;EA5CqB;EA8CvBmJ,gBAAgBjQ,UAAU2S,IA9CH;EA+CvBzC,UAAUlQ,UAAU2S,IA/CG;EAgDvBvP,OAAOpD,UAAUwS,SAAVxS,CAAoB,CAACA,UAAUyS,MAAX,EAAmBzS,UAAU2S,IAA7B,EAAmC3S,UAAUuS,IAA7C,CAApBvS,CAhDgB;EAiDvBmQ,WAAWnQ,UAAU2S,IAjDE;EAkDvBtC,UAAUrQ,UAAUuS,IAlDG;EAmDvBpN,gCAAgCnF,UAAU2S,IAnDnB;EAoDvBzB,oBAAoBlR,UAAU2S;AApDP,CAAxBjL;AAuDAA,YAAYsL,YAAZtL,GAA2B;EAC1BnF,QAAQ;IAAEC,KAAK,EAAP;IAAWI,OAAO,EAAlB;IAAsBH,QAAQ,EAA9B;IAAkCE,MAAM;EAAxC,CADkB;EAE1BR,MAAM,QAFoB;EAG1BkB,sBAAsB,CAHI;EAI1BG,yBAAyB,IAAI,GAJH;EAK1B4H,WAAW,kBALe;EAM1B2E,QAAQ,CANkB;EAO1BtJ,UAAU,CAACtG,GAAD,EAAMC,GAAN,CAPgB;EAQ1BiE,gBAAgB1D,QARU;EAS1BuE,SAAS,CATiB;EAU1B5B,WAAW3C,QAVe;EAW1BmC,YAAY,KAXc;EAY1BsN,yBAAyB,IAZC;EAa1BJ,cAAc,IAbY;EAc1B7C,YAAYvM,IAdc;EAe1ByP,UAAUzP,IAfgB;EAgB1BqP,gBAAgB,IAhBU;EAiB1BC,UAAU,IAjBgB;EAkB1BC,WAAW,IAlBe;EAmB1B7C,gBAAgB,GAnBU;EAoB1BlK,OAAO,KApBmB;EAqB1BmK,YAAYxM,oBArBc;EAsB1BoE,gCAAgC,IAtBN;EAuB1B;EACA+L,oBAAoB;AAxBM,CAA3BxJ;AA2BAA,YAAYuL,iBAAZvL,GAAgC;EAC/BtD,UAAUpE,UAAUsS,KADW;EAE/BtP,UAAUhD,UAAUsS,KAFW;EAG/B9N,aAAaxE,UAAUkT,OAAVlT,CACZA,UAAU4S,KAAV5S,CAAgB;IACf6K,IAAI7K,UAAUwS,SAAVxS,CAAoB,CAACA,UAAUkS,MAAX,EAAmBlS,UAAUyS,MAA7B,CAApBzS,EAA0DmS,UAD/C;IAEfgB,QAAQnT,UAAUkT,OAAVlT,CAAkBA,UAAUkS,MAA5BlS,EAAoCmS,UAF7B;IAGfjN,SAASlF,UAAUwS,SAAVxS,CAAoB,CAC5BA,UAAUkS,MADkB,EAE5BlS,UAAU4S,KAAV5S,CAAgB;MACfwC,KAAKxC,UAAUkS,MADA;MAEfzP,QAAQzC,UAAUkS;IAFH,CAAhBlS,CAF4B,CAApBA,CAHM;IAUfoT,UAAUpT,UAAUkT,OAAVlT,CAAkBA,UAAUuS,IAA5BvS,CAVK;IAWfqT,kBAAkBrT,UAAUuS,IAXb;IAYf1E,QAAQ7N,UAAUuS,IAAVvS,CAAemS,UAZR;IAafmB,kBAAkBtT,UAAU4S,KAAV5S,CAAgB;MACjCuT,IAAIvT,UAAUyS,MADmB;MAEjCe,QAAQxT,UAAUuS;IAFe,CAAhBvS,CAbH;IAiBf0C,OAAO1C,UAAUkS,MAAVlS,CAAiBmS,UAjBT;IAkBf7P,QAAQtC,UAAUkS,MAAVlS,CAAiBmS;EAlBV,CAAhBnS,CADYA,EAqBXmS,UAxB6B;EAyB/BhP,QAAQnD,UAAUuS,IAAVvS,CAAemS,UAzBQ;EA0B/B7O,WAAWtD,UAAUuS,IAAVvS,CAAemS,UA1BK;EA2B/B5O,kBAAkBvD,UAAUuS,IAAVvS,CAAemS,UA3BF;EA4B/BzP,OAAO1C,UAAUkS,MAAVlS,CAAiBmS,UA5BO;EA6B/B7P,QAAQtC,UAAUkS,MAAVlS,CAAiBmS,UA7BM;EA8B/B7C,iBAAiBtP,UAAUqS,KAAVrS,CAAgB,CAAC,KAAD,EAAQ,QAAR,CAAhBA,EAAmCmS,UA9BrB;EA+B/B5P,QAAQvC,UAAUoS,MAAVpS,CAAiBmS,UA/BM;EAgC/BxH,OAAO3K,UAAUkS,MAAVlS,CAAiBmS,UAhCO;EAiC/BpK,mBAAmB/H,UAAUuS,IAjCE;EAkC/BtJ,WAAWjJ,UAAUuS,IAlCU;EAmC/BrJ,WAAWlJ,UAAUuS,IAnCU;EAoC/B3I,UAAU5J,UAAUuS,IApCW;EAqC/BhJ,QAAQvJ,UAAUuS,IArCa;EAsC/B7I,WAAW1J,UAAUuS,IAtCU;EAuC/B5I,aAAa3J,UAAUuS,IAvCQ;EAwC/BxI,gBAAgB/J,UAAUuS,IAxCK;EAyC/BlJ,wBAAwBrJ,UAAUuS,IAzCH;EA0C/BvI,iBAAiBhK,UAAUuS;AA1CI,CAAhC7K;;AA6CAA,YAAY+L,KAAZ/L,GAAoB;EAAA,OAAM;IAAEgM,MAAM3M,EAAE2M,IAAV;IAAgBC,MAAM5M,EAAE4M,IAAxB;IAA8BC,MAAM7M,EAAE6M,IAAtC;IAA4CC,KAAK9M,EAAE8M,GAAnD;IAAwDC,OAAO/M,EAAE+M,KAAjE;IAAwEC,QAAQhN,EAAEgN;EAAlF,CAAN;AAApB;;AAEA,eAAerM,WAAf","names":["React","Component","PropTypes","extent","d3Extent","min","max","head","last","isDefined","isNotDefined","clearCanvas","shallowEqual","identity","noop","functor","getLogger","mouseBasedZoomAnchor","lastVisibleItemBasedZoomAnchor","rightDomainBasedZoomAnchor","getNewChartConfig","getChartConfigWithUpdatedYScales","getCurrentCharts","getCurrentItem","EventCapture","CanvasContainer","evaluator","log","CANDIDATES_FOR_RESET","shouldResetChart","thisProps","nextProps","every","result","key","getCursorStyle","tooltipStyle","type","getDimensions","props","height","margin","top","bottom","width","left","right","getXScaleDirection","flipXScale","calculateFullData","fullData","data","plotFull","xScale","clamp","pointsPerPxThreshold","xAccessor","displayXAccessor","minPointsPerPxThreshold","useWholeData","filterData","copy","resetChart","firstCalculation","process","env","NODE_ENV","state","calculateState","initialPlotData","plotData","postCalculator","children","dimensions","chartConfig","domain","updateChart","newState","initialXScale","lastItemWasVisible","initialChartConfig","lastItem","start","end","padding","maintainPointsPerPixelOnResize","direction","updatedXScale","setXRange","range","rangeStart","rangeEnd","newRangeStart","newRangeEnd","newDomainExtent","newStart","lastItemX","response","fallbackStart","fallbackEnd","dx","map","x","invert","newEnd","inputXAccesor","xExtentsProp","xExtents","i","length","prev","curr","Error","d","each","rangeRoundPoints","isNaN","pinchCoordinates","pinch","touch1Pos","touch2Pos","topLeft","Math","bottomRight","ChartCanvas","_classCallCheck","_this","getDataInfo","bind","getCanvasContexts","handleMouseMove","handleMouseEnter","handleMouseLeave","handleZoom","handlePinchZoom","handlePinchZoomEnd","handlePan","handlePanEnd","handleClick","handleMouseDown","handleDoubleClick","handleContextMenu","handleDragStart","handleDrag","handleDragEnd","panHelper","pinchZoomHelper","xAxisZoom","yAxisZoom","resetYDomain","calculateStateForDomain","generateSubscriptionId","draw","redraw","getAllPanConditions","subscriptions","subscribe","unsubscribe","amIOnTop","saveEventCaptureNode","saveCanvasContainerNode","setCursorClass","getMutableState","interactiveState","panInProgress","mutableState","lastSubscriptionId","node","eventCaptureNode","canvasContainerNode","canvases","axes","mouseCoord","ratio","bg","id","rest","getPanConditions","draggable","panEnabled","concat","filter","className","dragableComponents","mouseXY","e","currentCharts","currentItem","triggerEvent","newDomain","currentPlotData","currentDomain","beforePlotData","updatedScale","initialPinch","finalPinch","initialPinchXScale","iTL","iBR","fTL","fBR","xDash","round","yDash","y","cancelDrag","waitingForPinchZoomAnimationFrame","requestAnimationFrame","_this2","clearBothCanvas","trigger","clearThreeCanvas","firstItem","onLoadMore","setState","zoomDirection","zoomMultiplier","zoomAnchor","item","cx","c","show","chartId","yScale","yPanEnabled","forEach","_this3","listener","force","chartsToPan","dy","hackyWayToStopPanBeyondBounds__plotData","hackyWayToStopPanBeyondBounds__domain","mousePosition","panStartXScale","dxdy","waitingForPanAnimationFrame","_this4","_this5","inputType","waitingForMouseMoveAnimationFrame","prevMouseXY","_this6","clearMouseCanvas","startPos","_this7","_this8","_this9","chartCanvasType","reset","interaction","isInteractionEnabled","prevLastItem","calculatedState","changed","newChartConfig","realYDomain","zIndex","defaultFocus","mouseMoveEvent","panEvent","zoomEvent","useCrossHairStyleCursor","onSelect","cursorStyle","cursor","style","position","onClick","ref","idx","transform","mouseMove","zoom","pan","focus","disableInteraction","onContextMenu","onDoubleClick","onMouseDown","onMouseMove","onMouseEnter","onMouseLeave","onDragStart","onDrag","onDragComplete","onZoom","onPinchZoom","onPinchZoomEnd","onPan","onPanEnd","propTypes","number","isRequired","object","oneOf","array","func","oneOfType","string","seriesName","bool","shape","propName","console","warn","defaultProps","childContextTypes","arrayOf","origin","yExtents","yExtentsProvider","mouseCoordinates","at","format","ohlcv","date","open","high","low","close","volume"],"sources":["../../../src/lib/ChartCanvas.js"],"sourcesContent":["\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { extent as d3Extent, min, max } from \"d3-array\";\n\nimport {\n\thead,\n\tlast,\n\tisDefined,\n\tisNotDefined,\n\tclearCanvas,\n\tshallowEqual,\n\tidentity,\n\tnoop,\n\tfunctor,\n\tgetLogger,\n} from \"./utils\";\n\n/* eslint-disable no-unused-vars */\nimport {\n\tmouseBasedZoomAnchor,\n\tlastVisibleItemBasedZoomAnchor,\n\trightDomainBasedZoomAnchor,\n} from \"./utils/zoomBehavior\";\n/* eslint-enable no-unused-vars */\n\nimport { getNewChartConfig, getChartConfigWithUpdatedYScales, getCurrentCharts, getCurrentItem } from \"./utils/ChartDataUtil\";\n\nimport EventCapture from \"./EventCapture\";\n\nimport CanvasContainer from \"./CanvasContainer\";\nimport evaluator from \"./scale/evaluator\";\n\nconst log = getLogger(\"ChartCanvas\");\n\nconst CANDIDATES_FOR_RESET = [\n\t\"seriesName\",\n\t/* \"data\",*/\n\t/* \"xAccessor\",*/\n];\n\nfunction shouldResetChart(thisProps, nextProps) {\n\treturn !CANDIDATES_FOR_RESET.every(key => {\n\t\tconst result = shallowEqual(thisProps[key], nextProps[key]);\n\t\t// console.log(key, result);\n\t\treturn result;\n\t});\n}\n\nfunction getCursorStyle() {\n\tconst tooltipStyle = `\n\t.react-stockcharts-grabbing-cursor {\n\t\tpointer-events: all;\n\t\tcursor: -moz-grabbing;\n\t\tcursor: -webkit-grabbing;\n\t\tcursor: grabbing;\n\t}\n\t.react-stockcharts-crosshair-cursor {\n\t\tpointer-events: all;\n\t\tcursor: crosshair;\n\t}\n\t.react-stockcharts-tooltip-hover {\n\t\tpointer-events: all;\n\t\tcursor: pointer;\n\t}\n\t.react-stockcharts-avoid-interaction {\n\t\tpointer-events: none;\n\t}\n\t.react-stockcharts-enable-interaction {\n\t\tpointer-events: all;\n\t}\n\t.react-stockcharts-tooltip {\n\t\tpointer-events: all;\n\t\tcursor: pointer;\n\t}\n\t.react-stockcharts-default-cursor {\n\t\tcursor: default;\n\t}\n\t.react-stockcharts-move-cursor {\n\t\tcursor: move;\n\t}\n\t.react-stockcharts-pointer-cursor {\n\t\tcursor: pointer;\n\t}\n\t.react-stockcharts-ns-resize-cursor {\n\t\tcursor: ns-resize;\n\t}\n\t.react-stockcharts-ew-resize-cursor {\n\t\tcursor: ew-resize;\n\t}`;\n\treturn (<style type=\"text/css\">{tooltipStyle}</style>);\n}\n\nfunction getDimensions(props) {\n\treturn {\n\t\theight: props.height - props.margin.top - props.margin.bottom,\n\t\twidth: props.width - props.margin.left - props.margin.right,\n\t};\n}\n\nfunction getXScaleDirection(flipXScale) {\n\treturn flipXScale ? -1 : 1;\n}\n\nfunction calculateFullData(props) {\n\tconst { data: fullData, plotFull, xScale, clamp, pointsPerPxThreshold, flipXScale } = props;\n\tconst { xAccessor, displayXAccessor, minPointsPerPxThreshold } = props;\n\n\tconst useWholeData = isDefined(plotFull)\n\t\t? plotFull\n\t\t: xAccessor === identity;\n\n\tconst { filterData } = evaluator({\n\t\txScale,\n\t\tuseWholeData,\n\t\tclamp,\n\t\tpointsPerPxThreshold,\n\t\tminPointsPerPxThreshold,\n\t\tflipXScale,\n\t});\n\n\treturn {\n\t\txAccessor,\n\t\tdisplayXAccessor: displayXAccessor || xAccessor,\n\t\txScale: xScale.copy(),\n\t\tfullData,\n\t\tfilterData\n\t};\n}\nfunction resetChart(props, firstCalculation = false) {\n\tif (process.env.NODE_ENV !== \"production\") {\n\t\tif (!firstCalculation) log(\"CHART RESET\");\n\t}\n\n\tconst state = calculateState(props);\n\tconst { xAccessor, displayXAccessor, fullData } = state;\n\tconst { plotData: initialPlotData, xScale } = state;\n\tconst { postCalculator, children } = props;\n\n\tconst plotData = postCalculator(initialPlotData);\n\n\tconst dimensions = getDimensions(props);\n\tconst chartConfig = getChartConfigWithUpdatedYScales(\n\t\tgetNewChartConfig(dimensions, children),\n\t\t{ plotData, xAccessor, displayXAccessor, fullData },\n\t\txScale.domain()\n\t);\n\n\treturn {\n\t\t...state,\n\t\txScale,\n\t\tplotData,\n\t\tchartConfig,\n\t};\n}\n\nfunction updateChart(\n\tnewState,\n\tinitialXScale,\n\tprops,\n\tlastItemWasVisible,\n\tinitialChartConfig,\n) {\n\n\tconst { fullData, xScale, xAccessor, displayXAccessor, filterData } = newState;\n\n\tconst lastItem = last(fullData);\n\tconst [start, end] = initialXScale.domain();\n\n\tif (process.env.NODE_ENV !== \"production\") {\n\t\tlog(\"TRIVIAL CHANGE\");\n\t}\n\n\tconst { postCalculator, children, padding, flipXScale } = props;\n\tconst { maintainPointsPerPixelOnResize } = props;\n\tconst direction = getXScaleDirection(flipXScale);\n\tconst dimensions = getDimensions(props);\n\n\tconst updatedXScale = setXRange(xScale, dimensions, padding, direction);\n\n\t// console.log(\"lastItemWasVisible =\", lastItemWasVisible, end, xAccessor(lastItem), end >= xAccessor(lastItem));\n\tlet initialPlotData;\n\tif (!lastItemWasVisible || end >= xAccessor(lastItem)) {\n\t\t// resize comes here...\n\t\t// get plotData between [start, end] and do not change the domain\n\t\tconst [rangeStart, rangeEnd] = initialXScale.range();\n\t\tconst [newRangeStart, newRangeEnd] = updatedXScale.range();\n\t\tconst newDomainExtent = ((newRangeEnd - newRangeStart) / (rangeEnd - rangeStart)) * (end - start);\n\t\tconst newStart = maintainPointsPerPixelOnResize\n\t\t\t? end - newDomainExtent\n\t\t\t: start;\n\n\t\tconst lastItemX = initialXScale(xAccessor(lastItem));\n\t\t// console.log(\"pointsPerPixel => \", newStart, start, end, updatedXScale(end));\n\t\tconst response = filterData(\n\t\t\tfullData, [newStart, end], xAccessor, updatedXScale,\n\t\t\t{ fallbackStart: start, fallbackEnd: { lastItem, lastItemX } }\n\t\t);\n\t\tinitialPlotData = response.plotData;\n\t\tupdatedXScale.domain(response.domain);\n\t\t// console.log(\"HERE!!!!!\", start, end);\n\t} else if (lastItemWasVisible\n\t\t\t&& end < xAccessor(lastItem)) {\n\t\t// this is when a new item is added and last item was visible\n\t\t// so slide over and show the new item also\n\n\t\t// get plotData between [xAccessor(l) - (end - start), xAccessor(l)] and DO change the domain\n\t\tconst dx = initialXScale(xAccessor(lastItem)) - initialXScale.range()[1];\n\t\tconst [newStart, newEnd] = initialXScale.range().map(x => x + dx).map(initialXScale.invert);\n\n\n\t\tconst response = filterData(fullData, [newStart, newEnd], xAccessor, updatedXScale);\n\t\tinitialPlotData = response.plotData;\n\t\tupdatedXScale.domain(response.domain);\t\t// if last item was visible, then shift\n\t}\n\t// plotData = getDataOfLength(fullData, showingInterval, plotData.length)\n\tconst plotData = postCalculator(initialPlotData);\n\tconst chartConfig = getChartConfigWithUpdatedYScales(\n\t\tgetNewChartConfig(dimensions, children, initialChartConfig),\n\t\t{ plotData, xAccessor, displayXAccessor, fullData },\n\t\tupdatedXScale.domain()\n\t);\n\n\treturn {\n\t\txScale: updatedXScale,\n\t\txAccessor,\n\t\tchartConfig,\n\t\tplotData,\n\t\tfullData,\n\t\tfilterData,\n\t};\n}\n\nfunction calculateState(props) {\n\n\tconst {\n\t\txAccessor: inputXAccesor, xExtents: xExtentsProp, data, padding, flipXScale\n\t} = props;\n\n\tif (process.env.NODE_ENV !== \"production\" && isDefined(props.xScale.invert)) {\n\t\tfor (let i = 1; i < data.length; i++) {\n\t\t\tconst prev = data[i - 1];\n\t\t\tconst curr = data[i];\n\t\t\tif (inputXAccesor(prev) > inputXAccesor(curr)) {\n\t\t\t\tthrow new Error(\"'data' is not sorted on 'xAccessor', send 'data' sorted in ascending order of 'xAccessor'\");\n\t\t\t}\n\t\t}\n\t}\n\n\tconst direction = getXScaleDirection(flipXScale);\n\tconst dimensions = getDimensions(props);\n\n\tconst extent = typeof xExtentsProp === \"function\"\n\t\t? xExtentsProp(data)\n\t\t: d3Extent(xExtentsProp.map(d => functor(d)).map(each => each(data, inputXAccesor)));\n\n\tconst { xAccessor, displayXAccessor, xScale, fullData, filterData } = calculateFullData(props);\n\tconst updatedXScale = setXRange(xScale, dimensions, padding, direction);\n\n\tconst { plotData, domain } = filterData(fullData, extent, inputXAccesor, updatedXScale);\n\n\tif (process.env.NODE_ENV !== \"production\" && plotData.length <= 1) {\n\t\tthrow new Error(`Showing ${plotData.length} datapoints, review the 'xExtents' prop of ChartCanvas`);\n\t}\n\treturn {\n\t\tplotData,\n\t\txScale: updatedXScale.domain(domain),\n\t\txAccessor,\n\t\tdisplayXAccessor,\n\t\tfullData,\n\t\tfilterData,\n\t};\n}\n\nfunction setXRange(xScale, dimensions, padding, direction = 1) {\n\tif (xScale.rangeRoundPoints) {\n\t\tif (isNaN(padding)) throw new Error(\"padding has to be a number for ordinal scale\");\n\t\txScale.rangeRoundPoints([0, dimensions.width], padding);\n\t} else if (xScale.padding) {\n\t\tif (isNaN(padding)) throw new Error(\"padding has to be a number for ordinal scale\");\n\t\txScale.range([0, dimensions.width]);\n\t\txScale.padding(padding / 2);\n\t} else {\n\t\tconst { left, right } = isNaN(padding)\n\t\t\t? padding\n\t\t\t: { left: padding, right: padding };\n\t\tif (direction > 0) {\n\t\t\txScale.range([left, dimensions.width - right]);\n\t\t} else {\n\t\t\txScale.range([dimensions.width - right, left]);\n\t\t}\n\t}\n\treturn xScale;\n}\n\nfunction pinchCoordinates(pinch) {\n\tconst { touch1Pos, touch2Pos } = pinch;\n\n\treturn {\n\t\ttopLeft: [Math.min(touch1Pos[0], touch2Pos[0]), Math.min(touch1Pos[1], touch2Pos[1])],\n\t\tbottomRight: [Math.max(touch1Pos[0], touch2Pos[0]), Math.max(touch1Pos[1], touch2Pos[1])]\n\t};\n}\n\n\nclass ChartCanvas extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.getDataInfo = this.getDataInfo.bind(this);\n\t\tthis.getCanvasContexts = this.getCanvasContexts.bind(this);\n\n\t\tthis.handleMouseMove = this.handleMouseMove.bind(this);\n\t\tthis.handleMouseEnter = this.handleMouseEnter.bind(this);\n\t\tthis.handleMouseLeave = this.handleMouseLeave.bind(this);\n\t\tthis.handleZoom = this.handleZoom.bind(this);\n\t\tthis.handlePinchZoom = this.handlePinchZoom.bind(this);\n\t\tthis.handlePinchZoomEnd = this.handlePinchZoomEnd.bind(this);\n\t\tthis.handlePan = this.handlePan.bind(this);\n\t\tthis.handlePanEnd = this.handlePanEnd.bind(this);\n\t\tthis.handleClick = this.handleClick.bind(this);\n\t\tthis.handleMouseDown = this.handleMouseDown.bind(this);\n\t\tthis.handleDoubleClick = this.handleDoubleClick.bind(this);\n\t\tthis.handleContextMenu = this.handleContextMenu.bind(this);\n\t\tthis.handleDragStart = this.handleDragStart.bind(this);\n\t\tthis.handleDrag = this.handleDrag.bind(this);\n\t\tthis.handleDragEnd = this.handleDragEnd.bind(this);\n\n\t\tthis.panHelper = this.panHelper.bind(this);\n\t\tthis.pinchZoomHelper = this.pinchZoomHelper.bind(this);\n\t\tthis.xAxisZoom = this.xAxisZoom.bind(this);\n\t\tthis.yAxisZoom = this.yAxisZoom.bind(this);\n\t\tthis.resetYDomain = this.resetYDomain.bind(this);\n\t\tthis.calculateStateForDomain = this.calculateStateForDomain.bind(this);\n\t\tthis.generateSubscriptionId = this.generateSubscriptionId.bind(this);\n\t\tthis.draw = this.draw.bind(this);\n\t\tthis.redraw = this.redraw.bind(this);\n\t\tthis.getAllPanConditions = this.getAllPanConditions.bind(this);\n\n\t\tthis.subscriptions = [];\n\t\tthis.subscribe = this.subscribe.bind(this);\n\t\tthis.unsubscribe = this.unsubscribe.bind(this);\n\t\tthis.amIOnTop = this.amIOnTop.bind(this);\n\t\tthis.saveEventCaptureNode = this.saveEventCaptureNode.bind(this);\n\t\tthis.saveCanvasContainerNode = this.saveCanvasContainerNode.bind(this);\n\t\tthis.setCursorClass = this.setCursorClass.bind(this);\n\t\tthis.getMutableState = this.getMutableState.bind(this);\n\t\t// this.canvasDrawCallbackList = [];\n\t\tthis.interactiveState = [];\n\t\tthis.panInProgress = false;\n\n\t\tthis.state = {};\n\t\tthis.mutableState = {};\n\t\tthis.lastSubscriptionId = 0;\n\t}\n\tsaveEventCaptureNode(node) {\n\t\tthis.eventCaptureNode = node;\n\t}\n\tsaveCanvasContainerNode(node) {\n\t\tthis.canvasContainerNode = node;\n\t}\n\tgetMutableState() {\n\t\treturn this.mutableState;\n\t}\n\tgetDataInfo() {\n\t\treturn {\n\t\t\t...this.state,\n\t\t\tfullData: this.fullData,\n\t\t};\n\t}\n\tgetCanvasContexts() {\n\t\tif (this.canvasContainerNode) {\n\t\t\treturn this.canvasContainerNode.getCanvasContexts();\n\t\t}\n\t}\n\tgenerateSubscriptionId() {\n\t\tthis.lastSubscriptionId++;\n\t\treturn this.lastSubscriptionId;\n\t}\n\tclearBothCanvas() {\n\t\tconst canvases = this.getCanvasContexts();\n\t\tif (canvases && canvases.axes) {\n\t\t\tclearCanvas([\n\t\t\t\tcanvases.axes,\n\t\t\t\t// canvases.hover,\n\t\t\t\tcanvases.mouseCoord\n\t\t\t], this.props.ratio);\n\t\t}\n\t}\n\tclearMouseCanvas() {\n\t\tconst canvases = this.getCanvasContexts();\n\t\tif (canvases && canvases.mouseCoord) {\n\t\t\tclearCanvas([\n\t\t\t\tcanvases.mouseCoord,\n\t\t\t\t// canvases.hover,\n\t\t\t], this.props.ratio);\n\t\t}\n\t}\n\tclearThreeCanvas() {\n\t\tconst canvases = this.getCanvasContexts();\n\t\tif (canvases && canvases.axes) {\n\t\t\tclearCanvas([\n\t\t\t\tcanvases.axes,\n\t\t\t\t// canvases.hover,\n\t\t\t\tcanvases.mouseCoord,\n\t\t\t\tcanvases.bg\n\t\t\t], this.props.ratio);\n\t\t}\n\t}\n\tsubscribe(id, rest) {\n\t\tconst { getPanConditions = functor({\n\t\t\tdraggable: false,\n\t\t\tpanEnabled: true,\n\t\t}) } = rest;\n\t\tthis.subscriptions = this.subscriptions.concat({\n\t\t\tid,\n\t\t\t...rest,\n\t\t\tgetPanConditions,\n\t\t});\n\t}\n\tunsubscribe(id) {\n\t\tthis.subscriptions = this.subscriptions.filter(each => each.id !== id);\n\t}\n\tgetAllPanConditions() {\n\t\treturn this.subscriptions\n\t\t\t.map(each => each.getPanConditions());\n\t}\n\tsetCursorClass(className) {\n\t\tif (this.eventCaptureNode != null) {\n\t\t\tthis.eventCaptureNode.setCursorClass(className);\n\t\t}\n\t}\n\tamIOnTop(id) {\n\t\tconst dragableComponents = this.subscriptions\n\t\t\t.filter(each => each.getPanConditions().draggable);\n\n\t\treturn dragableComponents.length > 0\n\t\t\t&& last(dragableComponents).id === id;\n\t}\n\thandleContextMenu(mouseXY, e) {\n\t\tconst { xAccessor, chartConfig, plotData, xScale } = this.state;\n\n\t\tconst currentCharts = getCurrentCharts(chartConfig, mouseXY);\n\t\tconst currentItem = getCurrentItem(xScale, xAccessor, mouseXY, plotData);\n\n\t\tthis.triggerEvent(\"contextmenu\", {\n\t\t\tmouseXY,\n\t\t\tcurrentItem,\n\t\t\tcurrentCharts,\n\t\t}, e);\n\t}\n\tcalculateStateForDomain(newDomain) {\n\t\tconst {\n\t\t\txAccessor,\n\t\t\tdisplayXAccessor,\n\t\t\txScale: initialXScale,\n\t\t\tchartConfig: initialChartConfig,\n\t\t\tplotData: initialPlotData\n\t\t} = this.state;\n\t\tconst { filterData } = this.state;\n\t\tconst { fullData } = this;\n\t\tconst { postCalculator } = this.props;\n\n\t\tconst { plotData: beforePlotData, domain } = filterData(\n\t\t\tfullData,\n\t\t\tnewDomain,\n\t\t\txAccessor,\n\t\t\tinitialXScale,\n\t\t\t{\n\t\t\t\tcurrentPlotData: initialPlotData,\n\t\t\t\tcurrentDomain: initialXScale.domain()\n\t\t\t}\n\t\t);\n\n\t\tconst plotData = postCalculator(beforePlotData);\n\t\tconst updatedScale = initialXScale.copy().domain(domain);\n\t\tconst chartConfig = getChartConfigWithUpdatedYScales(\n\t\t\tinitialChartConfig,\n\t\t\t{ plotData, xAccessor, displayXAccessor, fullData },\n\t\t\tupdatedScale.domain()\n\t\t);\n\n\t\treturn {\n\t\t\txScale: updatedScale,\n\t\t\tplotData,\n\t\t\tchartConfig,\n\t\t};\n\t}\n\tpinchZoomHelper(initialPinch, finalPinch) {\n\t\tconst { xScale: initialPinchXScale } = initialPinch;\n\n\t\tconst {\n\t\t\txScale: initialXScale,\n\t\t\tchartConfig: initialChartConfig,\n\t\t\tplotData: initialPlotData,\n\t\t\txAccessor,\n\t\t\tdisplayXAccessor,\n\t\t} = this.state;\n\t\tconst { filterData } = this.state;\n\t\tconst { fullData } = this;\n\t\tconst { postCalculator } = this.props;\n\n\t\tconst { topLeft: iTL, bottomRight: iBR } = pinchCoordinates(initialPinch);\n\t\tconst { topLeft: fTL, bottomRight: fBR } = pinchCoordinates(finalPinch);\n\n\t\tconst e = initialPinchXScale.range()[1];\n\n\t\tconst xDash = Math.round(-(iBR[0] * fTL[0] - iTL[0] * fBR[0]) / (iTL[0] - iBR[0]));\n\t\tconst yDash = Math.round(e + ((e - iBR[0]) * (e - fTL[0]) - (e - iTL[0]) * (e - fBR[0])) / ((e - iTL[0]) - (e - iBR[0])));\n\n\t\tconst x = Math.round(-xDash * iTL[0] / (-xDash + fTL[0]));\n\t\tconst y = Math.round(e - (yDash - e) * (e - iTL[0]) / (yDash + (e - fTL[0])));\n\n\t\tconst newDomain = [x, y].map(initialPinchXScale.invert);\n\t\t// var domainR = initial.right + right;\n\n\t\tconst { plotData: beforePlotData, domain } = filterData(\n\t\t\tfullData,\n\t\t\tnewDomain,\n\t\t\txAccessor,\n\t\t\tinitialPinchXScale,\n\t\t\t{\n\t\t\t\tcurrentPlotData: initialPlotData,\n\t\t\t\tcurrentDomain: initialXScale.domain()\n\t\t\t}\n\t\t);\n\n\t\tconst plotData = postCalculator(beforePlotData);\n\t\tconst updatedScale = initialXScale.copy().domain(domain);\n\n\t\tconst mouseXY = finalPinch.touch1Pos;\n\t\tconst chartConfig = getChartConfigWithUpdatedYScales(\n\t\t\tinitialChartConfig,\n\t\t\t{ plotData, xAccessor, displayXAccessor, fullData },\n\t\t\tupdatedScale.domain()\n\t\t);\n\t\tconst currentItem = getCurrentItem(updatedScale, xAccessor, mouseXY, plotData);\n\n\t\treturn {\n\t\t\tchartConfig,\n\t\t\txScale: updatedScale,\n\t\t\tplotData,\n\t\t\tmouseXY,\n\t\t\tcurrentItem,\n\t\t};\n\t}\n\tcancelDrag() {\n\t\tthis.eventCaptureNode.cancelDrag();\n\t\tthis.triggerEvent(\"dragcancel\");\n\t}\n\thandlePinchZoom(initialPinch, finalPinch, e) {\n\t\tif (!this.waitingForPinchZoomAnimationFrame) {\n\t\t\tthis.waitingForPinchZoomAnimationFrame = true;\n\t\t\tconst state = this.pinchZoomHelper(initialPinch, finalPinch);\n\n\t\t\tthis.triggerEvent(\"pinchzoom\", state, e);\n\n\t\t\tthis.finalPinch = finalPinch;\n\n\t\t\trequestAnimationFrame(() => {\n\t\t\t\tthis.clearBothCanvas();\n\t\t\t\tthis.draw({ trigger: \"pinchzoom\" });\n\t\t\t\tthis.waitingForPinchZoomAnimationFrame = false;\n\t\t\t});\n\t\t}\n\t}\n\thandlePinchZoomEnd(initialPinch, e) {\n\t\tconst { xAccessor } = this.state;\n\n\t\tif (this.finalPinch) {\n\t\t\tconst state = this.pinchZoomHelper(initialPinch, this.finalPinch);\n\t\t\tconst { xScale } = state;\n\t\t\tthis.triggerEvent(\"pinchzoom\", state, e);\n\n\t\t\tthis.finalPinch = null;\n\n\t\t\tthis.clearThreeCanvas();\n\n\t\t\tconst { fullData } = this;\n\t\t\tconst firstItem = head(fullData);\n\n\t\t\tconst start = head(xScale.domain());\n\t\t\tconst end = xAccessor(firstItem);\n\t\t\tconst { onLoadMore } = this.props;\n\n\t\t\tthis.setState(state, () => {\n\t\t\t\tif (start < end) {\n\t\t\t\t\tonLoadMore(start, end);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\thandleZoom(zoomDirection, mouseXY, e) {\n\t\tif (this.panInProgress)\n\t\t\treturn;\n\t\t// console.log(\"zoomDirection \", zoomDirection, \" mouseXY \", mouseXY);\n\t\tconst { xAccessor, xScale: initialXScale, plotData: initialPlotData } = this.state;\n\t\tconst { zoomMultiplier, zoomAnchor } = this.props;\n\t\tconst { fullData } = this;\n\t\tconst item = zoomAnchor({\n\t\t\txScale: initialXScale,\n\t\t\txAccessor,\n\t\t\tmouseXY,\n\t\t\tplotData: initialPlotData,\n\t\t\tfullData,\n\t\t});\n\n\t\tconst cx = initialXScale(item);\n\t\tconst c = zoomDirection > 0 ? 1 * zoomMultiplier : 1 / zoomMultiplier;\n\t\tconst newDomain = initialXScale.range().map(x => cx + (x - cx) * c).map(initialXScale.invert);\n\n\t\tconst { xScale, plotData, chartConfig } = this.calculateStateForDomain(newDomain);\n\n\t\tconst currentItem = getCurrentItem(xScale, xAccessor, mouseXY, plotData);\n\t\tconst currentCharts = getCurrentCharts(chartConfig, mouseXY);\n\n\t\tthis.clearThreeCanvas();\n\n\t\tconst firstItem = head(fullData);\n\n\t\tconst start = head(xScale.domain());\n\t\tconst end = xAccessor(firstItem);\n\t\tconst { onLoadMore } = this.props;\n\n\t\tthis.mutableState = {\n\t\t\tmouseXY: mouseXY,\n\t\t\tcurrentItem: currentItem,\n\t\t\tcurrentCharts: currentCharts,\n\t\t};\n\n\t\tthis.triggerEvent(\"zoom\", {\n\t\t\txScale,\n\t\t\tplotData,\n\t\t\tchartConfig,\n\t\t\tmouseXY,\n\t\t\tcurrentCharts,\n\t\t\tcurrentItem,\n\t\t\tshow: true,\n\t\t}, e);\n\n\t\tthis.setState({\n\t\t\txScale,\n\t\t\tplotData,\n\t\t\tchartConfig,\n\t\t}, () => {\n\t\t\tif (start < end) {\n\t\t\t\tonLoadMore(start, end);\n\t\t\t}\n\t\t});\n\t}\n\txAxisZoom(newDomain) {\n\t\tconst { xScale, plotData, chartConfig } = this.calculateStateForDomain(newDomain);\n\t\tthis.clearThreeCanvas();\n\n\t\tconst { xAccessor } = this.state;\n\t\tconst { fullData } = this;\n\t\tconst firstItem = head(fullData);\n\t\tconst start = head(xScale.domain());\n\t\tconst end = xAccessor(firstItem);\n\t\tconst { onLoadMore } = this.props;\n\n\t\tthis.setState({\n\t\t\txScale,\n\t\t\tplotData,\n\t\t\tchartConfig,\n\t\t}, () => {\n\t\t\tif (start < end) onLoadMore(start, end);\n\t\t});\n\t}\n\tyAxisZoom(chartId, newDomain) {\n\t\tthis.clearThreeCanvas();\n\t\tconst { chartConfig: initialChartConfig } = this.state;\n\t\tconst chartConfig = initialChartConfig\n\t\t\t.map(each => {\n\t\t\t\tif (each.id === chartId) {\n\t\t\t\t\tconst { yScale } = each;\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...each,\n\t\t\t\t\t\tyScale: yScale.copy().domain(newDomain),\n\t\t\t\t\t\tyPanEnabled: true,\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\treturn each;\n\t\t\t\t}\n\t\t\t});\n\n\t\tthis.setState({\n\t\t\tchartConfig,\n\t\t});\n\t}\n\ttriggerEvent(type, props, e) {\n\t\t// console.log(\"triggering ->\", type);\n\n\t\tthis.subscriptions.forEach(each => {\n\t\t\tconst state = {\n\t\t\t\t...this.state,\n\t\t\t\tfullData: this.fullData,\n\t\t\t\tsubscriptions: this.subscriptions,\n\t\t\t};\n\t\t\teach.listener(type, props, state, e);\n\t\t});\n\t}\n\tdraw(props) {\n\t\tthis.subscriptions.forEach(each => {\n\t\t\tif (isDefined(each.draw))\n\t\t\t\teach.draw(props);\n\t\t});\n\t}\n\tredraw() {\n\t\tthis.clearThreeCanvas();\n\t\tthis.draw({ force: true });\n\t}\n\tpanHelper(mouseXY, initialXScale, { dx, dy }, chartsToPan) {\n\t\tconst { xAccessor, displayXAccessor, chartConfig: initialChartConfig } = this.state;\n\t\tconst { filterData } = this.state;\n\t\tconst { fullData } = this;\n\t\tconst { postCalculator } = this.props;\n\n\t\t// console.log(dx, dy);\n\t\tif (isNotDefined(initialXScale.invert))\n\t\t\tthrow new Error(\"xScale provided does not have an invert() method.\"\n\t\t\t\t+ \"You are likely using an ordinal scale. This scale does not support zoom, pan\");\n\n\t\tconst newDomain = initialXScale.range().map(x => x - dx).map(initialXScale.invert);\n\n\t\tconst { plotData: beforePlotData, domain } = filterData(\n\t\t\tfullData,\n\t\t\tnewDomain,\n\t\t\txAccessor,\n\t\t\tinitialXScale,\n\t\t\t{\n\t\t\t\tcurrentPlotData: this.hackyWayToStopPanBeyondBounds__plotData,\n\t\t\t\tcurrentDomain: this.hackyWayToStopPanBeyondBounds__domain\n\t\t\t}\n\t\t);\n\n\t\tconst updatedScale = initialXScale.copy().domain(domain);\n\t\tconst plotData = postCalculator(beforePlotData);\n\t\t// console.log(last(plotData));\n\n\t\tconst currentItem = getCurrentItem(updatedScale, xAccessor, mouseXY, plotData);\n\t\tconst chartConfig = getChartConfigWithUpdatedYScales(\n\t\t\tinitialChartConfig,\n\t\t\t{ plotData, xAccessor, displayXAccessor, fullData },\n\t\t\tupdatedScale.domain(),\n\t\t\tdy,\n\t\t\tchartsToPan\n\t\t);\n\t\tconst currentCharts = getCurrentCharts(chartConfig, mouseXY);\n\n\t\t// console.log(initialXScale.domain(), newDomain, updatedScale.domain());\n\t\treturn {\n\t\t\txScale: updatedScale,\n\t\t\tplotData,\n\t\t\tchartConfig,\n\t\t\tmouseXY,\n\t\t\tcurrentCharts,\n\t\t\tcurrentItem,\n\t\t};\n\t}\n\thandlePan(mousePosition, panStartXScale, dxdy, chartsToPan, e) {\n\t\tif (!this.waitingForPanAnimationFrame) {\n\t\t\tthis.waitingForPanAnimationFrame = true;\n\n\t\t\tthis.hackyWayToStopPanBeyondBounds__plotData = this.hackyWayToStopPanBeyondBounds__plotData || this.state.plotData;\n\t\t\tthis.hackyWayToStopPanBeyondBounds__domain = this.hackyWayToStopPanBeyondBounds__domain || this.state.xScale.domain();\n\n\t\t\tconst state = this.panHelper(mousePosition, panStartXScale, dxdy, chartsToPan);\n\n\t\t\tthis.hackyWayToStopPanBeyondBounds__plotData = state.plotData;\n\t\t\tthis.hackyWayToStopPanBeyondBounds__domain = state.xScale.domain();\n\n\t\t\tthis.panInProgress = true;\n\t\t\t// console.log(panStartXScale.domain(), state.xScale.domain());\n\n\t\t\tthis.triggerEvent(\"pan\", state, e);\n\n\t\t\tthis.mutableState = {\n\t\t\t\tmouseXY: state.mouseXY,\n\t\t\t\tcurrentItem: state.currentItem,\n\t\t\t\tcurrentCharts: state.currentCharts,\n\t\t\t};\n\t\t\trequestAnimationFrame(() => {\n\t\t\t\tthis.waitingForPanAnimationFrame = false;\n\t\t\t\tthis.clearBothCanvas();\n\t\t\t\tthis.draw({ trigger: \"pan\" });\n\t\t\t});\n\t\t}\n\t}\n\thandlePanEnd(mousePosition, panStartXScale, dxdy, chartsToPan, e) {\n\t\tconst state = this.panHelper(mousePosition, panStartXScale, dxdy, chartsToPan);\n\t\t// console.log(this.canvasDrawCallbackList.map(d => d.type));\n\t\tthis.hackyWayToStopPanBeyondBounds__plotData = null;\n\t\tthis.hackyWayToStopPanBeyondBounds__domain = null;\n\n\t\tthis.panInProgress = false;\n\n\t\t// console.log(\"PANEND\", panEnd++);\n\t\tconst {\n\t\t\txScale,\n\t\t\tplotData,\n\t\t\tchartConfig,\n\t\t} = state;\n\n\t\tthis.triggerEvent(\"panend\", state, e);\n\n\t\trequestAnimationFrame(() => {\n\t\t\tconst { xAccessor } = this.state;\n\t\t\tconst { fullData } = this;\n\n\t\t\tconst firstItem = head(fullData);\n\t\t\tconst start = head(xScale.domain());\n\t\t\tconst end = xAccessor(firstItem);\n\t\t\t// console.log(start, end, start < end ? \"Load more\" : \"I have it\");\n\n\t\t\tconst { onLoadMore } = this.props;\n\n\t\t\tthis.clearThreeCanvas();\n\n\t\t\tthis.setState({\n\t\t\t\txScale,\n\t\t\t\tplotData,\n\t\t\t\tchartConfig,\n\t\t\t}, () => {\n\t\t\t\tif (start < end) onLoadMore(start, end);\n\t\t\t});\n\t\t});\n\t}\n\thandleMouseDown(mousePosition, currentCharts, e) {\n\t\tthis.triggerEvent(\"mousedown\", this.mutableState, e);\n\t}\n\thandleMouseEnter(e) {\n\t\tthis.triggerEvent(\"mouseenter\", {\n\t\t\tshow: true,\n\t\t}, e);\n\t}\n\thandleMouseMove(mouseXY, inputType, e) {\n\t\tif (!this.waitingForMouseMoveAnimationFrame) {\n\t\t\tthis.waitingForMouseMoveAnimationFrame = true;\n\n\t\t\tconst { chartConfig, plotData, xScale, xAccessor } = this.state;\n\t\t\tconst currentCharts = getCurrentCharts(chartConfig, mouseXY);\n\t\t\tconst currentItem = getCurrentItem(xScale, xAccessor, mouseXY, plotData);\n\t\t\tthis.triggerEvent(\"mousemove\", {\n\t\t\t\tshow: true,\n\t\t\t\tmouseXY,\n\t\t\t\t// prevMouseXY is used in interactive components\n\t\t\t\tprevMouseXY: this.prevMouseXY,\n\t\t\t\tcurrentItem,\n\t\t\t\tcurrentCharts,\n\t\t\t}, e);\n\n\t\t\tthis.prevMouseXY = mouseXY;\n\t\t\tthis.mutableState = {\n\t\t\t\tmouseXY,\n\t\t\t\tcurrentItem,\n\t\t\t\tcurrentCharts,\n\t\t\t};\n\n\t\t\trequestAnimationFrame(() => {\n\t\t\t\tthis.clearMouseCanvas();\n\t\t\t\tthis.draw({ trigger: \"mousemove\" });\n\t\t\t\tthis.waitingForMouseMoveAnimationFrame = false;\n\t\t\t});\n\t\t}\n\t}\n\thandleMouseLeave(e) {\n\t\tthis.triggerEvent(\"mouseleave\", { show: false }, e);\n\t\tthis.clearMouseCanvas();\n\t\tthis.draw({ trigger: \"mouseleave\" });\n\t}\n\thandleDragStart({ startPos }, e) {\n\t\tthis.triggerEvent(\"dragstart\", { startPos }, e);\n\t}\n\thandleDrag({ startPos, mouseXY }, e) {\n\t\tconst { chartConfig, plotData, xScale, xAccessor } = this.state;\n\t\tconst currentCharts = getCurrentCharts(chartConfig, mouseXY);\n\t\tconst currentItem = getCurrentItem(xScale, xAccessor, mouseXY, plotData);\n\n\t\tthis.triggerEvent(\"drag\", {\n\t\t\tstartPos,\n\t\t\tmouseXY,\n\t\t\tcurrentItem,\n\t\t\tcurrentCharts,\n\t\t}, e);\n\n\t\tthis.mutableState = {\n\t\t\tmouseXY,\n\t\t\tcurrentItem,\n\t\t\tcurrentCharts,\n\t\t};\n\n\t\trequestAnimationFrame(() => {\n\t\t\tthis.clearMouseCanvas();\n\t\t\tthis.draw({ trigger: \"drag\" });\n\t\t});\n\t}\n\thandleDragEnd({ mouseXY }, e) {\n\t\tthis.triggerEvent(\"dragend\", { mouseXY }, e);\n\n\t\trequestAnimationFrame(() => {\n\t\t\tthis.clearMouseCanvas();\n\t\t\tthis.draw({ trigger: \"dragend\" });\n\t\t});\n\t}\n\thandleClick(mousePosition, e) {\n\t\tthis.triggerEvent(\"click\", this.mutableState, e);\n\n\t\trequestAnimationFrame(() => {\n\t\t\tthis.clearMouseCanvas();\n\t\t\tthis.draw({ trigger: \"click\" });\n\t\t});\n\t}\n\thandleDoubleClick(mousePosition, e) {\n\t\tthis.triggerEvent(\"dblclick\", {}, e);\n\t}\n\tgetChildContext() {\n\t\tconst dimensions = getDimensions(this.props);\n\t\treturn {\n\t\t\tfullData: this.fullData,\n\t\t\tplotData: this.state.plotData,\n\t\t\twidth: dimensions.width,\n\t\t\theight: dimensions.height,\n\t\t\tchartConfig: this.state.chartConfig,\n\t\t\txScale: this.state.xScale,\n\t\t\txAccessor: this.state.xAccessor,\n\t\t\tdisplayXAccessor: this.state.displayXAccessor,\n\t\t\tchartCanvasType: this.props.type,\n\t\t\tmargin: this.props.margin,\n\t\t\tratio: this.props.ratio,\n\t\t\txAxisZoom: this.xAxisZoom,\n\t\t\tyAxisZoom: this.yAxisZoom,\n\t\t\tgetCanvasContexts: this.getCanvasContexts,\n\t\t\tredraw: this.redraw,\n\t\t\tsubscribe: this.subscribe,\n\t\t\tunsubscribe: this.unsubscribe,\n\t\t\tgenerateSubscriptionId: this.generateSubscriptionId,\n\t\t\tgetMutableState: this.getMutableState,\n\t\t\tamIOnTop: this.amIOnTop,\n\t\t\tsetCursorClass: this.setCursorClass,\n\t\t};\n\t}\n\tcomponentWillMount() {\n\t\tconst { fullData, ...state } = resetChart(this.props, true);\n\t\tthis.setState(state);\n\t\tthis.fullData = fullData;\n\t}\n\tcomponentWillReceiveProps(nextProps) {\n\t\tconst reset = shouldResetChart(this.props, nextProps);\n\n\t\tconst interaction = isInteractionEnabled(this.state.xScale, this.state.xAccessor, this.state.plotData);\n\t\tconst { chartConfig: initialChartConfig } = this.state;\n\n\t\tlet newState;\n\t\tif (!interaction || reset || !shallowEqual(this.props.xExtents, nextProps.xExtents)) {\n\t\t\tif (process.env.NODE_ENV !== \"production\") {\n\t\t\t\tif (!interaction)\n\t\t\t\t\tlog(\"RESET CHART, changes to a non interactive chart\");\n\t\t\t\telse if (reset)\n\t\t\t\t\tlog(\"RESET CHART, one or more of these props changed\", CANDIDATES_FOR_RESET);\n\t\t\t\telse\n\t\t\t\t\tlog(\"xExtents changed\");\n\t\t\t}\n\t\t\t// do reset\n\t\t\tnewState = resetChart(nextProps);\n\t\t\tthis.mutableState = {};\n\t\t} else {\n\n\t\t\tconst [start, end] = this.state.xScale.domain();\n\t\t\tconst prevLastItem = last(this.fullData);\n\n\t\t\tconst calculatedState = calculateFullData(nextProps);\n\t\t\tconst { xAccessor } = calculatedState;\n\t\t\tconst lastItemWasVisible = xAccessor(prevLastItem) <= end && xAccessor(prevLastItem) >= start;\n\n\t\t\tif (process.env.NODE_ENV !== \"production\") {\n\t\t\t\tif (this.props.data !== nextProps.data)\n\t\t\t\t\tlog(\"data is changed but seriesName did not, change the seriesName if you wish to reset the chart and lastItemWasVisible = \", lastItemWasVisible);\n\t\t\t\telse\n\t\t\t\t\tlog(\"Trivial change, may be width/height or type changed, but that does not matter\");\n\t\t\t}\n\n\t\t\tnewState = updateChart(\n\t\t\t\tcalculatedState,\n\t\t\t\tthis.state.xScale,\n\t\t\t\tnextProps,\n\t\t\t\tlastItemWasVisible,\n\t\t\t\tinitialChartConfig,\n\t\t\t);\n\t\t}\n\n\t\tconst { fullData, ...state } = newState;\n\n\t\tif (this.panInProgress) {\n\t\t\tif (process.env.NODE_ENV !== \"production\") {\n\t\t\t\tlog(\"Pan is in progress\");\n\t\t\t}\n\t\t} else {\n\t\t\t/*\n\t\t\tif (!reset) {\n\t\t\t\tstate.chartConfig\n\t\t\t\t\t.forEach((each) => {\n\t\t\t\t\t\t// const sourceChartConfig = initialChartConfig.filter(d => d.id === each.id);\n\t\t\t\t\t\tconst prevChartConfig = find(initialChartConfig, d => d.id === each.id);\n\t\t\t\t\t\tif (isDefined(prevChartConfig) && prevChartConfig.yPanEnabled) {\n\t\t\t\t\t\t\teach.yScale.domain(prevChartConfig.yScale.domain());\n\t\t\t\t\t\t\teach.yPanEnabled = prevChartConfig.yPanEnabled;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t}\n\t\t\t*/\n\t\t\tthis.clearThreeCanvas();\n\n\t\t\tthis.setState(state);\n\t\t}\n\t\tthis.fullData = fullData;\n\t}\n\t/*\n\tcomponentDidUpdate(prevProps, prevState) {\n\t\tconsole.error(this.state.chartConfig, this.state.chartConfig.map(d => d.yScale.domain()));\n\t}\n\t*/\n\tresetYDomain(chartId) {\n\t\tconst { chartConfig } = this.state;\n\t\tlet changed = false;\n\t\tconst newChartConfig = chartConfig\n\t\t\t.map(each => {\n\t\t\t\tif ((isNotDefined(chartId) || each.id === chartId)\n\t\t\t\t\t\t&& !shallowEqual(each.yScale.domain(), each.realYDomain)) {\n\t\t\t\t\tchanged = true;\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...each,\n\t\t\t\t\t\tyScale: each.yScale.domain(each.realYDomain),\n\t\t\t\t\t\tyPanEnabled: false,\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\treturn each;\n\t\t\t});\n\n\t\tif (changed) {\n\t\t\tthis.clearThreeCanvas();\n\t\t\tthis.setState({\n\t\t\t\tchartConfig: newChartConfig\n\t\t\t});\n\t\t}\n\t}\n\tshouldComponentUpdate() {\n\t\t// console.log(\"Happneing.....\", !this.panInProgress)\n\t\treturn !this.panInProgress;\n\t}\n\trender() {\n\n\t\tconst { type, height, width, margin, className, zIndex, defaultFocus, ratio, mouseMoveEvent, panEvent, zoomEvent } = this.props;\n\t\tconst { useCrossHairStyleCursor, onSelect } = this.props;\n\n\t\tconst { plotData, xScale, xAccessor, chartConfig } = this.state;\n\t\tconst dimensions = getDimensions(this.props);\n\n\t\tconst interaction = isInteractionEnabled(xScale, xAccessor, plotData);\n\n\t\tconst cursorStyle = useCrossHairStyleCursor && interaction;\n\t\tconst cursor = getCursorStyle();\n\t\treturn (\n\t\t\t<div style={{ position: \"relative\", width, height }} className={className} onClick={onSelect}>\n\t\t\t\t<CanvasContainer ref={this.saveCanvasContainerNode}\n\t\t\t\t\ttype={type}\n\t\t\t\t\tratio={ratio}\n\t\t\t\t\twidth={width} height={height} zIndex={zIndex}/>\n\t\t\t\t<svg className={className} width={width} height={height} style={{ position: \"absolute\", zIndex: (zIndex + 5) }}>\n\t\t\t\t\t{cursor}\n\t\t\t\t\t<defs>\n\t\t\t\t\t\t<clipPath id=\"chart-area-clip\">\n\t\t\t\t\t\t\t<rect x=\"0\" y=\"0\" width={dimensions.width} height={dimensions.height} />\n\t\t\t\t\t\t</clipPath>\n\t\t\t\t\t\t{chartConfig\n\t\t\t\t\t\t\t.map((each, idx) => <clipPath key={idx} id={`chart-area-clip-${each.id}`}>\n\t\t\t\t\t\t\t\t<rect x=\"0\" y=\"0\" width={each.width} height={each.height} />\n\t\t\t\t\t\t\t</clipPath>)}\n\t\t\t\t\t</defs>\n\t\t\t\t\t<g transform={`translate(${margin.left + 0.5}, ${margin.top + 0.5})`}>\n\t\t\t\t\t\t<EventCapture\n\t\t\t\t\t\t\tref={this.saveEventCaptureNode}\n\t\t\t\t\t\t\tuseCrossHairStyleCursor={cursorStyle}\n\t\t\t\t\t\t\tmouseMove={mouseMoveEvent && interaction}\n\t\t\t\t\t\t\tzoom={zoomEvent && interaction}\n\t\t\t\t\t\t\tpan={panEvent && interaction}\n\n\t\t\t\t\t\t\twidth={dimensions.width}\n\t\t\t\t\t\t\theight={dimensions.height}\n\t\t\t\t\t\t\tchartConfig={chartConfig}\n\t\t\t\t\t\t\txScale={xScale}\n\t\t\t\t\t\t\txAccessor={xAccessor}\n\t\t\t\t\t\t\tfocus={defaultFocus}\n\t\t\t\t\t\t\tdisableInteraction={this.props.disableInteraction}\n\n\t\t\t\t\t\t\tgetAllPanConditions={this.getAllPanConditions}\n\t\t\t\t\t\t\tonContextMenu={this.handleContextMenu}\n\t\t\t\t\t\t\tonClick={this.handleClick}\n\t\t\t\t\t\t\tonDoubleClick={this.handleDoubleClick}\n\t\t\t\t\t\t\tonMouseDown={this.handleMouseDown}\n\t\t\t\t\t\t\tonMouseMove={this.handleMouseMove}\n\t\t\t\t\t\t\tonMouseEnter={this.handleMouseEnter}\n\t\t\t\t\t\t\tonMouseLeave={this.handleMouseLeave}\n\n\t\t\t\t\t\t\tonDragStart={this.handleDragStart}\n\t\t\t\t\t\t\tonDrag={this.handleDrag}\n\t\t\t\t\t\t\tonDragComplete={this.handleDragEnd}\n\n\t\t\t\t\t\t\tonZoom={this.handleZoom}\n\t\t\t\t\t\t\tonPinchZoom={this.handlePinchZoom}\n\t\t\t\t\t\t\tonPinchZoomEnd={this.handlePinchZoomEnd}\n\t\t\t\t\t\t\tonPan={this.handlePan}\n\t\t\t\t\t\t\tonPanEnd={this.handlePanEnd}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<g className=\"react-stockcharts-avoid-interaction\">\n\t\t\t\t\t\t\t{this.props.children}\n\t\t\t\t\t\t</g>\n\t\t\t\t\t</g>\n\t\t\t\t</svg>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nfunction isInteractionEnabled(xScale, xAccessor, data) {\n\tconst interaction = !isNaN(xScale(xAccessor(head(data)))) && isDefined(xScale.invert);\n\treturn interaction;\n}\n\nChartCanvas.propTypes = {\n\twidth: PropTypes.number.isRequired,\n\theight: PropTypes.number.isRequired,\n\tmargin: PropTypes.object,\n\tratio: PropTypes.number.isRequired,\n\t// interval: PropTypes.oneOf([\"D\", \"W\", \"M\"]), // ,\"m1\", \"m5\", \"m15\", \"W\", \"M\"\n\ttype: PropTypes.oneOf([\"svg\", \"hybrid\"]),\n\tpointsPerPxThreshold: PropTypes.number,\n\tminPointsPerPxThreshold: PropTypes.number,\n\tdata: PropTypes.array.isRequired,\n\t// initialDisplay: PropTypes.number,\n\txAccessor: PropTypes.func,\n\txExtents: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.func\n\t]),\n\tzoomAnchor: PropTypes.func,\n\n\tclassName: PropTypes.string,\n\tseriesName: PropTypes.string.isRequired,\n\tzIndex: PropTypes.number,\n\tchildren: PropTypes.node.isRequired,\n\txScale: PropTypes.func.isRequired,\n\tpostCalculator: PropTypes.func,\n\tflipXScale: PropTypes.bool,\n\tuseCrossHairStyleCursor: PropTypes.bool,\n\tpadding: PropTypes.oneOfType([\n\t\tPropTypes.number,\n\t\tPropTypes.shape({\n\t\t\tleft: PropTypes.number,\n\t\t\tright: PropTypes.number,\n\t\t})\n\t]),\n\tdefaultFocus: PropTypes.bool,\n\tzoomMultiplier: PropTypes.number,\n\tonLoadMore: PropTypes.func,\n\tdisplayXAccessor: function(props, propName/* , componentName */) {\n\t\tif (isNotDefined(props[propName])) {\n\t\t\tconsole.warn(\"`displayXAccessor` is not defined,\"\n\t\t\t\t+ \" will use the value from `xAccessor` as `displayXAccessor`.\"\n\t\t\t\t+ \" This might be ok if you do not use a discontinuous scale\"\n\t\t\t\t+ \" but if you do, provide a `displayXAccessor` prop to `ChartCanvas`\");\n\t\t} else if (typeof props[propName] !== \"function\") {\n\t\t\treturn new Error(\"displayXAccessor has to be a function\");\n\t\t}\n\t},\n\tmouseMoveEvent: PropTypes.bool,\n\tpanEvent: PropTypes.bool,\n\tclamp: PropTypes.oneOfType([PropTypes.string, PropTypes.bool, PropTypes.func]),\n\tzoomEvent: PropTypes.bool,\n\tonSelect: PropTypes.func,\n\tmaintainPointsPerPixelOnResize: PropTypes.bool,\n\tdisableInteraction: PropTypes.bool,\n};\n\nChartCanvas.defaultProps = {\n\tmargin: { top: 20, right: 30, bottom: 30, left: 80 },\n\ttype: \"hybrid\",\n\tpointsPerPxThreshold: 2,\n\tminPointsPerPxThreshold: 1 / 100,\n\tclassName: \"react-stockchart\",\n\tzIndex: 1,\n\txExtents: [min, max],\n\tpostCalculator: identity,\n\tpadding: 0,\n\txAccessor: identity,\n\tflipXScale: false,\n\tuseCrossHairStyleCursor: true,\n\tdefaultFocus: true,\n\tonLoadMore: noop,\n\tonSelect: noop,\n\tmouseMoveEvent: true,\n\tpanEvent: true,\n\tzoomEvent: true,\n\tzoomMultiplier: 1.1,\n\tclamp: false,\n\tzoomAnchor: mouseBasedZoomAnchor,\n\tmaintainPointsPerPixelOnResize: true,\n\t// ratio: 2,\n\tdisableInteraction: false,\n};\n\nChartCanvas.childContextTypes = {\n\tplotData: PropTypes.array,\n\tfullData: PropTypes.array,\n\tchartConfig: PropTypes.arrayOf(\n\t\tPropTypes.shape({\n\t\t\tid: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n\t\t\torigin: PropTypes.arrayOf(PropTypes.number).isRequired,\n\t\t\tpadding: PropTypes.oneOfType([\n\t\t\t\tPropTypes.number,\n\t\t\t\tPropTypes.shape({\n\t\t\t\t\ttop: PropTypes.number,\n\t\t\t\t\tbottom: PropTypes.number,\n\t\t\t\t})\n\t\t\t]),\n\t\t\tyExtents: PropTypes.arrayOf(PropTypes.func),\n\t\t\tyExtentsProvider: PropTypes.func,\n\t\t\tyScale: PropTypes.func.isRequired,\n\t\t\tmouseCoordinates: PropTypes.shape({\n\t\t\t\tat: PropTypes.string,\n\t\t\t\tformat: PropTypes.func\n\t\t\t}),\n\t\t\twidth: PropTypes.number.isRequired,\n\t\t\theight: PropTypes.number.isRequired,\n\t\t})\n\t).isRequired,\n\txScale: PropTypes.func.isRequired,\n\txAccessor: PropTypes.func.isRequired,\n\tdisplayXAccessor: PropTypes.func.isRequired,\n\twidth: PropTypes.number.isRequired,\n\theight: PropTypes.number.isRequired,\n\tchartCanvasType: PropTypes.oneOf([\"svg\", \"hybrid\"]).isRequired,\n\tmargin: PropTypes.object.isRequired,\n\tratio: PropTypes.number.isRequired,\n\tgetCanvasContexts: PropTypes.func,\n\txAxisZoom: PropTypes.func,\n\tyAxisZoom: PropTypes.func,\n\tamIOnTop: PropTypes.func,\n\tredraw: PropTypes.func,\n\tsubscribe: PropTypes.func,\n\tunsubscribe: PropTypes.func,\n\tsetCursorClass: PropTypes.func,\n\tgenerateSubscriptionId: PropTypes.func,\n\tgetMutableState: PropTypes.func,\n};\n\nChartCanvas.ohlcv = d => ({ date: d.date, open: d.open, high: d.high, low: d.low, close: d.close, volume: d.volume });\n\nexport default ChartCanvas;\n"]},"metadata":{},"sourceType":"module"}