{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nexports.default = function () {\n  var underlyingAlgorithm = (0, _forceIndex2.default)();\n  var merge = (0, _utils.zipper)().combine(function (force, smoothed) {\n    return {\n      force: force,\n      smoothed: smoothed\n    };\n  });\n  var options = _defaultOptionsForComputation.SmoothedForceIndex;\n\n  function calculator(data) {\n    var _options = options,\n        smoothingType = _options.smoothingType,\n        smoothingWindow = _options.smoothingWindow;\n    var _options2 = options,\n        sourcePath = _options2.sourcePath,\n        volumePath = _options2.volumePath;\n    var algo = underlyingAlgorithm.options({\n      sourcePath: sourcePath,\n      volumePath: volumePath\n    });\n    var force = algo(data);\n    var ma = smoothingType === \"ema\" ? (0, _ema2.default)() : (0, _sma2.default)();\n    var forceMA = ma.options({\n      windowSize: smoothingWindow,\n      sourcePath: undefined\n    });\n    var smoothed = forceMA(force);\n    return merge(force, smoothed);\n  }\n\n  calculator.undefinedLength = function () {\n    var _options3 = options,\n        smoothingWindow = _options3.smoothingWindow;\n    return underlyingAlgorithm.undefinedLength() + smoothingWindow - 1;\n  };\n\n  calculator.options = function (x) {\n    if (!arguments.length) {\n      return options;\n    }\n\n    options = _extends({}, _defaultOptionsForComputation.SmoothedForceIndex, x);\n    return calculator;\n  };\n\n  return calculator;\n};\n\nvar _forceIndex = require(\"./forceIndex\");\n\nvar _forceIndex2 = _interopRequireDefault(_forceIndex);\n\nvar _ema = require(\"./ema\");\n\nvar _ema2 = _interopRequireDefault(_ema);\n\nvar _sma = require(\"./sma\");\n\nvar _sma2 = _interopRequireDefault(_sma);\n\nvar _utils = require(\"../utils\");\n\nvar _defaultOptionsForComputation = require(\"./defaultOptionsForComputation\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}","map":{"version":3,"sources":["../../../src/lib/calculator/smoothedForceIndex.js"],"names":["underlyingAlgorithm","merge","force","smoothed","options","smoothingType","smoothingWindow","sourcePath","volumePath","algo","ma","forceMA","windowSize","undefined","calculator","arguments"],"mappings":";;;;;;;;;;;;;;;;;;;;kBAQe,YAAW;AAEzB,MAAMA,mBAAAA,GAAsB,CAAA,GAAA,YAAA,CAA5B,OAA4B,GAA5B;AACA,MAAMC,KAAAA,GAAQ,CAAA,GAAA,MAAA,CAAA,MAAA,IAAA,OAAA,CACJ,UAAA,KAAA,EAAA,QAAA,EAAqB;AAC7B,WAAO;AAAEC,MAAAA,KAAAA,EAAF,KAAA;AAASC,MAAAA,QAAAA,EAAhB;AAAO,KAAP;AAFF,GAAc,CAAd;AAKA,MAAIC,OAAAA,GAAAA,6BAAAA,CAAJ,kBAAA;;AACA,WAAA,UAAA,CAAA,IAAA,EAA0B;AAAA,QAAA,QAAA,GAAA,OAAA;AAAA,QACjBC,aADiB,GAAA,QAAA,CAAA,aAAA;AAAA,QACFC,eADE,GAAA,QAAA,CAAA,eAAA;AAAA,QAAA,SAAA,GAAA,OAAA;AAAA,QAEjBC,UAFiB,GAAA,SAAA,CAAA,UAAA;AAAA,QAELC,UAFK,GAAA,SAAA,CAAA,UAAA;AAIzB,QAAMC,IAAAA,GAAOT,mBAAAA,CAAAA,OAAAA,CACH;AAAEO,MAAAA,UAAAA,EAAF,UAAA;AAAcC,MAAAA,UAAAA,EADxB;AACU,KADGR,CAAb;AAGA,QAAME,KAAAA,GAAQO,IAAAA,CAAd,IAAcA,CAAd;AAEA,QAAMC,EAAAA,GAAKL,aAAAA,KAAAA,KAAAA,GAA0B,CAAA,GAAA,KAAA,CAA1BA,OAA0B,GAA1BA,GAAkC,CAAA,GAAA,KAAA,CAA7C,OAA6C,GAA7C;AACA,QAAMM,OAAAA,GAAU,EAAA,CAAA,OAAA,CACN;AACRC,MAAAA,UAAAA,EADQ,eAAA;AAERL,MAAAA,UAAAA,EAAYM;AAFJ,KADM,CAAhB;AAMA,QAAMV,QAAAA,GAAWQ,OAAAA,CAAjB,KAAiBA,CAAjB;AACA,WAAOV,KAAAA,CAAAA,KAAAA,EAAP,QAAOA,CAAP;AACA;;AAEDa,EAAAA,UAAAA,CAAAA,eAAAA,GAA6B,YAAW;AAAA,QAAA,SAAA,GAAA,OAAA;AAAA,QAC/BR,eAD+B,GAAA,SAAA,CAAA,eAAA;AAEvC,WAAON,mBAAAA,CAAAA,eAAAA,KAAAA,eAAAA,GAAP,CAAA;AAFDc,GAAAA;;AAIAA,EAAAA,UAAAA,CAAAA,OAAAA,GAAqB,UAAA,CAAA,EAAY;AAChC,QAAI,CAACC,SAAAA,CAAL,MAAA,EAAuB;AACtB,aAAA,OAAA;AACA;;AACDX,IAAAA,OAAAA,GAAAA,QAAAA,CAAAA,EAAAA,EAAAA,6BAAAA,CAAAA,kBAAAA,EAAAA,CAAAA,CAAAA;AACA,WAAA,UAAA;AALDU,GAAAA;;AAQA,SAAA,UAAA;;;AA/CD,IAAA,WAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;;;AACA,IAAA,IAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;;;AACA,IAAA,IAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;;;AACA,IAAA,MAAA,GAAA,OAAA,CAAA,UAAA,CAAA;;AACA,IAAA,6BAAA,GAAA,OAAA,CAAA,gCAAA,CAAA","sourcesContent":["\n\nimport forceIndex from \"./forceIndex\";\nimport ema from \"./ema\";\nimport sma from \"./sma\";\nimport { zipper } from \"../utils\";\nimport { SmoothedForceIndex as defaultOptions } from \"./defaultOptionsForComputation\";\n\nexport default function() {\n\n\tconst underlyingAlgorithm = forceIndex();\n\tconst merge = zipper()\n\t\t.combine((force, smoothed) => {\n\t\t\treturn { force, smoothed };\n\t\t});\n\n\tlet options = defaultOptions;\n\tfunction calculator(data) {\n\t\tconst { smoothingType, smoothingWindow } = options;\n\t\tconst { sourcePath, volumePath } = options;\n\n\t\tconst algo = underlyingAlgorithm\n\t\t\t.options({ sourcePath, volumePath });\n\n\t\tconst force = algo(data);\n\n\t\tconst ma = smoothingType === \"ema\" ? ema() : sma();\n\t\tconst forceMA = ma\n\t\t\t.options({\n\t\t\t\twindowSize: smoothingWindow,\n\t\t\t\tsourcePath: undefined\n\t\t\t});\n\n\t\tconst smoothed = forceMA(force);\n\t\treturn merge(force, smoothed);\n\t}\n\n\tcalculator.undefinedLength = function() {\n\t\tconst { smoothingWindow } = options;\n\t\treturn underlyingAlgorithm.undefinedLength() + smoothingWindow - 1;\n\t};\n\tcalculator.options = function(x) {\n\t\tif (!arguments.length) {\n\t\t\treturn options;\n\t\t}\n\t\toptions = { ...defaultOptions, ...x };\n\t\treturn calculator;\n\t};\n\n\treturn calculator;\n}\n"]},"metadata":{},"sourceType":"script"}