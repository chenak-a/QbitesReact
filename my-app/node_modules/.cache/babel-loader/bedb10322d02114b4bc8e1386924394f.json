{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _utils = require(\"../utils\");\n\nvar _utils2 = require(\"./utils\");\n\nvar _EachText = require(\"./wrapper/EachText\");\n\nvar _EachText2 = _interopRequireDefault(_EachText);\n\nvar _HoverTextNearMouse = require(\"./components/HoverTextNearMouse\");\n\nvar _HoverTextNearMouse2 = _interopRequireDefault(_HoverTextNearMouse);\n\nvar _GenericChartComponent = require(\"../GenericChartComponent\");\n\nvar _GenericChartComponent2 = _interopRequireDefault(_GenericChartComponent);\n\nvar _GenericComponent = require(\"../GenericComponent\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar InteractiveText = function (_Component) {\n  _inherits(InteractiveText, _Component);\n\n  function InteractiveText(props) {\n    _classCallCheck(this, InteractiveText);\n\n    var _this = _possibleConstructorReturn(this, (InteractiveText.__proto__ || Object.getPrototypeOf(InteractiveText)).call(this, props));\n\n    _this.handleDraw = _this.handleDraw.bind(_this);\n    _this.handleDrag = _this.handleDrag.bind(_this);\n    _this.handleDragComplete = _this.handleDragComplete.bind(_this);\n    _this.terminate = _utils2.terminate.bind(_this);\n    _this.saveNodeType = _utils2.saveNodeType.bind(_this);\n    _this.getSelectionState = (0, _utils2.isHoverForInteractiveType)(\"textList\").bind(_this);\n    _this.nodes = [];\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(InteractiveText, [{\n    key: \"handleDrag\",\n    value: function handleDrag(index, position) {\n      this.setState({\n        override: {\n          index: index,\n          position: position\n        }\n      });\n    }\n  }, {\n    key: \"handleDragComplete\",\n    value: function handleDragComplete(moreProps) {\n      var _this2 = this;\n\n      var override = this.state.override;\n\n      if ((0, _utils.isDefined)(override)) {\n        var textList = this.props.textList;\n        var newTextList = textList.map(function (each, idx) {\n          var selected = idx === override.index;\n          return selected ? _extends({}, each, {\n            position: override.position,\n            selected: selected\n          }) : _extends({}, each, {\n            selected: selected\n          });\n        });\n        this.setState({\n          override: null\n        }, function () {\n          _this2.props.onDragComplete(newTextList, moreProps);\n        });\n      }\n    }\n  }, {\n    key: \"handleDrawLine\",\n    value: function handleDrawLine(xyValue) {\n      var current = this.state.current;\n\n      if ((0, _utils.isDefined)(current) && (0, _utils.isDefined)(current.start)) {\n        this.setState({\n          current: {\n            start: current.start,\n            end: xyValue\n          }\n        });\n      }\n    }\n  }, {\n    key: \"handleDraw\",\n    value: function handleDraw(moreProps, e) {\n      var enabled = this.props.enabled;\n\n      if (enabled) {\n        var _moreProps$mouseXY = _slicedToArray(moreProps.mouseXY, 2),\n            mouseY = _moreProps$mouseXY[1],\n            yScale = moreProps.chartConfig.yScale,\n            xAccessor = moreProps.xAccessor,\n            currentItem = moreProps.currentItem;\n\n        var xyValue = [xAccessor(currentItem), yScale.invert(mouseY)];\n        var _props = this.props,\n            defaultText = _props.defaultText,\n            onChoosePosition = _props.onChoosePosition;\n\n        var newText = _extends({}, defaultText, {\n          position: xyValue\n        });\n\n        onChoosePosition(newText, moreProps, e);\n      }\n      /*  else {\r\n      this.handleClick(moreProps, e);\r\n      } */\n\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _props2 = this.props,\n          textList = _props2.textList,\n          defaultText = _props2.defaultText,\n          hoverText = _props2.hoverText;\n      var override = this.state.override;\n      return _react2.default.createElement(\"g\", null, textList.map(function (each, idx) {\n        var defaultHoverText = InteractiveText.defaultProps.hoverText;\n\n        var props = _extends({}, defaultText, each, {\n          hoverText: _extends({}, defaultHoverText, hoverText, each.hoverText || {})\n        });\n\n        return _react2.default.createElement(_EachText2.default, _extends({\n          key: idx,\n          ref: _this3.saveNodeType(idx),\n          index: idx\n        }, props, {\n          selected: each.selected,\n          position: (0, _utils2.getValueFromOverride)(override, idx, \"position\", each.position),\n          onDrag: _this3.handleDrag,\n          onDragComplete: _this3.handleDragComplete,\n          edgeInteractiveCursor: \"react-stockcharts-move-cursor\"\n        }));\n      }), _react2.default.createElement(_GenericChartComponent2.default, {\n        onClick: this.handleDraw,\n        svgDraw: _utils.noop,\n        canvasDraw: _utils.noop,\n        canvasToDraw: _GenericComponent.getMouseCanvas,\n        drawOn: [\"mousemove\", \"pan\"]\n      }), \";\");\n    }\n  }]);\n\n  return InteractiveText;\n}(_react.Component);\n\nInteractiveText.propTypes = {\n  onChoosePosition: _propTypes2.default.func.isRequired,\n  onDragComplete: _propTypes2.default.func.isRequired,\n  onSelect: _propTypes2.default.func,\n  defaultText: _propTypes2.default.shape({\n    bgFill: _propTypes2.default.string.isRequired,\n    bgOpacity: _propTypes2.default.number.isRequired,\n    bgStrokeWidth: _propTypes2.default.number,\n    bgStroke: _propTypes2.default.string,\n    textFill: _propTypes2.default.string.isRequired,\n    fontFamily: _propTypes2.default.string.isRequired,\n    fontWeight: _propTypes2.default.string.isRequired,\n    fontStyle: _propTypes2.default.string.isRequired,\n    fontSize: _propTypes2.default.number.isRequired,\n    text: _propTypes2.default.string.isRequired\n  }).isRequired,\n  hoverText: _propTypes2.default.object.isRequired,\n  textList: _propTypes2.default.array.isRequired,\n  enabled: _propTypes2.default.bool.isRequired\n};\nInteractiveText.defaultProps = {\n  onChoosePosition: _utils.noop,\n  onDragComplete: _utils.noop,\n  onSelect: _utils.noop,\n  defaultText: {\n    bgFill: \"#D3D3D3\",\n    bgOpacity: 1,\n    bgStrokeWidth: 1,\n    textFill: \"#F10040\",\n    fontFamily: \"Helvetica Neue, Helvetica, Arial, sans-serif\",\n    fontSize: 12,\n    fontStyle: \"normal\",\n    fontWeight: \"normal\",\n    text: \"Lorem ipsum...\"\n  },\n  hoverText: _extends({}, _HoverTextNearMouse2.default.defaultProps, {\n    enable: true,\n    bgHeight: \"auto\",\n    bgWidth: \"auto\",\n    text: \"Click to select object\",\n    selectedText: \"\"\n  }),\n  textList: []\n};\nInteractiveText.contextTypes = {\n  subscribe: _propTypes2.default.func.isRequired,\n  unsubscribe: _propTypes2.default.func.isRequired,\n  generateSubscriptionId: _propTypes2.default.func.isRequired,\n  chartId: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]).isRequired\n};\nexports.default = InteractiveText;","map":{"version":3,"sources":["../../../src/lib/interactive/InteractiveText.js"],"names":["InteractiveText","index","position","override","moreProps","textList","newTextList","selected","idx","xyValue","current","start","end","e","enabled","mouseY","yScale","xAccessor","currentItem","defaultText","onChoosePosition","hoverText","defaultHoverText","each","onDragComplete","onSelect","bgFill","bgOpacity","bgStrokeWidth","bgStroke","textFill","fontFamily","fontWeight","fontStyle","fontSize","text","isRequired","enable","bgHeight","bgWidth","selectedText","subscribe","unsubscribe","generateSubscriptionId","chartId"],"mappings":"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","sourcesContent":["\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { isDefined, noop } from \"../utils\";\n\nimport {\n\tgetValueFromOverride,\n\tterminate,\n\tsaveNodeType,\n\tisHoverForInteractiveType,\n} from \"./utils\";\nimport EachText from \"./wrapper/EachText\";\nimport HoverTextNearMouse from \"./components/HoverTextNearMouse\";\nimport GenericChartComponent from \"../GenericChartComponent\";\nimport { getMouseCanvas } from \"../GenericComponent\";\n\nclass InteractiveText extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.handleDraw = this.handleDraw.bind(this);\n\t\tthis.handleDrag = this.handleDrag.bind(this);\n\t\tthis.handleDragComplete = this.handleDragComplete.bind(this);\n\t\tthis.terminate = terminate.bind(this);\n\n\t\tthis.saveNodeType = saveNodeType.bind(this);\n\t\tthis.getSelectionState = isHoverForInteractiveType(\"textList\")\n\t\t\t.bind(this);\n\n\t\tthis.nodes = [];\n\t\tthis.state = {};\n\t}\n\thandleDrag(index, position) {\n\t\tthis.setState({\n\t\t\toverride: {\n\t\t\t\tindex,\n\t\t\t\tposition,\n\t\t\t}\n\t\t});\n\t}\n\thandleDragComplete(moreProps) {\n\t\tconst { override } = this.state;\n\t\tif (isDefined(override)) {\n\t\t\tconst { textList } = this.props;\n\t\t\tconst newTextList = textList\n\t\t\t\t.map((each, idx) => {\n\t\t\t\t\tconst selected = (idx === override.index);\n\t\t\t\t\treturn selected\n\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t...each,\n\t\t\t\t\t\t\tposition: override.position,\n\t\t\t\t\t\t\tselected,\n\t\t\t\t\t\t}\n\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t...each,\n\t\t\t\t\t\t\tselected\n\t\t\t\t\t\t};\n\t\t\t\t});\n\t\t\tthis.setState({\n\t\t\t\toverride: null,\n\t\t\t}, () => {\n\t\t\t\tthis.props.onDragComplete(newTextList, moreProps);\n\t\t\t});\n\t\t}\n\t}\n\thandleDrawLine(xyValue) {\n\t\tconst { current } = this.state;\n\n\t\tif (isDefined(current) && isDefined(current.start)) {\n\t\t\tthis.setState({\n\t\t\t\tcurrent: {\n\t\t\t\t\tstart: current.start,\n\t\t\t\t\tend: xyValue,\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\thandleDraw(moreProps, e) {\n\t\tconst { enabled } = this.props;\n\t\tif (enabled) {\n\t\t\tconst {\n\t\t\t\tmouseXY: [, mouseY],\n\t\t\t\tchartConfig: { yScale },\n\t\t\t\txAccessor,\n\t\t\t\tcurrentItem,\n\t\t\t} = moreProps;\n\n\t\t\tconst xyValue = [xAccessor(currentItem), yScale.invert(mouseY)];\n\n\t\t\tconst { defaultText, onChoosePosition } = this.props;\n\n\t\t\tconst newText = {\n\t\t\t\t...defaultText,\n\t\t\t\tposition: xyValue,\n\t\t\t};\n\t\t\tonChoosePosition(newText, moreProps, e);\n\t\t}/*  else {\n\t\t\tthis.handleClick(moreProps, e);\n\t\t} */\n\t}\n\trender() {\n\t\tconst { textList, defaultText, hoverText } = this.props;\n\t\tconst { override } = this.state;\n\t\treturn <g>\n\t\t\t{textList.map((each, idx) => {\n\t\t\t\tconst defaultHoverText = InteractiveText.defaultProps.hoverText;\n\t\t\t\tconst props = {\n\t\t\t\t\t...defaultText,\n\t\t\t\t\t...each,\n\t\t\t\t\thoverText: {\n\t\t\t\t\t\t...defaultHoverText,\n\t\t\t\t\t\t...hoverText,\n\t\t\t\t\t\t...(each.hoverText || {})\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t\treturn <EachText key={idx}\n\t\t\t\t\tref={this.saveNodeType(idx)}\n\t\t\t\t\tindex={idx}\n\t\t\t\t\t{...props}\n\t\t\t\t\tselected={each.selected}\n\t\t\t\t\tposition={getValueFromOverride(override, idx, \"position\", each.position)}\n\n\t\t\t\t\tonDrag={this.handleDrag}\n\t\t\t\t\tonDragComplete={this.handleDragComplete}\n\t\t\t\t\tedgeInteractiveCursor=\"react-stockcharts-move-cursor\"\n\t\t\t\t/>;\n\t\t\t})}\n\t\t\t<GenericChartComponent\n\n\t\t\t\tonClick={this.handleDraw}\n\n\t\t\t\tsvgDraw={noop}\n\t\t\t\tcanvasDraw={noop}\n\t\t\t\tcanvasToDraw={getMouseCanvas}\n\n\t\t\t\tdrawOn={[\"mousemove\", \"pan\"]}\n\t\t\t/>;\n\t\t</g>;\n\t}\n}\n\nInteractiveText.propTypes = {\n\tonChoosePosition: PropTypes.func.isRequired,\n\tonDragComplete: PropTypes.func.isRequired,\n\tonSelect: PropTypes.func,\n\n\tdefaultText: PropTypes.shape({\n\t\tbgFill: PropTypes.string.isRequired,\n\t\tbgOpacity: PropTypes.number.isRequired,\n\t\tbgStrokeWidth: PropTypes.number,\n\t\tbgStroke: PropTypes.string,\n\t\ttextFill: PropTypes.string.isRequired,\n\t\tfontFamily: PropTypes.string.isRequired,\n\t\tfontWeight: PropTypes.string.isRequired,\n\t\tfontStyle: PropTypes.string.isRequired,\n\t\tfontSize: PropTypes.number.isRequired,\n\t\ttext: PropTypes.string.isRequired,\n\t}).isRequired,\n\n\thoverText: PropTypes.object.isRequired,\n\ttextList: PropTypes.array.isRequired,\n\tenabled: PropTypes.bool.isRequired,\n};\n\nInteractiveText.defaultProps = {\n\tonChoosePosition: noop,\n\tonDragComplete: noop,\n\tonSelect: noop,\n\n\tdefaultText: {\n\t\tbgFill: \"#D3D3D3\",\n\t\tbgOpacity: 1,\n\t\tbgStrokeWidth: 1,\n\t\ttextFill: \"#F10040\",\n\t\tfontFamily: \"Helvetica Neue, Helvetica, Arial, sans-serif\",\n\t\tfontSize: 12,\n\t\tfontStyle: \"normal\",\n\t\tfontWeight: \"normal\",\n\t\ttext: \"Lorem ipsum...\"\n\t},\n\thoverText: {\n\t\t...HoverTextNearMouse.defaultProps,\n\t\tenable: true,\n\t\tbgHeight: \"auto\",\n\t\tbgWidth: \"auto\",\n\t\ttext: \"Click to select object\",\n\t\tselectedText: \"\",\n\t},\n\ttextList: [],\n};\n\nInteractiveText.contextTypes = {\n\tsubscribe: PropTypes.func.isRequired,\n\tunsubscribe: PropTypes.func.isRequired,\n\tgenerateSubscriptionId: PropTypes.func.isRequired,\n\tchartId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n};\n\nexport default InteractiveText;\n"]},"metadata":{},"sourceType":"script"}