{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _utils = require(\"../utils\");\n\nvar _GenericChartComponent = require(\"../GenericChartComponent\");\n\nvar _GenericChartComponent2 = _interopRequireDefault(_GenericChartComponent);\n\nvar _GenericComponent = require(\"../GenericComponent\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Brush = function (_Component) {\n  _inherits(Brush, _Component);\n\n  function Brush(props, context) {\n    _classCallCheck(this, Brush);\n\n    var _this = _possibleConstructorReturn(this, (Brush.__proto__ || Object.getPrototypeOf(Brush)).call(this, props, context));\n\n    _this.handleZoomStart = _this.handleZoomStart.bind(_this);\n    _this.handleDrawSquare = _this.handleDrawSquare.bind(_this);\n    _this.handleZoomComplete = _this.handleZoomComplete.bind(_this);\n    _this.drawOnCanvas = _this.drawOnCanvas.bind(_this);\n    _this.renderSVG = _this.renderSVG.bind(_this);\n    _this.saveNode = _this.saveNode.bind(_this);\n    _this.terminate = _this.terminate.bind(_this);\n    _this.state = {\n      rect: null\n    };\n    return _this;\n  }\n\n  _createClass(Brush, [{\n    key: \"terminate\",\n    value: function terminate() {\n      this.zoomHappening = false;\n      this.setState({\n        x1y1: null,\n        start: null,\n        end: null,\n        rect: null\n      });\n    }\n  }, {\n    key: \"saveNode\",\n    value: function saveNode(node) {\n      this.node = node;\n    }\n  }, {\n    key: \"drawOnCanvas\",\n    value: function drawOnCanvas(ctx) {\n      var rect = this.state.rect;\n\n      if ((0, _utils.isDefined)(rect)) {\n        var x = rect.x,\n            y = rect.y,\n            height = rect.height,\n            width = rect.width;\n        var _props = this.props,\n            stroke = _props.stroke,\n            fill = _props.fill,\n            strokeDashArray = _props.strokeDashArray;\n        var _props2 = this.props,\n            strokeOpacity = _props2.strokeOpacity,\n            fillOpacity = _props2.fillOpacity;\n        var dashArray = (0, _utils.getStrokeDasharray)(strokeDashArray).split(\",\").map(function (d) {\n          return +d;\n        });\n        ctx.strokeStyle = (0, _utils.hexToRGBA)(stroke, strokeOpacity);\n        ctx.fillStyle = (0, _utils.hexToRGBA)(fill, fillOpacity);\n        ctx.setLineDash(dashArray);\n        ctx.beginPath();\n        ctx.fillRect(x, y, width, height);\n        ctx.strokeRect(x, y, width, height);\n      }\n    }\n  }, {\n    key: \"renderSVG\",\n    value: function renderSVG() {\n      var rect = this.state.rect;\n\n      if ((0, _utils.isDefined)(rect)) {\n        var x = rect.x,\n            y = rect.y,\n            height = rect.height,\n            width = rect.width;\n        var _props3 = this.props,\n            stroke = _props3.stroke,\n            strokeDashArray = _props3.strokeDashArray;\n        var _props4 = this.props,\n            strokeOpacity = _props4.strokeOpacity,\n            fillOpacity = _props4.fillOpacity;\n        var dashArray = (0, _utils.getStrokeDasharray)(strokeDashArray).split(\",\").map(function (d) {\n          return +d;\n        });\n        return _react2.default.createElement(\"rect\", {\n          strokeDasharray: dashArray,\n          stroke: stroke,\n          fill: \"none\",\n          strokeOpacity: strokeOpacity,\n          fillOpacity: fillOpacity,\n          x: x,\n          y: y,\n          width: width,\n          height: height\n        });\n      }\n    }\n  }, {\n    key: \"handleZoomStart\",\n    value: function handleZoomStart(moreProps) {\n      this.zoomHappening = false;\n\n      var _moreProps$mouseXY = _slicedToArray(moreProps.mouseXY, 2),\n          mouseY = _moreProps$mouseXY[1],\n          currentItem = moreProps.currentItem,\n          yScale = moreProps.chartConfig.yScale,\n          xAccessor = moreProps.xAccessor,\n          xScale = moreProps.xScale;\n\n      var x1y1 = [xScale(xAccessor(currentItem)), mouseY];\n      this.setState({\n        selected: true,\n        x1y1: x1y1,\n        start: {\n          item: currentItem,\n          xValue: xAccessor(currentItem),\n          yValue: yScale.invert(mouseY)\n        }\n      });\n    }\n  }, {\n    key: \"handleDrawSquare\",\n    value: function handleDrawSquare(moreProps) {\n      if (this.state.x1y1 == null) return;\n      this.zoomHappening = true;\n\n      var _moreProps$mouseXY2 = _slicedToArray(moreProps.mouseXY, 2),\n          mouseY = _moreProps$mouseXY2[1],\n          currentItem = moreProps.currentItem,\n          yScale = moreProps.chartConfig.yScale,\n          xAccessor = moreProps.xAccessor,\n          xScale = moreProps.xScale;\n\n      var _ref = [xScale(xAccessor(currentItem)), mouseY],\n          x2 = _ref[0],\n          y2 = _ref[1];\n\n      var _state$x1y = _slicedToArray(this.state.x1y1, 2),\n          x1 = _state$x1y[0],\n          y1 = _state$x1y[1];\n\n      var x = Math.min(x1, x2);\n      var y = Math.min(y1, y2);\n      var height = Math.abs(y2 - y1);\n      var width = Math.abs(x2 - x1);\n      this.setState({\n        selected: true,\n        end: {\n          item: currentItem,\n          xValue: xAccessor(currentItem),\n          yValue: yScale.invert(mouseY)\n        },\n        rect: {\n          x: x,\n          y: y,\n          height: height,\n          width: width\n        }\n      });\n    }\n  }, {\n    key: \"handleZoomComplete\",\n    value: function handleZoomComplete(moreProps) {\n      if (this.zoomHappening) {\n        var onBrush = this.props.onBrush;\n        var _state = this.state,\n            start = _state.start,\n            end = _state.end;\n        onBrush({\n          start: start,\n          end: end\n        }, moreProps);\n      }\n\n      this.setState({\n        selected: false,\n        rect: null\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var enabled = this.props.enabled;\n      if (!enabled) return null;\n      return _react2.default.createElement(_GenericChartComponent2.default, {\n        ref: this.saveNode,\n        disablePan: enabled,\n        svgDraw: this.renderSVG,\n        canvasToDraw: _GenericComponent.getMouseCanvas,\n        canvasDraw: this.drawOnCanvas,\n        onMouseDown: this.handleZoomStart,\n        onMouseMove: this.handleDrawSquare,\n        onClick: this.handleZoomComplete,\n        drawOn: [\"mousemove\", \"pan\", \"drag\"]\n      });\n    }\n  }]);\n\n  return Brush;\n}(_react.Component);\n\nBrush.propTypes = {\n  enabled: _propTypes2.default.bool.isRequired,\n  onStart: _propTypes2.default.func.isRequired,\n  onBrush: _propTypes2.default.func.isRequired,\n  type: _propTypes2.default.oneOf([\"1D\", \"2D\"]),\n  stroke: _propTypes2.default.string,\n  fill: _propTypes2.default.string,\n  strokeOpacity: _propTypes2.default.number,\n  fillOpacity: _propTypes2.default.number,\n  interactiveState: _propTypes2.default.object,\n  strokeDashArray: _propTypes2.default.string\n};\nBrush.defaultProps = {\n  type: \"2D\",\n  stroke: \"#000000\",\n  fillOpacity: 0.3,\n  strokeOpacity: 1,\n  fill: \"#3h3h3h\",\n  onBrush: _utils.noop,\n  onStart: _utils.noop,\n  strokeDashArray: \"ShortDash\"\n};\nexports.default = Brush;","map":{"version":3,"sources":["../../../src/lib/interactive/Brush.js"],"names":["Brush","rect","x1y1","start","end","node","ctx","x","y","height","width","stroke","fill","strokeDashArray","strokeOpacity","fillOpacity","dashArray","moreProps","mouseY","currentItem","yScale","xAccessor","xScale","selected","item","xValue","yValue","x2","y2","x1","y1","Math","onBrush","enabled","onStart","type","interactiveState","string"],"mappings":"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","sourcesContent":["\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport {\n\tisDefined,\n\tnoop,\n\tgetStrokeDasharray,\n\thexToRGBA,\n} from \"../utils\";\nimport GenericChartComponent from \"../GenericChartComponent\";\nimport { getMouseCanvas } from \"../GenericComponent\";\n\nclass Brush extends Component {\n\tconstructor(props, context) {\n\t\tsuper(props, context);\n\t\tthis.handleZoomStart = this.handleZoomStart.bind(this);\n\t\tthis.handleDrawSquare = this.handleDrawSquare.bind(this);\n\t\tthis.handleZoomComplete = this.handleZoomComplete.bind(this);\n\n\t\tthis.drawOnCanvas = this.drawOnCanvas.bind(this);\n\t\tthis.renderSVG = this.renderSVG.bind(this);\n\t\tthis.saveNode = this.saveNode.bind(this);\n\t\tthis.terminate = this.terminate.bind(this);\n\t\tthis.state = {\n\t\t\trect: null,\n\t\t};\n\t}\n\tterminate() {\n\t\tthis.zoomHappening = false;\n\t\tthis.setState({\n\t\t\tx1y1: null,\n\t\t\tstart: null,\n\t\t\tend: null,\n\t\t\trect: null,\n\t\t});\n\t}\n\tsaveNode(node) {\n\t\tthis.node = node;\n\t}\n\tdrawOnCanvas(ctx) {\n\t\tconst { rect } = this.state;\n\t\tif (isDefined(rect)) {\n\t\t\tconst { x, y, height, width } = rect;\n\t\t\tconst { stroke, fill, strokeDashArray } = this.props;\n\t\t\tconst { strokeOpacity, fillOpacity } = this.props;\n\n\t\t\tconst dashArray = getStrokeDasharray(strokeDashArray)\n\t\t\t\t.split(\",\")\n\t\t\t\t.map(d => +d);\n\n\t\t\tctx.strokeStyle = hexToRGBA(stroke, strokeOpacity);\n\t\t\tctx.fillStyle = hexToRGBA(fill, fillOpacity);\n\t\t\tctx.setLineDash(dashArray);\n\t\t\tctx.beginPath();\n\t\t\tctx.fillRect(x, y, width, height);\n\t\t\tctx.strokeRect(x, y, width, height);\n\t\t}\n\t}\n\trenderSVG() {\n\t\tconst { rect } = this.state;\n\t\tif (isDefined(rect)) {\n\t\t\tconst { x, y, height, width } = rect;\n\t\t\tconst { stroke, strokeDashArray } = this.props;\n\t\t\tconst { strokeOpacity, fillOpacity } = this.props;\n\n\t\t\tconst dashArray = getStrokeDasharray(strokeDashArray)\n\t\t\t\t.split(\",\")\n\t\t\t\t.map(d => +d);\n\n\t\t\treturn (\n\t\t\t\t<rect strokeDasharray={dashArray}\n\t\t\t\t\tstroke={stroke}\n\t\t\t\t\tfill=\"none\"\n\t\t\t\t\tstrokeOpacity={strokeOpacity}\n\t\t\t\t\tfillOpacity={fillOpacity}\n\t\t\t\t\tx={x}\n\t\t\t\t\ty={y}\n\t\t\t\t\twidth={width}\n\t\t\t\t\theight={height}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\t}\n\thandleZoomStart(moreProps) {\n\t\tthis.zoomHappening = false;\n\t\tconst {\n\t\t\tmouseXY: [, mouseY],\n\t\t\tcurrentItem,\n\t\t\tchartConfig: { yScale },\n\t\t\txAccessor,\n\t\t\txScale,\n\t\t} = moreProps;\n\n\t\tconst x1y1 = [\n\t\t\txScale(xAccessor(currentItem)),\n\t\t\tmouseY\n\t\t];\n\n\t\tthis.setState({\n\t\t\tselected: true,\n\t\t\tx1y1,\n\t\t\tstart: {\n\t\t\t\titem: currentItem,\n\t\t\t\txValue: xAccessor(currentItem),\n\t\t\t\tyValue: yScale.invert(mouseY),\n\t\t\t},\n\t\t});\n\t}\n\thandleDrawSquare(moreProps) {\n\t\tif (this.state.x1y1 == null) return;\n\n\t\tthis.zoomHappening = true;\n\n\t\tconst {\n\t\t\tmouseXY: [, mouseY],\n\t\t\tcurrentItem,\n\t\t\tchartConfig: { yScale },\n\t\t\txAccessor,\n\t\t\txScale,\n\t\t} = moreProps;\n\n\t\tconst [x2, y2] = [\n\t\t\txScale(xAccessor(currentItem)),\n\t\t\tmouseY\n\t\t];\n\n\t\tconst { x1y1: [x1, y1] } = this.state;\n\n\t\tconst x = Math.min(x1, x2);\n\t\tconst y = Math.min(y1, y2);\n\t\tconst height = Math.abs(y2 - y1);\n\t\tconst width = Math.abs(x2 - x1);\n\n\t\tthis.setState({\n\t\t\tselected: true,\n\t\t\tend: {\n\t\t\t\titem: currentItem,\n\t\t\t\txValue: xAccessor(currentItem),\n\t\t\t\tyValue: yScale.invert(mouseY),\n\t\t\t},\n\t\t\trect: {\n\t\t\t\tx, y, height, width\n\t\t\t},\n\t\t});\n\t}\n\thandleZoomComplete(moreProps) {\n\t\tif (this.zoomHappening) {\n\t\t\tconst { onBrush } = this.props;\n\t\t\tconst { start, end } = this.state;\n\t\t\tonBrush({ start, end }, moreProps);\n\t\t}\n\t\tthis.setState({\n\t\t\tselected: false,\n\t\t\trect: null,\n\t\t});\n\t}\n\trender() {\n\t\tconst { enabled } = this.props;\n\t\tif (!enabled) return null;\n\n\t\treturn (\n\t\t\t<GenericChartComponent\n\t\t\t\tref={this.saveNode}\n\t\t\t\tdisablePan={enabled}\n\n\t\t\t\tsvgDraw={this.renderSVG}\n\t\t\t\tcanvasToDraw={getMouseCanvas}\n\t\t\t\tcanvasDraw={this.drawOnCanvas}\n\n\t\t\t\tonMouseDown={this.handleZoomStart}\n\t\t\t\tonMouseMove={this.handleDrawSquare}\n\t\t\t\tonClick={this.handleZoomComplete}\n\n\t\t\t\tdrawOn={[\"mousemove\", \"pan\", \"drag\"]}\n\t\t\t/>\n\t\t);\n\t}\n}\n\nBrush.propTypes = {\n\tenabled: PropTypes.bool.isRequired,\n\tonStart: PropTypes.func.isRequired,\n\tonBrush: PropTypes.func.isRequired,\n\n\ttype: PropTypes.oneOf([\"1D\", \"2D\"]),\n\tstroke: PropTypes.string,\n\tfill: PropTypes.string,\n\tstrokeOpacity: PropTypes.number,\n\tfillOpacity: PropTypes.number,\n\tinteractiveState: PropTypes.object,\n\tstrokeDashArray: PropTypes.string,\n};\n\nBrush.defaultProps = {\n\ttype: \"2D\",\n\tstroke: \"#000000\",\n\tfillOpacity: 0.3,\n\tstrokeOpacity: 1,\n\tfill: \"#3h3h3h\",\n\tonBrush: noop,\n\tonStart: noop,\n\tstrokeDashArray: \"ShortDash\",\n};\n\nexport default Brush;\n"]},"metadata":{},"sourceType":"script"}