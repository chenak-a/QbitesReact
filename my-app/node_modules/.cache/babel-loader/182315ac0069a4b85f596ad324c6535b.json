{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"children\"];\n/* eslint-disable no-lonely-if */\n\n/**\r\n * Legacy code. Should avoid to use if you are new to import these code.\r\n */\n\nimport React from 'react';\nimport warning from \"rc-util/es/warning\";\nimport TreeNode from './TreeNode';\nexport function arrDel(list, value) {\n  var clone = list.slice();\n  var index = clone.indexOf(value);\n\n  if (index >= 0) {\n    clone.splice(index, 1);\n  }\n\n  return clone;\n}\nexport function arrAdd(list, value) {\n  var clone = list.slice();\n\n  if (clone.indexOf(value) === -1) {\n    clone.push(value);\n  }\n\n  return clone;\n}\nexport function posToArr(pos) {\n  return pos.split('-');\n}\nexport function getPosition(level, index) {\n  return \"\".concat(level, \"-\").concat(index);\n}\nexport function isTreeNode(node) {\n  return node && node.type && node.type.isTreeNode;\n}\nexport function getDragChildrenKeys(dragNodeKey, keyEntities) {\n  // not contains self\n  // self for left or right drag\n  var dragChildrenKeys = [];\n  var entity = keyEntities[dragNodeKey];\n\n  function dig() {\n    var list = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    list.forEach(function (_ref) {\n      var key = _ref.key,\n          children = _ref.children;\n      dragChildrenKeys.push(key);\n      dig(children);\n    });\n  }\n\n  dig(entity.children);\n  return dragChildrenKeys;\n}\nexport function isLastChild(treeNodeEntity) {\n  if (treeNodeEntity.parent) {\n    var posArr = posToArr(treeNodeEntity.pos);\n    return Number(posArr[posArr.length - 1]) === treeNodeEntity.parent.children.length - 1;\n  }\n\n  return false;\n}\nexport function isFirstChild(treeNodeEntity) {\n  var posArr = posToArr(treeNodeEntity.pos);\n  return Number(posArr[posArr.length - 1]) === 0;\n} // Only used when drag, not affect SSR.\n\nexport function calcDropPosition(event, dragNode, targetNode, indent, startMousePosition, allowDrop, flattenedNodes, keyEntities, expandKeys, direction) {\n  var _abstractDropNodeEnti;\n\n  var clientX = event.clientX,\n      clientY = event.clientY;\n\n  var _event$target$getBoun = event.target.getBoundingClientRect(),\n      top = _event$target$getBoun.top,\n      height = _event$target$getBoun.height; // optional chain for testing\n\n\n  var horizontalMouseOffset = (direction === 'rtl' ? -1 : 1) * (((startMousePosition === null || startMousePosition === void 0 ? void 0 : startMousePosition.x) || 0) - clientX);\n  var rawDropLevelOffset = (horizontalMouseOffset - 12) / indent; // find abstract drop node by horizontal offset\n\n  var abstractDropNodeEntity = keyEntities[targetNode.props.eventKey];\n\n  if (clientY < top + height / 2) {\n    // first half, set abstract drop node to previous node\n    var nodeIndex = flattenedNodes.findIndex(function (flattenedNode) {\n      return flattenedNode.data.key === abstractDropNodeEntity.key;\n    });\n    var prevNodeIndex = nodeIndex <= 0 ? 0 : nodeIndex - 1;\n    var prevNodeKey = flattenedNodes[prevNodeIndex].data.key;\n    abstractDropNodeEntity = keyEntities[prevNodeKey];\n  }\n\n  var initialAbstractDropNodeKey = abstractDropNodeEntity.key;\n  var abstractDragOverEntity = abstractDropNodeEntity;\n  var dragOverNodeKey = abstractDropNodeEntity.key;\n  var dropPosition = 0;\n  var dropLevelOffset = 0; // Only allow cross level drop when dragging on a non-expanded node\n\n  if (!expandKeys.includes(initialAbstractDropNodeKey)) {\n    for (var i = 0; i < rawDropLevelOffset; i += 1) {\n      if (isLastChild(abstractDropNodeEntity)) {\n        abstractDropNodeEntity = abstractDropNodeEntity.parent;\n        dropLevelOffset += 1;\n      } else {\n        break;\n      }\n    }\n  }\n\n  var abstractDropDataNode = abstractDropNodeEntity.node;\n  var dropAllowed = true;\n\n  if (isFirstChild(abstractDropNodeEntity) && abstractDropNodeEntity.level === 0 && clientY < top + height / 2 && allowDrop({\n    dropNode: abstractDropDataNode,\n    dropPosition: -1\n  }) && abstractDropNodeEntity.key === targetNode.props.eventKey) {\n    // first half of first node in first level\n    dropPosition = -1;\n  } else if ((abstractDragOverEntity.children || []).length && expandKeys.includes(dragOverNodeKey)) {\n    // drop on expanded node\n    // only allow drop inside\n    if (allowDrop({\n      dropNode: abstractDropDataNode,\n      dropPosition: 0\n    })) {\n      dropPosition = 0;\n    } else {\n      dropAllowed = false;\n    }\n  } else if (dropLevelOffset === 0) {\n    if (rawDropLevelOffset > -1.5) {\n      // | Node     | <- abstractDropNode\n      // | -^-===== | <- mousePosition\n      // 1. try drop after\n      // 2. do not allow drop\n      if (allowDrop({\n        dropNode: abstractDropDataNode,\n        dropPosition: 1\n      })) {\n        dropPosition = 1;\n      } else {\n        dropAllowed = false;\n      }\n    } else {\n      // | Node     | <- abstractDropNode\n      // | ---==^== | <- mousePosition\n      // whether it has children or doesn't has children\n      // always\n      // 1. try drop inside\n      // 2. try drop after\n      // 3. do not allow drop\n      if (allowDrop({\n        dropNode: abstractDropDataNode,\n        dropPosition: 0\n      })) {\n        dropPosition = 0;\n      } else if (allowDrop({\n        dropNode: abstractDropDataNode,\n        dropPosition: 1\n      })) {\n        dropPosition = 1;\n      } else {\n        dropAllowed = false;\n      }\n    }\n  } else {\n    // | Node1 | <- abstractDropNode\n    //      |  Node2  |\n    // --^--|----=====| <- mousePosition\n    // 1. try insert after Node1\n    // 2. do not allow drop\n    if (allowDrop({\n      dropNode: abstractDropDataNode,\n      dropPosition: 1\n    })) {\n      dropPosition = 1;\n    } else {\n      dropAllowed = false;\n    }\n  }\n\n  return {\n    dropPosition: dropPosition,\n    dropLevelOffset: dropLevelOffset,\n    dropTargetKey: abstractDropNodeEntity.key,\n    dropTargetPos: abstractDropNodeEntity.pos,\n    dragOverNodeKey: dragOverNodeKey,\n    dropContainerKey: dropPosition === 0 ? null : ((_abstractDropNodeEnti = abstractDropNodeEntity.parent) === null || _abstractDropNodeEnti === void 0 ? void 0 : _abstractDropNodeEnti.key) || null,\n    dropAllowed: dropAllowed\n  };\n}\n/**\r\n * Return selectedKeys according with multiple prop\r\n * @param selectedKeys\r\n * @param props\r\n * @returns [string]\r\n */\n\nexport function calcSelectedKeys(selectedKeys, props) {\n  if (!selectedKeys) return undefined;\n  var multiple = props.multiple;\n\n  if (multiple) {\n    return selectedKeys.slice();\n  }\n\n  if (selectedKeys.length) {\n    return [selectedKeys[0]];\n  }\n\n  return selectedKeys;\n}\n\nvar internalProcessProps = function internalProcessProps(props) {\n  return props;\n};\n\nexport function convertDataToTree(treeData, processor) {\n  if (!treeData) return [];\n\n  var _ref2 = processor || {},\n      _ref2$processProps = _ref2.processProps,\n      processProps = _ref2$processProps === void 0 ? internalProcessProps : _ref2$processProps;\n\n  var list = Array.isArray(treeData) ? treeData : [treeData];\n  return list.map(function (_ref3) {\n    var children = _ref3.children,\n        props = _objectWithoutProperties(_ref3, _excluded);\n\n    var childrenNodes = convertDataToTree(children, processor);\n    return /*#__PURE__*/React.createElement(TreeNode, processProps(props), childrenNodes);\n  });\n}\n/**\r\n * Parse `checkedKeys` to { checkedKeys, halfCheckedKeys } style\r\n */\n\nexport function parseCheckedKeys(keys) {\n  if (!keys) {\n    return null;\n  } // Convert keys to object format\n\n\n  var keyProps;\n\n  if (Array.isArray(keys)) {\n    // [Legacy] Follow the api doc\n    keyProps = {\n      checkedKeys: keys,\n      halfCheckedKeys: undefined\n    };\n  } else if (_typeof(keys) === 'object') {\n    keyProps = {\n      checkedKeys: keys.checked || undefined,\n      halfCheckedKeys: keys.halfChecked || undefined\n    };\n  } else {\n    warning(false, '`checkedKeys` is not an array or an object');\n    return null;\n  }\n\n  return keyProps;\n}\n/**\r\n * If user use `autoExpandParent` we should get the list of parent node\r\n * @param keyList\r\n * @param keyEntities\r\n */\n\nexport function conductExpandParent(keyList, keyEntities) {\n  var expandedKeys = new Set();\n\n  function conductUp(key) {\n    if (expandedKeys.has(key)) return;\n    var entity = keyEntities[key];\n    if (!entity) return;\n    expandedKeys.add(key);\n    var parent = entity.parent,\n        node = entity.node;\n    if (node.disabled) return;\n\n    if (parent) {\n      conductUp(parent.key);\n    }\n  }\n\n  (keyList || []).forEach(function (key) {\n    conductUp(key);\n  });\n  return _toConsumableArray(expandedKeys);\n}\n/**\r\n * Returns only the data- and aria- key/value pairs\r\n */\n\nexport function getDataAndAria(props) {\n  var omitProps = {};\n  Object.keys(props).forEach(function (key) {\n    if (key.startsWith('data-') || key.startsWith('aria-')) {\n      omitProps[key] = props[key];\n    }\n  });\n  return omitProps;\n}","map":{"version":3,"sources":["C:/Users/chena/QbitesReact/my-app/node_modules/rc-tree/es/util.js"],"names":["_toConsumableArray","_typeof","_objectWithoutProperties","_excluded","React","warning","TreeNode","arrDel","list","value","clone","slice","index","indexOf","splice","arrAdd","push","posToArr","pos","split","getPosition","level","concat","isTreeNode","node","type","getDragChildrenKeys","dragNodeKey","keyEntities","dragChildrenKeys","entity","dig","arguments","length","undefined","forEach","_ref","key","children","isLastChild","treeNodeEntity","parent","posArr","Number","isFirstChild","calcDropPosition","event","dragNode","targetNode","indent","startMousePosition","allowDrop","flattenedNodes","expandKeys","direction","_abstractDropNodeEnti","clientX","clientY","_event$target$getBoun","target","getBoundingClientRect","top","height","horizontalMouseOffset","x","rawDropLevelOffset","abstractDropNodeEntity","props","eventKey","nodeIndex","findIndex","flattenedNode","data","prevNodeIndex","prevNodeKey","initialAbstractDropNodeKey","abstractDragOverEntity","dragOverNodeKey","dropPosition","dropLevelOffset","includes","i","abstractDropDataNode","dropAllowed","dropNode","dropTargetKey","dropTargetPos","dropContainerKey","calcSelectedKeys","selectedKeys","multiple","internalProcessProps","convertDataToTree","treeData","processor","_ref2","_ref2$processProps","processProps","Array","isArray","map","_ref3","childrenNodes","createElement","parseCheckedKeys","keys","keyProps","checkedKeys","halfCheckedKeys","checked","halfChecked","conductExpandParent","keyList","expandedKeys","Set","conductUp","has","add","disabled","getDataAndAria","omitProps","Object","startsWith"],"mappings":"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","sourcesContent":["import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\r\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\r\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\r\nvar _excluded = [\"children\"];\r\n\r\n/* eslint-disable no-lonely-if */\r\n\r\n/**\r\n * Legacy code. Should avoid to use if you are new to import these code.\r\n */\r\nimport React from 'react';\r\nimport warning from \"rc-util/es/warning\";\r\nimport TreeNode from './TreeNode';\r\nexport function arrDel(list, value) {\r\n  var clone = list.slice();\r\n  var index = clone.indexOf(value);\r\n\r\n  if (index >= 0) {\r\n    clone.splice(index, 1);\r\n  }\r\n\r\n  return clone;\r\n}\r\nexport function arrAdd(list, value) {\r\n  var clone = list.slice();\r\n\r\n  if (clone.indexOf(value) === -1) {\r\n    clone.push(value);\r\n  }\r\n\r\n  return clone;\r\n}\r\nexport function posToArr(pos) {\r\n  return pos.split('-');\r\n}\r\nexport function getPosition(level, index) {\r\n  return \"\".concat(level, \"-\").concat(index);\r\n}\r\nexport function isTreeNode(node) {\r\n  return node && node.type && node.type.isTreeNode;\r\n}\r\nexport function getDragChildrenKeys(dragNodeKey, keyEntities) {\r\n  // not contains self\r\n  // self for left or right drag\r\n  var dragChildrenKeys = [];\r\n  var entity = keyEntities[dragNodeKey];\r\n\r\n  function dig() {\r\n    var list = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\r\n    list.forEach(function (_ref) {\r\n      var key = _ref.key,\r\n          children = _ref.children;\r\n      dragChildrenKeys.push(key);\r\n      dig(children);\r\n    });\r\n  }\r\n\r\n  dig(entity.children);\r\n  return dragChildrenKeys;\r\n}\r\nexport function isLastChild(treeNodeEntity) {\r\n  if (treeNodeEntity.parent) {\r\n    var posArr = posToArr(treeNodeEntity.pos);\r\n    return Number(posArr[posArr.length - 1]) === treeNodeEntity.parent.children.length - 1;\r\n  }\r\n\r\n  return false;\r\n}\r\nexport function isFirstChild(treeNodeEntity) {\r\n  var posArr = posToArr(treeNodeEntity.pos);\r\n  return Number(posArr[posArr.length - 1]) === 0;\r\n} // Only used when drag, not affect SSR.\r\n\r\nexport function calcDropPosition(event, dragNode, targetNode, indent, startMousePosition, allowDrop, flattenedNodes, keyEntities, expandKeys, direction) {\r\n  var _abstractDropNodeEnti;\r\n\r\n  var clientX = event.clientX,\r\n      clientY = event.clientY;\r\n\r\n  var _event$target$getBoun = event.target.getBoundingClientRect(),\r\n      top = _event$target$getBoun.top,\r\n      height = _event$target$getBoun.height; // optional chain for testing\r\n\r\n\r\n  var horizontalMouseOffset = (direction === 'rtl' ? -1 : 1) * (((startMousePosition === null || startMousePosition === void 0 ? void 0 : startMousePosition.x) || 0) - clientX);\r\n  var rawDropLevelOffset = (horizontalMouseOffset - 12) / indent; // find abstract drop node by horizontal offset\r\n\r\n  var abstractDropNodeEntity = keyEntities[targetNode.props.eventKey];\r\n\r\n  if (clientY < top + height / 2) {\r\n    // first half, set abstract drop node to previous node\r\n    var nodeIndex = flattenedNodes.findIndex(function (flattenedNode) {\r\n      return flattenedNode.data.key === abstractDropNodeEntity.key;\r\n    });\r\n    var prevNodeIndex = nodeIndex <= 0 ? 0 : nodeIndex - 1;\r\n    var prevNodeKey = flattenedNodes[prevNodeIndex].data.key;\r\n    abstractDropNodeEntity = keyEntities[prevNodeKey];\r\n  }\r\n\r\n  var initialAbstractDropNodeKey = abstractDropNodeEntity.key;\r\n  var abstractDragOverEntity = abstractDropNodeEntity;\r\n  var dragOverNodeKey = abstractDropNodeEntity.key;\r\n  var dropPosition = 0;\r\n  var dropLevelOffset = 0; // Only allow cross level drop when dragging on a non-expanded node\r\n\r\n  if (!expandKeys.includes(initialAbstractDropNodeKey)) {\r\n    for (var i = 0; i < rawDropLevelOffset; i += 1) {\r\n      if (isLastChild(abstractDropNodeEntity)) {\r\n        abstractDropNodeEntity = abstractDropNodeEntity.parent;\r\n        dropLevelOffset += 1;\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  var abstractDropDataNode = abstractDropNodeEntity.node;\r\n  var dropAllowed = true;\r\n\r\n  if (isFirstChild(abstractDropNodeEntity) && abstractDropNodeEntity.level === 0 && clientY < top + height / 2 && allowDrop({\r\n    dropNode: abstractDropDataNode,\r\n    dropPosition: -1\r\n  }) && abstractDropNodeEntity.key === targetNode.props.eventKey) {\r\n    // first half of first node in first level\r\n    dropPosition = -1;\r\n  } else if ((abstractDragOverEntity.children || []).length && expandKeys.includes(dragOverNodeKey)) {\r\n    // drop on expanded node\r\n    // only allow drop inside\r\n    if (allowDrop({\r\n      dropNode: abstractDropDataNode,\r\n      dropPosition: 0\r\n    })) {\r\n      dropPosition = 0;\r\n    } else {\r\n      dropAllowed = false;\r\n    }\r\n  } else if (dropLevelOffset === 0) {\r\n    if (rawDropLevelOffset > -1.5) {\r\n      // | Node     | <- abstractDropNode\r\n      // | -^-===== | <- mousePosition\r\n      // 1. try drop after\r\n      // 2. do not allow drop\r\n      if (allowDrop({\r\n        dropNode: abstractDropDataNode,\r\n        dropPosition: 1\r\n      })) {\r\n        dropPosition = 1;\r\n      } else {\r\n        dropAllowed = false;\r\n      }\r\n    } else {\r\n      // | Node     | <- abstractDropNode\r\n      // | ---==^== | <- mousePosition\r\n      // whether it has children or doesn't has children\r\n      // always\r\n      // 1. try drop inside\r\n      // 2. try drop after\r\n      // 3. do not allow drop\r\n      if (allowDrop({\r\n        dropNode: abstractDropDataNode,\r\n        dropPosition: 0\r\n      })) {\r\n        dropPosition = 0;\r\n      } else if (allowDrop({\r\n        dropNode: abstractDropDataNode,\r\n        dropPosition: 1\r\n      })) {\r\n        dropPosition = 1;\r\n      } else {\r\n        dropAllowed = false;\r\n      }\r\n    }\r\n  } else {\r\n    // | Node1 | <- abstractDropNode\r\n    //      |  Node2  |\r\n    // --^--|----=====| <- mousePosition\r\n    // 1. try insert after Node1\r\n    // 2. do not allow drop\r\n    if (allowDrop({\r\n      dropNode: abstractDropDataNode,\r\n      dropPosition: 1\r\n    })) {\r\n      dropPosition = 1;\r\n    } else {\r\n      dropAllowed = false;\r\n    }\r\n  }\r\n\r\n  return {\r\n    dropPosition: dropPosition,\r\n    dropLevelOffset: dropLevelOffset,\r\n    dropTargetKey: abstractDropNodeEntity.key,\r\n    dropTargetPos: abstractDropNodeEntity.pos,\r\n    dragOverNodeKey: dragOverNodeKey,\r\n    dropContainerKey: dropPosition === 0 ? null : ((_abstractDropNodeEnti = abstractDropNodeEntity.parent) === null || _abstractDropNodeEnti === void 0 ? void 0 : _abstractDropNodeEnti.key) || null,\r\n    dropAllowed: dropAllowed\r\n  };\r\n}\r\n/**\r\n * Return selectedKeys according with multiple prop\r\n * @param selectedKeys\r\n * @param props\r\n * @returns [string]\r\n */\r\n\r\nexport function calcSelectedKeys(selectedKeys, props) {\r\n  if (!selectedKeys) return undefined;\r\n  var multiple = props.multiple;\r\n\r\n  if (multiple) {\r\n    return selectedKeys.slice();\r\n  }\r\n\r\n  if (selectedKeys.length) {\r\n    return [selectedKeys[0]];\r\n  }\r\n\r\n  return selectedKeys;\r\n}\r\n\r\nvar internalProcessProps = function internalProcessProps(props) {\r\n  return props;\r\n};\r\n\r\nexport function convertDataToTree(treeData, processor) {\r\n  if (!treeData) return [];\r\n\r\n  var _ref2 = processor || {},\r\n      _ref2$processProps = _ref2.processProps,\r\n      processProps = _ref2$processProps === void 0 ? internalProcessProps : _ref2$processProps;\r\n\r\n  var list = Array.isArray(treeData) ? treeData : [treeData];\r\n  return list.map(function (_ref3) {\r\n    var children = _ref3.children,\r\n        props = _objectWithoutProperties(_ref3, _excluded);\r\n\r\n    var childrenNodes = convertDataToTree(children, processor);\r\n    return /*#__PURE__*/React.createElement(TreeNode, processProps(props), childrenNodes);\r\n  });\r\n}\r\n/**\r\n * Parse `checkedKeys` to { checkedKeys, halfCheckedKeys } style\r\n */\r\n\r\nexport function parseCheckedKeys(keys) {\r\n  if (!keys) {\r\n    return null;\r\n  } // Convert keys to object format\r\n\r\n\r\n  var keyProps;\r\n\r\n  if (Array.isArray(keys)) {\r\n    // [Legacy] Follow the api doc\r\n    keyProps = {\r\n      checkedKeys: keys,\r\n      halfCheckedKeys: undefined\r\n    };\r\n  } else if (_typeof(keys) === 'object') {\r\n    keyProps = {\r\n      checkedKeys: keys.checked || undefined,\r\n      halfCheckedKeys: keys.halfChecked || undefined\r\n    };\r\n  } else {\r\n    warning(false, '`checkedKeys` is not an array or an object');\r\n    return null;\r\n  }\r\n\r\n  return keyProps;\r\n}\r\n/**\r\n * If user use `autoExpandParent` we should get the list of parent node\r\n * @param keyList\r\n * @param keyEntities\r\n */\r\n\r\nexport function conductExpandParent(keyList, keyEntities) {\r\n  var expandedKeys = new Set();\r\n\r\n  function conductUp(key) {\r\n    if (expandedKeys.has(key)) return;\r\n    var entity = keyEntities[key];\r\n    if (!entity) return;\r\n    expandedKeys.add(key);\r\n    var parent = entity.parent,\r\n        node = entity.node;\r\n    if (node.disabled) return;\r\n\r\n    if (parent) {\r\n      conductUp(parent.key);\r\n    }\r\n  }\r\n\r\n  (keyList || []).forEach(function (key) {\r\n    conductUp(key);\r\n  });\r\n  return _toConsumableArray(expandedKeys);\r\n}\r\n/**\r\n * Returns only the data- and aria- key/value pairs\r\n */\r\n\r\nexport function getDataAndAria(props) {\r\n  var omitProps = {};\r\n  Object.keys(props).forEach(function (key) {\r\n    if (key.startsWith('data-') || key.startsWith('aria-')) {\r\n      omitProps[key] = props[key];\r\n    }\r\n  });\r\n  return omitProps;\r\n}"]},"metadata":{},"sourceType":"module"}