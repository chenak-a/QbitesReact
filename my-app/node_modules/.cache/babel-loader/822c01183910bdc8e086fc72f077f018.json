{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _GenericChartComponent = require(\"../GenericChartComponent\");\n\nvar _GenericChartComponent2 = _interopRequireDefault(_GenericChartComponent);\n\nvar _GenericComponent = require(\"../GenericComponent\");\n\nvar _utils = require(\"../utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar RenkoSeries = function (_Component) {\n  _inherits(RenkoSeries, _Component);\n\n  function RenkoSeries(props) {\n    _classCallCheck(this, RenkoSeries);\n\n    var _this = _possibleConstructorReturn(this, (RenkoSeries.__proto__ || Object.getPrototypeOf(RenkoSeries)).call(this, props));\n\n    _this.renderSVG = _this.renderSVG.bind(_this);\n    _this.drawOnCanvas = _this.drawOnCanvas.bind(_this);\n    return _this;\n  }\n\n  _createClass(RenkoSeries, [{\n    key: \"drawOnCanvas\",\n    value: function drawOnCanvas(ctx, moreProps) {\n      var xAccessor = moreProps.xAccessor;\n      var xScale = moreProps.xScale,\n          yScale = moreProps.chartConfig.yScale,\n          plotData = moreProps.plotData;\n      var yAccessor = this.props.yAccessor;\n      var candles = getRenko(this.props, plotData, xScale, xAccessor, yScale, yAccessor);\n\n      _drawOnCanvas(ctx, candles);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var clip = this.props.clip;\n      return _react2.default.createElement(_GenericChartComponent2.default, {\n        clip: clip,\n        svgDraw: this.renderSVG,\n        canvasDraw: this.drawOnCanvas,\n        canvasToDraw: _GenericComponent.getAxisCanvas,\n        drawOn: [\"pan\"]\n      });\n    }\n  }, {\n    key: \"renderSVG\",\n    value: function renderSVG(moreProps) {\n      var xAccessor = moreProps.xAccessor;\n      var xScale = moreProps.xScale,\n          yScale = moreProps.chartConfig.yScale,\n          plotData = moreProps.plotData;\n      var yAccessor = this.props.yAccessor;\n      var candles = getRenko(this.props, plotData, xScale, xAccessor, yScale, yAccessor).map(function (each, idx) {\n        return _react2.default.createElement(\"rect\", {\n          key: idx,\n          className: each.className,\n          fill: each.fill,\n          x: each.x,\n          y: each.y,\n          width: each.width,\n          height: each.height\n        });\n      });\n      return _react2.default.createElement(\"g\", null, _react2.default.createElement(\"g\", {\n        className: \"candle\"\n      }, candles));\n    }\n  }]);\n\n  return RenkoSeries;\n}(_react.Component);\n\nRenkoSeries.propTypes = {\n  classNames: _propTypes2.default.shape({\n    up: _propTypes2.default.string,\n    down: _propTypes2.default.string\n  }),\n  stroke: _propTypes2.default.shape({\n    up: _propTypes2.default.string,\n    down: _propTypes2.default.string\n  }),\n  fill: _propTypes2.default.shape({\n    up: _propTypes2.default.string,\n    down: _propTypes2.default.string,\n    partial: _propTypes2.default.string\n  }),\n  yAccessor: _propTypes2.default.func.isRequired,\n  clip: _propTypes2.default.bool.isRequired\n};\nRenkoSeries.defaultProps = {\n  classNames: {\n    up: \"up\",\n    down: \"down\"\n  },\n  stroke: {\n    up: \"none\",\n    down: \"none\"\n  },\n  fill: {\n    up: \"#6BA583\",\n    down: \"#E60000\",\n    partial: \"#4682B4\"\n  },\n  yAccessor: function yAccessor(d) {\n    return {\n      open: d.open,\n      high: d.high,\n      low: d.low,\n      close: d.close\n    };\n  },\n  clip: true\n};\n\nfunction _drawOnCanvas(ctx, renko) {\n  renko.forEach(function (d) {\n    ctx.beginPath();\n    ctx.strokeStyle = d.stroke;\n    ctx.fillStyle = d.fill;\n    ctx.rect(d.x, d.y, d.width, d.height);\n    ctx.closePath();\n    ctx.fill();\n  });\n}\n\nfunction getRenko(props, plotData, xScale, xAccessor, yScale, yAccessor) {\n  var classNames = props.classNames,\n      fill = props.fill;\n  var width = xScale(xAccessor(plotData[plotData.length - 1])) - xScale(xAccessor(plotData[0]));\n  var candleWidth = width / (plotData.length - 1);\n  var candles = plotData.filter(function (d) {\n    return (0, _utils.isDefined)(yAccessor(d).close);\n  }).map(function (d) {\n    var ohlc = yAccessor(d);\n    var x = xScale(xAccessor(d)) - 0.5 * candleWidth,\n        y = yScale(Math.max(ohlc.open, ohlc.close)),\n        height = Math.abs(yScale(ohlc.open) - yScale(ohlc.close)),\n        className = ohlc.open <= ohlc.close ? classNames.up : classNames.down;\n    var svgfill = d.fullyFormed ? ohlc.open <= ohlc.close ? fill.up : fill.down : fill.partial;\n    return {\n      className: className,\n      fill: svgfill,\n      x: x,\n      y: y,\n      height: height,\n      width: candleWidth\n    };\n  });\n  return candles;\n}\n\nexports.default = RenkoSeries;","map":{"version":3,"sources":["../../../src/lib/series/RenkoSeries.js"],"names":["RenkoSeries","ctx","moreProps","xAccessor","xScale","yScale","plotData","yAccessor","candles","getRenko","drawOnCanvas","clip","each","classNames","up","down","string","stroke","fill","partial","isRequired","open","d","high","low","close","renko","props","width","candleWidth","ohlc","x","y","Math","height","className","svgfill"],"mappings":"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","sourcesContent":["\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport GenericChartComponent from \"../GenericChartComponent\";\nimport { getAxisCanvas } from \"../GenericComponent\";\n\nimport { isDefined } from \"../utils\";\n\nclass RenkoSeries extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.renderSVG = this.renderSVG.bind(this);\n\t\tthis.drawOnCanvas = this.drawOnCanvas.bind(this);\n\t}\n\tdrawOnCanvas(ctx, moreProps) {\n\t\tconst { xAccessor } = moreProps;\n\t\tconst { xScale, chartConfig: { yScale }, plotData } = moreProps;\n\n\t\tconst { yAccessor } = this.props;\n\n\t\tconst candles = getRenko(this.props, plotData, xScale, xAccessor, yScale, yAccessor);\n\n\t\tdrawOnCanvas(ctx, candles);\n\t}\n\trender() {\n\t\tconst { clip } = this.props;\n\n\t\treturn <GenericChartComponent\n\t\t\tclip={clip}\n\t\t\tsvgDraw={this.renderSVG}\n\t\t\tcanvasDraw={this.drawOnCanvas}\n\t\t\tcanvasToDraw={getAxisCanvas}\n\t\t\tdrawOn={[\"pan\"]}\n\t\t/>;\n\t}\n\trenderSVG(moreProps) {\n\t\tconst { xAccessor } = moreProps;\n\t\tconst { xScale, chartConfig: { yScale }, plotData } = moreProps;\n\n\t\tconst { yAccessor } = this.props;\n\n\t\tconst candles = getRenko(this.props, plotData, xScale, xAccessor, yScale, yAccessor)\n\t\t\t.map((each, idx) => (<rect key={idx} className={each.className}\n\t\t\t\tfill={each.fill}\n\t\t\t\tx={each.x}\n\t\t\t\ty={each.y}\n\t\t\t\twidth={each.width}\n\t\t\t\theight={each.height} />));\n\n\t\treturn (\n\t\t\t<g>\n\t\t\t\t<g className=\"candle\">\n\t\t\t\t\t{candles}\n\t\t\t\t</g>\n\t\t\t</g>\n\t\t);\n\t}\n}\n\nRenkoSeries.propTypes = {\n\tclassNames: PropTypes.shape({\n\t\tup: PropTypes.string,\n\t\tdown: PropTypes.string\n\t}),\n\tstroke: PropTypes.shape({\n\t\tup: PropTypes.string,\n\t\tdown: PropTypes.string\n\t}),\n\tfill: PropTypes.shape({\n\t\tup: PropTypes.string,\n\t\tdown: PropTypes.string,\n\t\tpartial: PropTypes.string\n\t}),\n\tyAccessor: PropTypes.func.isRequired,\n\tclip: PropTypes.bool.isRequired,\n};\n\nRenkoSeries.defaultProps = {\n\tclassNames: {\n\t\tup: \"up\",\n\t\tdown: \"down\"\n\t},\n\tstroke: {\n\t\tup: \"none\",\n\t\tdown: \"none\"\n\t},\n\tfill: {\n\t\tup: \"#6BA583\",\n\t\tdown: \"#E60000\",\n\t\tpartial: \"#4682B4\",\n\t},\n\tyAccessor: d => ({ open: d.open, high: d.high, low: d.low, close: d.close }),\n\tclip: true,\n};\n\nfunction drawOnCanvas(ctx, renko) {\n\trenko.forEach(d => {\n\t\tctx.beginPath();\n\n\t\tctx.strokeStyle = d.stroke;\n\t\tctx.fillStyle = d.fill;\n\n\t\tctx.rect(d.x, d.y, d.width, d.height);\n\t\tctx.closePath();\n\t\tctx.fill();\n\t});\n}\n\nfunction getRenko(props, plotData, xScale, xAccessor, yScale, yAccessor) {\n\tconst { classNames, fill } = props;\n\tconst width = xScale(xAccessor(plotData[plotData.length - 1]))\n\t\t- xScale(xAccessor(plotData[0]));\n\n\tconst candleWidth = (width / (plotData.length - 1));\n\tconst candles = plotData\n\t\t.filter(d => isDefined(yAccessor(d).close))\n\t\t.map(d => {\n\t\t\tconst ohlc = yAccessor(d);\n\t\t\tconst x = xScale(xAccessor(d)) - 0.5 * candleWidth,\n\t\t\t\ty = yScale(Math.max(ohlc.open, ohlc.close)),\n\t\t\t\theight = Math.abs(yScale(ohlc.open) - yScale(ohlc.close)),\n\t\t\t\tclassName = (ohlc.open <= ohlc.close) ? classNames.up : classNames.down;\n\n\t\t\tconst svgfill = d.fullyFormed\n\t\t\t\t? (ohlc.open <= ohlc.close ? fill.up : fill.down)\n\t\t\t\t: fill.partial;\n\n\t\t\treturn {\n\t\t\t\tclassName: className,\n\t\t\t\tfill: svgfill,\n\t\t\t\tx: x,\n\t\t\t\ty: y,\n\t\t\t\theight: height,\n\t\t\t\twidth: candleWidth,\n\t\t\t};\n\t\t});\n\treturn candles;\n}\n\nexport default RenkoSeries;\n"]},"metadata":{},"sourceType":"script"}