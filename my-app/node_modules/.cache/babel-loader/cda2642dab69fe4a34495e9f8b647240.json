{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chena\\\\reactgun\\\\my-app\\\\src\\\\graph.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useQuery } from \"urql\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodosQuery = `\nquery {\n  crypto {\n    name\n    time\n\t\tdata{\n    hcl{\n    opentime\n      \n    }\n    }\n  }\n}\n`;\nexport const graph = () => {\n  _s();\n\n  const [result, reexecuteQuery] = useQuery({\n    query: TodosQuery\n  });\n  const {\n    data,\n    fetching,\n    err\n  } = result;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: !fetching ? data.crypto.map(data => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: data.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 70\n        }, this)) : \"loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 26\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_s(graph, \"ct3FlcZGh+a1CrbiqJ/T+fFQJXg=\", false, function () {\n  return [useQuery];\n});","map":{"version":3,"sources":["C:/Users/chena/reactgun/my-app/src/graph.js"],"names":["React","useQuery","TodosQuery","graph","result","reexecuteQuery","query","data","fetching","err","crypto","map","name"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,MAAzB;;AACA,MAAMC,UAAU,GAAI;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAbA;AAcA,OAAO,MAAMC,KAAK,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,MAAD,EAASC,cAAT,IAA2BJ,QAAQ,CAAC;AACtCK,IAAAA,KAAK,EAAEJ;AAD+B,GAAD,CAAzC;AAGE,QAAM;AAAEK,IAAAA,IAAF;AAAQC,IAAAA,QAAR;AAAkBC,IAAAA;AAAlB,MAA0BL,MAAhC;AAEF,sBACI;AAAA,2BACY;AAAA,6BAAK;AAAA,kBAAM,CAACI,QAAD,GAAYD,IAAI,CAACG,MAAL,CAAYC,GAAZ,CAAgBJ,IAAI,iBAAM;AAAA,oBAAMA,IAAI,CAACK;AAAX;AAAA;AAAA;AAAA;AAAA,gBAA1B,CAAZ,GACpB;AADc;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA;AADZ;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAZM;;GAAMT,K;UACwBF,Q","sourcesContent":["import React from 'react'\r\nimport { useQuery } from \"urql\";\r\nconst TodosQuery = `\r\nquery {\r\n  crypto {\r\n    name\r\n    time\r\n\t\tdata{\r\n    hcl{\r\n    opentime\r\n      \r\n    }\r\n    }\r\n  }\r\n}\r\n`;\r\nexport const graph = () => {\r\n    const [result, reexecuteQuery] = useQuery({\r\n        query: TodosQuery,\r\n      });\r\n      const { data, fetching, err } = result;\r\n\r\n    return (\r\n        <div>\r\n                    <div><pre>{!fetching ? data.crypto.map(data => ( <div>{data.name}</div>\r\n      )) : \"loading\"}</pre></div>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}