{"ast":null,"code":"import contains from 'dom-helpers/contains';\nimport listen from 'dom-helpers/listen';\nimport { useCallback, useEffect, useRef } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport warning from 'warning';\nimport ownerDocument from './ownerDocument';\nvar escapeKeyCode = 27;\n\nvar noop = function noop() {};\n\nfunction isLeftClickEvent(event) {\n  return event.button === 0;\n}\n\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nvar getRefTarget = function getRefTarget(ref) {\n  return ref && ('current' in ref ? ref.current : ref);\n};\n/**\n * The `useRootClose` hook registers your callback on the document\n * when rendered. Powers the `<Overlay/>` component. This is used achieve modal\n * style behavior where your callback is triggered when the user tries to\n * interact with the rest of the document or hits the `esc` key.\n *\n * @param {Ref<HTMLElement>| HTMLElement} ref  The element boundary\n * @param {function} onRootClose\n * @param {object=}  options\n * @param {boolean=} options.disabled\n * @param {string=}  options.clickTrigger The DOM event name (click, mousedown, etc) to attach listeners on\n */\n\n\nfunction useRootClose(ref, onRootClose, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      disabled = _ref.disabled,\n      _ref$clickTrigger = _ref.clickTrigger,\n      clickTrigger = _ref$clickTrigger === void 0 ? 'click' : _ref$clickTrigger;\n\n  var preventMouseRootCloseRef = useRef(false);\n  var onClose = onRootClose || noop;\n  var handleMouseCapture = useCallback(function (e) {\n    var currentTarget = getRefTarget(ref);\n    warning(!!currentTarget, 'RootClose captured a close event but does not have a ref to compare it to. ' + 'useRootClose(), should be passed a ref that resolves to a DOM node');\n    preventMouseRootCloseRef.current = !currentTarget || isModifiedEvent(e) || !isLeftClickEvent(e) || !!contains(currentTarget, e.target);\n  }, [ref]);\n  var handleMouse = useEventCallback(function (e) {\n    if (!preventMouseRootCloseRef.current) {\n      onClose(e);\n    }\n  });\n  var handleKeyUp = useEventCallback(function (e) {\n    if (e.keyCode === escapeKeyCode) {\n      onClose(e);\n    }\n  });\n  useEffect(function () {\n    if (disabled || ref == null) return undefined; // Store the current event to avoid triggering handlers immediately\n    // https://github.com/facebook/react/issues/20074\n\n    var currentEvent = window.event;\n    var doc = ownerDocument(getRefTarget(ref)); // Use capture for this listener so it fires before React's listener, to\n    // avoid false positives in the contains() check below if the target DOM\n    // element is removed in the React mouse callback.\n\n    var removeMouseCaptureListener = listen(doc, clickTrigger, handleMouseCapture, true);\n    var removeMouseListener = listen(doc, clickTrigger, function (e) {\n      // skip if this event is the same as the one running when we added the handlers\n      if (e === currentEvent) {\n        currentEvent = undefined;\n        return;\n      }\n\n      handleMouse(e);\n    });\n    var removeKeyupListener = listen(doc, 'keyup', function (e) {\n      // skip if this event is the same as the one running when we added the handlers\n      if (e === currentEvent) {\n        currentEvent = undefined;\n        return;\n      }\n\n      handleKeyUp(e);\n    });\n    var mobileSafariHackListeners = [];\n\n    if ('ontouchstart' in doc.documentElement) {\n      mobileSafariHackListeners = [].slice.call(doc.body.children).map(function (el) {\n        return listen(el, 'mousemove', noop);\n      });\n    }\n\n    return function () {\n      removeMouseCaptureListener();\n      removeMouseListener();\n      removeKeyupListener();\n      mobileSafariHackListeners.forEach(function (remove) {\n        return remove();\n      });\n    };\n  }, [ref, disabled, clickTrigger, handleMouseCapture, handleMouse, handleKeyUp]);\n}\n\nexport default useRootClose;","map":{"version":3,"names":["contains","listen","useCallback","useEffect","useRef","useEventCallback","warning","ownerDocument","escapeKeyCode","noop","isLeftClickEvent","event","button","isModifiedEvent","metaKey","altKey","ctrlKey","shiftKey","getRefTarget","ref","current","useRootClose","onRootClose","_temp","_ref","disabled","_ref$clickTrigger","clickTrigger","preventMouseRootCloseRef","onClose","handleMouseCapture","e","currentTarget","target","handleMouse","handleKeyUp","keyCode","undefined","currentEvent","window","doc","removeMouseCaptureListener","removeMouseListener","removeKeyupListener","mobileSafariHackListeners","documentElement","slice","call","body","children","map","el","forEach","remove"],"sources":["/home/chenak/QbitesReact/my-app/node_modules/react-overlays/esm/useRootClose.js"],"sourcesContent":["import contains from 'dom-helpers/contains';\nimport listen from 'dom-helpers/listen';\nimport { useCallback, useEffect, useRef } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport warning from 'warning';\nimport ownerDocument from './ownerDocument';\nvar escapeKeyCode = 27;\n\nvar noop = function noop() {};\n\nfunction isLeftClickEvent(event) {\n  return event.button === 0;\n}\n\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nvar getRefTarget = function getRefTarget(ref) {\n  return ref && ('current' in ref ? ref.current : ref);\n};\n\n/**\n * The `useRootClose` hook registers your callback on the document\n * when rendered. Powers the `<Overlay/>` component. This is used achieve modal\n * style behavior where your callback is triggered when the user tries to\n * interact with the rest of the document or hits the `esc` key.\n *\n * @param {Ref<HTMLElement>| HTMLElement} ref  The element boundary\n * @param {function} onRootClose\n * @param {object=}  options\n * @param {boolean=} options.disabled\n * @param {string=}  options.clickTrigger The DOM event name (click, mousedown, etc) to attach listeners on\n */\nfunction useRootClose(ref, onRootClose, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      disabled = _ref.disabled,\n      _ref$clickTrigger = _ref.clickTrigger,\n      clickTrigger = _ref$clickTrigger === void 0 ? 'click' : _ref$clickTrigger;\n\n  var preventMouseRootCloseRef = useRef(false);\n  var onClose = onRootClose || noop;\n  var handleMouseCapture = useCallback(function (e) {\n    var currentTarget = getRefTarget(ref);\n    warning(!!currentTarget, 'RootClose captured a close event but does not have a ref to compare it to. ' + 'useRootClose(), should be passed a ref that resolves to a DOM node');\n    preventMouseRootCloseRef.current = !currentTarget || isModifiedEvent(e) || !isLeftClickEvent(e) || !!contains(currentTarget, e.target);\n  }, [ref]);\n  var handleMouse = useEventCallback(function (e) {\n    if (!preventMouseRootCloseRef.current) {\n      onClose(e);\n    }\n  });\n  var handleKeyUp = useEventCallback(function (e) {\n    if (e.keyCode === escapeKeyCode) {\n      onClose(e);\n    }\n  });\n  useEffect(function () {\n    if (disabled || ref == null) return undefined; // Store the current event to avoid triggering handlers immediately\n    // https://github.com/facebook/react/issues/20074\n\n    var currentEvent = window.event;\n    var doc = ownerDocument(getRefTarget(ref)); // Use capture for this listener so it fires before React's listener, to\n    // avoid false positives in the contains() check below if the target DOM\n    // element is removed in the React mouse callback.\n\n    var removeMouseCaptureListener = listen(doc, clickTrigger, handleMouseCapture, true);\n    var removeMouseListener = listen(doc, clickTrigger, function (e) {\n      // skip if this event is the same as the one running when we added the handlers\n      if (e === currentEvent) {\n        currentEvent = undefined;\n        return;\n      }\n\n      handleMouse(e);\n    });\n    var removeKeyupListener = listen(doc, 'keyup', function (e) {\n      // skip if this event is the same as the one running when we added the handlers\n      if (e === currentEvent) {\n        currentEvent = undefined;\n        return;\n      }\n\n      handleKeyUp(e);\n    });\n    var mobileSafariHackListeners = [];\n\n    if ('ontouchstart' in doc.documentElement) {\n      mobileSafariHackListeners = [].slice.call(doc.body.children).map(function (el) {\n        return listen(el, 'mousemove', noop);\n      });\n    }\n\n    return function () {\n      removeMouseCaptureListener();\n      removeMouseListener();\n      removeKeyupListener();\n      mobileSafariHackListeners.forEach(function (remove) {\n        return remove();\n      });\n    };\n  }, [ref, disabled, clickTrigger, handleMouseCapture, handleMouse, handleKeyUp]);\n}\n\nexport default useRootClose;"],"mappings":"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"},"metadata":{},"sourceType":"module"}