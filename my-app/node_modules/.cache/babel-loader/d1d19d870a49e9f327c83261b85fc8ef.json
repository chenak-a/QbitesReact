{"ast":null,"code":"import constant from \"./constant\";\nimport { linearish } from \"./linear\";\nimport { default as continuous, copy } from \"./continuous\";\n\nfunction raise(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nexport default function pow() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise(b, exponent) - (a = raise(a, exponent))) ? function (x) {\n      return (raise(x, exponent) - a) / b;\n    } : constant(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise(b, exponent) - (a = raise(a, exponent));\n    return function (t) {\n      return raise(a + b * t, 1 / exponent);\n    };\n  }\n\n  scale.exponent = function (_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function () {\n    return copy(scale, pow().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\nexport function sqrt() {\n  return pow().exponent(0.5);\n}","map":{"version":3,"names":["constant","linearish","default","continuous","copy","raise","x","exponent","Math","pow","scale","deinterpolate","reinterpolate","domain","a","b","t","_","arguments","length","sqrt"],"sources":["/home/chenak/QbitesReact/my-app/node_modules/d3-scale/src/pow.js"],"sourcesContent":["import constant from \"./constant\";\nimport {linearish} from \"./linear\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction raise(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nexport default function pow() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n        ? function(x) { return (raise(x, exponent) - a) / b; }\n        : constant(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise(b, exponent) - (a = raise(a, exponent));\n    return function(t) { return raise(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nexport function sqrt() {\n  return pow().exponent(0.5);\n}\n"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,YAArB;AACA,SAAQC,SAAR,QAAwB,UAAxB;AACA,SAAQC,OAAO,IAAIC,UAAnB,EAA+BC,IAA/B,QAA0C,cAA1C;;AAEA,SAASC,KAAT,CAAeC,CAAf,EAAkBC,QAAlB,EAA4B;EAC1B,OAAOD,CAAC,GAAG,CAAJ,GAAQ,CAACE,IAAI,CAACC,GAAL,CAAS,CAACH,CAAV,EAAaC,QAAb,CAAT,GAAkCC,IAAI,CAACC,GAAL,CAASH,CAAT,EAAYC,QAAZ,CAAzC;AACD;;AAED,eAAe,SAASE,GAAT,GAAe;EAC5B,IAAIF,QAAQ,GAAG,CAAf;EAAA,IACIG,KAAK,GAAGP,UAAU,CAACQ,aAAD,EAAgBC,aAAhB,CADtB;EAAA,IAEIC,MAAM,GAAGH,KAAK,CAACG,MAFnB;;EAIA,SAASF,aAAT,CAAuBG,CAAvB,EAA0BC,CAA1B,EAA6B;IAC3B,OAAO,CAACA,CAAC,GAAGV,KAAK,CAACU,CAAD,EAAIR,QAAJ,CAAL,IAAsBO,CAAC,GAAGT,KAAK,CAACS,CAAD,EAAIP,QAAJ,CAA/B,CAAL,IACD,UAASD,CAAT,EAAY;MAAE,OAAO,CAACD,KAAK,CAACC,CAAD,EAAIC,QAAJ,CAAL,GAAqBO,CAAtB,IAA2BC,CAAlC;IAAsC,CADnD,GAEDf,QAAQ,CAACe,CAAD,CAFd;EAGD;;EAED,SAASH,aAAT,CAAuBE,CAAvB,EAA0BC,CAA1B,EAA6B;IAC3BA,CAAC,GAAGV,KAAK,CAACU,CAAD,EAAIR,QAAJ,CAAL,IAAsBO,CAAC,GAAGT,KAAK,CAACS,CAAD,EAAIP,QAAJ,CAA/B,CAAJ;IACA,OAAO,UAASS,CAAT,EAAY;MAAE,OAAOX,KAAK,CAACS,CAAC,GAAGC,CAAC,GAAGC,CAAT,EAAY,IAAIT,QAAhB,CAAZ;IAAwC,CAA7D;EACD;;EAEDG,KAAK,CAACH,QAAN,GAAiB,UAASU,CAAT,EAAY;IAC3B,OAAOC,SAAS,CAACC,MAAV,IAAoBZ,QAAQ,GAAG,CAACU,CAAZ,EAAeJ,MAAM,CAACA,MAAM,EAAP,CAAzC,IAAuDN,QAA9D;EACD,CAFD;;EAIAG,KAAK,CAACN,IAAN,GAAa,YAAW;IACtB,OAAOA,IAAI,CAACM,KAAD,EAAQD,GAAG,GAAGF,QAAN,CAAeA,QAAf,CAAR,CAAX;EACD,CAFD;;EAIA,OAAON,SAAS,CAACS,KAAD,CAAhB;AACD;AAED,OAAO,SAASU,IAAT,GAAgB;EACrB,OAAOX,GAAG,GAAGF,QAAN,CAAe,GAAf,CAAP;AACD"},"metadata":{},"sourceType":"module"}