{"ast":null,"code":"import { extent, thresholdSturges, ticks, tickStep } from \"d3-array\";\nimport { slice } from \"./array.js\";\nimport ascending from \"./ascending.js\";\nimport area from \"./area.js\";\nimport constant from \"./constant.js\";\nimport contains from \"./contains.js\";\nimport noop from \"./noop.js\";\nvar cases = [[], [[[1.0, 1.5], [0.5, 1.0]]], [[[1.5, 1.0], [1.0, 1.5]]], [[[1.5, 1.0], [0.5, 1.0]]], [[[1.0, 0.5], [1.5, 1.0]]], [[[1.0, 1.5], [0.5, 1.0]], [[1.0, 0.5], [1.5, 1.0]]], [[[1.0, 0.5], [1.0, 1.5]]], [[[1.0, 0.5], [0.5, 1.0]]], [[[0.5, 1.0], [1.0, 0.5]]], [[[1.0, 1.5], [1.0, 0.5]]], [[[0.5, 1.0], [1.0, 0.5]], [[1.5, 1.0], [1.0, 1.5]]], [[[1.5, 1.0], [1.0, 0.5]]], [[[0.5, 1.0], [1.5, 1.0]]], [[[1.0, 1.5], [1.5, 1.0]]], [[[0.5, 1.0], [1.0, 1.5]]], []];\nexport default function () {\n  var dx = 1,\n      dy = 1,\n      threshold = thresholdSturges,\n      smooth = smoothLinear;\n\n  function contours(values) {\n    var tz = threshold(values); // Convert number of thresholds into uniform thresholds.\n\n    if (!Array.isArray(tz)) {\n      const e = extent(values),\n            ts = tickStep(e[0], e[1], tz);\n      tz = ticks(Math.floor(e[0] / ts) * ts, Math.floor(e[1] / ts - 1) * ts, tz);\n    } else {\n      tz = tz.slice().sort(ascending);\n    }\n\n    return tz.map(value => contour(values, value));\n  } // Accumulate, smooth contour rings, assign holes to exterior rings.\n  // Based on https://github.com/mbostock/shapefile/blob/v0.6.2/shp/polygon.js\n\n\n  function contour(values, value) {\n    var polygons = [],\n        holes = [];\n    isorings(values, value, function (ring) {\n      smooth(ring, values, value);\n      if (area(ring) > 0) polygons.push([ring]);else holes.push(ring);\n    });\n    holes.forEach(function (hole) {\n      for (var i = 0, n = polygons.length, polygon; i < n; ++i) {\n        if (contains((polygon = polygons[i])[0], hole) !== -1) {\n          polygon.push(hole);\n          return;\n        }\n      }\n    });\n    return {\n      type: \"MultiPolygon\",\n      value: value,\n      coordinates: polygons\n    };\n  } // Marching squares with isolines stitched into rings.\n  // Based on https://github.com/topojson/topojson-client/blob/v3.0.0/src/stitch.js\n\n\n  function isorings(values, value, callback) {\n    var fragmentByStart = new Array(),\n        fragmentByEnd = new Array(),\n        x,\n        y,\n        t0,\n        t1,\n        t2,\n        t3; // Special case for the first row (y = -1, t2 = t3 = 0).\n\n    x = y = -1;\n    t1 = values[0] >= value;\n    cases[t1 << 1].forEach(stitch);\n\n    while (++x < dx - 1) {\n      t0 = t1, t1 = values[x + 1] >= value;\n      cases[t0 | t1 << 1].forEach(stitch);\n    }\n\n    cases[t1 << 0].forEach(stitch); // General case for the intermediate rows.\n\n    while (++y < dy - 1) {\n      x = -1;\n      t1 = values[y * dx + dx] >= value;\n      t2 = values[y * dx] >= value;\n      cases[t1 << 1 | t2 << 2].forEach(stitch);\n\n      while (++x < dx - 1) {\n        t0 = t1, t1 = values[y * dx + dx + x + 1] >= value;\n        t3 = t2, t2 = values[y * dx + x + 1] >= value;\n        cases[t0 | t1 << 1 | t2 << 2 | t3 << 3].forEach(stitch);\n      }\n\n      cases[t1 | t2 << 3].forEach(stitch);\n    } // Special case for the last row (y = dy - 1, t0 = t1 = 0).\n\n\n    x = -1;\n    t2 = values[y * dx] >= value;\n    cases[t2 << 2].forEach(stitch);\n\n    while (++x < dx - 1) {\n      t3 = t2, t2 = values[y * dx + x + 1] >= value;\n      cases[t2 << 2 | t3 << 3].forEach(stitch);\n    }\n\n    cases[t2 << 3].forEach(stitch);\n\n    function stitch(line) {\n      var start = [line[0][0] + x, line[0][1] + y],\n          end = [line[1][0] + x, line[1][1] + y],\n          startIndex = index(start),\n          endIndex = index(end),\n          f,\n          g;\n\n      if (f = fragmentByEnd[startIndex]) {\n        if (g = fragmentByStart[endIndex]) {\n          delete fragmentByEnd[f.end];\n          delete fragmentByStart[g.start];\n\n          if (f === g) {\n            f.ring.push(end);\n            callback(f.ring);\n          } else {\n            fragmentByStart[f.start] = fragmentByEnd[g.end] = {\n              start: f.start,\n              end: g.end,\n              ring: f.ring.concat(g.ring)\n            };\n          }\n        } else {\n          delete fragmentByEnd[f.end];\n          f.ring.push(end);\n          fragmentByEnd[f.end = endIndex] = f;\n        }\n      } else if (f = fragmentByStart[endIndex]) {\n        if (g = fragmentByEnd[startIndex]) {\n          delete fragmentByStart[f.start];\n          delete fragmentByEnd[g.end];\n\n          if (f === g) {\n            f.ring.push(end);\n            callback(f.ring);\n          } else {\n            fragmentByStart[g.start] = fragmentByEnd[f.end] = {\n              start: g.start,\n              end: f.end,\n              ring: g.ring.concat(f.ring)\n            };\n          }\n        } else {\n          delete fragmentByStart[f.start];\n          f.ring.unshift(start);\n          fragmentByStart[f.start = startIndex] = f;\n        }\n      } else {\n        fragmentByStart[startIndex] = fragmentByEnd[endIndex] = {\n          start: startIndex,\n          end: endIndex,\n          ring: [start, end]\n        };\n      }\n    }\n  }\n\n  function index(point) {\n    return point[0] * 2 + point[1] * (dx + 1) * 4;\n  }\n\n  function smoothLinear(ring, values, value) {\n    ring.forEach(function (point) {\n      var x = point[0],\n          y = point[1],\n          xt = x | 0,\n          yt = y | 0,\n          v0,\n          v1 = values[yt * dx + xt];\n\n      if (x > 0 && x < dx && xt === x) {\n        v0 = values[yt * dx + xt - 1];\n        point[0] = x + (value - v0) / (v1 - v0) - 0.5;\n      }\n\n      if (y > 0 && y < dy && yt === y) {\n        v0 = values[(yt - 1) * dx + xt];\n        point[1] = y + (value - v0) / (v1 - v0) - 0.5;\n      }\n    });\n  }\n\n  contours.contour = contour;\n\n  contours.size = function (_) {\n    if (!arguments.length) return [dx, dy];\n\n    var _0 = Math.floor(_[0]),\n        _1 = Math.floor(_[1]);\n\n    if (!(_0 >= 0 && _1 >= 0)) throw new Error(\"invalid size\");\n    return dx = _0, dy = _1, contours;\n  };\n\n  contours.thresholds = function (_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), contours) : threshold;\n  };\n\n  contours.smooth = function (_) {\n    return arguments.length ? (smooth = _ ? smoothLinear : noop, contours) : smooth === smoothLinear;\n  };\n\n  return contours;\n}","map":{"version":3,"sources":["C:/Users/chena/QbitesReact/my-app/node_modules/d3-contour/src/contours.js"],"names":["extent","thresholdSturges","ticks","tickStep","slice","ascending","area","constant","contains","noop","cases","dx","dy","threshold","smooth","smoothLinear","contours","values","tz","Array","isArray","e","ts","Math","floor","sort","map","value","contour","polygons","holes","isorings","ring","push","forEach","hole","i","n","length","polygon","type","coordinates","callback","fragmentByStart","fragmentByEnd","x","y","t0","t1","t2","t3","stitch","line","start","end","startIndex","index","endIndex","f","g","concat","unshift","point","xt","yt","v0","v1","size","_","arguments","_0","_1","Error","thresholds","call"],"mappings":"AAAA,SAAQA,MAAR,EAAgBC,gBAAhB,EAAkCC,KAAlC,EAAyCC,QAAzC,QAAwD,UAAxD;AACA,SAAQC,KAAR,QAAoB,YAApB;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,IAAIC,KAAK,GAAG,CACV,EADU,EAEV,CAAC,CAAC,CAAC,GAAD,EAAM,GAAN,CAAD,EAAa,CAAC,GAAD,EAAM,GAAN,CAAb,CAAD,CAFU,EAGV,CAAC,CAAC,CAAC,GAAD,EAAM,GAAN,CAAD,EAAa,CAAC,GAAD,EAAM,GAAN,CAAb,CAAD,CAHU,EAIV,CAAC,CAAC,CAAC,GAAD,EAAM,GAAN,CAAD,EAAa,CAAC,GAAD,EAAM,GAAN,CAAb,CAAD,CAJU,EAKV,CAAC,CAAC,CAAC,GAAD,EAAM,GAAN,CAAD,EAAa,CAAC,GAAD,EAAM,GAAN,CAAb,CAAD,CALU,EAMV,CAAC,CAAC,CAAC,GAAD,EAAM,GAAN,CAAD,EAAa,CAAC,GAAD,EAAM,GAAN,CAAb,CAAD,EAA2B,CAAC,CAAC,GAAD,EAAM,GAAN,CAAD,EAAa,CAAC,GAAD,EAAM,GAAN,CAAb,CAA3B,CANU,EAOV,CAAC,CAAC,CAAC,GAAD,EAAM,GAAN,CAAD,EAAa,CAAC,GAAD,EAAM,GAAN,CAAb,CAAD,CAPU,EAQV,CAAC,CAAC,CAAC,GAAD,EAAM,GAAN,CAAD,EAAa,CAAC,GAAD,EAAM,GAAN,CAAb,CAAD,CARU,EASV,CAAC,CAAC,CAAC,GAAD,EAAM,GAAN,CAAD,EAAa,CAAC,GAAD,EAAM,GAAN,CAAb,CAAD,CATU,EAUV,CAAC,CAAC,CAAC,GAAD,EAAM,GAAN,CAAD,EAAa,CAAC,GAAD,EAAM,GAAN,CAAb,CAAD,CAVU,EAWV,CAAC,CAAC,CAAC,GAAD,EAAM,GAAN,CAAD,EAAa,CAAC,GAAD,EAAM,GAAN,CAAb,CAAD,EAA2B,CAAC,CAAC,GAAD,EAAM,GAAN,CAAD,EAAa,CAAC,GAAD,EAAM,GAAN,CAAb,CAA3B,CAXU,EAYV,CAAC,CAAC,CAAC,GAAD,EAAM,GAAN,CAAD,EAAa,CAAC,GAAD,EAAM,GAAN,CAAb,CAAD,CAZU,EAaV,CAAC,CAAC,CAAC,GAAD,EAAM,GAAN,CAAD,EAAa,CAAC,GAAD,EAAM,GAAN,CAAb,CAAD,CAbU,EAcV,CAAC,CAAC,CAAC,GAAD,EAAM,GAAN,CAAD,EAAa,CAAC,GAAD,EAAM,GAAN,CAAb,CAAD,CAdU,EAeV,CAAC,CAAC,CAAC,GAAD,EAAM,GAAN,CAAD,EAAa,CAAC,GAAD,EAAM,GAAN,CAAb,CAAD,CAfU,EAgBV,EAhBU,CAAZ;AAmBA,eAAe,YAAW;AACxB,MAAIC,EAAE,GAAG,CAAT;AAAA,MACIC,EAAE,GAAG,CADT;AAAA,MAEIC,SAAS,GAAGZ,gBAFhB;AAAA,MAGIa,MAAM,GAAGC,YAHb;;AAKA,WAASC,QAAT,CAAkBC,MAAlB,EAA0B;AACxB,QAAIC,EAAE,GAAGL,SAAS,CAACI,MAAD,CAAlB,CADwB,CAGxB;;AACA,QAAI,CAACE,KAAK,CAACC,OAAN,CAAcF,EAAd,CAAL,EAAwB;AACtB,YAAMG,CAAC,GAAGrB,MAAM,CAACiB,MAAD,CAAhB;AAAA,YAA0BK,EAAE,GAAGnB,QAAQ,CAACkB,CAAC,CAAC,CAAD,CAAF,EAAOA,CAAC,CAAC,CAAD,CAAR,EAAaH,EAAb,CAAvC;AACAA,MAAAA,EAAE,GAAGhB,KAAK,CAACqB,IAAI,CAACC,KAAL,CAAWH,CAAC,CAAC,CAAD,CAAD,GAAOC,EAAlB,IAAwBA,EAAzB,EAA6BC,IAAI,CAACC,KAAL,CAAWH,CAAC,CAAC,CAAD,CAAD,GAAOC,EAAP,GAAY,CAAvB,IAA4BA,EAAzD,EAA6DJ,EAA7D,CAAV;AACD,KAHD,MAGO;AACLA,MAAAA,EAAE,GAAGA,EAAE,CAACd,KAAH,GAAWqB,IAAX,CAAgBpB,SAAhB,CAAL;AACD;;AAED,WAAOa,EAAE,CAACQ,GAAH,CAAOC,KAAK,IAAIC,OAAO,CAACX,MAAD,EAASU,KAAT,CAAvB,CAAP;AACD,GAlBuB,CAoBxB;AACA;;;AACA,WAASC,OAAT,CAAiBX,MAAjB,EAAyBU,KAAzB,EAAgC;AAC9B,QAAIE,QAAQ,GAAG,EAAf;AAAA,QACIC,KAAK,GAAG,EADZ;AAGAC,IAAAA,QAAQ,CAACd,MAAD,EAASU,KAAT,EAAgB,UAASK,IAAT,EAAe;AACrClB,MAAAA,MAAM,CAACkB,IAAD,EAAOf,MAAP,EAAeU,KAAf,CAAN;AACA,UAAIrB,IAAI,CAAC0B,IAAD,CAAJ,GAAa,CAAjB,EAAoBH,QAAQ,CAACI,IAAT,CAAc,CAACD,IAAD,CAAd,EAApB,KACKF,KAAK,CAACG,IAAN,CAAWD,IAAX;AACN,KAJO,CAAR;AAMAF,IAAAA,KAAK,CAACI,OAAN,CAAc,UAASC,IAAT,EAAe;AAC3B,WAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGR,QAAQ,CAACS,MAAxB,EAAgCC,OAArC,EAA8CH,CAAC,GAAGC,CAAlD,EAAqD,EAAED,CAAvD,EAA0D;AACxD,YAAI5B,QAAQ,CAAC,CAAC+B,OAAO,GAAGV,QAAQ,CAACO,CAAD,CAAnB,EAAwB,CAAxB,CAAD,EAA6BD,IAA7B,CAAR,KAA+C,CAAC,CAApD,EAAuD;AACrDI,UAAAA,OAAO,CAACN,IAAR,CAAaE,IAAb;AACA;AACD;AACF;AACF,KAPD;AASA,WAAO;AACLK,MAAAA,IAAI,EAAE,cADD;AAELb,MAAAA,KAAK,EAAEA,KAFF;AAGLc,MAAAA,WAAW,EAAEZ;AAHR,KAAP;AAKD,GA9CuB,CAgDxB;AACA;;;AACA,WAASE,QAAT,CAAkBd,MAAlB,EAA0BU,KAA1B,EAAiCe,QAAjC,EAA2C;AACzC,QAAIC,eAAe,GAAG,IAAIxB,KAAJ,EAAtB;AAAA,QACIyB,aAAa,GAAG,IAAIzB,KAAJ,EADpB;AAAA,QAEI0B,CAFJ;AAAA,QAEOC,CAFP;AAAA,QAEUC,EAFV;AAAA,QAEcC,EAFd;AAAA,QAEkBC,EAFlB;AAAA,QAEsBC,EAFtB,CADyC,CAKzC;;AACAL,IAAAA,CAAC,GAAGC,CAAC,GAAG,CAAC,CAAT;AACAE,IAAAA,EAAE,GAAG/B,MAAM,CAAC,CAAD,CAAN,IAAaU,KAAlB;AACAjB,IAAAA,KAAK,CAACsC,EAAE,IAAI,CAAP,CAAL,CAAed,OAAf,CAAuBiB,MAAvB;;AACA,WAAO,EAAEN,CAAF,GAAMlC,EAAE,GAAG,CAAlB,EAAqB;AACnBoC,MAAAA,EAAE,GAAGC,EAAL,EAASA,EAAE,GAAG/B,MAAM,CAAC4B,CAAC,GAAG,CAAL,CAAN,IAAiBlB,KAA/B;AACAjB,MAAAA,KAAK,CAACqC,EAAE,GAAGC,EAAE,IAAI,CAAZ,CAAL,CAAoBd,OAApB,CAA4BiB,MAA5B;AACD;;AACDzC,IAAAA,KAAK,CAACsC,EAAE,IAAI,CAAP,CAAL,CAAed,OAAf,CAAuBiB,MAAvB,EAbyC,CAezC;;AACA,WAAO,EAAEL,CAAF,GAAMlC,EAAE,GAAG,CAAlB,EAAqB;AACnBiC,MAAAA,CAAC,GAAG,CAAC,CAAL;AACAG,MAAAA,EAAE,GAAG/B,MAAM,CAAC6B,CAAC,GAAGnC,EAAJ,GAASA,EAAV,CAAN,IAAuBgB,KAA5B;AACAsB,MAAAA,EAAE,GAAGhC,MAAM,CAAC6B,CAAC,GAAGnC,EAAL,CAAN,IAAkBgB,KAAvB;AACAjB,MAAAA,KAAK,CAACsC,EAAE,IAAI,CAAN,GAAUC,EAAE,IAAI,CAAjB,CAAL,CAAyBf,OAAzB,CAAiCiB,MAAjC;;AACA,aAAO,EAAEN,CAAF,GAAMlC,EAAE,GAAG,CAAlB,EAAqB;AACnBoC,QAAAA,EAAE,GAAGC,EAAL,EAASA,EAAE,GAAG/B,MAAM,CAAC6B,CAAC,GAAGnC,EAAJ,GAASA,EAAT,GAAckC,CAAd,GAAkB,CAAnB,CAAN,IAA+BlB,KAA7C;AACAuB,QAAAA,EAAE,GAAGD,EAAL,EAASA,EAAE,GAAGhC,MAAM,CAAC6B,CAAC,GAAGnC,EAAJ,GAASkC,CAAT,GAAa,CAAd,CAAN,IAA0BlB,KAAxC;AACAjB,QAAAA,KAAK,CAACqC,EAAE,GAAGC,EAAE,IAAI,CAAX,GAAeC,EAAE,IAAI,CAArB,GAAyBC,EAAE,IAAI,CAAhC,CAAL,CAAwChB,OAAxC,CAAgDiB,MAAhD;AACD;;AACDzC,MAAAA,KAAK,CAACsC,EAAE,GAAGC,EAAE,IAAI,CAAZ,CAAL,CAAoBf,OAApB,CAA4BiB,MAA5B;AACD,KA3BwC,CA6BzC;;;AACAN,IAAAA,CAAC,GAAG,CAAC,CAAL;AACAI,IAAAA,EAAE,GAAGhC,MAAM,CAAC6B,CAAC,GAAGnC,EAAL,CAAN,IAAkBgB,KAAvB;AACAjB,IAAAA,KAAK,CAACuC,EAAE,IAAI,CAAP,CAAL,CAAef,OAAf,CAAuBiB,MAAvB;;AACA,WAAO,EAAEN,CAAF,GAAMlC,EAAE,GAAG,CAAlB,EAAqB;AACnBuC,MAAAA,EAAE,GAAGD,EAAL,EAASA,EAAE,GAAGhC,MAAM,CAAC6B,CAAC,GAAGnC,EAAJ,GAASkC,CAAT,GAAa,CAAd,CAAN,IAA0BlB,KAAxC;AACAjB,MAAAA,KAAK,CAACuC,EAAE,IAAI,CAAN,GAAUC,EAAE,IAAI,CAAjB,CAAL,CAAyBhB,OAAzB,CAAiCiB,MAAjC;AACD;;AACDzC,IAAAA,KAAK,CAACuC,EAAE,IAAI,CAAP,CAAL,CAAef,OAAf,CAAuBiB,MAAvB;;AAEA,aAASA,MAAT,CAAgBC,IAAhB,EAAsB;AACpB,UAAIC,KAAK,GAAG,CAACD,IAAI,CAAC,CAAD,CAAJ,CAAQ,CAAR,IAAaP,CAAd,EAAiBO,IAAI,CAAC,CAAD,CAAJ,CAAQ,CAAR,IAAaN,CAA9B,CAAZ;AAAA,UACIQ,GAAG,GAAG,CAACF,IAAI,CAAC,CAAD,CAAJ,CAAQ,CAAR,IAAaP,CAAd,EAAiBO,IAAI,CAAC,CAAD,CAAJ,CAAQ,CAAR,IAAaN,CAA9B,CADV;AAAA,UAEIS,UAAU,GAAGC,KAAK,CAACH,KAAD,CAFtB;AAAA,UAGII,QAAQ,GAAGD,KAAK,CAACF,GAAD,CAHpB;AAAA,UAIII,CAJJ;AAAA,UAIOC,CAJP;;AAKA,UAAID,CAAC,GAAGd,aAAa,CAACW,UAAD,CAArB,EAAmC;AACjC,YAAII,CAAC,GAAGhB,eAAe,CAACc,QAAD,CAAvB,EAAmC;AACjC,iBAAOb,aAAa,CAACc,CAAC,CAACJ,GAAH,CAApB;AACA,iBAAOX,eAAe,CAACgB,CAAC,CAACN,KAAH,CAAtB;;AACA,cAAIK,CAAC,KAAKC,CAAV,EAAa;AACXD,YAAAA,CAAC,CAAC1B,IAAF,CAAOC,IAAP,CAAYqB,GAAZ;AACAZ,YAAAA,QAAQ,CAACgB,CAAC,CAAC1B,IAAH,CAAR;AACD,WAHD,MAGO;AACLW,YAAAA,eAAe,CAACe,CAAC,CAACL,KAAH,CAAf,GAA2BT,aAAa,CAACe,CAAC,CAACL,GAAH,CAAb,GAAuB;AAACD,cAAAA,KAAK,EAAEK,CAAC,CAACL,KAAV;AAAiBC,cAAAA,GAAG,EAAEK,CAAC,CAACL,GAAxB;AAA6BtB,cAAAA,IAAI,EAAE0B,CAAC,CAAC1B,IAAF,CAAO4B,MAAP,CAAcD,CAAC,CAAC3B,IAAhB;AAAnC,aAAlD;AACD;AACF,SATD,MASO;AACL,iBAAOY,aAAa,CAACc,CAAC,CAACJ,GAAH,CAApB;AACAI,UAAAA,CAAC,CAAC1B,IAAF,CAAOC,IAAP,CAAYqB,GAAZ;AACAV,UAAAA,aAAa,CAACc,CAAC,CAACJ,GAAF,GAAQG,QAAT,CAAb,GAAkCC,CAAlC;AACD;AACF,OAfD,MAeO,IAAIA,CAAC,GAAGf,eAAe,CAACc,QAAD,CAAvB,EAAmC;AACxC,YAAIE,CAAC,GAAGf,aAAa,CAACW,UAAD,CAArB,EAAmC;AACjC,iBAAOZ,eAAe,CAACe,CAAC,CAACL,KAAH,CAAtB;AACA,iBAAOT,aAAa,CAACe,CAAC,CAACL,GAAH,CAApB;;AACA,cAAII,CAAC,KAAKC,CAAV,EAAa;AACXD,YAAAA,CAAC,CAAC1B,IAAF,CAAOC,IAAP,CAAYqB,GAAZ;AACAZ,YAAAA,QAAQ,CAACgB,CAAC,CAAC1B,IAAH,CAAR;AACD,WAHD,MAGO;AACLW,YAAAA,eAAe,CAACgB,CAAC,CAACN,KAAH,CAAf,GAA2BT,aAAa,CAACc,CAAC,CAACJ,GAAH,CAAb,GAAuB;AAACD,cAAAA,KAAK,EAAEM,CAAC,CAACN,KAAV;AAAiBC,cAAAA,GAAG,EAAEI,CAAC,CAACJ,GAAxB;AAA6BtB,cAAAA,IAAI,EAAE2B,CAAC,CAAC3B,IAAF,CAAO4B,MAAP,CAAcF,CAAC,CAAC1B,IAAhB;AAAnC,aAAlD;AACD;AACF,SATD,MASO;AACL,iBAAOW,eAAe,CAACe,CAAC,CAACL,KAAH,CAAtB;AACAK,UAAAA,CAAC,CAAC1B,IAAF,CAAO6B,OAAP,CAAeR,KAAf;AACAV,UAAAA,eAAe,CAACe,CAAC,CAACL,KAAF,GAAUE,UAAX,CAAf,GAAwCG,CAAxC;AACD;AACF,OAfM,MAeA;AACLf,QAAAA,eAAe,CAACY,UAAD,CAAf,GAA8BX,aAAa,CAACa,QAAD,CAAb,GAA0B;AAACJ,UAAAA,KAAK,EAAEE,UAAR;AAAoBD,UAAAA,GAAG,EAAEG,QAAzB;AAAmCzB,UAAAA,IAAI,EAAE,CAACqB,KAAD,EAAQC,GAAR;AAAzC,SAAxD;AACD;AACF;AACF;;AAED,WAASE,KAAT,CAAeM,KAAf,EAAsB;AACpB,WAAOA,KAAK,CAAC,CAAD,CAAL,GAAW,CAAX,GAAeA,KAAK,CAAC,CAAD,CAAL,IAAYnD,EAAE,GAAG,CAAjB,IAAsB,CAA5C;AACD;;AAED,WAASI,YAAT,CAAsBiB,IAAtB,EAA4Bf,MAA5B,EAAoCU,KAApC,EAA2C;AACzCK,IAAAA,IAAI,CAACE,OAAL,CAAa,UAAS4B,KAAT,EAAgB;AAC3B,UAAIjB,CAAC,GAAGiB,KAAK,CAAC,CAAD,CAAb;AAAA,UACIhB,CAAC,GAAGgB,KAAK,CAAC,CAAD,CADb;AAAA,UAEIC,EAAE,GAAGlB,CAAC,GAAG,CAFb;AAAA,UAGImB,EAAE,GAAGlB,CAAC,GAAG,CAHb;AAAA,UAIImB,EAJJ;AAAA,UAKIC,EAAE,GAAGjD,MAAM,CAAC+C,EAAE,GAAGrD,EAAL,GAAUoD,EAAX,CALf;;AAMA,UAAIlB,CAAC,GAAG,CAAJ,IAASA,CAAC,GAAGlC,EAAb,IAAmBoD,EAAE,KAAKlB,CAA9B,EAAiC;AAC/BoB,QAAAA,EAAE,GAAGhD,MAAM,CAAC+C,EAAE,GAAGrD,EAAL,GAAUoD,EAAV,GAAe,CAAhB,CAAX;AACAD,QAAAA,KAAK,CAAC,CAAD,CAAL,GAAWjB,CAAC,GAAG,CAAClB,KAAK,GAAGsC,EAAT,KAAgBC,EAAE,GAAGD,EAArB,CAAJ,GAA+B,GAA1C;AACD;;AACD,UAAInB,CAAC,GAAG,CAAJ,IAASA,CAAC,GAAGlC,EAAb,IAAmBoD,EAAE,KAAKlB,CAA9B,EAAiC;AAC/BmB,QAAAA,EAAE,GAAGhD,MAAM,CAAC,CAAC+C,EAAE,GAAG,CAAN,IAAWrD,EAAX,GAAgBoD,EAAjB,CAAX;AACAD,QAAAA,KAAK,CAAC,CAAD,CAAL,GAAWhB,CAAC,GAAG,CAACnB,KAAK,GAAGsC,EAAT,KAAgBC,EAAE,GAAGD,EAArB,CAAJ,GAA+B,GAA1C;AACD;AACF,KAfD;AAgBD;;AAEDjD,EAAAA,QAAQ,CAACY,OAAT,GAAmBA,OAAnB;;AAEAZ,EAAAA,QAAQ,CAACmD,IAAT,GAAgB,UAASC,CAAT,EAAY;AAC1B,QAAI,CAACC,SAAS,CAAC/B,MAAf,EAAuB,OAAO,CAAC3B,EAAD,EAAKC,EAAL,CAAP;;AACvB,QAAI0D,EAAE,GAAG/C,IAAI,CAACC,KAAL,CAAW4C,CAAC,CAAC,CAAD,CAAZ,CAAT;AAAA,QAA2BG,EAAE,GAAGhD,IAAI,CAACC,KAAL,CAAW4C,CAAC,CAAC,CAAD,CAAZ,CAAhC;;AACA,QAAI,EAAEE,EAAE,IAAI,CAAN,IAAWC,EAAE,IAAI,CAAnB,CAAJ,EAA2B,MAAM,IAAIC,KAAJ,CAAU,cAAV,CAAN;AAC3B,WAAO7D,EAAE,GAAG2D,EAAL,EAAS1D,EAAE,GAAG2D,EAAd,EAAkBvD,QAAzB;AACD,GALD;;AAOAA,EAAAA,QAAQ,CAACyD,UAAT,GAAsB,UAASL,CAAT,EAAY;AAChC,WAAOC,SAAS,CAAC/B,MAAV,IAAoBzB,SAAS,GAAG,OAAOuD,CAAP,KAAa,UAAb,GAA0BA,CAA1B,GAA8BjD,KAAK,CAACC,OAAN,CAAcgD,CAAd,IAAmB7D,QAAQ,CAACH,KAAK,CAACsE,IAAN,CAAWN,CAAX,CAAD,CAA3B,GAA6C7D,QAAQ,CAAC6D,CAAD,CAA/F,EAAoGpD,QAAxH,IAAoIH,SAA3I;AACD,GAFD;;AAIAG,EAAAA,QAAQ,CAACF,MAAT,GAAkB,UAASsD,CAAT,EAAY;AAC5B,WAAOC,SAAS,CAAC/B,MAAV,IAAoBxB,MAAM,GAAGsD,CAAC,GAAGrD,YAAH,GAAkBN,IAA5B,EAAkCO,QAAtD,IAAkEF,MAAM,KAAKC,YAApF;AACD,GAFD;;AAIA,SAAOC,QAAP;AACD","sourcesContent":["import {extent, thresholdSturges, ticks, tickStep} from \"d3-array\";\r\nimport {slice} from \"./array.js\";\r\nimport ascending from \"./ascending.js\";\r\nimport area from \"./area.js\";\r\nimport constant from \"./constant.js\";\r\nimport contains from \"./contains.js\";\r\nimport noop from \"./noop.js\";\r\n\r\nvar cases = [\r\n  [],\r\n  [[[1.0, 1.5], [0.5, 1.0]]],\r\n  [[[1.5, 1.0], [1.0, 1.5]]],\r\n  [[[1.5, 1.0], [0.5, 1.0]]],\r\n  [[[1.0, 0.5], [1.5, 1.0]]],\r\n  [[[1.0, 1.5], [0.5, 1.0]], [[1.0, 0.5], [1.5, 1.0]]],\r\n  [[[1.0, 0.5], [1.0, 1.5]]],\r\n  [[[1.0, 0.5], [0.5, 1.0]]],\r\n  [[[0.5, 1.0], [1.0, 0.5]]],\r\n  [[[1.0, 1.5], [1.0, 0.5]]],\r\n  [[[0.5, 1.0], [1.0, 0.5]], [[1.5, 1.0], [1.0, 1.5]]],\r\n  [[[1.5, 1.0], [1.0, 0.5]]],\r\n  [[[0.5, 1.0], [1.5, 1.0]]],\r\n  [[[1.0, 1.5], [1.5, 1.0]]],\r\n  [[[0.5, 1.0], [1.0, 1.5]]],\r\n  []\r\n];\r\n\r\nexport default function() {\r\n  var dx = 1,\r\n      dy = 1,\r\n      threshold = thresholdSturges,\r\n      smooth = smoothLinear;\r\n\r\n  function contours(values) {\r\n    var tz = threshold(values);\r\n\r\n    // Convert number of thresholds into uniform thresholds.\r\n    if (!Array.isArray(tz)) {\r\n      const e = extent(values), ts = tickStep(e[0], e[1], tz);\r\n      tz = ticks(Math.floor(e[0] / ts) * ts, Math.floor(e[1] / ts - 1) * ts, tz);\r\n    } else {\r\n      tz = tz.slice().sort(ascending);\r\n    }\r\n\r\n    return tz.map(value => contour(values, value));\r\n  }\r\n\r\n  // Accumulate, smooth contour rings, assign holes to exterior rings.\r\n  // Based on https://github.com/mbostock/shapefile/blob/v0.6.2/shp/polygon.js\r\n  function contour(values, value) {\r\n    var polygons = [],\r\n        holes = [];\r\n\r\n    isorings(values, value, function(ring) {\r\n      smooth(ring, values, value);\r\n      if (area(ring) > 0) polygons.push([ring]);\r\n      else holes.push(ring);\r\n    });\r\n\r\n    holes.forEach(function(hole) {\r\n      for (var i = 0, n = polygons.length, polygon; i < n; ++i) {\r\n        if (contains((polygon = polygons[i])[0], hole) !== -1) {\r\n          polygon.push(hole);\r\n          return;\r\n        }\r\n      }\r\n    });\r\n\r\n    return {\r\n      type: \"MultiPolygon\",\r\n      value: value,\r\n      coordinates: polygons\r\n    };\r\n  }\r\n\r\n  // Marching squares with isolines stitched into rings.\r\n  // Based on https://github.com/topojson/topojson-client/blob/v3.0.0/src/stitch.js\r\n  function isorings(values, value, callback) {\r\n    var fragmentByStart = new Array,\r\n        fragmentByEnd = new Array,\r\n        x, y, t0, t1, t2, t3;\r\n\r\n    // Special case for the first row (y = -1, t2 = t3 = 0).\r\n    x = y = -1;\r\n    t1 = values[0] >= value;\r\n    cases[t1 << 1].forEach(stitch);\r\n    while (++x < dx - 1) {\r\n      t0 = t1, t1 = values[x + 1] >= value;\r\n      cases[t0 | t1 << 1].forEach(stitch);\r\n    }\r\n    cases[t1 << 0].forEach(stitch);\r\n\r\n    // General case for the intermediate rows.\r\n    while (++y < dy - 1) {\r\n      x = -1;\r\n      t1 = values[y * dx + dx] >= value;\r\n      t2 = values[y * dx] >= value;\r\n      cases[t1 << 1 | t2 << 2].forEach(stitch);\r\n      while (++x < dx - 1) {\r\n        t0 = t1, t1 = values[y * dx + dx + x + 1] >= value;\r\n        t3 = t2, t2 = values[y * dx + x + 1] >= value;\r\n        cases[t0 | t1 << 1 | t2 << 2 | t3 << 3].forEach(stitch);\r\n      }\r\n      cases[t1 | t2 << 3].forEach(stitch);\r\n    }\r\n\r\n    // Special case for the last row (y = dy - 1, t0 = t1 = 0).\r\n    x = -1;\r\n    t2 = values[y * dx] >= value;\r\n    cases[t2 << 2].forEach(stitch);\r\n    while (++x < dx - 1) {\r\n      t3 = t2, t2 = values[y * dx + x + 1] >= value;\r\n      cases[t2 << 2 | t3 << 3].forEach(stitch);\r\n    }\r\n    cases[t2 << 3].forEach(stitch);\r\n\r\n    function stitch(line) {\r\n      var start = [line[0][0] + x, line[0][1] + y],\r\n          end = [line[1][0] + x, line[1][1] + y],\r\n          startIndex = index(start),\r\n          endIndex = index(end),\r\n          f, g;\r\n      if (f = fragmentByEnd[startIndex]) {\r\n        if (g = fragmentByStart[endIndex]) {\r\n          delete fragmentByEnd[f.end];\r\n          delete fragmentByStart[g.start];\r\n          if (f === g) {\r\n            f.ring.push(end);\r\n            callback(f.ring);\r\n          } else {\r\n            fragmentByStart[f.start] = fragmentByEnd[g.end] = {start: f.start, end: g.end, ring: f.ring.concat(g.ring)};\r\n          }\r\n        } else {\r\n          delete fragmentByEnd[f.end];\r\n          f.ring.push(end);\r\n          fragmentByEnd[f.end = endIndex] = f;\r\n        }\r\n      } else if (f = fragmentByStart[endIndex]) {\r\n        if (g = fragmentByEnd[startIndex]) {\r\n          delete fragmentByStart[f.start];\r\n          delete fragmentByEnd[g.end];\r\n          if (f === g) {\r\n            f.ring.push(end);\r\n            callback(f.ring);\r\n          } else {\r\n            fragmentByStart[g.start] = fragmentByEnd[f.end] = {start: g.start, end: f.end, ring: g.ring.concat(f.ring)};\r\n          }\r\n        } else {\r\n          delete fragmentByStart[f.start];\r\n          f.ring.unshift(start);\r\n          fragmentByStart[f.start = startIndex] = f;\r\n        }\r\n      } else {\r\n        fragmentByStart[startIndex] = fragmentByEnd[endIndex] = {start: startIndex, end: endIndex, ring: [start, end]};\r\n      }\r\n    }\r\n  }\r\n\r\n  function index(point) {\r\n    return point[0] * 2 + point[1] * (dx + 1) * 4;\r\n  }\r\n\r\n  function smoothLinear(ring, values, value) {\r\n    ring.forEach(function(point) {\r\n      var x = point[0],\r\n          y = point[1],\r\n          xt = x | 0,\r\n          yt = y | 0,\r\n          v0,\r\n          v1 = values[yt * dx + xt];\r\n      if (x > 0 && x < dx && xt === x) {\r\n        v0 = values[yt * dx + xt - 1];\r\n        point[0] = x + (value - v0) / (v1 - v0) - 0.5;\r\n      }\r\n      if (y > 0 && y < dy && yt === y) {\r\n        v0 = values[(yt - 1) * dx + xt];\r\n        point[1] = y + (value - v0) / (v1 - v0) - 0.5;\r\n      }\r\n    });\r\n  }\r\n\r\n  contours.contour = contour;\r\n\r\n  contours.size = function(_) {\r\n    if (!arguments.length) return [dx, dy];\r\n    var _0 = Math.floor(_[0]), _1 = Math.floor(_[1]);\r\n    if (!(_0 >= 0 && _1 >= 0)) throw new Error(\"invalid size\");\r\n    return dx = _0, dy = _1, contours;\r\n  };\r\n\r\n  contours.thresholds = function(_) {\r\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), contours) : threshold;\r\n  };\r\n\r\n  contours.smooth = function(_) {\r\n    return arguments.length ? (smooth = _ ? smoothLinear : noop, contours) : smooth === smoothLinear;\r\n  };\r\n\r\n  return contours;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}