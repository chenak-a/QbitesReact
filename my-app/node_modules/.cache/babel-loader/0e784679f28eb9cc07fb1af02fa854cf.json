{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _d3Shape = require(\"d3-shape\");\n\nvar _GenericChartComponent = require(\"../GenericChartComponent\");\n\nvar _GenericChartComponent2 = _interopRequireDefault(_GenericChartComponent);\n\nvar _GenericComponent = require(\"../GenericComponent\");\n\nvar _utils = require(\"../utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar LineSeries = function (_Component) {\n  _inherits(LineSeries, _Component);\n\n  function LineSeries(props) {\n    _classCallCheck(this, LineSeries);\n\n    var _this = _possibleConstructorReturn(this, (LineSeries.__proto__ || Object.getPrototypeOf(LineSeries)).call(this, props));\n\n    _this.renderSVG = _this.renderSVG.bind(_this);\n    _this.drawOnCanvas = _this.drawOnCanvas.bind(_this);\n    _this.isHover = _this.isHover.bind(_this);\n    return _this;\n  }\n\n  _createClass(LineSeries, [{\n    key: \"isHover\",\n    value: function isHover(moreProps) {\n      // console.log(\"HERE\")\n      var _props = this.props,\n          highlightOnHover = _props.highlightOnHover,\n          yAccessor = _props.yAccessor,\n          hoverTolerance = _props.hoverTolerance;\n      if (!highlightOnHover) return false;\n      var mouseXY = moreProps.mouseXY,\n          currentItem = moreProps.currentItem,\n          xScale = moreProps.xScale,\n          plotData = moreProps.plotData;\n      var _moreProps$chartConfi = moreProps.chartConfig,\n          yScale = _moreProps$chartConfi.yScale,\n          origin = _moreProps$chartConfi.origin;\n      var xAccessor = moreProps.xAccessor;\n\n      var _mouseXY = _slicedToArray(mouseXY, 2),\n          x = _mouseXY[0],\n          y = _mouseXY[1];\n\n      var radius = hoverTolerance;\n\n      var _getClosestItemIndexe = (0, _utils.getClosestItemIndexes)(plotData, xScale.invert(x), xAccessor),\n          left = _getClosestItemIndexe.left,\n          right = _getClosestItemIndexe.right;\n\n      if (left === right) {\n        var cy = yScale(yAccessor(currentItem)) + origin[1];\n        var cx = xScale(xAccessor(currentItem)) + origin[0];\n        var hovering1 = Math.pow(x - cx, 2) + Math.pow(y - cy, 2) < Math.pow(radius, 2);\n        return hovering1;\n      } else {\n        var l = plotData[left];\n        var r = plotData[right];\n        var x1 = xScale(xAccessor(l)) + origin[0];\n        var y1 = yScale(yAccessor(l)) + origin[1];\n        var x2 = xScale(xAccessor(r)) + origin[0];\n        var y2 = yScale(yAccessor(r)) + origin[1]; // y = m * x + b\n\n        var m\n        /* slope */\n        = (y2 - y1) / (x2 - x1);\n        var b\n        /* y intercept */\n        = -1 * m * x1 + y1;\n        var desiredY = Math.round(m * x + b);\n        var hovering2 = y >= desiredY - radius && y <= desiredY + radius;\n        return hovering2;\n      }\n    }\n  }, {\n    key: \"drawOnCanvas\",\n    value: function drawOnCanvas(ctx, moreProps) {\n      var _props2 = this.props,\n          yAccessor = _props2.yAccessor,\n          stroke = _props2.stroke,\n          strokeOpacity = _props2.strokeOpacity,\n          strokeWidth = _props2.strokeWidth,\n          hoverStrokeWidth = _props2.hoverStrokeWidth,\n          defined = _props2.defined,\n          strokeDasharray = _props2.strokeDasharray,\n          interpolation = _props2.interpolation,\n          canvasClip = _props2.canvasClip;\n      var connectNulls = this.props.connectNulls;\n      var xAccessor = moreProps.xAccessor;\n      var xScale = moreProps.xScale,\n          yScale = moreProps.chartConfig.yScale,\n          plotData = moreProps.plotData,\n          hovering = moreProps.hovering;\n\n      if (canvasClip) {\n        ctx.save();\n        canvasClip(ctx, moreProps);\n      }\n\n      ctx.lineWidth = hovering ? hoverStrokeWidth : strokeWidth;\n      ctx.strokeStyle = (0, _utils.hexToRGBA)(stroke, strokeOpacity);\n      ctx.setLineDash((0, _utils.getStrokeDasharray)(strokeDasharray).split(\",\"));\n      var dataSeries = (0, _d3Shape.line)().x(function (d) {\n        return Math.round(xScale(xAccessor(d)));\n      }).y(function (d) {\n        return Math.round(yScale(yAccessor(d)));\n      });\n\n      if ((0, _utils.isDefined)(interpolation)) {\n        dataSeries.curve(interpolation);\n      }\n\n      if (!connectNulls) {\n        dataSeries.defined(function (d) {\n          return defined(yAccessor(d));\n        });\n      }\n\n      ctx.beginPath();\n      dataSeries.context(ctx)(plotData);\n      ctx.stroke();\n\n      if (canvasClip) {\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"renderSVG\",\n    value: function renderSVG(moreProps) {\n      var _props3 = this.props,\n          yAccessor = _props3.yAccessor,\n          stroke = _props3.stroke,\n          strokeOpacity = _props3.strokeOpacity,\n          strokeWidth = _props3.strokeWidth,\n          hoverStrokeWidth = _props3.hoverStrokeWidth,\n          defined = _props3.defined,\n          strokeDasharray = _props3.strokeDasharray;\n      var connectNulls = this.props.connectNulls;\n      var _props4 = this.props,\n          interpolation = _props4.interpolation,\n          style = _props4.style;\n      var xAccessor = moreProps.xAccessor,\n          chartConfig = moreProps.chartConfig;\n      var xScale = moreProps.xScale,\n          plotData = moreProps.plotData,\n          hovering = moreProps.hovering;\n      var yScale = chartConfig.yScale;\n      var dataSeries = (0, _d3Shape.line)().x(function (d) {\n        return Math.round(xScale(xAccessor(d)));\n      }).y(function (d) {\n        return Math.round(yScale(yAccessor(d)));\n      });\n\n      if ((0, _utils.isDefined)(interpolation)) {\n        dataSeries.curve(interpolation);\n      }\n\n      if (!connectNulls) {\n        dataSeries.defined(function (d) {\n          return defined(yAccessor(d));\n        });\n      }\n\n      var d = dataSeries(plotData);\n      var _props5 = this.props,\n          fill = _props5.fill,\n          className = _props5.className;\n      return _react2.default.createElement(\"path\", {\n        style: style,\n        className: className + \" \" + (stroke ? \"\" : \" line-stroke\"),\n        d: d,\n        stroke: stroke,\n        strokeOpacity: strokeOpacity,\n        strokeWidth: hovering ? hoverStrokeWidth : strokeWidth,\n        strokeDasharray: (0, _utils.getStrokeDasharray)(strokeDasharray),\n        fill: fill\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _props6 = this.props,\n          highlightOnHover = _props6.highlightOnHover,\n          onHover = _props6.onHover,\n          onUnHover = _props6.onUnHover;\n      var hoverProps = highlightOnHover || onHover || onUnHover ? {\n        isHover: this.isHover,\n        drawOn: [\"mousemove\", \"pan\"],\n        canvasToDraw: _GenericComponent.getMouseCanvas\n      } : {\n        drawOn: [\"pan\"],\n        canvasToDraw: _GenericComponent.getAxisCanvas\n      };\n      return _react2.default.createElement(_GenericChartComponent2.default, _extends({\n        svgDraw: this.renderSVG,\n        canvasDraw: this.drawOnCanvas,\n        onClickWhenHover: this.props.onClick,\n        onDoubleClickWhenHover: this.props.onDoubleClick,\n        onContextMenuWhenHover: this.props.onContextMenu,\n        onHover: this.props.onHover,\n        onUnHover: this.props.onUnHover\n      }, hoverProps));\n    }\n  }]);\n\n  return LineSeries;\n}(_react.Component);\n/*\nfunction segment(points, ctx) {\n\tctx.beginPath();\n\n\tconst [x, y] = first(points);\n\tctx.moveTo(x, y);\n\tfor (let i = 1; i < points.length; i++) {\n\t\tconst [x1, y1] = points[i];\n\t\tctx.lineTo(x1, y1);\n\t}\n\n\tctx.stroke();\n}\n*/\n\n\nLineSeries.propTypes = {\n  className: _propTypes2.default.string,\n  strokeWidth: _propTypes2.default.number,\n  strokeOpacity: _propTypes2.default.number,\n  stroke: _propTypes2.default.string,\n  hoverStrokeWidth: _propTypes2.default.number,\n  fill: _propTypes2.default.string,\n  defined: _propTypes2.default.func,\n  hoverTolerance: _propTypes2.default.number,\n  strokeDasharray: _propTypes2.default.oneOf(_utils.strokeDashTypes),\n  highlightOnHover: _propTypes2.default.bool,\n  onClick: _propTypes2.default.func,\n  onDoubleClick: _propTypes2.default.func,\n  onHover: _propTypes2.default.func,\n  onUnHover: _propTypes2.default.func,\n  onContextMenu: _propTypes2.default.func,\n  yAccessor: _propTypes2.default.func,\n  connectNulls: _propTypes2.default.bool,\n  interpolation: _propTypes2.default.func,\n  canvasClip: _propTypes2.default.func,\n  style: _propTypes2.default.object\n};\nLineSeries.defaultProps = {\n  className: \"line \",\n  strokeWidth: 1,\n  strokeOpacity: 1,\n  hoverStrokeWidth: 4,\n  fill: \"none\",\n  stroke: \"#4682B4\",\n  strokeDasharray: \"Solid\",\n  defined: function defined(d) {\n    return !isNaN(d);\n  },\n  hoverTolerance: 6,\n  highlightOnHover: false,\n  connectNulls: false,\n  onClick: function onClick(e) {\n    console.log(\"Click\", e);\n  },\n  onDoubleClick: function onDoubleClick(e) {\n    console.log(\"Double Click\", e);\n  },\n  onContextMenu: function onContextMenu(e) {\n    console.log(\"Right Click\", e);\n  }\n};\nexports.default = LineSeries;","map":{"version":3,"sources":["../../../src/lib/series/LineSeries.js"],"names":["LineSeries","moreProps","highlightOnHover","yAccessor","hoverTolerance","mouseXY","currentItem","xScale","plotData","yScale","origin","xAccessor","x","y","radius","left","right","cy","cx","hovering1","Math","l","r","x1","y1","x2","y2","m","b","desiredY","hovering2","ctx","stroke","strokeOpacity","strokeWidth","hoverStrokeWidth","defined","strokeDasharray","interpolation","canvasClip","connectNulls","hovering","dataSeries","style","chartConfig","d","fill","className","onHover","onUnHover","hoverProps","isHover","drawOn","canvasToDraw","onClick","onDoubleClick","onContextMenu","object","isNaN","console"],"mappings":"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","sourcesContent":["\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { line as d3Line } from \"d3-shape\";\n\nimport GenericChartComponent from \"../GenericChartComponent\";\nimport { getAxisCanvas, getMouseCanvas } from \"../GenericComponent\";\n\nimport {\n\tisDefined,\n\tgetClosestItemIndexes,\n\tstrokeDashTypes,\n\tgetStrokeDasharray,\n\thexToRGBA,\n} from \"../utils\";\n\nclass LineSeries extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.renderSVG = this.renderSVG.bind(this);\n\t\tthis.drawOnCanvas = this.drawOnCanvas.bind(this);\n\t\tthis.isHover = this.isHover.bind(this);\n\t}\n\tisHover(moreProps) {\n\t\t// console.log(\"HERE\")\n\t\tconst { highlightOnHover, yAccessor, hoverTolerance } = this.props;\n\n\t\tif (!highlightOnHover) return false;\n\n\t\tconst { mouseXY, currentItem, xScale, plotData } = moreProps;\n\t\tconst { chartConfig: { yScale, origin } } = moreProps;\n\n\t\tconst { xAccessor } = moreProps;\n\n\t\tconst [x, y] = mouseXY;\n\t\tconst radius = hoverTolerance;\n\n\t\tconst { left, right } = getClosestItemIndexes(plotData, xScale.invert(x), xAccessor);\n\t\tif (left === right) {\n\t\t\tconst cy = yScale(yAccessor(currentItem)) + origin[1];\n\t\t\tconst cx = xScale(xAccessor(currentItem)) + origin[0];\n\n\t\t\tconst hovering1 = Math.pow(x - cx, 2) + Math.pow(y - cy, 2) < Math.pow(radius, 2);\n\n\t\t\treturn hovering1;\n\t\t} else {\n\t\t\tconst l = plotData[left];\n\t\t\tconst r = plotData[right];\n\t\t\tconst x1 = xScale(xAccessor(l)) + origin[0];\n\t\t\tconst y1 = yScale(yAccessor(l)) + origin[1];\n\t\t\tconst x2 = xScale(xAccessor(r)) + origin[0];\n\t\t\tconst y2 = yScale(yAccessor(r)) + origin[1];\n\n\t\t\t// y = m * x + b\n\t\t\tconst m /* slope */ = (y2 - y1) / (x2 - x1);\n\t\t\tconst b /* y intercept */ = -1 * m * x1 + y1;\n\n\t\t\tconst desiredY = Math.round(m * x + b);\n\n\t\t\tconst hovering2 = y >= desiredY - radius && y <= desiredY + radius;\n\n\t\t\treturn hovering2;\n\t\t}\n\t}\n\tdrawOnCanvas(ctx, moreProps) {\n\t\tconst {\n\t\t\tyAccessor,\n\t\t\tstroke,\n\t\t\tstrokeOpacity,\n\t\t\tstrokeWidth,\n\t\t\thoverStrokeWidth,\n\t\t\tdefined,\n\t\t\tstrokeDasharray,\n\t\t\tinterpolation,\n\t\t\tcanvasClip,\n\t\t} = this.props;\n\n\t\tconst { connectNulls } = this.props;\n\n\t\tconst { xAccessor } = moreProps;\n\t\tconst { xScale, chartConfig: { yScale }, plotData, hovering } = moreProps;\n\n\t\tif (canvasClip) {\n\t\t\tctx.save();\n\t\t\tcanvasClip(ctx, moreProps);\n\t\t}\n\n\t\tctx.lineWidth = hovering ? hoverStrokeWidth : strokeWidth;\n\n\t\tctx.strokeStyle = hexToRGBA(stroke, strokeOpacity);\n\t\tctx.setLineDash(getStrokeDasharray(strokeDasharray).split(\",\"));\n\n\t\tconst dataSeries = d3Line()\n\t\t\t.x(d => Math.round(xScale(xAccessor(d))))\n\t\t\t.y(d => Math.round(yScale(yAccessor(d))));\n\n\t\tif (isDefined(interpolation)) {\n\t\t\tdataSeries.curve(interpolation);\n\t\t}\n\t\tif (!connectNulls) {\n\t\t\tdataSeries.defined(d => defined(yAccessor(d)));\n\t\t}\n\n\t\tctx.beginPath();\n\t\tdataSeries.context(ctx)(plotData);\n\t\tctx.stroke();\n\n\t\tif (canvasClip) {\n\t\t\tctx.restore();\n\t\t}\n\t}\n\trenderSVG(moreProps) {\n\t\tconst { yAccessor, stroke, strokeOpacity, strokeWidth, hoverStrokeWidth, defined, strokeDasharray } = this.props;\n\t\tconst { connectNulls } = this.props;\n\t\tconst { interpolation, style } = this.props;\n\t\tconst { xAccessor, chartConfig } = moreProps;\n\n\t\tconst { xScale, plotData, hovering } = moreProps;\n\n\t\tconst { yScale } = chartConfig;\n\t\tconst dataSeries = d3Line()\n\t\t\t.x(d => Math.round(xScale(xAccessor(d))))\n\t\t\t.y(d => Math.round(yScale(yAccessor(d))));\n\n\t\tif (isDefined(interpolation)) {\n\t\t\tdataSeries.curve(interpolation);\n\t\t}\n\t\tif (!connectNulls) {\n\t\t\tdataSeries.defined(d => defined(yAccessor(d)));\n\t\t}\n\t\tconst d = dataSeries(plotData);\n\n\t\tconst { fill, className } = this.props;\n\n\t\treturn (\n\t\t\t<path\n\t\t\t\tstyle={style}\n\t\t\t\tclassName={`${className} ${stroke ? \"\" : \" line-stroke\"}`}\n\t\t\t\td={d}\n\t\t\t\tstroke={stroke}\n\t\t\t\tstrokeOpacity={strokeOpacity}\n\t\t\t\tstrokeWidth={hovering ? hoverStrokeWidth : strokeWidth}\n\t\t\t\tstrokeDasharray={getStrokeDasharray(strokeDasharray)}\n\t\t\t\tfill={fill}\n\t\t\t/>\n\t\t);\n\t}\n\trender() {\n\t\tconst { highlightOnHover, onHover, onUnHover } = this.props;\n\t\tconst hoverProps = (highlightOnHover || onHover || onUnHover)\n\t\t\t? {\n\t\t\t\tisHover: this.isHover,\n\t\t\t\tdrawOn: [\"mousemove\", \"pan\"],\n\t\t\t\tcanvasToDraw: getMouseCanvas\n\t\t\t}\n\t\t\t: {\n\t\t\t\tdrawOn: [\"pan\"],\n\t\t\t\tcanvasToDraw: getAxisCanvas\n\t\t\t};\n\n\t\treturn <GenericChartComponent\n\t\t\tsvgDraw={this.renderSVG}\n\n\t\t\tcanvasDraw={this.drawOnCanvas}\n\n\t\t\tonClickWhenHover={this.props.onClick}\n\t\t\tonDoubleClickWhenHover={this.props.onDoubleClick}\n\t\t\tonContextMenuWhenHover={this.props.onContextMenu}\n\t\t\tonHover={this.props.onHover}\n\t\t\tonUnHover={this.props.onUnHover}\n\t\t\t{...hoverProps}\n\t\t/>;\n\t}\n}\n\n/*\nfunction segment(points, ctx) {\n\tctx.beginPath();\n\n\tconst [x, y] = first(points);\n\tctx.moveTo(x, y);\n\tfor (let i = 1; i < points.length; i++) {\n\t\tconst [x1, y1] = points[i];\n\t\tctx.lineTo(x1, y1);\n\t}\n\n\tctx.stroke();\n}\n*/\n\nLineSeries.propTypes = {\n\tclassName: PropTypes.string,\n\tstrokeWidth: PropTypes.number,\n\tstrokeOpacity: PropTypes.number,\n\tstroke: PropTypes.string,\n\thoverStrokeWidth: PropTypes.number,\n\tfill: PropTypes.string,\n\tdefined: PropTypes.func,\n\thoverTolerance: PropTypes.number,\n\tstrokeDasharray: PropTypes.oneOf(strokeDashTypes),\n\thighlightOnHover: PropTypes.bool,\n\tonClick: PropTypes.func,\n\tonDoubleClick: PropTypes.func,\n\tonHover: PropTypes.func,\n\tonUnHover: PropTypes.func,\n\tonContextMenu: PropTypes.func,\n\tyAccessor: PropTypes.func,\n\tconnectNulls: PropTypes.bool,\n\tinterpolation: PropTypes.func,\n\tcanvasClip: PropTypes.func,\n\tstyle: PropTypes.object,\n};\n\nLineSeries.defaultProps = {\n\tclassName: \"line \",\n\tstrokeWidth: 1,\n\tstrokeOpacity: 1,\n\thoverStrokeWidth: 4,\n\tfill: \"none\",\n\tstroke: \"#4682B4\",\n\tstrokeDasharray: \"Solid\",\n\tdefined: d => !isNaN(d),\n\thoverTolerance: 6,\n\thighlightOnHover: false,\n\tconnectNulls: false,\n\tonClick: function(e) { console.log(\"Click\", e); },\n\tonDoubleClick: function(e) { console.log(\"Double Click\", e); },\n\tonContextMenu: function(e) { console.log(\"Right Click\", e); },\n};\n\nexport default LineSeries;\n"]},"metadata":{},"sourceType":"script"}