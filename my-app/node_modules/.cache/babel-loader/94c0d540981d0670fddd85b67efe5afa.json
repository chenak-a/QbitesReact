{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nexports.edge1Provider = edge1Provider;\nexports.edge2Provider = edge2Provider;\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _d3Array = require(\"d3-array\");\n\nvar _d3Path = require(\"d3-path\");\n\nvar _GenericChartComponent = require(\"../../GenericChartComponent\");\n\nvar _GenericChartComponent2 = _interopRequireDefault(_GenericChartComponent);\n\nvar _GenericComponent = require(\"../../GenericComponent\");\n\nvar _StraightLine = require(\"./StraightLine\");\n\nvar _utils = require(\"../../utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar LinearRegressionChannelWithArea = function (_Component) {\n  _inherits(LinearRegressionChannelWithArea, _Component);\n\n  function LinearRegressionChannelWithArea(props) {\n    _classCallCheck(this, LinearRegressionChannelWithArea);\n\n    var _this = _possibleConstructorReturn(this, (LinearRegressionChannelWithArea.__proto__ || Object.getPrototypeOf(LinearRegressionChannelWithArea)).call(this, props));\n\n    _this.renderSVG = _this.renderSVG.bind(_this);\n    _this.drawOnCanvas = _this.drawOnCanvas.bind(_this);\n    _this.isHover = _this.isHover.bind(_this);\n    return _this;\n  }\n\n  _createClass(LinearRegressionChannelWithArea, [{\n    key: \"isHover\",\n    value: function isHover(moreProps) {\n      var _props = this.props,\n          tolerance = _props.tolerance,\n          onHover = _props.onHover;\n\n      if ((0, _utils.isDefined)(onHover)) {\n        var mouseXY = moreProps.mouseXY;\n\n        var _helper = helper(this.props, moreProps),\n            x1 = _helper.x1,\n            y1 = _helper.y1,\n            x2 = _helper.x2,\n            y2 = _helper.y2,\n            dy = _helper.dy;\n\n        var yDiffs = [-dy, 0, dy];\n        var hovering = yDiffs.reduce(function (result, diff) {\n          return result || (0, _StraightLine.isHovering2)([x1, y1 + diff], [x2, y2 + diff], mouseXY, tolerance);\n        }, false);\n        return hovering;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"drawOnCanvas\",\n    value: function drawOnCanvas(ctx, moreProps) {\n      var _props2 = this.props,\n          stroke = _props2.stroke,\n          strokeWidth = _props2.strokeWidth,\n          fillOpacity = _props2.fillOpacity,\n          strokeOpacity = _props2.strokeOpacity,\n          fill = _props2.fill;\n\n      var _helper2 = helper(this.props, moreProps),\n          x1 = _helper2.x1,\n          y1 = _helper2.y1,\n          x2 = _helper2.x2,\n          y2 = _helper2.y2,\n          dy = _helper2.dy;\n\n      ctx.lineWidth = strokeWidth;\n      ctx.strokeStyle = (0, _utils.hexToRGBA)(stroke, strokeOpacity);\n      ctx.fillStyle = (0, _utils.hexToRGBA)(fill, fillOpacity);\n      ctx.beginPath();\n      ctx.moveTo(x1, y1 - dy);\n      ctx.lineTo(x2, y2 - dy);\n      ctx.stroke();\n      ctx.beginPath();\n      ctx.moveTo(x2, y2 + dy);\n      ctx.lineTo(x1, y1 + dy);\n      ctx.stroke();\n      ctx.beginPath();\n      ctx.moveTo(x1, y1 - dy);\n      ctx.lineTo(x2, y2 - dy);\n      ctx.lineTo(x2, y2 + dy);\n      ctx.lineTo(x1, y1 + dy);\n      ctx.closePath();\n      ctx.fill();\n      ctx.beginPath();\n      ctx.moveTo(x2, y2);\n      ctx.lineTo(x1, y1);\n      ctx.stroke();\n    }\n  }, {\n    key: \"renderSVG\",\n    value: function renderSVG(moreProps) {\n      var _props3 = this.props,\n          stroke = _props3.stroke,\n          strokeWidth = _props3.strokeWidth,\n          fillOpacity = _props3.fillOpacity,\n          strokeOpacity = _props3.strokeOpacity,\n          fill = _props3.fill;\n\n      var _helper3 = helper(this.props, moreProps),\n          x1 = _helper3.x1,\n          y1 = _helper3.y1,\n          x2 = _helper3.x2,\n          y2 = _helper3.y2,\n          dy = _helper3.dy;\n\n      var line = {\n        strokeWidth: strokeWidth,\n        stroke: stroke,\n        strokeOpacity: strokeOpacity\n      };\n      var ctx = (0, _d3Path.path)();\n      ctx.moveTo(x1, y1 - dy);\n      ctx.lineTo(x2, y2 - dy);\n      ctx.lineTo(x2, y2 + dy);\n      ctx.lineTo(x1, y1 + dy);\n      ctx.closePath();\n      return _react2.default.createElement(\"g\", null, _react2.default.createElement(\"line\", _extends({}, line, {\n        x1: x1,\n        y1: y1 - dy,\n        x2: x2,\n        y2: y2 - dy\n      })), _react2.default.createElement(\"line\", _extends({}, line, {\n        x1: x1,\n        y1: y1 + dy,\n        x2: x2,\n        y2: y2 + dy\n      })), _react2.default.createElement(\"path\", {\n        d: ctx.toString(),\n        fill: fill,\n        fillOpacity: fillOpacity\n      }), _react2.default.createElement(\"line\", _extends({}, line, {\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2\n      })));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _props4 = this.props,\n          selected = _props4.selected,\n          interactiveCursorClass = _props4.interactiveCursorClass;\n      var _props5 = this.props,\n          onHover = _props5.onHover,\n          onUnHover = _props5.onUnHover;\n      return _react2.default.createElement(_GenericChartComponent2.default, {\n        isHover: this.isHover,\n        svgDraw: this.renderSVG,\n        canvasToDraw: _GenericComponent.getMouseCanvas,\n        canvasDraw: this.drawOnCanvas,\n        interactiveCursorClass: interactiveCursorClass,\n        selected: selected,\n        onHover: onHover,\n        onUnHover: onUnHover,\n        drawOn: [\"mousemove\", \"mouseleave\", \"pan\", \"drag\"]\n      });\n    }\n  }]);\n\n  return LinearRegressionChannelWithArea;\n}(_react.Component);\n\nfunction edge1Provider(props) {\n  return function (moreProps) {\n    var _helper4 = helper(props, moreProps),\n        x1 = _helper4.x1,\n        y1 = _helper4.y1;\n\n    return [x1, y1];\n  };\n}\n\nfunction edge2Provider(props) {\n  return function (moreProps) {\n    var _helper5 = helper(props, moreProps),\n        x2 = _helper5.x2,\n        y2 = _helper5.y2;\n\n    return [x2, y2];\n  };\n}\n\nfunction helper(props, moreProps) {\n  var x1Value = props.x1Value,\n      x2Value = props.x2Value,\n      type = props.type;\n  var xScale = moreProps.xScale,\n      yScale = moreProps.chartConfig.yScale,\n      fullData = moreProps.fullData;\n  var xAccessor = moreProps.xAccessor;\n  /*\n  http://www.metastock.com/Customer/Resources/TAAZ/?p=65\n  y = a + bx\n  n = length of array\n  b = (n * sum(x*y) - sum(xs) * sum(ys)) / (n * sum(xSquareds) - (sum(xs) ^ 2))\n  a = (sum of closes)\n  */\n\n  var _getClosestItemIndexe = (0, _utils.getClosestItemIndexes)(fullData, x1Value, xAccessor),\n      left = _getClosestItemIndexe.left;\n\n  var _getClosestItemIndexe2 = (0, _utils.getClosestItemIndexes)(fullData, x2Value, xAccessor),\n      right = _getClosestItemIndexe2.right;\n\n  var startIndex = Math.min(left, right);\n  var endIndex = Math.max(left, right) + 1;\n  var array = fullData.slice(startIndex, endIndex);\n  var xs = array.map(function (d) {\n    return xAccessor(d).valueOf();\n  });\n  var ys = array.map(function (d) {\n    return d.close;\n  });\n  var n = array.length;\n  var combine = (0, _utils.zipper)().combine(function (x, y) {\n    return x * y;\n  });\n  var xys = combine(xs, ys);\n  var xSquareds = xs.map(function (x) {\n    return Math.pow(x, 2);\n  });\n  var b = (n * (0, _d3Array.sum)(xys) - (0, _d3Array.sum)(xs) * (0, _d3Array.sum)(ys)) / (n * (0, _d3Array.sum)(xSquareds) - Math.pow((0, _d3Array.sum)(xs), 2));\n  var a = ((0, _d3Array.sum)(ys) - b * (0, _d3Array.sum)(xs)) / n;\n  var newy1 = a + b * x1Value;\n  var newy2 = a + b * x2Value;\n  var x1 = xScale(x1Value);\n  var y1 = yScale(newy1);\n  var x2 = xScale(x2Value);\n  var y2 = yScale(newy2);\n  var stdDev = type === \"SD\" ? (0, _d3Array.deviation)(array, function (d) {\n    return d.close;\n  }) : 0;\n  var dy = yScale(newy1 - stdDev) - y1;\n  return {\n    x1: x1,\n    y1: y1,\n    x2: x2,\n    y2: y2,\n    dy: dy\n  };\n}\n\nLinearRegressionChannelWithArea.propTypes = {\n  x1Value: _propTypes2.default.any.isRequired,\n  x2Value: _propTypes2.default.any.isRequired,\n  type: _propTypes2.default.oneOf([\"SD\", // standard deviation channel\n  \"Raff\"] // Raff Regression Channel\n  ).isRequired,\n  interactiveCursorClass: _propTypes2.default.string,\n  stroke: _propTypes2.default.string.isRequired,\n  strokeWidth: _propTypes2.default.number.isRequired,\n  fill: _propTypes2.default.string.isRequired,\n  fillOpacity: _propTypes2.default.number.isRequired,\n  strokeOpacity: _propTypes2.default.number.isRequired,\n  onDragStart: _propTypes2.default.func.isRequired,\n  onDrag: _propTypes2.default.func.isRequired,\n  onDragComplete: _propTypes2.default.func.isRequired,\n  onHover: _propTypes2.default.func,\n  onUnHover: _propTypes2.default.func,\n  defaultClassName: _propTypes2.default.string,\n  tolerance: _propTypes2.default.number.isRequired,\n  selected: _propTypes2.default.bool.isRequired\n};\nLinearRegressionChannelWithArea.defaultProps = {\n  onDragStart: _utils.noop,\n  onDrag: _utils.noop,\n  onDragComplete: _utils.noop,\n  type: \"SD\",\n  // standard dev\n  strokeWidth: 1,\n  tolerance: 4,\n  selected: false\n};\nexports.default = LinearRegressionChannelWithArea;","map":{"version":3,"sources":["../../../../src/lib/interactive/components/LinearRegressionChannelWithArea.js"],"names":["LinearRegressionChannelWithArea","moreProps","tolerance","onHover","mouseXY","x1","y1","x2","y2","dy","helper","yDiffs","hovering","result","ctx","stroke","strokeWidth","fillOpacity","strokeOpacity","fill","line","selected","interactiveCursorClass","onUnHover","edge1Provider","edge2Provider","x1Value","x2Value","type","props","xScale","yScale","fullData","xAccessor","left","right","startIndex","Math","endIndex","array","xs","ys","d","n","combine","x","xys","xSquareds","b","a","newy1","newy2","stdDev","onDragStart","onDrag","onDragComplete","defaultClassName","isRequired"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAqIgBwB,a,GAAAA,a;QAOAC,a,GAAAA,a;;AA5IhB,IAAA,MAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;;;AACA,IAAA,UAAA,GAAA,OAAA,CAAA,YAAA,CAAA;;;;AACA,IAAA,QAAA,GAAA,OAAA,CAAA,UAAA,CAAA;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;AAEA,IAAA,sBAAA,GAAA,OAAA,CAAA,6BAAA,CAAA;;;;AACA,IAAA,iBAAA,GAAA,OAAA,CAAA,wBAAA,CAAA;;AACA,IAAA,aAAA,GAAA,OAAA,CAAA,gBAAA,CAAA;;AAEA,IAAA,MAAA,GAAA,OAAA,CAAA,aAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEMzB,+B;;;AACL,WAAA,+BAAA,CAAA,KAAA,EAAmB;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,+BAAA,CAAA;;AAAA,QAAA,KAAA,GAAA,0BAAA,CAAA,IAAA,EAAA,CAAA,+BAAA,CAAA,SAAA,IAAA,MAAA,CAAA,cAAA,CAAA,+BAAA,CAAA,EAAA,IAAA,CAAA,IAAA,EAAA,KAAA,CAAA,CAAA;;AAGlB,IAAA,KAAA,CAAA,SAAA,GAAiB,KAAA,CAAA,SAAA,CAAA,IAAA,CAAjB,KAAiB,CAAjB;AACA,IAAA,KAAA,CAAA,YAAA,GAAoB,KAAA,CAAA,YAAA,CAAA,IAAA,CAApB,KAAoB,CAApB;AACA,IAAA,KAAA,CAAA,OAAA,GAAe,KAAA,CAAA,OAAA,CAAA,IAAA,CAAf,KAAe,CAAf;AALkB,WAAA,KAAA;AAMlB;;;;4BACOC,S,EAAW;AAAA,UAAA,MAAA,GACa,KADb,KAAA;AAAA,UACVC,SADU,GAAA,MAAA,CAAA,SAAA;AAAA,UACCC,OADD,GAAA,MAAA,CAAA,OAAA;;AAGlB,UAAI,CAAA,GAAA,MAAA,CAAA,SAAA,EAAJ,OAAI,CAAJ,EAAwB;AAAA,YACfC,OADe,GACHH,SADG,CAAA,OAAA;;AAAA,YAAA,OAAA,GAGQS,MAAAA,CAAO,KAAPA,KAAAA,EAHR,SAGQA,CAHR;AAAA,YAGfL,EAHe,GAAA,OAAA,CAAA,EAAA;AAAA,YAGXC,EAHW,GAAA,OAAA,CAAA,EAAA;AAAA,YAGPC,EAHO,GAAA,OAAA,CAAA,EAAA;AAAA,YAGHC,EAHG,GAAA,OAAA,CAAA,EAAA;AAAA,YAGCC,EAHD,GAAA,OAAA,CAAA,EAAA;;AAIvB,YAAME,MAAAA,GAAS,CAAC,CAAD,EAAA,EAAA,CAAA,EAAf,EAAe,CAAf;AAEA,YAAMC,QAAAA,GAAW,MAAA,CAAA,MAAA,CAAc,UAAA,MAAA,EAAA,IAAA,EAAA;AAAA,iBAAkBC,MAAAA,IAAU,CAAA,GAAA,aAAA,CAAA,WAAA,EAC1D,CAAA,EAAA,EAAKP,EAAAA,GADqD,IAC1D,CAD0D,EACzC,CAAA,EAAA,EAAKE,EAAAA,GADoC,IACzC,CADyC,EAAA,OAAA,EAA5B,SAA4B,CAA5B;AAAd,SAAA,EAAjB,KAAiB,CAAjB;AAGA,eAAA,QAAA;AACA;;AACD,aAAA,KAAA;AACA;;;iCACYM,G,EAAKb,S,EAAW;AAAA,UAAA,OAAA,GACsC,KADtC,KAAA;AAAA,UACpBc,MADoB,GAAA,OAAA,CAAA,MAAA;AAAA,UACZC,WADY,GAAA,OAAA,CAAA,WAAA;AAAA,UACCC,WADD,GAAA,OAAA,CAAA,WAAA;AAAA,UACcC,aADd,GAAA,OAAA,CAAA,aAAA;AAAA,UAC6BC,IAD7B,GAAA,OAAA,CAAA,IAAA;;AAAA,UAAA,QAAA,GAEGT,MAAAA,CAAO,KAAPA,KAAAA,EAFH,SAEGA,CAFH;AAAA,UAEpBL,EAFoB,GAAA,QAAA,CAAA,EAAA;AAAA,UAEhBC,EAFgB,GAAA,QAAA,CAAA,EAAA;AAAA,UAEZC,EAFY,GAAA,QAAA,CAAA,EAAA;AAAA,UAERC,EAFQ,GAAA,QAAA,CAAA,EAAA;AAAA,UAEJC,EAFI,GAAA,QAAA,CAAA,EAAA;;AAI5BK,MAAAA,GAAAA,CAAAA,SAAAA,GAAAA,WAAAA;AACAA,MAAAA,GAAAA,CAAAA,WAAAA,GAAkB,CAAA,GAAA,MAAA,CAAA,SAAA,EAAA,MAAA,EAAlBA,aAAkB,CAAlBA;AACAA,MAAAA,GAAAA,CAAAA,SAAAA,GAAgB,CAAA,GAAA,MAAA,CAAA,SAAA,EAAA,IAAA,EAAhBA,WAAgB,CAAhBA;AAEAA,MAAAA,GAAAA,CAAAA,SAAAA;AACAA,MAAAA,GAAAA,CAAAA,MAAAA,CAAAA,EAAAA,EAAeR,EAAAA,GAAfQ,EAAAA;AACAA,MAAAA,GAAAA,CAAAA,MAAAA,CAAAA,EAAAA,EAAeN,EAAAA,GAAfM,EAAAA;AACAA,MAAAA,GAAAA,CAAAA,MAAAA;AAEAA,MAAAA,GAAAA,CAAAA,SAAAA;AACAA,MAAAA,GAAAA,CAAAA,MAAAA,CAAAA,EAAAA,EAAeN,EAAAA,GAAfM,EAAAA;AACAA,MAAAA,GAAAA,CAAAA,MAAAA,CAAAA,EAAAA,EAAeR,EAAAA,GAAfQ,EAAAA;AACAA,MAAAA,GAAAA,CAAAA,MAAAA;AAEAA,MAAAA,GAAAA,CAAAA,SAAAA;AACAA,MAAAA,GAAAA,CAAAA,MAAAA,CAAAA,EAAAA,EAAeR,EAAAA,GAAfQ,EAAAA;AACAA,MAAAA,GAAAA,CAAAA,MAAAA,CAAAA,EAAAA,EAAeN,EAAAA,GAAfM,EAAAA;AACAA,MAAAA,GAAAA,CAAAA,MAAAA,CAAAA,EAAAA,EAAeN,EAAAA,GAAfM,EAAAA;AACAA,MAAAA,GAAAA,CAAAA,MAAAA,CAAAA,EAAAA,EAAeR,EAAAA,GAAfQ,EAAAA;AACAA,MAAAA,GAAAA,CAAAA,SAAAA;AACAA,MAAAA,GAAAA,CAAAA,IAAAA;AAEAA,MAAAA,GAAAA,CAAAA,SAAAA;AACAA,MAAAA,GAAAA,CAAAA,MAAAA,CAAAA,EAAAA,EAAAA,EAAAA;AACAA,MAAAA,GAAAA,CAAAA,MAAAA,CAAAA,EAAAA,EAAAA,EAAAA;AACAA,MAAAA,GAAAA,CAAAA,MAAAA;AACA;;;8BACSb,S,EAAW;AAAA,UAAA,OAAA,GAC8C,KAD9C,KAAA;AAAA,UACZc,MADY,GAAA,OAAA,CAAA,MAAA;AAAA,UACJC,WADI,GAAA,OAAA,CAAA,WAAA;AAAA,UACSC,WADT,GAAA,OAAA,CAAA,WAAA;AAAA,UACsBC,aADtB,GAAA,OAAA,CAAA,aAAA;AAAA,UACqCC,IADrC,GAAA,OAAA,CAAA,IAAA;;AAAA,UAAA,QAAA,GAEWT,MAAAA,CAAO,KAAPA,KAAAA,EAFX,SAEWA,CAFX;AAAA,UAEZL,EAFY,GAAA,QAAA,CAAA,EAAA;AAAA,UAERC,EAFQ,GAAA,QAAA,CAAA,EAAA;AAAA,UAEJC,EAFI,GAAA,QAAA,CAAA,EAAA;AAAA,UAEAC,EAFA,GAAA,QAAA,CAAA,EAAA;AAAA,UAEIC,EAFJ,GAAA,QAAA,CAAA,EAAA;;AAGpB,UAAMW,IAAAA,GAAO;AACZJ,QAAAA,WAAAA,EADY,WAAA;AAEZD,QAAAA,MAAAA,EAFY,MAAA;AAGZG,QAAAA,aAAAA,EAAAA;AAHY,OAAb;AAKA,UAAMJ,GAAAA,GAAM,CAAA,GAAA,OAAA,CAAZ,IAAY,GAAZ;AACAA,MAAAA,GAAAA,CAAAA,MAAAA,CAAAA,EAAAA,EAAeR,EAAAA,GAAfQ,EAAAA;AACAA,MAAAA,GAAAA,CAAAA,MAAAA,CAAAA,EAAAA,EAAeN,EAAAA,GAAfM,EAAAA;AACAA,MAAAA,GAAAA,CAAAA,MAAAA,CAAAA,EAAAA,EAAeN,EAAAA,GAAfM,EAAAA;AACAA,MAAAA,GAAAA,CAAAA,MAAAA,CAAAA,EAAAA,EAAeR,EAAAA,GAAfQ,EAAAA;AACAA,MAAAA,GAAAA,CAAAA,SAAAA;AACA,aACC,OAAA,CAAA,OAAA,CAAA,aAAA,CAAA,GAAA,EAAA,IAAA,EACC,OAAA,CAAA,OAAA,CAAA,aAAA,CAAA,MAAA,EAAA,QAAA,CAAA,EAAA,EAAA,IAAA,EAAA;AAEC,QAAA,EAAA,EAFD,EAAA;AAGC,QAAA,EAAA,EAAIR,EAAAA,GAHL,EAAA;AAIC,QAAA,EAAA,EAJD,EAAA;AAKC,QAAA,EAAA,EAAIE,EAAAA,GAAKC;AALV,OAAA,CAAA,CADD,EAQC,OAAA,CAAA,OAAA,CAAA,aAAA,CAAA,MAAA,EAAA,QAAA,CAAA,EAAA,EAAA,IAAA,EAAA;AAEC,QAAA,EAAA,EAFD,EAAA;AAGC,QAAA,EAAA,EAAIH,EAAAA,GAHL,EAAA;AAIC,QAAA,EAAA,EAJD,EAAA;AAKC,QAAA,EAAA,EAAIE,EAAAA,GAAKC;AALV,OAAA,CAAA,CARD,EAeC,OAAA,CAAA,OAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACC,QAAA,CAAA,EAAGK,GAAAA,CADJ,QACIA,EADJ;AAEC,QAAA,IAAA,EAFD,IAAA;AAGC,QAAA,WAAA,EAAaG;AAHd,OAAA,CAfD,EAoBC,OAAA,CAAA,OAAA,CAAA,aAAA,CAAA,MAAA,EAAA,QAAA,CAAA,EAAA,EAAA,IAAA,EAAA;AAEC,QAAA,EAAA,EAFD,EAAA;AAGC,QAAA,EAAA,EAHD,EAAA;AAIC,QAAA,EAAA,EAJD,EAAA;AAKC,QAAA,EAAA,EAAIT;AALL,OAAA,CAAA,CApBD,CADD;AA8BA;;;6BACQ;AAAA,UAAA,OAAA,GACqC,KADrC,KAAA;AAAA,UACAa,QADA,GAAA,OAAA,CAAA,QAAA;AAAA,UACUC,sBADV,GAAA,OAAA,CAAA,sBAAA;AAAA,UAAA,OAAA,GAEuB,KAFvB,KAAA;AAAA,UAEAnB,OAFA,GAAA,OAAA,CAAA,OAAA;AAAA,UAESoB,SAFT,GAAA,OAAA,CAAA,SAAA;AAIR,aAAO,OAAA,CAAA,OAAA,CAAA,aAAA,CAAA,uBAAA,CAAA,OAAA,EAAA;AACN,QAAA,OAAA,EAAS,KADH,OAAA;AAGN,QAAA,OAAA,EAAS,KAHH,SAAA;AAIN,QAAA,YAAA,EAAA,iBAAA,CAJM,cAAA;AAKN,QAAA,UAAA,EAAY,KALN,YAAA;AAON,QAAA,sBAAA,EAPM,sBAAA;AAQN,QAAA,QAAA,EARM,QAAA;AAUN,QAAA,OAAA,EAVM,OAAA;AAWN,QAAA,SAAA,EAXM,SAAA;AAaN,QAAA,MAAA,EAAQ,CAAA,WAAA,EAAA,YAAA,EAAA,KAAA,EAAA,MAAA;AAbF,OAAA,CAAP;AAeA;;;;;;AAGK,SAAA,aAAA,CAAA,KAAA,EAA8B;AACpC,SAAO,UAAA,SAAA,EAAoB;AAAA,QAAA,QAAA,GACPb,MAAAA,CAAAA,KAAAA,EADO,SACPA,CADO;AAAA,QAClBL,EADkB,GAAA,QAAA,CAAA,EAAA;AAAA,QACdC,EADc,GAAA,QAAA,CAAA,EAAA;;AAE1B,WAAO,CAAA,EAAA,EAAP,EAAO,CAAP;AAFD,GAAA;AAIA;;AAEM,SAAA,aAAA,CAAA,KAAA,EAA8B;AACpC,SAAO,UAAA,SAAA,EAAoB;AAAA,QAAA,QAAA,GACPI,MAAAA,CAAAA,KAAAA,EADO,SACPA,CADO;AAAA,QAClBH,EADkB,GAAA,QAAA,CAAA,EAAA;AAAA,QACdC,EADc,GAAA,QAAA,CAAA,EAAA;;AAE1B,WAAO,CAAA,EAAA,EAAP,EAAO,CAAP;AAFD,GAAA;AAIA;;AAGD,SAAA,MAAA,CAAA,KAAA,EAAA,SAAA,EAAkC;AAAA,MACzBkB,OADyB,GACEG,KADF,CAAA,OAAA;AAAA,MAChBF,OADgB,GACEE,KADF,CAAA,OAAA;AAAA,MACPD,IADO,GACEC,KADF,CAAA,IAAA;AAAA,MAGzBC,MAHyB,GAGqB7B,SAHrB,CAAA,MAAA;AAAA,MAGF8B,MAHE,GAGqB9B,SAHrB,CAAA,WAGqBA,CAHrB,MAAA;AAAA,MAGQ+B,QAHR,GAGqB/B,SAHrB,CAAA,QAAA;AAAA,MAIzBgC,SAJyB,GAIXhC,SAJW,CAAA,SAAA;AAMjC;;;;;;;;AANiC,MAAA,qBAAA,GAchB,CAAA,GAAA,MAAA,CAAA,qBAAA,EAAA,QAAA,EAAA,OAAA,EAdgB,SAchB,CAdgB;AAAA,MAczBiC,IAdyB,GAAA,qBAAA,CAAA,IAAA;;AAAA,MAAA,sBAAA,GAef,CAAA,GAAA,MAAA,CAAA,qBAAA,EAAA,QAAA,EAAA,OAAA,EAfe,SAef,CAfe;AAAA,MAezBC,KAfyB,GAAA,sBAAA,CAAA,KAAA;;AAiBjC,MAAMC,UAAAA,GAAaC,IAAAA,CAAAA,GAAAA,CAAAA,IAAAA,EAAnB,KAAmBA,CAAnB;AACA,MAAMC,QAAAA,GAAWD,IAAAA,CAAAA,GAAAA,CAAAA,IAAAA,EAAAA,KAAAA,IAAjB,CAAA;AAEA,MAAME,KAAAA,GAAQP,QAAAA,CAAAA,KAAAA,CAAAA,UAAAA,EAAd,QAAcA,CAAd;AAEA,MAAMQ,EAAAA,GAAK,KAAA,CAAA,GAAA,CAAU,UAAA,CAAA,EAAA;AAAA,WAAKP,SAAAA,CAAAA,CAAAA,CAAAA,CAAL,OAAKA,EAAL;AAArB,GAAW,CAAX;AACA,MAAMQ,EAAAA,GAAK,KAAA,CAAA,GAAA,CAAU,UAAA,CAAA,EAAA;AAAA,WAAKC,CAAAA,CAAL,KAAA;AAArB,GAAW,CAAX;AACA,MAAMC,CAAAA,GAAIJ,KAAAA,CAAV,MAAA;AAEA,MAAMK,OAAAA,GAAU,CAAA,GAAA,MAAA,CAAA,MAAA,IAAA,OAAA,CACN,UAAA,CAAA,EAAA,CAAA,EAAA;AAAA,WAAUC,CAAAA,GAAV,CAAA;AADV,GAAgB,CAAhB;AAGA,MAAMC,GAAAA,GAAMF,OAAAA,CAAAA,EAAAA,EAAZ,EAAYA,CAAZ;AACA,MAAMG,SAAAA,GAAY,EAAA,CAAA,GAAA,CAAO,UAAA,CAAA,EAAA;AAAA,WAAKV,IAAAA,CAAAA,GAAAA,CAAAA,CAAAA,EAAL,CAAKA,CAAL;AAAzB,GAAkB,CAAlB;AAEA,MAAMW,CAAAA,GAAI,CAACL,CAAAA,GAAI,CAAA,GAAA,QAAA,CAAA,GAAA,EAAJA,GAAI,CAAJA,GAAe,CAAA,GAAA,QAAA,CAAA,GAAA,EAAA,EAAA,IAAU,CAAA,GAAA,QAAA,CAAA,GAAA,EAA1B,EAA0B,CAA1B,KAAsCA,CAAAA,GAAI,CAAA,GAAA,QAAA,CAAA,GAAA,EAAJA,SAAI,CAAJA,GAAqBN,IAAAA,CAAAA,GAAAA,CAAS,CAAA,GAAA,QAAA,CAAA,GAAA,EAATA,EAAS,CAATA,EAArE,CAAqEA,CAA3D,CAAV;AACA,MAAMY,CAAAA,GAAI,CAAC,CAAA,GAAA,QAAA,CAAA,GAAA,EAAA,EAAA,IAAUD,CAAAA,GAAI,CAAA,GAAA,QAAA,CAAA,GAAA,EAAf,EAAe,CAAf,IAAV,CAAA;AAEA,MAAME,KAAAA,GAAQD,CAAAA,GAAID,CAAAA,GAAlB,OAAA;AACA,MAAMG,KAAAA,GAAQF,CAAAA,GAAID,CAAAA,GAAlB,OAAA;AAEA,MAAM3C,EAAAA,GAAKyB,MAAAA,CAAX,OAAWA,CAAX;AACA,MAAMxB,EAAAA,GAAKyB,MAAAA,CAAX,KAAWA,CAAX;AACA,MAAMxB,EAAAA,GAAKuB,MAAAA,CAAX,OAAWA,CAAX;AACA,MAAMtB,EAAAA,GAAKuB,MAAAA,CAAX,KAAWA,CAAX;AAEA,MAAMqB,MAAAA,GAAS,IAAA,KAAA,IAAA,GACZ,CAAA,GAAA,QAAA,CAAA,SAAA,EAAA,KAAA,EAAiB,UAAA,CAAA,EAAA;AAAA,WAAKV,CAAAA,CAAL,KAAA;AADL,GACZ,CADY,GAAf,CAAA;AAIA,MAAMjC,EAAAA,GAAKsB,MAAAA,CAAOmB,KAAAA,GAAPnB,MAAAA,CAAAA,GAAX,EAAA;AAEA,SAAO;AACN1B,IAAAA,EAAAA,EADM,EAAA;AACFC,IAAAA,EAAAA,EADE,EAAA;AACEC,IAAAA,EAAAA,EADF,EAAA;AACMC,IAAAA,EAAAA,EADN,EAAA;AACUC,IAAAA,EAAAA,EAAAA;AADV,GAAP;AAGA;;AAEDT,+BAAAA,CAAAA,SAAAA,GAA4C;AAC3C0B,EAAAA,OAAAA,EAAS,WAAA,CAAA,OAAA,CAAA,GAAA,CADkC,UAAA;AAE3CC,EAAAA,OAAAA,EAAS,WAAA,CAAA,OAAA,CAAA,GAAA,CAFkC,UAAA;AAI3CC,EAAAA,IAAAA,EAAM,WAAA,CAAA,OAAA,CAAA,KAAA,CAAgB,CAAA,IAAA,EACf;AADD,QAAgB,CAAhB,CAEG;AAFH,IAJqC,UAAA;AAS3CN,EAAAA,sBAAAA,EAAwB,WAAA,CAAA,OAAA,CATmB,MAAA;AAU3CP,EAAAA,MAAAA,EAAQ,WAAA,CAAA,OAAA,CAAA,MAAA,CAVmC,UAAA;AAW3CC,EAAAA,WAAAA,EAAa,WAAA,CAAA,OAAA,CAAA,MAAA,CAX8B,UAAA;AAY3CG,EAAAA,IAAAA,EAAM,WAAA,CAAA,OAAA,CAAA,MAAA,CAZqC,UAAA;AAa3CF,EAAAA,WAAAA,EAAa,WAAA,CAAA,OAAA,CAAA,MAAA,CAb8B,UAAA;AAc3CC,EAAAA,aAAAA,EAAe,WAAA,CAAA,OAAA,CAAA,MAAA,CAd4B,UAAA;AAgB3CmC,EAAAA,WAAAA,EAAa,WAAA,CAAA,OAAA,CAAA,IAAA,CAhB8B,UAAA;AAiB3CC,EAAAA,MAAAA,EAAQ,WAAA,CAAA,OAAA,CAAA,IAAA,CAjBmC,UAAA;AAkB3CC,EAAAA,cAAAA,EAAgB,WAAA,CAAA,OAAA,CAAA,IAAA,CAlB2B,UAAA;AAoB3CpD,EAAAA,OAAAA,EAAS,WAAA,CAAA,OAAA,CApBkC,IAAA;AAqB3CoB,EAAAA,SAAAA,EAAW,WAAA,CAAA,OAAA,CArBgC,IAAA;AAuB3CiC,EAAAA,gBAAAA,EAAkB,WAAA,CAAA,OAAA,CAvByB,MAAA;AAyB3CtD,EAAAA,SAAAA,EAAW,WAAA,CAAA,OAAA,CAAA,MAAA,CAzBgC,UAAA;AA0B3CmB,EAAAA,QAAAA,EAAU,WAAA,CAAA,OAAA,CAAA,IAAA,CAAeoC;AA1BkB,CAA5CzD;AA6BAA,+BAAAA,CAAAA,YAAAA,GAA+C;AAC9CqD,EAAAA,WAAAA,EAAAA,MAAAA,CAD8C,IAAA;AAE9CC,EAAAA,MAAAA,EAAAA,MAAAA,CAF8C,IAAA;AAG9CC,EAAAA,cAAAA,EAAAA,MAAAA,CAH8C,IAAA;AAK9C3B,EAAAA,IAAAA,EAL8C,IAAA;AAKlC;AAEZZ,EAAAA,WAAAA,EAP8C,CAAA;AAQ9Cd,EAAAA,SAAAA,EAR8C,CAAA;AAS9CmB,EAAAA,QAAAA,EAAU;AAToC,CAA/CrB;kBAYeA,+B","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { sum, deviation } from \"d3-array\";\nimport { path as d3Path } from \"d3-path\";\n\nimport GenericChartComponent from \"../../GenericChartComponent\";\nimport { getMouseCanvas } from \"../../GenericComponent\";\nimport { isHovering2 } from \"./StraightLine\";\n\nimport { isDefined, getClosestItemIndexes, noop, zipper, hexToRGBA } from \"../../utils\";\n\nclass LinearRegressionChannelWithArea extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.renderSVG = this.renderSVG.bind(this);\n\t\tthis.drawOnCanvas = this.drawOnCanvas.bind(this);\n\t\tthis.isHover = this.isHover.bind(this);\n\t}\n\tisHover(moreProps) {\n\t\tconst { tolerance, onHover } = this.props;\n\n\t\tif (isDefined(onHover)) {\n\t\t\tconst { mouseXY } = moreProps;\n\n\t\t\tconst { x1, y1, x2, y2, dy } = helper(this.props, moreProps);\n\t\t\tconst yDiffs = [-dy, 0, dy];\n\n\t\t\tconst hovering = yDiffs.reduce((result, diff) => result || isHovering2(\n\t\t\t\t[x1, y1 + diff], [x2, y2 + diff], mouseXY, tolerance\n\t\t\t), false);\n\t\t\treturn hovering;\n\t\t}\n\t\treturn false;\n\t}\n\tdrawOnCanvas(ctx, moreProps) {\n\t\tconst { stroke, strokeWidth, fillOpacity, strokeOpacity, fill } = this.props;\n\t\tconst { x1, y1, x2, y2, dy } = helper(this.props, moreProps);\n\n\t\tctx.lineWidth = strokeWidth;\n\t\tctx.strokeStyle = hexToRGBA(stroke, strokeOpacity);\n\t\tctx.fillStyle = hexToRGBA(fill, fillOpacity);\n\n\t\tctx.beginPath();\n\t\tctx.moveTo(x1, y1 - dy);\n\t\tctx.lineTo(x2, y2 - dy);\n\t\tctx.stroke();\n\n\t\tctx.beginPath();\n\t\tctx.moveTo(x2, y2 + dy);\n\t\tctx.lineTo(x1, y1 + dy);\n\t\tctx.stroke();\n\n\t\tctx.beginPath();\n\t\tctx.moveTo(x1, y1 - dy);\n\t\tctx.lineTo(x2, y2 - dy);\n\t\tctx.lineTo(x2, y2 + dy);\n\t\tctx.lineTo(x1, y1 + dy);\n\t\tctx.closePath();\n\t\tctx.fill();\n\n\t\tctx.beginPath();\n\t\tctx.moveTo(x2, y2);\n\t\tctx.lineTo(x1, y1);\n\t\tctx.stroke();\n\t}\n\trenderSVG(moreProps) {\n\t\tconst { stroke, strokeWidth, fillOpacity, strokeOpacity, fill } = this.props;\n\t\tconst { x1, y1, x2, y2, dy } = helper(this.props, moreProps);\n\t\tconst line = {\n\t\t\tstrokeWidth,\n\t\t\tstroke,\n\t\t\tstrokeOpacity,\n\t\t};\n\t\tconst ctx = d3Path();\n\t\tctx.moveTo(x1, y1 - dy);\n\t\tctx.lineTo(x2, y2 - dy);\n\t\tctx.lineTo(x2, y2 + dy);\n\t\tctx.lineTo(x1, y1 + dy);\n\t\tctx.closePath();\n\t\treturn (\n\t\t\t<g>\n\t\t\t\t<line\n\t\t\t\t\t{...line}\n\t\t\t\t\tx1={x1}\n\t\t\t\t\ty1={y1 - dy}\n\t\t\t\t\tx2={x2}\n\t\t\t\t\ty2={y2 - dy}\n\t\t\t\t/>\n\t\t\t\t<line\n\t\t\t\t\t{...line}\n\t\t\t\t\tx1={x1}\n\t\t\t\t\ty1={y1 + dy}\n\t\t\t\t\tx2={x2}\n\t\t\t\t\ty2={y2 + dy}\n\t\t\t\t/>\n\t\t\t\t<path\n\t\t\t\t\td={ctx.toString()}\n\t\t\t\t\tfill={fill}\n\t\t\t\t\tfillOpacity={fillOpacity}\n\t\t\t\t/>\n\t\t\t\t<line\n\t\t\t\t\t{...line}\n\t\t\t\t\tx1={x1}\n\t\t\t\t\ty1={y1}\n\t\t\t\t\tx2={x2}\n\t\t\t\t\ty2={y2}\n\t\t\t\t/>\n\t\t\t</g>\n\t\t);\n\t}\n\trender() {\n\t\tconst { selected, interactiveCursorClass } = this.props;\n\t\tconst { onHover, onUnHover } = this.props;\n\n\t\treturn <GenericChartComponent\n\t\t\tisHover={this.isHover}\n\n\t\t\tsvgDraw={this.renderSVG}\n\t\t\tcanvasToDraw={getMouseCanvas}\n\t\t\tcanvasDraw={this.drawOnCanvas}\n\n\t\t\tinteractiveCursorClass={interactiveCursorClass}\n\t\t\tselected={selected}\n\n\t\t\tonHover={onHover}\n\t\t\tonUnHover={onUnHover}\n\n\t\t\tdrawOn={[\"mousemove\", \"mouseleave\", \"pan\", \"drag\"]}\n\t\t/>;\n\t}\n}\n\nexport function edge1Provider(props) {\n\treturn function(moreProps) {\n\t\tconst { x1, y1 } = helper(props, moreProps);\n\t\treturn [x1, y1];\n\t};\n}\n\nexport function edge2Provider(props) {\n\treturn function(moreProps) {\n\t\tconst { x2, y2 } = helper(props, moreProps);\n\t\treturn [x2, y2];\n\t};\n}\n\n\nfunction helper(props, moreProps) {\n\tconst { x1Value, x2Value, type } = props;\n\n\tconst { xScale, chartConfig: { yScale }, fullData } = moreProps;\n\tconst { xAccessor } = moreProps;\n\n\t/*\n\thttp://www.metastock.com/Customer/Resources/TAAZ/?p=65\n\ty = a + bx\n\tn = length of array\n\tb = (n * sum(x*y) - sum(xs) * sum(ys)) / (n * sum(xSquareds) - (sum(xs) ^ 2))\n\ta = (sum of closes)\n\t*/\n\n\tconst { left } = getClosestItemIndexes(fullData, x1Value, xAccessor);\n\tconst { right } = getClosestItemIndexes(fullData, x2Value, xAccessor);\n\n\tconst startIndex = Math.min(left, right);\n\tconst endIndex = Math.max(left, right) + 1;\n\n\tconst array = fullData.slice(startIndex, endIndex);\n\n\tconst xs = array.map(d => xAccessor(d).valueOf());\n\tconst ys = array.map(d => d.close);\n\tconst n = array.length;\n\n\tconst combine = zipper()\n\t\t.combine((x, y) => x * y);\n\n\tconst xys = combine(xs, ys);\n\tconst xSquareds = xs.map(x => Math.pow(x, 2));\n\n\tconst b = (n * sum(xys) - sum(xs) * sum(ys)) / (n * sum(xSquareds) - Math.pow(sum(xs), 2));\n\tconst a = (sum(ys) - b * sum(xs)) / n;\n\n\tconst newy1 = a + b * x1Value;\n\tconst newy2 = a + b * x2Value;\n\n\tconst x1 = xScale(x1Value);\n\tconst y1 = yScale(newy1);\n\tconst x2 = xScale(x2Value);\n\tconst y2 = yScale(newy2);\n\n\tconst stdDev = type === \"SD\"\n\t\t? deviation(array, d => d.close)\n\t\t: 0;\n\n\tconst dy = yScale(newy1 - stdDev) - y1;\n\n\treturn {\n\t\tx1, y1, x2, y2, dy\n\t};\n}\n\nLinearRegressionChannelWithArea.propTypes = {\n\tx1Value: PropTypes.any.isRequired,\n\tx2Value: PropTypes.any.isRequired,\n\n\ttype: PropTypes.oneOf([\n\t\t\"SD\", // standard deviation channel\n\t\t\"Raff\", // Raff Regression Channel\n\t]).isRequired,\n\n\tinteractiveCursorClass: PropTypes.string,\n\tstroke: PropTypes.string.isRequired,\n\tstrokeWidth: PropTypes.number.isRequired,\n\tfill: PropTypes.string.isRequired,\n\tfillOpacity: PropTypes.number.isRequired,\n\tstrokeOpacity: PropTypes.number.isRequired,\n\n\tonDragStart: PropTypes.func.isRequired,\n\tonDrag: PropTypes.func.isRequired,\n\tonDragComplete: PropTypes.func.isRequired,\n\n\tonHover: PropTypes.func,\n\tonUnHover: PropTypes.func,\n\n\tdefaultClassName: PropTypes.string,\n\n\ttolerance: PropTypes.number.isRequired,\n\tselected: PropTypes.bool.isRequired,\n};\n\nLinearRegressionChannelWithArea.defaultProps = {\n\tonDragStart: noop,\n\tonDrag: noop,\n\tonDragComplete: noop,\n\n\ttype: \"SD\", // standard dev\n\n\tstrokeWidth: 1,\n\ttolerance: 4,\n\tselected: false,\n};\n\nexport default LinearRegressionChannelWithArea;"]},"metadata":{},"sourceType":"script"}