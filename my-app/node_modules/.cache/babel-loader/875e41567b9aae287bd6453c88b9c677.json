{"ast":null,"code":"import { required } from \"./accessors.js\";\nimport { Node, computeHeight } from \"./hierarchy/index.js\";\nvar preroot = {\n  depth: -1\n},\n    ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nexport default function () {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var nodes = Array.from(data),\n        n = nodes.length,\n        d,\n        i,\n        root,\n        parent,\n        node,\n        nodeId,\n        nodeKey,\n        nodeByKey = new Map();\n\n    for (i = 0; i < n; ++i) {\n      d = nodes[i], node = nodes[i] = new Node(d);\n\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = node.id = nodeId;\n        nodeByKey.set(nodeKey, nodeByKey.has(nodeKey) ? ambiguous : node);\n      }\n\n      if ((nodeId = parentId(d, i, data)) != null && (nodeId += \"\")) {\n        node.parent = nodeId;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i];\n\n      if (nodeId = node.parent) {\n        parent = nodeByKey.get(nodeId);\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);else parent.children = [node];\n        node.parent = parent;\n      } else {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function (node) {\n      node.depth = node.parent.depth + 1;\n      --n;\n    }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n    return root;\n  }\n\n  stratify.id = function (x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function (x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n}","map":{"version":3,"names":["required","Node","computeHeight","preroot","depth","ambiguous","defaultId","d","id","defaultParentId","parentId","stratify","data","nodes","Array","from","n","length","i","root","parent","node","nodeId","nodeKey","nodeByKey","Map","set","has","get","Error","children","push","eachBefore","x","arguments"],"sources":["/home/chenak/QbitesReact/my-app/node_modules/d3-hierarchy/src/stratify.js"],"sourcesContent":["import {required} from \"./accessors.js\";\nimport {Node, computeHeight} from \"./hierarchy/index.js\";\n\nvar preroot = {depth: -1},\n    ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nexport default function() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var nodes = Array.from(data),\n        n = nodes.length,\n        d,\n        i,\n        root,\n        parent,\n        node,\n        nodeId,\n        nodeKey,\n        nodeByKey = new Map;\n\n    for (i = 0; i < n; ++i) {\n      d = nodes[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = node.id = nodeId;\n        nodeByKey.set(nodeKey, nodeByKey.has(nodeKey) ? ambiguous : node);\n      }\n      if ((nodeId = parentId(d, i, data)) != null && (nodeId += \"\")) {\n        node.parent = nodeId;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i];\n      if (nodeId = node.parent) {\n        parent = nodeByKey.get(nodeId);\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      } else {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}