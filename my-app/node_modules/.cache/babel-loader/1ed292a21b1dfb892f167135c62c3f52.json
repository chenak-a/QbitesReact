{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nexports.getNewXY = getNewXY;\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _d3Array = require(\"d3-array\");\n\nvar _utils = require(\"../../utils\");\n\nvar _utils2 = require(\"../utils\");\n\nvar _ChartDataUtil = require(\"../../utils/ChartDataUtil\");\n\nvar _StraightLine = require(\"../components/StraightLine\");\n\nvar _StraightLine2 = _interopRequireDefault(_StraightLine);\n\nvar _ClickableCircle = require(\"../components/ClickableCircle\");\n\nvar _ClickableCircle2 = _interopRequireDefault(_ClickableCircle);\n\nvar _HoverTextNearMouse = require(\"../components/HoverTextNearMouse\");\n\nvar _HoverTextNearMouse2 = _interopRequireDefault(_HoverTextNearMouse);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar EachTrendLine = function (_Component) {\n  _inherits(EachTrendLine, _Component);\n\n  function EachTrendLine(props) {\n    _classCallCheck(this, EachTrendLine);\n\n    var _this = _possibleConstructorReturn(this, (EachTrendLine.__proto__ || Object.getPrototypeOf(EachTrendLine)).call(this, props));\n\n    _this.handleEdge1Drag = _this.handleEdge1Drag.bind(_this);\n    _this.handleEdge2Drag = _this.handleEdge2Drag.bind(_this);\n    _this.handleLineDragStart = _this.handleLineDragStart.bind(_this);\n    _this.handleLineDrag = _this.handleLineDrag.bind(_this);\n    _this.handleEdge1DragStart = _this.handleEdge1DragStart.bind(_this);\n    _this.handleEdge2DragStart = _this.handleEdge2DragStart.bind(_this);\n    _this.handleDragComplete = _this.handleDragComplete.bind(_this);\n    _this.handleHover = _this.handleHover.bind(_this);\n    _this.isHover = _utils2.isHover.bind(_this);\n    _this.saveNodeType = _utils2.saveNodeType.bind(_this);\n    _this.nodes = {};\n    _this.state = {\n      hover: false\n    };\n    return _this;\n  }\n\n  _createClass(EachTrendLine, [{\n    key: \"handleLineDragStart\",\n    value: function handleLineDragStart() {\n      var _props = this.props,\n          x1Value = _props.x1Value,\n          y1Value = _props.y1Value,\n          x2Value = _props.x2Value,\n          y2Value = _props.y2Value;\n      this.dragStart = {\n        x1Value: x1Value,\n        y1Value: y1Value,\n        x2Value: x2Value,\n        y2Value: y2Value\n      };\n    }\n  }, {\n    key: \"handleLineDrag\",\n    value: function handleLineDrag(moreProps) {\n      var _props2 = this.props,\n          index = _props2.index,\n          onDrag = _props2.onDrag;\n      var _dragStart = this.dragStart,\n          x1Value = _dragStart.x1Value,\n          y1Value = _dragStart.y1Value,\n          x2Value = _dragStart.x2Value,\n          y2Value = _dragStart.y2Value;\n      var xScale = moreProps.xScale,\n          yScale = moreProps.chartConfig.yScale,\n          xAccessor = moreProps.xAccessor,\n          fullData = moreProps.fullData;\n      var startPos = moreProps.startPos,\n          mouseXY = moreProps.mouseXY;\n      var x1 = xScale(x1Value);\n      var y1 = yScale(y1Value);\n      var x2 = xScale(x2Value);\n      var y2 = yScale(y2Value);\n      var dx = startPos[0] - mouseXY[0];\n      var dy = startPos[1] - mouseXY[1];\n      var newX1Value = (0, _ChartDataUtil.getXValue)(xScale, xAccessor, [x1 - dx, y1 - dy], fullData);\n      var newY1Value = yScale.invert(y1 - dy);\n      var newX2Value = (0, _ChartDataUtil.getXValue)(xScale, xAccessor, [x2 - dx, y2 - dy], fullData);\n      var newY2Value = yScale.invert(y2 - dy);\n      onDrag(index, {\n        x1Value: newX1Value,\n        y1Value: newY1Value,\n        x2Value: newX2Value,\n        y2Value: newY2Value\n      });\n    }\n  }, {\n    key: \"handleEdge1DragStart\",\n    value: function handleEdge1DragStart() {\n      this.setState({\n        anchor: \"edge2\"\n      });\n    }\n  }, {\n    key: \"handleEdge2DragStart\",\n    value: function handleEdge2DragStart() {\n      this.setState({\n        anchor: \"edge1\"\n      });\n    }\n  }, {\n    key: \"handleDragComplete\",\n    value: function handleDragComplete() {\n      var _props3;\n\n      this.setState({\n        anchor: undefined\n      });\n\n      (_props3 = this.props).onDragComplete.apply(_props3, arguments);\n    }\n  }, {\n    key: \"handleEdge1Drag\",\n    value: function handleEdge1Drag(moreProps) {\n      var _props4 = this.props,\n          index = _props4.index,\n          onDrag = _props4.onDrag;\n      var _props5 = this.props,\n          x2Value = _props5.x2Value,\n          y2Value = _props5.y2Value;\n\n      var _getNewXY = getNewXY(moreProps),\n          _getNewXY2 = _slicedToArray(_getNewXY, 2),\n          x1Value = _getNewXY2[0],\n          y1Value = _getNewXY2[1];\n\n      onDrag(index, {\n        x1Value: x1Value,\n        y1Value: y1Value,\n        x2Value: x2Value,\n        y2Value: y2Value\n      });\n    }\n  }, {\n    key: \"handleEdge2Drag\",\n    value: function handleEdge2Drag(moreProps) {\n      var _props6 = this.props,\n          index = _props6.index,\n          onDrag = _props6.onDrag;\n      var _props7 = this.props,\n          x1Value = _props7.x1Value,\n          y1Value = _props7.y1Value;\n\n      var _getNewXY3 = getNewXY(moreProps),\n          _getNewXY4 = _slicedToArray(_getNewXY3, 2),\n          x2Value = _getNewXY4[0],\n          y2Value = _getNewXY4[1];\n\n      onDrag(index, {\n        x1Value: x1Value,\n        y1Value: y1Value,\n        x2Value: x2Value,\n        y2Value: y2Value\n      });\n    }\n  }, {\n    key: \"handleHover\",\n    value: function handleHover(moreProps) {\n      if (this.state.hover !== moreProps.hovering) {\n        this.setState({\n          hover: moreProps.hovering\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _props8 = this.props,\n          x1Value = _props8.x1Value,\n          y1Value = _props8.y1Value,\n          x2Value = _props8.x2Value,\n          y2Value = _props8.y2Value,\n          type = _props8.type,\n          stroke = _props8.stroke,\n          strokeWidth = _props8.strokeWidth,\n          strokeOpacity = _props8.strokeOpacity,\n          strokeDasharray = _props8.strokeDasharray,\n          r = _props8.r,\n          edgeStrokeWidth = _props8.edgeStrokeWidth,\n          edgeFill = _props8.edgeFill,\n          edgeStroke = _props8.edgeStroke,\n          edgeInteractiveCursor = _props8.edgeInteractiveCursor,\n          lineInteractiveCursor = _props8.lineInteractiveCursor,\n          hoverText = _props8.hoverText,\n          selected = _props8.selected,\n          onDragComplete = _props8.onDragComplete;\n\n      var hoverTextEnabled = hoverText.enable,\n          hoverTextSelected = hoverText.selectedText,\n          hoverTextUnselected = hoverText.text,\n          restHoverTextProps = _objectWithoutProperties(hoverText, [\"enable\", \"selectedText\", \"text\"]);\n\n      var _state = this.state,\n          hover = _state.hover,\n          anchor = _state.anchor;\n      return _react2.default.createElement(\"g\", null, _react2.default.createElement(_StraightLine2.default, {\n        ref: this.saveNodeType(\"line\"),\n        selected: selected || hover,\n        onHover: this.handleHover,\n        onUnHover: this.handleHover,\n        x1Value: x1Value,\n        y1Value: y1Value,\n        x2Value: x2Value,\n        y2Value: y2Value,\n        type: type,\n        stroke: stroke,\n        strokeWidth: hover || selected ? strokeWidth + 1 : strokeWidth,\n        strokeOpacity: strokeOpacity,\n        strokeDasharray: strokeDasharray,\n        interactiveCursorClass: lineInteractiveCursor,\n        onDragStart: this.handleLineDragStart,\n        onDrag: this.handleLineDrag,\n        onDragComplete: onDragComplete\n      }), _react2.default.createElement(_ClickableCircle2.default, {\n        ref: this.saveNodeType(\"edge1\"),\n        show: selected || hover,\n        cx: x1Value,\n        cy: y1Value,\n        r: r,\n        fill: edgeFill,\n        stroke: anchor === \"edge1\" ? stroke : edgeStroke,\n        strokeWidth: edgeStrokeWidth,\n        strokeOpacity: 1,\n        interactiveCursorClass: edgeInteractiveCursor,\n        onDragStart: this.handleEdge1DragStart,\n        onDrag: this.handleEdge1Drag,\n        onDragComplete: this.handleDragComplete\n      }), _react2.default.createElement(_ClickableCircle2.default, {\n        ref: this.saveNodeType(\"edge2\"),\n        show: selected || hover,\n        cx: x2Value,\n        cy: y2Value,\n        r: r,\n        fill: edgeFill,\n        stroke: anchor === \"edge2\" ? stroke : edgeStroke,\n        strokeWidth: edgeStrokeWidth,\n        strokeOpacity: 1,\n        interactiveCursorClass: edgeInteractiveCursor,\n        onDragStart: this.handleEdge2DragStart,\n        onDrag: this.handleEdge2Drag,\n        onDragComplete: this.handleDragComplete\n      }), _react2.default.createElement(_HoverTextNearMouse2.default, _extends({\n        show: hoverTextEnabled && hover\n      }, restHoverTextProps, {\n        text: selected ? hoverTextSelected : hoverTextUnselected\n      })));\n    }\n  }]);\n\n  return EachTrendLine;\n}(_react.Component);\n\nfunction getNewXY(moreProps) {\n  var xScale = moreProps.xScale,\n      yScale = moreProps.chartConfig.yScale,\n      xAccessor = moreProps.xAccessor,\n      plotData = moreProps.plotData,\n      mouseXY = moreProps.mouseXY;\n  var mouseY = mouseXY[1];\n  var x = (0, _ChartDataUtil.getXValue)(xScale, xAccessor, mouseXY, plotData);\n\n  var _yScale$domain$slice$ = yScale.domain().slice().sort(_d3Array.ascending),\n      _yScale$domain$slice$2 = _slicedToArray(_yScale$domain$slice$, 2),\n      small = _yScale$domain$slice$2[0],\n      big = _yScale$domain$slice$2[1];\n\n  var y = yScale.invert(mouseY);\n  var newY = Math.min(Math.max(y, small), big);\n  return [x, newY];\n}\n\nEachTrendLine.propTypes = {\n  x1Value: _propTypes2.default.any.isRequired,\n  x2Value: _propTypes2.default.any.isRequired,\n  y1Value: _propTypes2.default.any.isRequired,\n  y2Value: _propTypes2.default.any.isRequired,\n  index: _propTypes2.default.number,\n  type: _propTypes2.default.oneOf([\"XLINE\", // extends from -Infinity to +Infinity\n  \"RAY\", // extends to +/-Infinity in one direction\n  \"LINE\"] // extends between the set bounds\n  ).isRequired,\n  onDrag: _propTypes2.default.func.isRequired,\n  onEdge1Drag: _propTypes2.default.func.isRequired,\n  onEdge2Drag: _propTypes2.default.func.isRequired,\n  onDragComplete: _propTypes2.default.func.isRequired,\n  onSelect: _propTypes2.default.func.isRequired,\n  onUnSelect: _propTypes2.default.func.isRequired,\n  r: _propTypes2.default.number.isRequired,\n  strokeOpacity: _propTypes2.default.number.isRequired,\n  defaultClassName: _propTypes2.default.string,\n  selected: _propTypes2.default.bool,\n  stroke: _propTypes2.default.string.isRequired,\n  strokeWidth: _propTypes2.default.number.isRequired,\n  strokeDasharray: _propTypes2.default.oneOf(_utils.strokeDashTypes),\n  edgeStrokeWidth: _propTypes2.default.number.isRequired,\n  edgeStroke: _propTypes2.default.string.isRequired,\n  edgeInteractiveCursor: _propTypes2.default.string.isRequired,\n  lineInteractiveCursor: _propTypes2.default.string.isRequired,\n  edgeFill: _propTypes2.default.string.isRequired,\n  hoverText: _propTypes2.default.object.isRequired\n};\nEachTrendLine.defaultProps = {\n  onDrag: _utils.noop,\n  onEdge1Drag: _utils.noop,\n  onEdge2Drag: _utils.noop,\n  onDragComplete: _utils.noop,\n  onSelect: _utils.noop,\n  onUnSelect: _utils.noop,\n  selected: false,\n  edgeStroke: \"#000000\",\n  edgeFill: \"#FFFFFF\",\n  edgeStrokeWidth: 2,\n  r: 5,\n  strokeWidth: 1,\n  strokeOpacity: 1,\n  strokeDasharray: \"Solid\",\n  hoverText: {\n    enable: false\n  }\n};\nexports.default = EachTrendLine;","map":{"version":3,"sources":["../../../../src/lib/interactive/wrapper/EachTrendLine.js"],"names":["EachTrendLine","hover","x1Value","y1Value","x2Value","y2Value","moreProps","index","onDrag","xScale","yScale","xAccessor","fullData","startPos","mouseXY","x1","y1","x2","y2","dx","dy","newX1Value","newY1Value","newX2Value","newY2Value","anchor","undefined","getNewXY","hovering","type","stroke","strokeWidth","strokeOpacity","strokeDasharray","r","edgeStrokeWidth","edgeFill","edgeStroke","edgeInteractiveCursor","lineInteractiveCursor","hoverText","selected","onDragComplete","hoverTextEnabled","hoverTextSelected","hoverTextUnselected","restHoverTextProps","plotData","mouseY","x","small","big","y","newY","Math","onEdge1Drag","onEdge2Drag","onSelect","onUnSelect","defaultClassName","isRequired","enable"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { ascending as d3Ascending } from \"d3-array\";\nimport { noop, strokeDashTypes } from \"../../utils\";\nimport { saveNodeType, isHover } from \"../utils\";\nimport { getXValue } from \"../../utils/ChartDataUtil\";\n\nimport StraightLine from \"../components/StraightLine\";\nimport ClickableCircle from \"../components/ClickableCircle\";\nimport HoverTextNearMouse from \"../components/HoverTextNearMouse\";\n\nclass EachTrendLine extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.handleEdge1Drag = this.handleEdge1Drag.bind(this);\n\t\tthis.handleEdge2Drag = this.handleEdge2Drag.bind(this);\n\t\tthis.handleLineDragStart = this.handleLineDragStart.bind(this);\n\t\tthis.handleLineDrag = this.handleLineDrag.bind(this);\n\n\t\tthis.handleEdge1DragStart = this.handleEdge1DragStart.bind(this);\n\t\tthis.handleEdge2DragStart = this.handleEdge2DragStart.bind(this);\n\n\t\tthis.handleDragComplete = this.handleDragComplete.bind(this);\n\n\t\tthis.handleHover = this.handleHover.bind(this);\n\n\t\tthis.isHover = isHover.bind(this);\n\t\tthis.saveNodeType = saveNodeType.bind(this);\n\t\tthis.nodes = {};\n\n\t\tthis.state = {\n\t\t\thover: false,\n\t\t};\n\t}\n\thandleLineDragStart() {\n\t\tconst {\n\t\t\tx1Value, y1Value,\n\t\t\tx2Value, y2Value,\n\t\t} = this.props;\n\n\t\tthis.dragStart = {\n\t\t\tx1Value, y1Value,\n\t\t\tx2Value, y2Value,\n\t\t};\n\t}\n\thandleLineDrag(moreProps) {\n\t\tconst { index, onDrag } = this.props;\n\n\t\tconst {\n\t\t\tx1Value, y1Value,\n\t\t\tx2Value, y2Value,\n\t\t} = this.dragStart;\n\n\t\tconst { xScale, chartConfig: { yScale }, xAccessor, fullData } = moreProps;\n\t\tconst { startPos, mouseXY } = moreProps;\n\n\t\tconst x1 = xScale(x1Value);\n\t\tconst y1 = yScale(y1Value);\n\t\tconst x2 = xScale(x2Value);\n\t\tconst y2 = yScale(y2Value);\n\n\t\tconst dx = startPos[0] - mouseXY[0];\n\t\tconst dy = startPos[1] - mouseXY[1];\n\n\t\tconst newX1Value = getXValue(xScale, xAccessor, [x1 - dx, y1 - dy], fullData);\n\t\tconst newY1Value = yScale.invert(y1 - dy);\n\t\tconst newX2Value = getXValue(xScale, xAccessor, [x2 - dx, y2 - dy], fullData);\n\t\tconst newY2Value = yScale.invert(y2 - dy);\n\n\t\tonDrag(index, {\n\t\t\tx1Value: newX1Value,\n\t\t\ty1Value: newY1Value,\n\t\t\tx2Value: newX2Value,\n\t\t\ty2Value: newY2Value,\n\t\t});\n\t}\n\thandleEdge1DragStart() {\n\t\tthis.setState({\n\t\t\tanchor: \"edge2\"\n\t\t});\n\t}\n\thandleEdge2DragStart() {\n\t\tthis.setState({\n\t\t\tanchor: \"edge1\"\n\t\t});\n\t}\n\thandleDragComplete(...rest) {\n\t\tthis.setState({\n\t\t\tanchor: undefined\n\t\t});\n\t\tthis.props.onDragComplete(...rest);\n\t}\n\thandleEdge1Drag(moreProps) {\n\t\tconst { index, onDrag } = this.props;\n\t\tconst {\n\t\t\tx2Value, y2Value,\n\t\t} = this.props;\n\n\t\tconst [x1Value, y1Value] = getNewXY(moreProps);\n\n\t\tonDrag(index, {\n\t\t\tx1Value,\n\t\t\ty1Value,\n\t\t\tx2Value,\n\t\t\ty2Value,\n\t\t});\n\t}\n\thandleEdge2Drag(moreProps) {\n\t\tconst { index, onDrag } = this.props;\n\t\tconst {\n\t\t\tx1Value, y1Value,\n\t\t} = this.props;\n\n\t\tconst [x2Value, y2Value] = getNewXY(moreProps);\n\n\t\tonDrag(index, {\n\t\t\tx1Value,\n\t\t\ty1Value,\n\t\t\tx2Value,\n\t\t\ty2Value,\n\t\t});\n\t}\n\thandleHover(moreProps) {\n\t\tif (this.state.hover !== moreProps.hovering) {\n\t\t\tthis.setState({\n\t\t\t\thover: moreProps.hovering\n\t\t\t});\n\t\t}\n\t}\n\trender() {\n\t\tconst {\n\t\t\tx1Value,\n\t\t\ty1Value,\n\t\t\tx2Value,\n\t\t\ty2Value,\n\t\t\ttype,\n\t\t\tstroke,\n\t\t\tstrokeWidth,\n\t\t\tstrokeOpacity,\n\t\t\tstrokeDasharray,\n\t\t\tr,\n\t\t\tedgeStrokeWidth,\n\t\t\tedgeFill,\n\t\t\tedgeStroke,\n\t\t\tedgeInteractiveCursor,\n\t\t\tlineInteractiveCursor,\n\t\t\thoverText,\n\t\t\tselected,\n\n\t\t\tonDragComplete,\n\t\t} = this.props;\n\n\t\tconst {\n\t\t\tenable: hoverTextEnabled,\n\t\t\tselectedText: hoverTextSelected,\n\t\t\ttext: hoverTextUnselected,\n\t\t\t...restHoverTextProps\n\t\t} = hoverText;\n\n\t\tconst { hover, anchor } = this.state;\n\n\t\treturn <g>\n\t\t\t<StraightLine\n\t\t\t\tref={this.saveNodeType(\"line\")}\n\t\t\t\tselected={selected || hover}\n\t\t\t\tonHover={this.handleHover}\n\t\t\t\tonUnHover={this.handleHover}\n\t\t\t\tx1Value={x1Value}\n\t\t\t\ty1Value={y1Value}\n\t\t\t\tx2Value={x2Value}\n\t\t\t\ty2Value={y2Value}\n\t\t\t\ttype={type}\n\t\t\t\tstroke={stroke}\n\t\t\t\tstrokeWidth={(hover || selected) ? strokeWidth + 1 : strokeWidth}\n\t\t\t\tstrokeOpacity={strokeOpacity}\n\t\t\t\tstrokeDasharray={strokeDasharray}\n\t\t\t\tinteractiveCursorClass={lineInteractiveCursor}\n\t\t\t\tonDragStart={this.handleLineDragStart}\n\t\t\t\tonDrag={this.handleLineDrag}\n\t\t\t\tonDragComplete={onDragComplete} />\n\t\t\t<ClickableCircle\n\t\t\t\tref={this.saveNodeType(\"edge1\")}\n\t\t\t\tshow={selected || hover}\n\t\t\t\tcx={x1Value}\n\t\t\t\tcy={y1Value}\n\t\t\t\tr={r}\n\t\t\t\tfill={edgeFill}\n\t\t\t\tstroke={anchor === \"edge1\" ? stroke : edgeStroke}\n\t\t\t\tstrokeWidth={edgeStrokeWidth}\n\t\t\t\tstrokeOpacity={1}\n\t\t\t\tinteractiveCursorClass={edgeInteractiveCursor}\n\t\t\t\tonDragStart={this.handleEdge1DragStart}\n\t\t\t\tonDrag={this.handleEdge1Drag}\n\t\t\t\tonDragComplete={this.handleDragComplete} />\n\t\t\t<ClickableCircle\n\t\t\t\tref={this.saveNodeType(\"edge2\")}\n\t\t\t\tshow={selected || hover}\n\t\t\t\tcx={x2Value}\n\t\t\t\tcy={y2Value}\n\t\t\t\tr={r}\n\t\t\t\tfill={edgeFill}\n\t\t\t\tstroke={anchor === \"edge2\" ? stroke : edgeStroke}\n\t\t\t\tstrokeWidth={edgeStrokeWidth}\n\t\t\t\tstrokeOpacity={1}\n\t\t\t\tinteractiveCursorClass={edgeInteractiveCursor}\n\t\t\t\tonDragStart={this.handleEdge2DragStart}\n\t\t\t\tonDrag={this.handleEdge2Drag}\n\t\t\t\tonDragComplete={this.handleDragComplete} />\n\t\t\t<HoverTextNearMouse\n\t\t\t\tshow={hoverTextEnabled && hover}\n\t\t\t\t{...restHoverTextProps}\n\t\t\t\ttext={selected ? hoverTextSelected : hoverTextUnselected}\n\t\t\t/>\n\t\t</g>;\n\t}\n}\n\nexport function getNewXY(moreProps) {\n\tconst { xScale, chartConfig: { yScale }, xAccessor, plotData, mouseXY } = moreProps;\n\tconst mouseY = mouseXY[1];\n\n\tconst x = getXValue(xScale, xAccessor, mouseXY, plotData);\n\n\tconst [small, big] = yScale.domain().slice().sort(d3Ascending);\n\tconst y = yScale.invert(mouseY);\n\tconst newY = Math.min(Math.max(y, small), big);\n\n\treturn [x, newY];\n}\n\nEachTrendLine.propTypes = {\n\tx1Value: PropTypes.any.isRequired,\n\tx2Value: PropTypes.any.isRequired,\n\ty1Value: PropTypes.any.isRequired,\n\ty2Value: PropTypes.any.isRequired,\n\n\tindex: PropTypes.number,\n\n\ttype: PropTypes.oneOf([\n\t\t\"XLINE\", // extends from -Infinity to +Infinity\n\t\t\"RAY\", // extends to +/-Infinity in one direction\n\t\t\"LINE\", // extends between the set bounds\n\t]).isRequired,\n\n\tonDrag: PropTypes.func.isRequired,\n\tonEdge1Drag: PropTypes.func.isRequired,\n\tonEdge2Drag: PropTypes.func.isRequired,\n\tonDragComplete: PropTypes.func.isRequired,\n\tonSelect: PropTypes.func.isRequired,\n\tonUnSelect: PropTypes.func.isRequired,\n\n\tr: PropTypes.number.isRequired,\n\tstrokeOpacity: PropTypes.number.isRequired,\n\tdefaultClassName: PropTypes.string,\n\n\tselected: PropTypes.bool,\n\n\tstroke: PropTypes.string.isRequired,\n\tstrokeWidth: PropTypes.number.isRequired,\n\tstrokeDasharray: PropTypes.oneOf(strokeDashTypes),\n\n\tedgeStrokeWidth: PropTypes.number.isRequired,\n\tedgeStroke: PropTypes.string.isRequired,\n\tedgeInteractiveCursor: PropTypes.string.isRequired,\n\tlineInteractiveCursor: PropTypes.string.isRequired,\n\tedgeFill: PropTypes.string.isRequired,\n\thoverText: PropTypes.object.isRequired,\n};\n\nEachTrendLine.defaultProps = {\n\tonDrag: noop,\n\tonEdge1Drag: noop,\n\tonEdge2Drag: noop,\n\tonDragComplete: noop,\n\tonSelect: noop,\n\tonUnSelect: noop,\n\n\tselected: false,\n\n\tedgeStroke: \"#000000\",\n\tedgeFill: \"#FFFFFF\",\n\tedgeStrokeWidth: 2,\n\tr: 5,\n\tstrokeWidth: 1,\n\tstrokeOpacity: 1,\n\tstrokeDasharray: \"Solid\",\n\thoverText: {\n\t\tenable: false,\n\t}\n};\n\nexport default EachTrendLine;"]},"metadata":{},"sourceType":"script"}