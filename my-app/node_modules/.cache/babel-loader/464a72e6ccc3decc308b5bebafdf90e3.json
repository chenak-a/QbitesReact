{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _GenericChartComponent = require(\"../../GenericChartComponent\");\n\nvar _GenericChartComponent2 = _interopRequireDefault(_GenericChartComponent);\n\nvar _GenericComponent = require(\"../../GenericComponent\");\n\nvar _StraightLine = require(\"./StraightLine\");\n\nvar _utils = require(\"../../utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ClickableShape = function (_Component) {\n  _inherits(ClickableShape, _Component);\n\n  function ClickableShape(props) {\n    _classCallCheck(this, ClickableShape);\n\n    var _this = _possibleConstructorReturn(this, (ClickableShape.__proto__ || Object.getPrototypeOf(ClickableShape)).call(this, props));\n\n    _this.saveNode = _this.saveNode.bind(_this);\n    _this.drawOnCanvas = _this.drawOnCanvas.bind(_this);\n    _this.isHover = _this.isHover.bind(_this);\n    return _this;\n  }\n\n  _createClass(ClickableShape, [{\n    key: \"saveNode\",\n    value: function saveNode(node) {\n      this.node = node;\n    }\n  }, {\n    key: \"isHover\",\n    value: function isHover(moreProps) {\n      var mouseXY = moreProps.mouseXY;\n\n      if (this.closeIcon) {\n        var textBox = this.props.textBox;\n        var _closeIcon = this.closeIcon,\n            x = _closeIcon.x,\n            y = _closeIcon.y;\n        var halfWidth = textBox.closeIcon.width / 2;\n        var start1 = [x - halfWidth, y - halfWidth];\n        var end1 = [x + halfWidth, y + halfWidth];\n        var start2 = [x - halfWidth, y + halfWidth];\n        var end2 = [x + halfWidth, y - halfWidth];\n\n        if ((0, _StraightLine.isHovering2)(start1, end1, mouseXY, 3) || (0, _StraightLine.isHovering2)(start2, end2, mouseXY, 3)) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n  }, {\n    key: \"drawOnCanvas\",\n    value: function drawOnCanvas(ctx, moreProps) {\n      var _props = this.props,\n          stroke = _props.stroke,\n          strokeWidth = _props.strokeWidth,\n          strokeOpacity = _props.strokeOpacity,\n          hovering = _props.hovering,\n          textBox = _props.textBox;\n\n      var _helper = helper(this.props, moreProps, ctx),\n          _helper2 = _slicedToArray(_helper, 2),\n          x = _helper2[0],\n          y = _helper2[1];\n\n      this.closeIcon = {\n        x: x,\n        y: y\n      };\n      ctx.beginPath();\n      ctx.lineWidth = hovering ? strokeWidth + 1 : strokeWidth;\n      ctx.strokeStyle = (0, _utils.hexToRGBA)(stroke, strokeOpacity);\n      var halfWidth = textBox.closeIcon.width / 2;\n      ctx.moveTo(x - halfWidth, y - halfWidth);\n      ctx.lineTo(x + halfWidth, y + halfWidth);\n      ctx.moveTo(x - halfWidth, y + halfWidth);\n      ctx.lineTo(x + halfWidth, y - halfWidth);\n      ctx.stroke();\n    }\n  }, {\n    key: \"renderSVG\",\n    value: function renderSVG() {\n      throw new Error(\"svg not implemented\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var interactiveCursorClass = this.props.interactiveCursorClass;\n      var show = this.props.show;\n      var _props2 = this.props,\n          onHover = _props2.onHover,\n          onUnHover = _props2.onUnHover,\n          onClick = _props2.onClick;\n      return show ? _react2.default.createElement(_GenericChartComponent2.default, {\n        ref: this.saveNode,\n        interactiveCursorClass: interactiveCursorClass,\n        isHover: this.isHover,\n        onClickWhenHover: onClick,\n        svgDraw: this.renderSVG,\n        canvasDraw: this.drawOnCanvas,\n        canvasToDraw: _GenericComponent.getMouseCanvas,\n        onHover: onHover,\n        onUnHover: onUnHover,\n        drawOn: [\"pan\", \"mousemove\", \"drag\"]\n      }) : null;\n    }\n  }]);\n\n  return ClickableShape;\n}(_react.Component);\n\nfunction helper(props, moreProps, ctx) {\n  var yValue = props.yValue,\n      text = props.text,\n      textBox = props.textBox;\n  var fontFamily = props.fontFamily,\n      fontStyle = props.fontStyle,\n      fontWeight = props.fontWeight,\n      fontSize = props.fontSize;\n  ctx.font = fontStyle + \" \" + fontWeight + \" \" + fontSize + \"px \" + fontFamily;\n  var yScale = moreProps.chartConfig.yScale;\n  var x = textBox.left + textBox.padding.left + ctx.measureText(text).width + textBox.padding.right + textBox.closeIcon.padding.left + textBox.closeIcon.width / 2;\n  var y = yScale(yValue);\n  return [x, y];\n}\n\nClickableShape.propTypes = {\n  stroke: _propTypes2.default.string.isRequired,\n  strokeOpacity: _propTypes2.default.number.isRequired,\n  strokeWidth: _propTypes2.default.number.isRequired,\n  textBox: _propTypes2.default.object.isRequired,\n  hovering: _propTypes2.default.bool,\n  interactiveCursorClass: _propTypes2.default.string,\n  show: _propTypes2.default.bool,\n  onHover: _propTypes2.default.func,\n  onUnHover: _propTypes2.default.func,\n  onClick: _propTypes2.default.func\n};\nClickableShape.defaultProps = {\n  show: false,\n  fillOpacity: 1,\n  strokeOpacity: 1,\n  strokeWidth: 1\n};\nexports.default = ClickableShape;","map":{"version":3,"sources":["../../../../src/lib/interactive/components/ClickableShape.js"],"names":["ClickableShape","node","moreProps","mouseXY","textBox","x","y","halfWidth","start1","end1","start2","end2","ctx","stroke","strokeWidth","strokeOpacity","hovering","helper","interactiveCursorClass","show","onHover","onUnHover","onClick","yValue","text","props","fontFamily","fontStyle","fontWeight","fontSize","yScale","func","fillOpacity"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport GenericChartComponent from \"../../GenericChartComponent\";\nimport { getMouseCanvas } from \"../../GenericComponent\";\n\nimport { isHovering2 } from \"./StraightLine\";\nimport { hexToRGBA } from \"../../utils\";\n\nclass ClickableShape extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.saveNode = this.saveNode.bind(this);\n\t\tthis.drawOnCanvas = this.drawOnCanvas.bind(this);\n\t\tthis.isHover = this.isHover.bind(this);\n\t}\n\tsaveNode(node) {\n\t\tthis.node = node;\n\t}\n\tisHover(moreProps) {\n\t\tconst { mouseXY } = moreProps;\n\t\tif (this.closeIcon) {\n\t\t\tconst { textBox } = this.props;\n\t\t\tconst { x, y } = this.closeIcon;\n\t\t\tconst halfWidth = textBox.closeIcon.width / 2;\n\n\t\t\tconst start1 = [x - halfWidth, y - halfWidth];\n\t\t\tconst end1 = [x + halfWidth, y + halfWidth];\n\t\t\tconst start2 = [x - halfWidth, y + halfWidth];\n\t\t\tconst end2 = [x + halfWidth, y - halfWidth];\n\n\t\t\tif (isHovering2(start1, end1, mouseXY, 3) || isHovering2(start2, end2, mouseXY, 3)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\tdrawOnCanvas(ctx, moreProps) {\n\t\tconst { stroke, strokeWidth, strokeOpacity, hovering, textBox } = this.props;\n\n\t\tconst [x, y] = helper(this.props, moreProps, ctx);\n\n\t\tthis.closeIcon = { x, y };\n\t\tctx.beginPath();\n\n\t\tctx.lineWidth = hovering ? strokeWidth + 1 : strokeWidth;\n\t\tctx.strokeStyle = hexToRGBA(stroke, strokeOpacity);\n\t\tconst halfWidth = textBox.closeIcon.width / 2;\n\t\tctx.moveTo(x - halfWidth, y - halfWidth);\n\t\tctx.lineTo(x + halfWidth, y + halfWidth);\n\t\tctx.moveTo(x - halfWidth, y + halfWidth);\n\t\tctx.lineTo(x + halfWidth, y - halfWidth);\n\t\tctx.stroke();\n\t}\n\trenderSVG() {\n\t\tthrow new Error(\"svg not implemented\");\n\t}\n\trender() {\n\t\tconst { interactiveCursorClass } = this.props;\n\t\tconst { show } = this.props;\n\t\tconst { onHover, onUnHover, onClick } = this.props;\n\n\t\treturn show\n\t\t\t? <GenericChartComponent ref={this.saveNode}\n\t\t\t\tinteractiveCursorClass={interactiveCursorClass}\n\t\t\t\tisHover={this.isHover}\n\n\t\t\t\tonClickWhenHover={onClick}\n\n\t\t\t\tsvgDraw={this.renderSVG}\n\n\t\t\t\tcanvasDraw={this.drawOnCanvas}\n\t\t\t\tcanvasToDraw={getMouseCanvas}\n\n\t\t\t\tonHover={onHover}\n\t\t\t\tonUnHover={onUnHover}\n\n\t\t\t\tdrawOn={[\"pan\", \"mousemove\", \"drag\"]}\n\t\t\t/>\n\t\t\t: null;\n\t}\n}\n\nfunction helper(props, moreProps, ctx) {\n\tconst { yValue, text, textBox } = props;\n\tconst { fontFamily, fontStyle, fontWeight, fontSize } = props;\n\tctx.font = `${fontStyle} ${fontWeight} ${fontSize}px ${fontFamily}`;\n\n\tconst { chartConfig: { yScale } } = moreProps;\n\n\tconst x = textBox.left\n\t\t+ textBox.padding.left\n\t\t+ ctx.measureText(text).width\n\t\t+ textBox.padding.right\n\t\t+ textBox.closeIcon.padding.left\n\t\t+ textBox.closeIcon.width / 2;\n\n\tconst y = yScale(yValue);\n\n\treturn [x, y];\n\n}\n\nClickableShape.propTypes = {\n\tstroke: PropTypes.string.isRequired,\n\tstrokeOpacity: PropTypes.number.isRequired,\n\tstrokeWidth: PropTypes.number.isRequired,\n\ttextBox: PropTypes.object.isRequired,\n\thovering: PropTypes.bool,\n\tinteractiveCursorClass: PropTypes.string,\n\tshow: PropTypes.bool,\n\tonHover: PropTypes.func,\n\tonUnHover: PropTypes.func,\n\tonClick: PropTypes.func,\n};\n\n\nClickableShape.defaultProps = {\n\tshow: false,\n\tfillOpacity: 1,\n\tstrokeOpacity: 1,\n\tstrokeWidth: 1,\n};\n\nexport default ClickableShape;\n"]},"metadata":{},"sourceType":"script"}