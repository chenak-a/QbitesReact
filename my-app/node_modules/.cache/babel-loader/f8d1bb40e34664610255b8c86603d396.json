{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _GenericChartComponent = require(\"../../GenericChartComponent\");\n\nvar _GenericChartComponent2 = _interopRequireDefault(_GenericChartComponent);\n\nvar _GenericComponent = require(\"../../GenericComponent\");\n\nvar _utils = require(\"../../utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar InteractiveText = function (_Component) {\n  _inherits(InteractiveText, _Component);\n\n  function InteractiveText(props) {\n    _classCallCheck(this, InteractiveText);\n\n    var _this = _possibleConstructorReturn(this, (InteractiveText.__proto__ || Object.getPrototypeOf(InteractiveText)).call(this, props));\n\n    _this.calculateTextWidth = true;\n    _this.renderSVG = _this.renderSVG.bind(_this);\n    _this.drawOnCanvas = _this.drawOnCanvas.bind(_this);\n    _this.isHover = _this.isHover.bind(_this);\n    return _this;\n  }\n\n  _createClass(InteractiveText, [{\n    key: \"isHover\",\n    value: function isHover(moreProps) {\n      var onHover = this.props.onHover;\n\n      if ((0, _utils.isDefined)(onHover) && (0, _utils.isDefined)(this.textWidth) && !this.calculateTextWidth) {\n        var _helper = helper(this.props, moreProps, this.textWidth),\n            rect = _helper.rect;\n\n        var _moreProps$mouseXY = _slicedToArray(moreProps.mouseXY, 2),\n            x = _moreProps$mouseXY[0],\n            y = _moreProps$mouseXY[1];\n\n        if (x >= rect.x && y >= rect.y && x <= rect.x + rect.width && y <= rect.y + rect.height) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      this.calculateTextWidth = nextProps.text !== this.props.text || nextProps.fontStyle !== this.props.fontStyle || nextProps.fontWeight !== this.props.fontWeight || nextProps.fontSize !== this.props.fontSize || nextProps.fontFamily !== this.props.fontFamily;\n    }\n  }, {\n    key: \"drawOnCanvas\",\n    value: function drawOnCanvas(ctx, moreProps) {\n      var _props = this.props,\n          bgFill = _props.bgFill,\n          bgOpacity = _props.bgOpacity,\n          bgStrokeWidth = _props.bgStrokeWidth,\n          bgStroke = _props.bgStroke,\n          textFill = _props.textFill,\n          fontFamily = _props.fontFamily,\n          fontSize = _props.fontSize,\n          fontStyle = _props.fontStyle,\n          fontWeight = _props.fontWeight,\n          text = _props.text;\n\n      if (this.calculateTextWidth) {\n        ctx.font = fontStyle + \" \" + fontWeight + \" \" + fontSize + \"px \" + fontFamily;\n\n        var _ctx$measureText = ctx.measureText(text),\n            width = _ctx$measureText.width;\n\n        this.textWidth = width;\n        this.calculateTextWidth = false;\n      }\n\n      var selected = this.props.selected;\n\n      var _helper2 = helper(this.props, moreProps, this.textWidth),\n          x = _helper2.x,\n          y = _helper2.y,\n          rect = _helper2.rect;\n\n      ctx.fillStyle = (0, _utils.hexToRGBA)(bgFill, bgOpacity);\n      ctx.beginPath();\n      ctx.fillRect(rect.x, rect.y, rect.width, rect.height);\n\n      if (selected) {\n        ctx.strokeStyle = bgStroke;\n        ctx.lineWidth = bgStrokeWidth;\n        ctx.strokeRect(rect.x, rect.y, rect.width, rect.height);\n      }\n\n      ctx.fillStyle = textFill;\n      ctx.textBaseline = \"middle\";\n      ctx.textAlign = \"center\";\n      ctx.font = fontStyle + \" \" + fontWeight + \" \" + fontSize + \"px \" + fontFamily;\n      ctx.beginPath();\n      ctx.fillText(text, x, y);\n    }\n  }, {\n    key: \"renderSVG\",\n    value: function renderSVG() {\n      throw new Error(\"svg not implemented\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _props2 = this.props,\n          selected = _props2.selected,\n          interactiveCursorClass = _props2.interactiveCursorClass;\n      var _props3 = this.props,\n          onHover = _props3.onHover,\n          onUnHover = _props3.onUnHover;\n      var _props4 = this.props,\n          onDragStart = _props4.onDragStart,\n          onDrag = _props4.onDrag,\n          onDragComplete = _props4.onDragComplete;\n      return _react2.default.createElement(_GenericChartComponent2.default, {\n        isHover: this.isHover,\n        svgDraw: this.renderSVG,\n        canvasToDraw: _GenericComponent.getMouseCanvas,\n        canvasDraw: this.drawOnCanvas,\n        interactiveCursorClass: interactiveCursorClass,\n        selected: selected,\n        onDragStart: onDragStart,\n        onDrag: onDrag,\n        onDragComplete: onDragComplete,\n        onHover: onHover,\n        onUnHover: onUnHover,\n        drawOn: [\"mousemove\", \"mouseleave\", \"pan\", \"drag\"]\n      });\n    }\n  }]);\n\n  return InteractiveText;\n}(_react.Component);\n\nfunction helper(props, moreProps, textWidth) {\n  var position = props.position,\n      fontSize = props.fontSize;\n  var xScale = moreProps.xScale,\n      yScale = moreProps.chartConfig.yScale;\n\n  var _position = _slicedToArray(position, 2),\n      xValue = _position[0],\n      yValue = _position[1];\n\n  var x = xScale(xValue);\n  var y = yScale(yValue);\n  var rect = {\n    x: x - textWidth / 2 - fontSize,\n    y: y - fontSize,\n    width: textWidth + fontSize * 2,\n    height: fontSize * 2\n  };\n  return {\n    x: x,\n    y: y,\n    rect: rect\n  };\n}\n\nInteractiveText.propTypes = {\n  bgFill: _propTypes2.default.string.isRequired,\n  bgOpacity: _propTypes2.default.number.isRequired,\n  bgStrokeWidth: _propTypes2.default.number.isRequired,\n  bgStroke: _propTypes2.default.string.isRequired,\n  textFill: _propTypes2.default.string.isRequired,\n  fontFamily: _propTypes2.default.string.isRequired,\n  fontSize: _propTypes2.default.number.isRequired,\n  fontWeight: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]).isRequired,\n  fontStyle: _propTypes2.default.string.isRequired,\n  text: _propTypes2.default.string.isRequired,\n  onDragStart: _propTypes2.default.func.isRequired,\n  onDrag: _propTypes2.default.func.isRequired,\n  onDragComplete: _propTypes2.default.func.isRequired,\n  onHover: _propTypes2.default.func,\n  onUnHover: _propTypes2.default.func,\n  defaultClassName: _propTypes2.default.string,\n  interactiveCursorClass: _propTypes2.default.string,\n  tolerance: _propTypes2.default.number.isRequired,\n  selected: _propTypes2.default.bool.isRequired\n};\nInteractiveText.defaultProps = {\n  onDragStart: _utils.noop,\n  onDrag: _utils.noop,\n  onDragComplete: _utils.noop,\n  type: \"SD\",\n  // standard dev\n  fontWeight: \"normal\",\n  // standard dev\n  tolerance: 4,\n  selected: false\n};\nexports.default = InteractiveText;","map":{"version":3,"mappings":"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","names":["InteractiveText","props","_classCallCheck","_this","calculateTextWidth","renderSVG","bind","drawOnCanvas","isHover","moreProps","onHover","textWidth","helper","rect","mouseXY","x","y","width","height","nextProps","text","fontStyle","fontWeight","fontSize","fontFamily","ctx","bgFill","bgOpacity","bgStrokeWidth","bgStroke","textFill","font","measureText","selected","fillStyle","beginPath","fillRect","strokeStyle","lineWidth","strokeRect","textBaseline","textAlign","fillText","Error","interactiveCursorClass","onUnHover","onDragStart","onDrag","onDragComplete","_react2","svgDraw","canvasToDraw","canvasDraw","drawOn","position","xScale","yScale","chartConfig","xValue","yValue","propTypes","_propTypes2","string","isRequired","number","oneOfType","func","defaultClassName","tolerance","bool","defaultProps","type"],"sources":["../../../../src/lib/interactive/components/InteractiveText.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport GenericChartComponent from \"../../GenericChartComponent\";\nimport { getMouseCanvas } from \"../../GenericComponent\";\n\nimport { isDefined, noop, hexToRGBA } from \"../../utils\";\n\nclass InteractiveText extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.calculateTextWidth = true;\n\n\t\tthis.renderSVG = this.renderSVG.bind(this);\n\t\tthis.drawOnCanvas = this.drawOnCanvas.bind(this);\n\t\tthis.isHover = this.isHover.bind(this);\n\t}\n\tisHover(moreProps) {\n\t\tconst { onHover } = this.props;\n\n\t\tif (\n\t\t\tisDefined(onHover)\n\t\t\t&& isDefined(this.textWidth)\n\t\t\t&& !this.calculateTextWidth\n\t\t) {\n\t\t\tconst { rect } = helper(this.props, moreProps, this.textWidth);\n\t\t\tconst { mouseXY: [x, y] } = moreProps;\n\n\t\t\tif (\n\t\t\t\tx >= rect.x\n\t\t\t\t&& y >= rect.y\n\t\t\t\t&& x <= rect.x + rect.width\n\t\t\t\t&& y <= rect.y + rect.height\n\t\t\t) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\tcomponentWillReceiveProps(nextProps) {\n\t\tthis.calculateTextWidth = (\n\t\t\tnextProps.text !== this.props.text\n\t\t\t|| nextProps.fontStyle !== this.props.fontStyle\n\t\t\t|| nextProps.fontWeight !== this.props.fontWeight\n\t\t\t|| nextProps.fontSize !== this.props.fontSize\n\t\t\t|| nextProps.fontFamily !== this.props.fontFamily\n\t\t);\n\t}\n\tdrawOnCanvas(ctx, moreProps) {\n\t\tconst {\n\t\t\tbgFill,\n\t\t\tbgOpacity,\n\t\t\tbgStrokeWidth,\n\t\t\tbgStroke,\n\t\t\ttextFill,\n\t\t\tfontFamily,\n\t\t\tfontSize,\n\t\t\tfontStyle,\n\t\t\tfontWeight,\n\t\t\ttext,\n\t\t} = this.props;\n\n\t\tif (this.calculateTextWidth) {\n\t\t\tctx.font = `${fontStyle} ${fontWeight} ${fontSize}px ${fontFamily}`;\n\t\t\tconst { width } = ctx.measureText(text);\n\t\t\tthis.textWidth = width;\n\t\t\tthis.calculateTextWidth = false;\n\t\t}\n\n\t\tconst { selected } = this.props;\n\n\t\tconst { x, y, rect } = helper(this.props, moreProps, this.textWidth);\n\n\t\tctx.fillStyle = hexToRGBA(bgFill, bgOpacity);\n\n\t\tctx.beginPath();\n\t\tctx.fillRect(rect.x, rect.y, rect.width, rect.height);\n\n\t\tif (selected) {\n\t\t\tctx.strokeStyle = bgStroke;\n\t\t\tctx.lineWidth = bgStrokeWidth;\n\t\t\tctx.strokeRect(rect.x, rect.y, rect.width, rect.height);\n\t\t}\n\n\t\tctx.fillStyle = textFill;\n\t\tctx.textBaseline = \"middle\";\n\t\tctx.textAlign = \"center\";\n\t\tctx.font = `${fontStyle} ${fontWeight} ${fontSize}px ${fontFamily}`;\n\n\t\tctx.beginPath();\n\t\tctx.fillText(text, x, y);\n\t}\n\trenderSVG() {\n\t\tthrow new Error(\"svg not implemented\");\n\t}\n\trender() {\n\t\tconst { selected, interactiveCursorClass } = this.props;\n\t\tconst { onHover, onUnHover } = this.props;\n\t\tconst { onDragStart, onDrag, onDragComplete } = this.props;\n\n\t\treturn <GenericChartComponent\n\t\t\tisHover={this.isHover}\n\n\t\t\tsvgDraw={this.renderSVG}\n\t\t\tcanvasToDraw={getMouseCanvas}\n\t\t\tcanvasDraw={this.drawOnCanvas}\n\n\t\t\tinteractiveCursorClass={interactiveCursorClass}\n\t\t\tselected={selected}\n\n\t\t\tonDragStart={onDragStart}\n\t\t\tonDrag={onDrag}\n\t\t\tonDragComplete={onDragComplete}\n\t\t\tonHover={onHover}\n\t\t\tonUnHover={onUnHover}\n\n\t\t\tdrawOn={[\"mousemove\", \"mouseleave\", \"pan\", \"drag\"]}\n\t\t/>;\n\t}\n}\n\nfunction helper(props, moreProps, textWidth) {\n\tconst { position, fontSize } = props;\n\n\tconst { xScale, chartConfig: { yScale } } = moreProps;\n\n\tconst [xValue, yValue] = position;\n\tconst x = xScale(xValue);\n\tconst y = yScale(yValue);\n\n\tconst rect = {\n\t\tx: x - textWidth / 2 - fontSize,\n\t\ty: y - fontSize,\n\t\twidth: textWidth + fontSize * 2,\n\t\theight: fontSize * 2,\n\t};\n\n\treturn {\n\t\tx, y, rect\n\t};\n}\n\nInteractiveText.propTypes = {\n\tbgFill: PropTypes.string.isRequired,\n\tbgOpacity: PropTypes.number.isRequired,\n\tbgStrokeWidth: PropTypes.number.isRequired,\n\tbgStroke: PropTypes.string.isRequired,\n\n\ttextFill: PropTypes.string.isRequired,\n\tfontFamily: PropTypes.string.isRequired,\n\tfontSize: PropTypes.number.isRequired,\n\tfontWeight: PropTypes.oneOfType([\n\t\tPropTypes.number,\n\t\tPropTypes.string,\n\t]).isRequired,\n\tfontStyle: PropTypes.string.isRequired,\n\n\ttext: PropTypes.string.isRequired,\n\n\tonDragStart: PropTypes.func.isRequired,\n\tonDrag: PropTypes.func.isRequired,\n\tonDragComplete: PropTypes.func.isRequired,\n\tonHover: PropTypes.func,\n\tonUnHover: PropTypes.func,\n\n\tdefaultClassName: PropTypes.string,\n\tinteractiveCursorClass: PropTypes.string,\n\n\ttolerance: PropTypes.number.isRequired,\n\tselected: PropTypes.bool.isRequired,\n};\n\nInteractiveText.defaultProps = {\n\tonDragStart: noop,\n\tonDrag: noop,\n\tonDragComplete: noop,\n\n\ttype: \"SD\", // standard dev\n\tfontWeight: \"normal\", // standard dev\n\n\ttolerance: 4,\n\tselected: false,\n};\n\nexport default InteractiveText;"]},"metadata":{},"sourceType":"script"}