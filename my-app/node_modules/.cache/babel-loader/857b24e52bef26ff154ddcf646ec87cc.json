{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _utils = require(\"../../utils\");\n\nvar _ChartDataUtil = require(\"../../utils/ChartDataUtil\");\n\nvar _utils2 = require(\"../utils\");\n\nvar _ClickableCircle = require(\"../components/ClickableCircle\");\n\nvar _ClickableCircle2 = _interopRequireDefault(_ClickableCircle);\n\nvar _ChannelWithArea = require(\"../components/ChannelWithArea\");\n\nvar _ChannelWithArea2 = _interopRequireDefault(_ChannelWithArea);\n\nvar _HoverTextNearMouse = require(\"../components/HoverTextNearMouse\");\n\nvar _HoverTextNearMouse2 = _interopRequireDefault(_HoverTextNearMouse);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar EachEquidistantChannel = function (_Component) {\n  _inherits(EachEquidistantChannel, _Component);\n\n  function EachEquidistantChannel(props) {\n    _classCallCheck(this, EachEquidistantChannel);\n\n    var _this = _possibleConstructorReturn(this, (EachEquidistantChannel.__proto__ || Object.getPrototypeOf(EachEquidistantChannel)).call(this, props));\n\n    _this.handleLine1Edge1Drag = _this.handleLine1Edge1Drag.bind(_this);\n    _this.handleLine1Edge2Drag = _this.handleLine1Edge2Drag.bind(_this);\n    _this.handleDragStart = _this.handleDragStart.bind(_this);\n    _this.handleChannelDrag = _this.handleChannelDrag.bind(_this);\n    _this.handleChannelHeightChange = _this.handleChannelHeightChange.bind(_this);\n    _this.getEdgeCircle = _this.getEdgeCircle.bind(_this);\n    _this.handleHover = _this.handleHover.bind(_this);\n    _this.isHover = _utils2.isHover.bind(_this);\n    _this.saveNodeType = _utils2.saveNodeType.bind(_this);\n    _this.nodes = {};\n    _this.state = {\n      hover: false\n    };\n    return _this;\n  }\n\n  _createClass(EachEquidistantChannel, [{\n    key: \"handleHover\",\n    value: function handleHover(moreProps) {\n      if (this.state.hover !== moreProps.hovering) {\n        this.setState({\n          hover: moreProps.hovering\n        });\n      }\n    }\n  }, {\n    key: \"handleDragStart\",\n    value: function handleDragStart() {\n      var _props = this.props,\n          startXY = _props.startXY,\n          endXY = _props.endXY,\n          dy = _props.dy;\n      this.dragStart = {\n        startXY: startXY,\n        endXY: endXY,\n        dy: dy\n      };\n    }\n  }, {\n    key: \"handleChannelDrag\",\n    value: function handleChannelDrag(moreProps) {\n      var _props2 = this.props,\n          index = _props2.index,\n          onDrag = _props2.onDrag;\n      var _dragStart = this.dragStart,\n          startXY = _dragStart.startXY,\n          endXY = _dragStart.endXY;\n      var xScale = moreProps.xScale,\n          yScale = moreProps.chartConfig.yScale,\n          xAccessor = moreProps.xAccessor,\n          fullData = moreProps.fullData;\n      var startPos = moreProps.startPos,\n          mouseXY = moreProps.mouseXY;\n      var x1 = xScale(startXY[0]);\n      var y1 = yScale(startXY[1]);\n      var x2 = xScale(endXY[0]);\n      var y2 = yScale(endXY[1]);\n      var dx = startPos[0] - mouseXY[0];\n      var dy = startPos[1] - mouseXY[1];\n      var newX1Value = (0, _ChartDataUtil.getXValue)(xScale, xAccessor, [x1 - dx, y1 - dy], fullData);\n      var newY1Value = yScale.invert(y1 - dy);\n      var newX2Value = (0, _ChartDataUtil.getXValue)(xScale, xAccessor, [x2 - dx, y2 - dy], fullData);\n      var newY2Value = yScale.invert(y2 - dy); // const newDy = newY2Value - endXY[1] + this.dragStart.dy;\n\n      onDrag(index, {\n        startXY: [newX1Value, newY1Value],\n        endXY: [newX2Value, newY2Value],\n        dy: this.dragStart.dy\n      });\n    }\n  }, {\n    key: \"handleLine1Edge1Drag\",\n    value: function handleLine1Edge1Drag(moreProps) {\n      var _props3 = this.props,\n          index = _props3.index,\n          onDrag = _props3.onDrag;\n      var startXY = this.dragStart.startXY;\n      var startPos = moreProps.startPos,\n          mouseXY = moreProps.mouseXY,\n          xAccessor = moreProps.xAccessor,\n          xScale = moreProps.xScale,\n          fullData = moreProps.fullData,\n          yScale = moreProps.chartConfig.yScale;\n      var dx = startPos[0] - mouseXY[0];\n      var dy = startPos[1] - mouseXY[1];\n      var x1 = xScale(startXY[0]);\n      var y1 = yScale(startXY[1]);\n      var newX1Value = (0, _ChartDataUtil.getXValue)(xScale, xAccessor, [x1 - dx, y1 - dy], fullData);\n      var newY1Value = yScale.invert(y1 - dy);\n      onDrag(index, {\n        startXY: [newX1Value, newY1Value],\n        endXY: this.dragStart.endXY,\n        dy: this.dragStart.dy\n      });\n    }\n  }, {\n    key: \"handleLine1Edge2Drag\",\n    value: function handleLine1Edge2Drag(moreProps) {\n      var _props4 = this.props,\n          index = _props4.index,\n          onDrag = _props4.onDrag;\n      var endXY = this.dragStart.endXY;\n      var startPos = moreProps.startPos,\n          mouseXY = moreProps.mouseXY,\n          xAccessor = moreProps.xAccessor,\n          xScale = moreProps.xScale,\n          fullData = moreProps.fullData,\n          yScale = moreProps.chartConfig.yScale;\n      var dx = startPos[0] - mouseXY[0];\n      var dy = startPos[1] - mouseXY[1];\n      var x1 = xScale(endXY[0]);\n      var y1 = yScale(endXY[1]);\n      var newX1Value = (0, _ChartDataUtil.getXValue)(xScale, xAccessor, [x1 - dx, y1 - dy], fullData);\n      var newY1Value = yScale.invert(y1 - dy);\n      onDrag(index, {\n        startXY: this.dragStart.startXY,\n        endXY: [newX1Value, newY1Value],\n        dy: this.dragStart.dy\n      });\n    }\n  }, {\n    key: \"handleChannelHeightChange\",\n    value: function handleChannelHeightChange(moreProps) {\n      var _props5 = this.props,\n          index = _props5.index,\n          onDrag = _props5.onDrag;\n      var _dragStart2 = this.dragStart,\n          startXY = _dragStart2.startXY,\n          endXY = _dragStart2.endXY;\n      var yScale = moreProps.chartConfig.yScale;\n      var startPos = moreProps.startPos,\n          mouseXY = moreProps.mouseXY;\n      var y2 = yScale(endXY[1]);\n      var dy = startPos[1] - mouseXY[1];\n      var newY2Value = yScale.invert(y2 - dy);\n      var newDy = newY2Value - endXY[1] + this.dragStart.dy;\n      onDrag(index, {\n        startXY: startXY,\n        endXY: endXY,\n        dy: newDy\n      });\n    }\n  }, {\n    key: \"getEdgeCircle\",\n    value: function getEdgeCircle(_ref) {\n      var xy = _ref.xy,\n          dragHandler = _ref.dragHandler,\n          cursor = _ref.cursor,\n          fill = _ref.fill,\n          edge = _ref.edge;\n      var hover = this.state.hover;\n      var appearance = this.props.appearance;\n      var edgeStroke = appearance.edgeStroke,\n          edgeStrokeWidth = appearance.edgeStrokeWidth,\n          r = appearance.r;\n      var selected = this.props.selected;\n      var onDragComplete = this.props.onDragComplete;\n      return _react2.default.createElement(_ClickableCircle2.default, {\n        ref: this.saveNodeType(edge),\n        show: selected || hover,\n        cx: xy[0],\n        cy: xy[1],\n        r: r,\n        fill: fill,\n        stroke: edgeStroke,\n        strokeWidth: edgeStrokeWidth,\n        interactiveCursorClass: cursor,\n        onDragStart: this.handleDragStart,\n        onDrag: dragHandler,\n        onDragComplete: onDragComplete\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _props6 = this.props,\n          startXY = _props6.startXY,\n          endXY = _props6.endXY,\n          dy = _props6.dy;\n      var _props7 = this.props,\n          interactive = _props7.interactive,\n          hoverText = _props7.hoverText,\n          appearance = _props7.appearance;\n      var edgeFill = appearance.edgeFill,\n          edgeFill2 = appearance.edgeFill2,\n          stroke = appearance.stroke,\n          strokeWidth = appearance.strokeWidth,\n          strokeOpacity = appearance.strokeOpacity,\n          fill = appearance.fill,\n          fillOpacity = appearance.fillOpacity;\n      var selected = this.props.selected;\n      var onDragComplete = this.props.onDragComplete;\n      var hover = this.state.hover;\n\n      var hoverTextEnabled = hoverText.enable,\n          restHoverTextProps = _objectWithoutProperties(hoverText, [\"enable\"]);\n\n      var hoverHandler = interactive ? {\n        onHover: this.handleHover,\n        onUnHover: this.handleHover\n      } : {};\n      var line1Edge = (0, _utils.isDefined)(startXY) && (0, _utils.isDefined)(endXY) ? _react2.default.createElement(\"g\", null, this.getEdgeCircle({\n        xy: startXY,\n        dragHandler: this.handleLine1Edge1Drag,\n        cursor: \"react-stockcharts-move-cursor\",\n        fill: edgeFill,\n        edge: \"line1edge1\"\n      }), this.getEdgeCircle({\n        xy: endXY,\n        dragHandler: this.handleLine1Edge2Drag,\n        cursor: \"react-stockcharts-move-cursor\",\n        fill: edgeFill,\n        edge: \"line1edge2\"\n      })) : null;\n      var line2Edge = (0, _utils.isDefined)(dy) ? _react2.default.createElement(\"g\", null, this.getEdgeCircle({\n        xy: [startXY[0], startXY[1] + dy],\n        dragHandler: this.handleChannelHeightChange,\n        cursor: \"react-stockcharts-ns-resize-cursor\",\n        fill: edgeFill2,\n        edge: \"line2edge1\"\n      }), this.getEdgeCircle({\n        xy: [endXY[0], endXY[1] + dy],\n        dragHandler: this.handleChannelHeightChange,\n        cursor: \"react-stockcharts-ns-resize-cursor\",\n        fill: edgeFill2,\n        edge: \"line2edge2\"\n      })) : null;\n      return _react2.default.createElement(\"g\", null, _react2.default.createElement(_ChannelWithArea2.default, _extends({\n        ref: this.saveNodeType(\"channel\"),\n        selected: selected || hover\n      }, hoverHandler, {\n        startXY: startXY,\n        endXY: endXY,\n        dy: dy,\n        stroke: stroke,\n        strokeWidth: hover || selected ? strokeWidth + 1 : strokeWidth,\n        strokeOpacity: strokeOpacity,\n        fill: fill,\n        fillOpacity: fillOpacity,\n        interactiveCursorClass: \"react-stockcharts-move-cursor\",\n        onDragStart: this.handleDragStart,\n        onDrag: this.handleChannelDrag,\n        onDragComplete: onDragComplete\n      })), line1Edge, line2Edge, _react2.default.createElement(_HoverTextNearMouse2.default, _extends({\n        show: hoverTextEnabled && hover && !selected\n      }, restHoverTextProps)));\n    }\n  }]);\n\n  return EachEquidistantChannel;\n}(_react.Component);\n\nEachEquidistantChannel.propTypes = {\n  startXY: _propTypes2.default.arrayOf(_propTypes2.default.number).isRequired,\n  endXY: _propTypes2.default.arrayOf(_propTypes2.default.number).isRequired,\n  dy: _propTypes2.default.number,\n  interactive: _propTypes2.default.bool.isRequired,\n  selected: _propTypes2.default.bool.isRequired,\n  hoverText: _propTypes2.default.object.isRequired,\n  appearance: _propTypes2.default.shape({\n    stroke: _propTypes2.default.string.isRequired,\n    fillOpacity: _propTypes2.default.number.isRequired,\n    strokeOpacity: _propTypes2.default.number.isRequired,\n    strokeWidth: _propTypes2.default.number.isRequired,\n    fill: _propTypes2.default.string.isRequired,\n    edgeStroke: _propTypes2.default.string.isRequired,\n    edgeFill: _propTypes2.default.string.isRequired,\n    edgeFill2: _propTypes2.default.string.isRequired,\n    edgeStrokeWidth: _propTypes2.default.number.isRequired,\n    r: _propTypes2.default.number.isRequired\n  }).isRequired,\n  index: _propTypes2.default.number,\n  onDrag: _propTypes2.default.func.isRequired,\n  onDragComplete: _propTypes2.default.func.isRequired\n};\nEachEquidistantChannel.defaultProps = {\n  yDisplayFormat: function yDisplayFormat(d) {\n    return d.toFixed(2);\n  },\n  interactive: true,\n  selected: false,\n  onDrag: _utils.noop,\n  onDragComplete: _utils.noop,\n  hoverText: {\n    enable: false\n  }\n};\nexports.default = EachEquidistantChannel;","map":{"version":3,"mappings":"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","names":["EachEquidistantChannel","props","_classCallCheck","_this","handleLine1Edge1Drag","bind","handleLine1Edge2Drag","handleDragStart","handleChannelDrag","handleChannelHeightChange","getEdgeCircle","handleHover","isHover","_utils2","saveNodeType","nodes","state","hover","moreProps","hovering","setState","startXY","endXY","dy","dragStart","index","onDrag","xScale","yScale","chartConfig","xAccessor","fullData","startPos","mouseXY","x1","y1","x2","y2","dx","newX1Value","newY1Value","invert","newX2Value","newY2Value","newDy","xy","dragHandler","cursor","fill","edge","appearance","edgeStroke","edgeStrokeWidth","r","selected","onDragComplete","_react2","ref","show","cx","cy","stroke","strokeWidth","interactiveCursorClass","onDragStart","interactive","hoverText","edgeFill","edgeFill2","strokeOpacity","fillOpacity","hoverTextEnabled","enable","restHoverTextProps","hoverHandler","onHover","onUnHover","line1Edge","line2Edge","propTypes","_propTypes2","arrayOf","number","isRequired","bool","object","shape","string","func","defaultProps","yDisplayFormat","d","toFixed"],"sources":["../../../../src/lib/interactive/wrapper/EachEquidistantChannel.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { isDefined, noop } from \"../../utils\";\nimport { getXValue } from \"../../utils/ChartDataUtil\";\nimport { saveNodeType, isHover } from \"../utils\";\n\nimport ClickableCircle from \"../components/ClickableCircle\";\nimport ChannelWithArea from \"../components/ChannelWithArea\";\nimport HoverTextNearMouse from \"../components/HoverTextNearMouse\";\n\nclass EachEquidistantChannel extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.handleLine1Edge1Drag = this.handleLine1Edge1Drag.bind(this);\n\t\tthis.handleLine1Edge2Drag = this.handleLine1Edge2Drag.bind(this);\n\n\t\tthis.handleDragStart = this.handleDragStart.bind(this);\n\t\tthis.handleChannelDrag = this.handleChannelDrag.bind(this);\n\n\t\tthis.handleChannelHeightChange = this.handleChannelHeightChange.bind(this);\n\n\t\tthis.getEdgeCircle = this.getEdgeCircle.bind(this);\n\t\tthis.handleHover = this.handleHover.bind(this);\n\n\t\tthis.isHover = isHover.bind(this);\n\t\tthis.saveNodeType = saveNodeType.bind(this);\n\t\tthis.nodes = {};\n\n\t\tthis.state = {\n\t\t\thover: false,\n\t\t};\n\t}\n\thandleHover(moreProps) {\n\t\tif (this.state.hover !== moreProps.hovering) {\n\t\t\tthis.setState({\n\t\t\t\thover: moreProps.hovering\n\t\t\t});\n\t\t}\n\t}\n\thandleDragStart() {\n\t\tconst {\n\t\t\tstartXY, endXY, dy,\n\t\t} = this.props;\n\n\t\tthis.dragStart = {\n\t\t\tstartXY, endXY, dy,\n\t\t};\n\t}\n\thandleChannelDrag(moreProps) {\n\t\tconst { index, onDrag } = this.props;\n\n\t\tconst {\n\t\t\tstartXY, endXY,\n\t\t} = this.dragStart;\n\n\t\tconst { xScale, chartConfig: { yScale }, xAccessor, fullData } = moreProps;\n\t\tconst { startPos, mouseXY } = moreProps;\n\n\t\tconst x1 = xScale(startXY[0]);\n\t\tconst y1 = yScale(startXY[1]);\n\t\tconst x2 = xScale(endXY[0]);\n\t\tconst y2 = yScale(endXY[1]);\n\n\t\tconst dx = startPos[0] - mouseXY[0];\n\t\tconst dy = startPos[1] - mouseXY[1];\n\n\t\tconst newX1Value = getXValue(xScale, xAccessor, [x1 - dx, y1 - dy], fullData);\n\t\tconst newY1Value = yScale.invert(y1 - dy);\n\t\tconst newX2Value = getXValue(xScale, xAccessor, [x2 - dx, y2 - dy], fullData);\n\t\tconst newY2Value = yScale.invert(y2 - dy);\n\n\t\t// const newDy = newY2Value - endXY[1] + this.dragStart.dy;\n\n\t\tonDrag(index, {\n\t\t\tstartXY: [newX1Value, newY1Value],\n\t\t\tendXY: [newX2Value, newY2Value],\n\t\t\tdy: this.dragStart.dy,\n\t\t});\n\t}\n\thandleLine1Edge1Drag(moreProps) {\n\t\tconst { index, onDrag } = this.props;\n\t\tconst {\n\t\t\tstartXY,\n\t\t} = this.dragStart;\n\n\t\tconst {\n\t\t\tstartPos, mouseXY, xAccessor,\n\t\t\txScale, fullData,\n\t\t\tchartConfig: { yScale }\n\t\t} = moreProps;\n\n\t\tconst dx = startPos[0] - mouseXY[0];\n\t\tconst dy = startPos[1] - mouseXY[1];\n\n\t\tconst x1 = xScale(startXY[0]);\n\t\tconst y1 = yScale(startXY[1]);\n\n\t\tconst newX1Value = getXValue(xScale, xAccessor, [x1 - dx, y1 - dy], fullData);\n\t\tconst newY1Value = yScale.invert(y1 - dy);\n\n\t\tonDrag(index, {\n\t\t\tstartXY: [newX1Value, newY1Value],\n\t\t\tendXY: this.dragStart.endXY,\n\t\t\tdy: this.dragStart.dy,\n\t\t});\n\t}\n\thandleLine1Edge2Drag(moreProps) {\n\t\tconst { index, onDrag } = this.props;\n\t\tconst {\n\t\t\tendXY,\n\t\t} = this.dragStart;\n\n\t\tconst {\n\t\t\tstartPos, mouseXY, xAccessor,\n\t\t\txScale, fullData,\n\t\t\tchartConfig: { yScale }\n\t\t} = moreProps;\n\n\t\tconst dx = startPos[0] - mouseXY[0];\n\t\tconst dy = startPos[1] - mouseXY[1];\n\n\t\tconst x1 = xScale(endXY[0]);\n\t\tconst y1 = yScale(endXY[1]);\n\n\t\tconst newX1Value = getXValue(xScale, xAccessor, [x1 - dx, y1 - dy], fullData);\n\t\tconst newY1Value = yScale.invert(y1 - dy);\n\n\t\tonDrag(index, {\n\t\t\tstartXY: this.dragStart.startXY,\n\t\t\tendXY: [newX1Value, newY1Value],\n\t\t\tdy: this.dragStart.dy,\n\t\t});\n\t}\n\thandleChannelHeightChange(moreProps) {\n\t\tconst { index, onDrag } = this.props;\n\n\t\tconst {\n\t\t\tstartXY, endXY,\n\t\t} = this.dragStart;\n\n\t\tconst { chartConfig: { yScale } } = moreProps;\n\t\tconst { startPos, mouseXY } = moreProps;\n\n\t\tconst y2 = yScale(endXY[1]);\n\n\t\tconst dy = startPos[1] - mouseXY[1];\n\n\t\tconst newY2Value = yScale.invert(y2 - dy);\n\n\t\tconst newDy = newY2Value - endXY[1] + this.dragStart.dy;\n\n\t\tonDrag(index, {\n\t\t\tstartXY,\n\t\t\tendXY,\n\t\t\tdy: newDy,\n\t\t});\n\t}\n\tgetEdgeCircle({ xy, dragHandler, cursor, fill, edge }) {\n\t\tconst { hover } = this.state;\n\t\tconst { appearance } = this.props;\n\t\tconst { edgeStroke, edgeStrokeWidth, r } = appearance;\n\t\tconst { selected } = this.props;\n\t\tconst { onDragComplete } = this.props;\n\n\t\treturn <ClickableCircle\n\t\t\tref={this.saveNodeType(edge)}\n\n\t\t\tshow={selected || hover}\n\t\t\tcx={xy[0]}\n\t\t\tcy={xy[1]}\n\t\t\tr={r}\n\t\t\tfill={fill}\n\t\t\tstroke={edgeStroke}\n\t\t\tstrokeWidth={edgeStrokeWidth}\n\t\t\tinteractiveCursorClass={cursor}\n\n\t\t\tonDragStart={this.handleDragStart}\n\t\t\tonDrag={dragHandler}\n\t\t\tonDragComplete={onDragComplete} />;\n\t}\n\trender() {\n\t\tconst { startXY, endXY, dy } = this.props;\n\t\tconst { interactive, hoverText, appearance } = this.props;\n\t\tconst {\n\t\t\tedgeFill, edgeFill2,\n\t\t\tstroke, strokeWidth, strokeOpacity,\n\t\t\tfill, fillOpacity,\n\t\t} = appearance;\n\t\tconst { selected } = this.props;\n\t\tconst { onDragComplete } = this.props;\n\t\tconst { hover } = this.state;\n\t\tconst { enable: hoverTextEnabled, ...restHoverTextProps } = hoverText;\n\n\t\tconst hoverHandler = interactive\n\t\t\t? { onHover: this.handleHover, onUnHover: this.handleHover }\n\t\t\t: {};\n\n\t\tconst line1Edge = isDefined(startXY) && isDefined(endXY)\n\t\t\t? <g>\n\t\t\t\t{this.getEdgeCircle({\n\t\t\t\t\txy: startXY,\n\t\t\t\t\tdragHandler: this.handleLine1Edge1Drag,\n\t\t\t\t\tcursor: \"react-stockcharts-move-cursor\",\n\t\t\t\t\tfill: edgeFill,\n\t\t\t\t\tedge: \"line1edge1\",\n\t\t\t\t})}\n\t\t\t\t{this.getEdgeCircle({\n\t\t\t\t\txy: endXY,\n\t\t\t\t\tdragHandler: this.handleLine1Edge2Drag,\n\t\t\t\t\tcursor: \"react-stockcharts-move-cursor\",\n\t\t\t\t\tfill: edgeFill,\n\t\t\t\t\tedge: \"line1edge2\",\n\t\t\t\t})}\n\t\t\t</g>\n\t\t\t: null;\n\t\tconst line2Edge = isDefined(dy)\n\t\t\t? <g>\n\t\t\t\t{this.getEdgeCircle({\n\t\t\t\t\txy: [startXY[0], startXY[1] + dy],\n\t\t\t\t\tdragHandler: this.handleChannelHeightChange,\n\t\t\t\t\tcursor: \"react-stockcharts-ns-resize-cursor\",\n\t\t\t\t\tfill: edgeFill2,\n\t\t\t\t\tedge: \"line2edge1\",\n\t\t\t\t})}\n\t\t\t\t{this.getEdgeCircle({\n\t\t\t\t\txy: [endXY[0], endXY[1] + dy],\n\t\t\t\t\tdragHandler: this.handleChannelHeightChange,\n\t\t\t\t\tcursor: \"react-stockcharts-ns-resize-cursor\",\n\t\t\t\t\tfill: edgeFill2,\n\t\t\t\t\tedge: \"line2edge2\",\n\t\t\t\t})}\n\t\t\t</g>\n\t\t\t: null;\n\n\t\treturn <g>\n\t\t\t<ChannelWithArea\n\t\t\t\tref={this.saveNodeType(\"channel\")}\n\t\t\t\tselected={selected || hover}\n\n\t\t\t\t{...hoverHandler}\n\n\t\t\t\tstartXY={startXY}\n\t\t\t\tendXY={endXY}\n\t\t\t\tdy={dy}\n\t\t\t\tstroke={stroke}\n\t\t\t\tstrokeWidth={(hover || selected) ? strokeWidth + 1 : strokeWidth}\n\t\t\t\tstrokeOpacity={strokeOpacity}\n\t\t\t\tfill={fill}\n\t\t\t\tfillOpacity={fillOpacity}\n\t\t\t\tinteractiveCursorClass=\"react-stockcharts-move-cursor\"\n\n\t\t\t\tonDragStart={this.handleDragStart}\n\t\t\t\tonDrag={this.handleChannelDrag}\n\t\t\t\tonDragComplete={onDragComplete}\n\t\t\t/>\n\t\t\t{line1Edge}\n\t\t\t{line2Edge}\n\t\t\t<HoverTextNearMouse\n\t\t\t\tshow={hoverTextEnabled && hover && !selected}\n\t\t\t\t{...restHoverTextProps} />\n\t\t</g>;\n\t}\n}\n\nEachEquidistantChannel.propTypes = {\n\tstartXY: PropTypes.arrayOf(PropTypes.number).isRequired,\n\tendXY: PropTypes.arrayOf(PropTypes.number).isRequired,\n\tdy: PropTypes.number,\n\n\tinteractive: PropTypes.bool.isRequired,\n\tselected: PropTypes.bool.isRequired,\n\thoverText: PropTypes.object.isRequired,\n\n\tappearance: PropTypes.shape({\n\t\tstroke: PropTypes.string.isRequired,\n\t\tfillOpacity: PropTypes.number.isRequired,\n\t\tstrokeOpacity: PropTypes.number.isRequired,\n\t\tstrokeWidth: PropTypes.number.isRequired,\n\t\tfill: PropTypes.string.isRequired,\n\t\tedgeStroke: PropTypes.string.isRequired,\n\t\tedgeFill: PropTypes.string.isRequired,\n\t\tedgeFill2: PropTypes.string.isRequired,\n\t\tedgeStrokeWidth: PropTypes.number.isRequired,\n\t\tr: PropTypes.number.isRequired,\n\t}).isRequired,\n\n\tindex: PropTypes.number,\n\tonDrag: PropTypes.func.isRequired,\n\tonDragComplete: PropTypes.func.isRequired,\n};\n\nEachEquidistantChannel.defaultProps = {\n\tyDisplayFormat: d => d.toFixed(2),\n\tinteractive: true,\n\tselected: false,\n\n\tonDrag: noop,\n\tonDragComplete: noop,\n\thoverText: {\n\t\tenable: false,\n\t}\n};\n\nexport default EachEquidistantChannel;"]},"metadata":{},"sourceType":"script"}