{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _d3Path = require(\"d3-path\");\n\nvar _GenericChartComponent = require(\"../../GenericChartComponent\");\n\nvar _GenericChartComponent2 = _interopRequireDefault(_GenericChartComponent);\n\nvar _GenericComponent = require(\"../../GenericComponent\");\n\nvar _StraightLine = require(\"./StraightLine\");\n\nvar _utils = require(\"../../utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ChannelWithArea = function (_Component) {\n  _inherits(ChannelWithArea, _Component);\n\n  function ChannelWithArea(props) {\n    _classCallCheck(this, ChannelWithArea);\n\n    var _this = _possibleConstructorReturn(this, (ChannelWithArea.__proto__ || Object.getPrototypeOf(ChannelWithArea)).call(this, props));\n\n    _this.renderSVG = _this.renderSVG.bind(_this);\n    _this.drawOnCanvas = _this.drawOnCanvas.bind(_this);\n    _this.isHover = _this.isHover.bind(_this);\n    return _this;\n  }\n\n  _createClass(ChannelWithArea, [{\n    key: \"isHover\",\n    value: function isHover(moreProps) {\n      var _props = this.props,\n          tolerance = _props.tolerance,\n          onHover = _props.onHover;\n\n      if ((0, _utils.isDefined)(onHover)) {\n        var _helper = helper(this.props, moreProps),\n            lines = _helper.lines,\n            line1 = _helper.line1,\n            line2 = _helper.line2;\n\n        if ((0, _utils.isDefined)(line1) && (0, _utils.isDefined)(line2)) {\n          var mouseXY = moreProps.mouseXY,\n              xScale = moreProps.xScale,\n              yScale = moreProps.chartConfig.yScale;\n          var line1Hovering = (0, _StraightLine.isHovering)({\n            x1Value: lines.line1.x1,\n            y1Value: lines.line1.y1,\n            x2Value: lines.line1.x2,\n            y2Value: lines.line1.y2,\n            type: \"LINE\",\n            mouseXY: mouseXY,\n            tolerance: tolerance,\n            xScale: xScale,\n            yScale: yScale\n          });\n          var line2Hovering = (0, _StraightLine.isHovering)({\n            x1Value: lines.line2.x1,\n            y1Value: lines.line2.y1,\n            x2Value: lines.line2.x2,\n            y2Value: lines.line2.y2,\n            type: \"LINE\",\n            mouseXY: mouseXY,\n            tolerance: tolerance,\n            xScale: xScale,\n            yScale: yScale\n          });\n          return line1Hovering || line2Hovering;\n        }\n      }\n\n      return false;\n    }\n  }, {\n    key: \"drawOnCanvas\",\n    value: function drawOnCanvas(ctx, moreProps) {\n      var _props2 = this.props,\n          stroke = _props2.stroke,\n          strokeWidth = _props2.strokeWidth,\n          fillOpacity = _props2.fillOpacity,\n          strokeOpacity = _props2.strokeOpacity,\n          fill = _props2.fill;\n\n      var _helper2 = helper(this.props, moreProps),\n          line1 = _helper2.line1,\n          line2 = _helper2.line2;\n\n      if ((0, _utils.isDefined)(line1)) {\n        var x1 = line1.x1,\n            y1 = line1.y1,\n            x2 = line1.x2,\n            y2 = line1.y2;\n        ctx.lineWidth = strokeWidth;\n        ctx.strokeStyle = (0, _utils.hexToRGBA)(stroke, strokeOpacity);\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n\n        if ((0, _utils.isDefined)(line2)) {\n          var line2Y1 = line2.y1,\n              line2Y2 = line2.y2;\n          ctx.beginPath();\n          ctx.moveTo(x1, line2Y1);\n          ctx.lineTo(x2, line2Y2);\n          ctx.stroke();\n          ctx.fillStyle = (0, _utils.hexToRGBA)(fill, fillOpacity);\n          ctx.beginPath();\n          ctx.moveTo(x1, y1);\n          ctx.lineTo(x2, y2);\n          ctx.lineTo(x2, line2Y2);\n          ctx.lineTo(x1, line2Y1);\n          ctx.closePath();\n          ctx.fill();\n        }\n      }\n    }\n  }, {\n    key: \"renderSVG\",\n    value: function renderSVG(moreProps) {\n      var _props3 = this.props,\n          stroke = _props3.stroke,\n          strokeWidth = _props3.strokeWidth,\n          fillOpacity = _props3.fillOpacity,\n          fill = _props3.fill,\n          strokeOpacity = _props3.strokeOpacity;\n\n      var _helper3 = helper(this.props, moreProps),\n          line1 = _helper3.line1,\n          line2 = _helper3.line2;\n\n      if ((0, _utils.isDefined)(line1)) {\n        var x1 = line1.x1,\n            y1 = line1.y1,\n            x2 = line1.x2,\n            y2 = line1.y2;\n        var line = (0, _utils.isDefined)(line2) ? _react2.default.createElement(\"line\", {\n          strokeWidth: strokeWidth,\n          stroke: stroke,\n          strokeOpacity: strokeOpacity,\n          x1: x1,\n          y1: line2.y1,\n          x2: x2,\n          y2: line2.y2\n        }) : null;\n        var area = (0, _utils.isDefined)(line2) ? _react2.default.createElement(\"path\", {\n          fill: fill,\n          fillOpacity: fillOpacity,\n          d: getPath(line1, line2)\n        }) : null;\n        return _react2.default.createElement(\"g\", null, _react2.default.createElement(\"line\", {\n          strokeWidth: strokeWidth,\n          stroke: stroke,\n          strokeOpacity: strokeOpacity,\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2\n        }), line, area);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _props4 = this.props,\n          selected = _props4.selected,\n          interactiveCursorClass = _props4.interactiveCursorClass;\n      var _props5 = this.props,\n          onDragStart = _props5.onDragStart,\n          onDrag = _props5.onDrag,\n          onDragComplete = _props5.onDragComplete,\n          onHover = _props5.onHover,\n          onUnHover = _props5.onUnHover;\n      return _react2.default.createElement(_GenericChartComponent2.default, {\n        isHover: this.isHover,\n        svgDraw: this.renderSVG,\n        canvasToDraw: _GenericComponent.getMouseCanvas,\n        canvasDraw: this.drawOnCanvas,\n        interactiveCursorClass: interactiveCursorClass,\n        selected: selected,\n        onDragStart: onDragStart,\n        onDrag: onDrag,\n        onDragComplete: onDragComplete,\n        onHover: onHover,\n        onUnHover: onUnHover,\n        drawOn: [\"mousemove\", \"mouseleave\", \"pan\", \"drag\"]\n      });\n    }\n  }]);\n\n  return ChannelWithArea;\n}(_react.Component);\n\nfunction getPath(line1, line2) {\n  var ctx = (0, _d3Path.path)();\n  ctx.moveTo(line1.x1, line1.y1);\n  ctx.lineTo(line1.x2, line1.y2);\n  ctx.lineTo(line1.x2, line2.y2);\n  ctx.lineTo(line1.x1, line2.y1);\n  ctx.closePath();\n  return ctx.toString();\n}\n\nfunction getLines(props, moreProps) {\n  var startXY = props.startXY,\n      endXY = props.endXY,\n      dy = props.dy,\n      type = props.type;\n  var xScale = moreProps.xScale;\n\n  if ((0, _utils.isNotDefined)(startXY) || (0, _utils.isNotDefined)(endXY)) {\n    return {};\n  }\n\n  var line1 = (0, _StraightLine.generateLine)({\n    type: type,\n    start: startXY,\n    end: endXY,\n    xScale: xScale\n  });\n  var line2 = (0, _utils.isDefined)(dy) ? _extends({}, line1, {\n    y1: line1.y1 + dy,\n    y2: line1.y2 + dy\n  }) : undefined;\n  return {\n    line1: line1,\n    line2: line2\n  };\n}\n\nfunction helper(props, moreProps) {\n  var lines = getLines(props, moreProps);\n  var xScale = moreProps.xScale,\n      yScale = moreProps.chartConfig.yScale;\n  var x1 = xScale(lines.line1.x1);\n  var y1 = yScale(lines.line1.y1);\n  var x2 = xScale(lines.line1.x2);\n  var y2 = yScale(lines.line1.y2);\n  var line2 = (0, _utils.isDefined)(lines.line2) ? {\n    x1: x1,\n    y1: yScale(lines.line2.y1),\n    x2: x2,\n    y2: yScale(lines.line2.y2)\n  } : undefined;\n  return {\n    lines: lines,\n    line1: {\n      x1: x1,\n      y1: y1,\n      x2: x2,\n      y2: y2\n    },\n    line2: line2\n  };\n}\n\nChannelWithArea.propTypes = {\n  interactiveCursorClass: _propTypes2.default.string,\n  stroke: _propTypes2.default.string.isRequired,\n  strokeWidth: _propTypes2.default.number.isRequired,\n  fill: _propTypes2.default.string.isRequired,\n  fillOpacity: _propTypes2.default.number.isRequired,\n  strokeOpacity: _propTypes2.default.number.isRequired,\n  type: _propTypes2.default.oneOf([\"XLINE\", // extends from -Infinity to +Infinity\n  \"RAY\", // extends to +/-Infinity in one direction\n  \"LINE\"] // extends between the set bounds\n  ).isRequired,\n  onDragStart: _propTypes2.default.func.isRequired,\n  onDrag: _propTypes2.default.func.isRequired,\n  onDragComplete: _propTypes2.default.func.isRequired,\n  onHover: _propTypes2.default.func,\n  onUnHover: _propTypes2.default.func,\n  defaultClassName: _propTypes2.default.string,\n  tolerance: _propTypes2.default.number.isRequired,\n  selected: _propTypes2.default.bool.isRequired\n};\nChannelWithArea.defaultProps = {\n  onDragStart: _utils.noop,\n  onDrag: _utils.noop,\n  onDragComplete: _utils.noop,\n  type: \"LINE\",\n  strokeWidth: 1,\n  tolerance: 4,\n  selected: false\n};\nexports.default = ChannelWithArea;","map":{"version":3,"mappings":"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","names":["ChannelWithArea","props","_classCallCheck","_this","renderSVG","bind","drawOnCanvas","isHover","moreProps","tolerance","onHover","helper","lines","line1","line2","mouseXY","xScale","yScale","chartConfig","line1Hovering","x1Value","x1","y1Value","y1","x2Value","x2","y2Value","y2","type","line2Hovering","ctx","stroke","strokeWidth","fillOpacity","strokeOpacity","fill","lineWidth","strokeStyle","beginPath","moveTo","lineTo","line2Y1","line2Y2","fillStyle","closePath","line","_react2","area","d","getPath","selected","interactiveCursorClass","onDragStart","onDrag","onDragComplete","onUnHover","svgDraw","canvasToDraw","canvasDraw","drawOn","toString","getLines","startXY","endXY","dy","start","end","undefined","propTypes","_propTypes2","string","isRequired","number","oneOf","func","defaultClassName","bool","defaultProps"],"sources":["../../../../src/lib/interactive/components/ChannelWithArea.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { path as d3Path } from \"d3-path\";\n\nimport GenericChartComponent from \"../../GenericChartComponent\";\nimport { getMouseCanvas } from \"../../GenericComponent\";\nimport { generateLine, isHovering } from \"./StraightLine\";\n\nimport { isDefined, isNotDefined, noop, hexToRGBA } from \"../../utils\";\n\nclass ChannelWithArea extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.renderSVG = this.renderSVG.bind(this);\n\t\tthis.drawOnCanvas = this.drawOnCanvas.bind(this);\n\t\tthis.isHover = this.isHover.bind(this);\n\t}\n\tisHover(moreProps) {\n\t\tconst { tolerance, onHover } = this.props;\n\n\t\tif (isDefined(onHover)) {\n\n\t\t\tconst { lines, line1, line2 } = helper(this.props, moreProps);\n\n\t\t\tif (isDefined(line1) && isDefined(line2)) {\n\t\t\t\tconst { mouseXY, xScale, chartConfig: { yScale } } = moreProps;\n\n\t\t\t\tconst line1Hovering = isHovering({\n\t\t\t\t\tx1Value: lines.line1.x1,\n\t\t\t\t\ty1Value: lines.line1.y1,\n\t\t\t\t\tx2Value: lines.line1.x2,\n\t\t\t\t\ty2Value: lines.line1.y2,\n\t\t\t\t\ttype: \"LINE\",\n\t\t\t\t\tmouseXY,\n\t\t\t\t\ttolerance,\n\t\t\t\t\txScale,\n\t\t\t\t\tyScale,\n\t\t\t\t});\n\t\t\t\tconst line2Hovering = isHovering({\n\t\t\t\t\tx1Value: lines.line2.x1,\n\t\t\t\t\ty1Value: lines.line2.y1,\n\t\t\t\t\tx2Value: lines.line2.x2,\n\t\t\t\t\ty2Value: lines.line2.y2,\n\t\t\t\t\ttype: \"LINE\",\n\t\t\t\t\tmouseXY,\n\t\t\t\t\ttolerance,\n\t\t\t\t\txScale,\n\t\t\t\t\tyScale,\n\t\t\t\t});\n\n\t\t\t\treturn line1Hovering || line2Hovering;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\tdrawOnCanvas(ctx, moreProps) {\n\t\tconst { stroke, strokeWidth, fillOpacity, strokeOpacity, fill } = this.props;\n\t\tconst { line1, line2 } = helper(this.props, moreProps);\n\n\t\tif (isDefined(line1)) {\n\t\t\tconst { x1, y1, x2, y2 } = line1;\n\n\t\t\tctx.lineWidth = strokeWidth;\n\t\t\tctx.strokeStyle = hexToRGBA(stroke, strokeOpacity);\n\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x1, y1);\n\t\t\tctx.lineTo(x2, y2);\n\t\t\tctx.stroke();\n\t\t\tif (isDefined(line2)) {\n\t\t\t\tconst {\n\t\t\t\t\ty1: line2Y1,\n\t\t\t\t\ty2: line2Y2\n\t\t\t\t} = line2;\n\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(x1, line2Y1);\n\t\t\t\tctx.lineTo(x2, line2Y2);\n\t\t\t\tctx.stroke();\n\n\t\t\t\tctx.fillStyle = hexToRGBA(fill, fillOpacity);\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(x1, y1);\n\n\t\t\t\tctx.lineTo(x2, y2);\n\t\t\t\tctx.lineTo(x2, line2Y2);\n\t\t\t\tctx.lineTo(x1, line2Y1);\n\n\t\t\t\tctx.closePath();\n\t\t\t\tctx.fill();\n\t\t\t}\n\t\t}\n\t}\n\trenderSVG(moreProps) {\n\t\tconst { stroke, strokeWidth, fillOpacity, fill, strokeOpacity } = this.props;\n\t\tconst { line1, line2 } = helper(this.props, moreProps);\n\n\t\tif (isDefined(line1)) {\n\t\t\tconst { x1, y1, x2, y2 } = line1;\n\t\t\tconst line = isDefined(line2)\n\t\t\t\t? <line\n\t\t\t\t\tstrokeWidth={strokeWidth}\n\t\t\t\t\tstroke={stroke}\n\t\t\t\t\tstrokeOpacity={strokeOpacity}\n\t\t\t\t\tx1={x1}\n\t\t\t\t\ty1={line2.y1}\n\t\t\t\t\tx2={x2}\n\t\t\t\t\ty2={line2.y2}\n\t\t\t\t/>\n\t\t\t\t: null;\n\t\t\tconst area = isDefined(line2)\n\t\t\t\t? <path\n\t\t\t\t\tfill={fill}\n\t\t\t\t\tfillOpacity={fillOpacity}\n\t\t\t\t\td={getPath(line1, line2)}\n\t\t\t\t/>\n\t\t\t\t: null;\n\n\t\t\treturn (\n\t\t\t\t<g>\n\t\t\t\t\t<line\n\t\t\t\t\t\tstrokeWidth={strokeWidth}\n\t\t\t\t\t\tstroke={stroke}\n\t\t\t\t\t\tstrokeOpacity={strokeOpacity}\n\t\t\t\t\t\tx1={x1}\n\t\t\t\t\t\ty1={y1}\n\t\t\t\t\t\tx2={x2}\n\t\t\t\t\t\ty2={y2}\n\t\t\t\t\t/>\n\t\t\t\t\t{line}\n\t\t\t\t\t{area}\n\t\t\t\t</g>\n\t\t\t);\n\t\t}\n\t}\n\trender() {\n\t\tconst { selected, interactiveCursorClass } = this.props;\n\t\tconst { onDragStart, onDrag, onDragComplete, onHover, onUnHover } = this.props;\n\n\t\treturn <GenericChartComponent\n\t\t\tisHover={this.isHover}\n\n\t\t\tsvgDraw={this.renderSVG}\n\t\t\tcanvasToDraw={getMouseCanvas}\n\t\t\tcanvasDraw={this.drawOnCanvas}\n\n\t\t\tinteractiveCursorClass={interactiveCursorClass}\n\t\t\tselected={selected}\n\n\t\t\tonDragStart={onDragStart}\n\t\t\tonDrag={onDrag}\n\t\t\tonDragComplete={onDragComplete}\n\t\t\tonHover={onHover}\n\t\t\tonUnHover={onUnHover}\n\n\t\t\tdrawOn={[\"mousemove\", \"mouseleave\", \"pan\", \"drag\"]}\n\t\t/>;\n\t}\n}\nfunction getPath(line1, line2) {\n\tconst ctx = d3Path();\n\tctx.moveTo(line1.x1, line1.y1);\n\tctx.lineTo(line1.x2, line1.y2);\n\tctx.lineTo(line1.x2, line2.y2);\n\tctx.lineTo(line1.x1, line2.y1);\n\n\tctx.closePath();\n\treturn ctx.toString();\n}\n\nfunction getLines(props, moreProps) {\n\tconst { startXY, endXY, dy, type } = props;\n\tconst { xScale } = moreProps;\n\n\tif (isNotDefined(startXY) || isNotDefined(endXY)) {\n\t\treturn {};\n\t}\n\tconst line1 = generateLine({\n\t\ttype,\n\t\tstart: startXY,\n\t\tend: endXY,\n\t\txScale,\n\t});\n\tconst line2 = isDefined(dy)\n\t\t? {\n\t\t\t...line1,\n\t\t\ty1: line1.y1 + dy,\n\t\t\ty2: line1.y2 + dy,\n\t\t}\n\t\t: undefined;\n\n\n\treturn {\n\t\tline1,\n\t\tline2,\n\t};\n}\n\nfunction helper(props, moreProps) {\n\tconst lines = getLines(props, moreProps);\n\tconst { xScale, chartConfig: { yScale } } = moreProps;\n\n\tconst x1 = xScale(lines.line1.x1);\n\tconst y1 = yScale(lines.line1.y1);\n\tconst x2 = xScale(lines.line1.x2);\n\tconst y2 = yScale(lines.line1.y2);\n\n\tconst line2 = isDefined(lines.line2)\n\t\t? {\n\t\t\tx1,\n\t\t\ty1: yScale(lines.line2.y1),\n\t\t\tx2,\n\t\t\ty2: yScale(lines.line2.y2),\n\t\t}\n\t\t: undefined;\n\n\treturn {\n\t\tlines,\n\t\tline1: {\n\t\t\tx1, y1, x2, y2\n\t\t},\n\t\tline2\n\t};\n}\n\nChannelWithArea.propTypes = {\n\tinteractiveCursorClass: PropTypes.string,\n\tstroke: PropTypes.string.isRequired,\n\tstrokeWidth: PropTypes.number.isRequired,\n\tfill: PropTypes.string.isRequired,\n\tfillOpacity: PropTypes.number.isRequired,\n\tstrokeOpacity: PropTypes.number.isRequired,\n\n\ttype: PropTypes.oneOf([\n\t\t\"XLINE\", // extends from -Infinity to +Infinity\n\t\t\"RAY\", // extends to +/-Infinity in one direction\n\t\t\"LINE\", // extends between the set bounds\n\t]).isRequired,\n\n\tonDragStart: PropTypes.func.isRequired,\n\tonDrag: PropTypes.func.isRequired,\n\tonDragComplete: PropTypes.func.isRequired,\n\tonHover: PropTypes.func,\n\tonUnHover: PropTypes.func,\n\n\tdefaultClassName: PropTypes.string,\n\n\ttolerance: PropTypes.number.isRequired,\n\tselected: PropTypes.bool.isRequired,\n};\n\nChannelWithArea.defaultProps = {\n\tonDragStart: noop,\n\tonDrag: noop,\n\tonDragComplete: noop,\n\ttype: \"LINE\",\n\n\tstrokeWidth: 1,\n\ttolerance: 4,\n\tselected: false,\n};\n\nexport default ChannelWithArea;"]},"metadata":{},"sourceType":"script"}