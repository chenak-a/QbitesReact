{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n/* eslint-disable flowtype/no-weak-types */\n\n\nimport nodejsCustomInspectSymbol from \"./nodejsCustomInspectSymbol.mjs\";\nvar MAX_ARRAY_LENGTH = 10;\nvar MAX_RECURSIVE_DEPTH = 2;\n/**\r\n * Used to print values in error messages.\r\n */\n\nexport default function inspect(value) {\n  return formatValue(value, []);\n}\n\nfunction formatValue(value, seenValues) {\n  switch (_typeof(value)) {\n    case 'string':\n      return JSON.stringify(value);\n\n    case 'function':\n      return value.name ? \"[function \".concat(value.name, \"]\") : '[function]';\n\n    case 'object':\n      if (value === null) {\n        return 'null';\n      }\n\n      return formatObjectValue(value, seenValues);\n\n    default:\n      return String(value);\n  }\n}\n\nfunction formatObjectValue(value, previouslySeenValues) {\n  if (previouslySeenValues.indexOf(value) !== -1) {\n    return '[Circular]';\n  }\n\n  var seenValues = [].concat(previouslySeenValues, [value]);\n  var customInspectFn = getCustomFn(value);\n\n  if (customInspectFn !== undefined) {\n    var customValue = customInspectFn.call(value); // check for infinite recursion\n\n    if (customValue !== value) {\n      return typeof customValue === 'string' ? customValue : formatValue(customValue, seenValues);\n    }\n  } else if (Array.isArray(value)) {\n    return formatArray(value, seenValues);\n  }\n\n  return formatObject(value, seenValues);\n}\n\nfunction formatObject(object, seenValues) {\n  var keys = Object.keys(object);\n\n  if (keys.length === 0) {\n    return '{}';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[' + getObjectTag(object) + ']';\n  }\n\n  var properties = keys.map(function (key) {\n    var value = formatValue(object[key], seenValues);\n    return key + ': ' + value;\n  });\n  return '{ ' + properties.join(', ') + ' }';\n}\n\nfunction formatArray(array, seenValues) {\n  if (array.length === 0) {\n    return '[]';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[Array]';\n  }\n\n  var len = Math.min(MAX_ARRAY_LENGTH, array.length);\n  var remaining = array.length - len;\n  var items = [];\n\n  for (var i = 0; i < len; ++i) {\n    items.push(formatValue(array[i], seenValues));\n  }\n\n  if (remaining === 1) {\n    items.push('... 1 more item');\n  } else if (remaining > 1) {\n    items.push(\"... \".concat(remaining, \" more items\"));\n  }\n\n  return '[' + items.join(', ') + ']';\n}\n\nfunction getCustomFn(object) {\n  var customInspectFn = object[String(nodejsCustomInspectSymbol)];\n\n  if (typeof customInspectFn === 'function') {\n    return customInspectFn;\n  }\n\n  if (typeof object.inspect === 'function') {\n    return object.inspect;\n  }\n}\n\nfunction getObjectTag(object) {\n  var tag = Object.prototype.toString.call(object).replace(/^\\[object /, '').replace(/]$/, '');\n\n  if (tag === 'Object' && typeof object.constructor === 'function') {\n    var name = object.constructor.name;\n\n    if (typeof name === 'string' && name !== '') {\n      return name;\n    }\n  }\n\n  return tag;\n}","map":{"version":3,"sources":["C:/Users/chena/QbitesReact/my-app/node_modules/graphql/jsutils/inspect.mjs"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","nodejsCustomInspectSymbol","MAX_ARRAY_LENGTH","MAX_RECURSIVE_DEPTH","inspect","value","formatValue","seenValues","JSON","stringify","name","concat","formatObjectValue","String","previouslySeenValues","indexOf","customInspectFn","getCustomFn","undefined","customValue","call","Array","isArray","formatArray","formatObject","object","keys","Object","length","getObjectTag","properties","map","key","join","array","len","Math","min","remaining","items","i","push","tag","toString","replace"],"mappings":"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","sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\r\n\r\n/* eslint-disable flowtype/no-weak-types */\r\nimport nodejsCustomInspectSymbol from \"./nodejsCustomInspectSymbol.mjs\";\r\nvar MAX_ARRAY_LENGTH = 10;\r\nvar MAX_RECURSIVE_DEPTH = 2;\r\n/**\r\n * Used to print values in error messages.\r\n */\r\n\r\nexport default function inspect(value) {\r\n  return formatValue(value, []);\r\n}\r\n\r\nfunction formatValue(value, seenValues) {\r\n  switch (_typeof(value)) {\r\n    case 'string':\r\n      return JSON.stringify(value);\r\n\r\n    case 'function':\r\n      return value.name ? \"[function \".concat(value.name, \"]\") : '[function]';\r\n\r\n    case 'object':\r\n      if (value === null) {\r\n        return 'null';\r\n      }\r\n\r\n      return formatObjectValue(value, seenValues);\r\n\r\n    default:\r\n      return String(value);\r\n  }\r\n}\r\n\r\nfunction formatObjectValue(value, previouslySeenValues) {\r\n  if (previouslySeenValues.indexOf(value) !== -1) {\r\n    return '[Circular]';\r\n  }\r\n\r\n  var seenValues = [].concat(previouslySeenValues, [value]);\r\n  var customInspectFn = getCustomFn(value);\r\n\r\n  if (customInspectFn !== undefined) {\r\n    var customValue = customInspectFn.call(value); // check for infinite recursion\r\n\r\n    if (customValue !== value) {\r\n      return typeof customValue === 'string' ? customValue : formatValue(customValue, seenValues);\r\n    }\r\n  } else if (Array.isArray(value)) {\r\n    return formatArray(value, seenValues);\r\n  }\r\n\r\n  return formatObject(value, seenValues);\r\n}\r\n\r\nfunction formatObject(object, seenValues) {\r\n  var keys = Object.keys(object);\r\n\r\n  if (keys.length === 0) {\r\n    return '{}';\r\n  }\r\n\r\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\r\n    return '[' + getObjectTag(object) + ']';\r\n  }\r\n\r\n  var properties = keys.map(function (key) {\r\n    var value = formatValue(object[key], seenValues);\r\n    return key + ': ' + value;\r\n  });\r\n  return '{ ' + properties.join(', ') + ' }';\r\n}\r\n\r\nfunction formatArray(array, seenValues) {\r\n  if (array.length === 0) {\r\n    return '[]';\r\n  }\r\n\r\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\r\n    return '[Array]';\r\n  }\r\n\r\n  var len = Math.min(MAX_ARRAY_LENGTH, array.length);\r\n  var remaining = array.length - len;\r\n  var items = [];\r\n\r\n  for (var i = 0; i < len; ++i) {\r\n    items.push(formatValue(array[i], seenValues));\r\n  }\r\n\r\n  if (remaining === 1) {\r\n    items.push('... 1 more item');\r\n  } else if (remaining > 1) {\r\n    items.push(\"... \".concat(remaining, \" more items\"));\r\n  }\r\n\r\n  return '[' + items.join(', ') + ']';\r\n}\r\n\r\nfunction getCustomFn(object) {\r\n  var customInspectFn = object[String(nodejsCustomInspectSymbol)];\r\n\r\n  if (typeof customInspectFn === 'function') {\r\n    return customInspectFn;\r\n  }\r\n\r\n  if (typeof object.inspect === 'function') {\r\n    return object.inspect;\r\n  }\r\n}\r\n\r\nfunction getObjectTag(object) {\r\n  var tag = Object.prototype.toString.call(object).replace(/^\\[object /, '').replace(/]$/, '');\r\n\r\n  if (tag === 'Object' && typeof object.constructor === 'function') {\r\n    var name = object.constructor.name;\r\n\r\n    if (typeof name === 'string' && name !== '') {\r\n      return name;\r\n    }\r\n  }\r\n\r\n  return tag;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}