{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"className\", \"noData\", \"columns\", \"flattenColumns\", \"colWidths\", \"columCount\", \"stickyOffsets\", \"direction\", \"fixHeader\", \"stickyTopOffset\", \"stickyBottomOffset\", \"stickyClassName\", \"onScroll\", \"maxContentScroll\", \"children\"];\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport classNames from 'classnames';\nimport { fillRef } from \"rc-util/es/ref\";\nimport ColGroup from '../ColGroup';\nimport TableContext from '../context/TableContext';\n\nfunction useColumnWidth(colWidths, columCount) {\n  return useMemo(function () {\n    var cloneColumns = [];\n\n    for (var i = 0; i < columCount; i += 1) {\n      var val = colWidths[i];\n\n      if (val !== undefined) {\n        cloneColumns[i] = val;\n      } else {\n        return null;\n      }\n    }\n\n    return cloneColumns;\n  }, [colWidths.join('_'), columCount]);\n}\n\nvar FixedHolder = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var className = _ref.className,\n      noData = _ref.noData,\n      columns = _ref.columns,\n      flattenColumns = _ref.flattenColumns,\n      colWidths = _ref.colWidths,\n      columCount = _ref.columCount,\n      stickyOffsets = _ref.stickyOffsets,\n      direction = _ref.direction,\n      fixHeader = _ref.fixHeader,\n      stickyTopOffset = _ref.stickyTopOffset,\n      stickyBottomOffset = _ref.stickyBottomOffset,\n      stickyClassName = _ref.stickyClassName,\n      onScroll = _ref.onScroll,\n      maxContentScroll = _ref.maxContentScroll,\n      children = _ref.children,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var _React$useContext = React.useContext(TableContext),\n      prefixCls = _React$useContext.prefixCls,\n      scrollbarSize = _React$useContext.scrollbarSize,\n      isSticky = _React$useContext.isSticky;\n\n  var combinationScrollBarSize = isSticky && !fixHeader ? 0 : scrollbarSize; // Pass wheel to scroll event\n\n  var scrollRef = React.useRef(null);\n  var setScrollRef = React.useCallback(function (element) {\n    fillRef(ref, element);\n    fillRef(scrollRef, element);\n  }, []);\n  React.useEffect(function () {\n    var _scrollRef$current;\n\n    function onWheel(e) {\n      var currentTarget = e.currentTarget,\n          deltaX = e.deltaX;\n\n      if (deltaX) {\n        onScroll({\n          currentTarget: currentTarget,\n          scrollLeft: currentTarget.scrollLeft + deltaX\n        });\n        e.preventDefault();\n      }\n    }\n\n    (_scrollRef$current = scrollRef.current) === null || _scrollRef$current === void 0 ? void 0 : _scrollRef$current.addEventListener('wheel', onWheel);\n    return function () {\n      var _scrollRef$current2;\n\n      (_scrollRef$current2 = scrollRef.current) === null || _scrollRef$current2 === void 0 ? void 0 : _scrollRef$current2.removeEventListener('wheel', onWheel);\n    };\n  }, []); // Check if all flattenColumns has width\n\n  var allFlattenColumnsWithWidth = React.useMemo(function () {\n    return flattenColumns.every(function (column) {\n      return column.width >= 0;\n    });\n  }, [flattenColumns]); // Add scrollbar column\n\n  var lastColumn = flattenColumns[flattenColumns.length - 1];\n  var ScrollBarColumn = {\n    fixed: lastColumn ? lastColumn.fixed : null,\n    scrollbar: true,\n    onHeaderCell: function onHeaderCell() {\n      return {\n        className: \"\".concat(prefixCls, \"-cell-scrollbar\")\n      };\n    }\n  };\n  var columnsWithScrollbar = useMemo(function () {\n    return combinationScrollBarSize ? [].concat(_toConsumableArray(columns), [ScrollBarColumn]) : columns;\n  }, [combinationScrollBarSize, columns]);\n  var flattenColumnsWithScrollbar = useMemo(function () {\n    return combinationScrollBarSize ? [].concat(_toConsumableArray(flattenColumns), [ScrollBarColumn]) : flattenColumns;\n  }, [combinationScrollBarSize, flattenColumns]); // Calculate the sticky offsets\n\n  var headerStickyOffsets = useMemo(function () {\n    var right = stickyOffsets.right,\n        left = stickyOffsets.left;\n    return _objectSpread(_objectSpread({}, stickyOffsets), {}, {\n      left: direction === 'rtl' ? [].concat(_toConsumableArray(left.map(function (width) {\n        return width + combinationScrollBarSize;\n      })), [0]) : left,\n      right: direction === 'rtl' ? right : [].concat(_toConsumableArray(right.map(function (width) {\n        return width + combinationScrollBarSize;\n      })), [0]),\n      isSticky: isSticky\n    });\n  }, [combinationScrollBarSize, stickyOffsets, isSticky]);\n  var mergedColumnWidth = useColumnWidth(colWidths, columCount);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: _objectSpread({\n      overflow: 'hidden'\n    }, isSticky ? {\n      top: stickyTopOffset,\n      bottom: stickyBottomOffset\n    } : {}),\n    ref: setScrollRef,\n    className: classNames(className, _defineProperty({}, stickyClassName, !!stickyClassName))\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    style: {\n      tableLayout: 'fixed',\n      visibility: noData || mergedColumnWidth ? null : 'hidden'\n    }\n  }, (!noData || !maxContentScroll || allFlattenColumnsWithWidth) && /*#__PURE__*/React.createElement(ColGroup, {\n    colWidths: mergedColumnWidth ? [].concat(_toConsumableArray(mergedColumnWidth), [combinationScrollBarSize]) : [],\n    columCount: columCount + 1,\n    columns: flattenColumnsWithScrollbar\n  }), children(_objectSpread(_objectSpread({}, props), {}, {\n    stickyOffsets: headerStickyOffsets,\n    columns: columnsWithScrollbar,\n    flattenColumns: flattenColumnsWithScrollbar\n  }))));\n});\nFixedHolder.displayName = 'FixedHolder';\nexport default FixedHolder;","map":{"version":3,"sources":["C:/Users/chena/QbitesReact/my-app/node_modules/rc-table/es/FixedHolder/index.js"],"names":["_defineProperty","_objectSpread","_toConsumableArray","_objectWithoutProperties","_excluded","React","useMemo","classNames","fillRef","ColGroup","TableContext","useColumnWidth","colWidths","columCount","cloneColumns","i","val","undefined","join","FixedHolder","forwardRef","_ref","ref","className","noData","columns","flattenColumns","stickyOffsets","direction","fixHeader","stickyTopOffset","stickyBottomOffset","stickyClassName","onScroll","maxContentScroll","children","props","_React$useContext","useContext","prefixCls","scrollbarSize","isSticky","combinationScrollBarSize","scrollRef","useRef","setScrollRef","useCallback","element","useEffect","_scrollRef$current","onWheel","e","currentTarget","deltaX","scrollLeft","preventDefault","current","addEventListener","_scrollRef$current2","removeEventListener","allFlattenColumnsWithWidth","every","column","width","lastColumn","length","ScrollBarColumn","fixed","scrollbar","onHeaderCell","concat","columnsWithScrollbar","flattenColumnsWithScrollbar","headerStickyOffsets","right","left","map","mergedColumnWidth","createElement","style","overflow","top","bottom","tableLayout","visibility","displayName"],"mappings":"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","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\r\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\r\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\r\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\r\nvar _excluded = [\"className\", \"noData\", \"columns\", \"flattenColumns\", \"colWidths\", \"columCount\", \"stickyOffsets\", \"direction\", \"fixHeader\", \"stickyTopOffset\", \"stickyBottomOffset\", \"stickyClassName\", \"onScroll\", \"maxContentScroll\", \"children\"];\r\nimport * as React from 'react';\r\nimport { useMemo } from 'react';\r\nimport classNames from 'classnames';\r\nimport { fillRef } from \"rc-util/es/ref\";\r\nimport ColGroup from '../ColGroup';\r\nimport TableContext from '../context/TableContext';\r\n\r\nfunction useColumnWidth(colWidths, columCount) {\r\n  return useMemo(function () {\r\n    var cloneColumns = [];\r\n\r\n    for (var i = 0; i < columCount; i += 1) {\r\n      var val = colWidths[i];\r\n\r\n      if (val !== undefined) {\r\n        cloneColumns[i] = val;\r\n      } else {\r\n        return null;\r\n      }\r\n    }\r\n\r\n    return cloneColumns;\r\n  }, [colWidths.join('_'), columCount]);\r\n}\r\n\r\nvar FixedHolder = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\r\n  var className = _ref.className,\r\n      noData = _ref.noData,\r\n      columns = _ref.columns,\r\n      flattenColumns = _ref.flattenColumns,\r\n      colWidths = _ref.colWidths,\r\n      columCount = _ref.columCount,\r\n      stickyOffsets = _ref.stickyOffsets,\r\n      direction = _ref.direction,\r\n      fixHeader = _ref.fixHeader,\r\n      stickyTopOffset = _ref.stickyTopOffset,\r\n      stickyBottomOffset = _ref.stickyBottomOffset,\r\n      stickyClassName = _ref.stickyClassName,\r\n      onScroll = _ref.onScroll,\r\n      maxContentScroll = _ref.maxContentScroll,\r\n      children = _ref.children,\r\n      props = _objectWithoutProperties(_ref, _excluded);\r\n\r\n  var _React$useContext = React.useContext(TableContext),\r\n      prefixCls = _React$useContext.prefixCls,\r\n      scrollbarSize = _React$useContext.scrollbarSize,\r\n      isSticky = _React$useContext.isSticky;\r\n\r\n  var combinationScrollBarSize = isSticky && !fixHeader ? 0 : scrollbarSize; // Pass wheel to scroll event\r\n\r\n  var scrollRef = React.useRef(null);\r\n  var setScrollRef = React.useCallback(function (element) {\r\n    fillRef(ref, element);\r\n    fillRef(scrollRef, element);\r\n  }, []);\r\n  React.useEffect(function () {\r\n    var _scrollRef$current;\r\n\r\n    function onWheel(e) {\r\n      var currentTarget = e.currentTarget,\r\n          deltaX = e.deltaX;\r\n\r\n      if (deltaX) {\r\n        onScroll({\r\n          currentTarget: currentTarget,\r\n          scrollLeft: currentTarget.scrollLeft + deltaX\r\n        });\r\n        e.preventDefault();\r\n      }\r\n    }\r\n\r\n    (_scrollRef$current = scrollRef.current) === null || _scrollRef$current === void 0 ? void 0 : _scrollRef$current.addEventListener('wheel', onWheel);\r\n    return function () {\r\n      var _scrollRef$current2;\r\n\r\n      (_scrollRef$current2 = scrollRef.current) === null || _scrollRef$current2 === void 0 ? void 0 : _scrollRef$current2.removeEventListener('wheel', onWheel);\r\n    };\r\n  }, []); // Check if all flattenColumns has width\r\n\r\n  var allFlattenColumnsWithWidth = React.useMemo(function () {\r\n    return flattenColumns.every(function (column) {\r\n      return column.width >= 0;\r\n    });\r\n  }, [flattenColumns]); // Add scrollbar column\r\n\r\n  var lastColumn = flattenColumns[flattenColumns.length - 1];\r\n  var ScrollBarColumn = {\r\n    fixed: lastColumn ? lastColumn.fixed : null,\r\n    scrollbar: true,\r\n    onHeaderCell: function onHeaderCell() {\r\n      return {\r\n        className: \"\".concat(prefixCls, \"-cell-scrollbar\")\r\n      };\r\n    }\r\n  };\r\n  var columnsWithScrollbar = useMemo(function () {\r\n    return combinationScrollBarSize ? [].concat(_toConsumableArray(columns), [ScrollBarColumn]) : columns;\r\n  }, [combinationScrollBarSize, columns]);\r\n  var flattenColumnsWithScrollbar = useMemo(function () {\r\n    return combinationScrollBarSize ? [].concat(_toConsumableArray(flattenColumns), [ScrollBarColumn]) : flattenColumns;\r\n  }, [combinationScrollBarSize, flattenColumns]); // Calculate the sticky offsets\r\n\r\n  var headerStickyOffsets = useMemo(function () {\r\n    var right = stickyOffsets.right,\r\n        left = stickyOffsets.left;\r\n    return _objectSpread(_objectSpread({}, stickyOffsets), {}, {\r\n      left: direction === 'rtl' ? [].concat(_toConsumableArray(left.map(function (width) {\r\n        return width + combinationScrollBarSize;\r\n      })), [0]) : left,\r\n      right: direction === 'rtl' ? right : [].concat(_toConsumableArray(right.map(function (width) {\r\n        return width + combinationScrollBarSize;\r\n      })), [0]),\r\n      isSticky: isSticky\r\n    });\r\n  }, [combinationScrollBarSize, stickyOffsets, isSticky]);\r\n  var mergedColumnWidth = useColumnWidth(colWidths, columCount);\r\n  return /*#__PURE__*/React.createElement(\"div\", {\r\n    style: _objectSpread({\r\n      overflow: 'hidden'\r\n    }, isSticky ? {\r\n      top: stickyTopOffset,\r\n      bottom: stickyBottomOffset\r\n    } : {}),\r\n    ref: setScrollRef,\r\n    className: classNames(className, _defineProperty({}, stickyClassName, !!stickyClassName))\r\n  }, /*#__PURE__*/React.createElement(\"table\", {\r\n    style: {\r\n      tableLayout: 'fixed',\r\n      visibility: noData || mergedColumnWidth ? null : 'hidden'\r\n    }\r\n  }, (!noData || !maxContentScroll || allFlattenColumnsWithWidth) && /*#__PURE__*/React.createElement(ColGroup, {\r\n    colWidths: mergedColumnWidth ? [].concat(_toConsumableArray(mergedColumnWidth), [combinationScrollBarSize]) : [],\r\n    columCount: columCount + 1,\r\n    columns: flattenColumnsWithScrollbar\r\n  }), children(_objectSpread(_objectSpread({}, props), {}, {\r\n    stickyOffsets: headerStickyOffsets,\r\n    columns: columnsWithScrollbar,\r\n    flattenColumns: flattenColumnsWithScrollbar\r\n  }))));\r\n});\r\nFixedHolder.displayName = 'FixedHolder';\r\nexport default FixedHolder;"]},"metadata":{},"sourceType":"module"}