{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport IconContext from \"@ant-design/icons/es/components/Context\";\nimport { FormProvider as RcFormProvider } from 'rc-field-form';\nimport useMemo from \"rc-util/es/hooks/useMemo\";\nimport LocaleProvider, { ANT_MARK } from '../locale-provider';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport { ConfigConsumer, ConfigContext } from './context';\nimport SizeContext, { SizeContextProvider } from './SizeContext';\nimport message from '../message';\nimport notification from '../notification';\nimport defaultLocale from '../locale/default';\nexport { ConfigContext, ConfigConsumer };\nexport var configConsumerProps = ['getTargetContainer', 'getPopupContainer', 'rootPrefixCls', 'getPrefixCls', 'renderEmpty', 'csp', 'autoInsertSpaceInButton', 'locale', 'pageHeader']; // These props is used by `useContext` directly in sub component\n\nvar PASSED_PROPS = ['getTargetContainer', 'getPopupContainer', 'renderEmpty', 'pageHeader', 'input', 'form'];\nexport var defaultPrefixCls = 'ant';\nvar globalPrefixCls;\n\nvar setGlobalConfig = function setGlobalConfig(params) {\n  if (params.prefixCls !== undefined) {\n    globalPrefixCls = params.prefixCls;\n  }\n};\n\nfunction getGlobalPrefixCls() {\n  return globalPrefixCls || defaultPrefixCls;\n}\n\nexport var globalConfig = function globalConfig() {\n  return {\n    getPrefixCls: function getPrefixCls(suffixCls, customizePrefixCls) {\n      if (customizePrefixCls) return customizePrefixCls;\n      return suffixCls ? \"\".concat(getGlobalPrefixCls(), \"-\").concat(suffixCls) : getGlobalPrefixCls();\n    },\n    getRootPrefixCls: function getRootPrefixCls(rootPrefixCls, customizePrefixCls) {\n      // Customize rootPrefixCls is first priority\n      if (rootPrefixCls) {\n        return rootPrefixCls;\n      } // If Global prefixCls provided, use this\n\n\n      if (globalPrefixCls) {\n        return globalPrefixCls;\n      } // [Legacy] If customize prefixCls provided, we cut it to get the prefixCls\n\n\n      if (customizePrefixCls && customizePrefixCls.includes('-')) {\n        return customizePrefixCls.replace(/^(.*)-[^-]*$/, '$1');\n      } // Fallback to default prefixCls\n\n\n      return getGlobalPrefixCls();\n    }\n  };\n};\n\nvar ProviderChildren = function ProviderChildren(props) {\n  var _a, _b;\n\n  var children = props.children,\n      csp = props.csp,\n      autoInsertSpaceInButton = props.autoInsertSpaceInButton,\n      form = props.form,\n      locale = props.locale,\n      componentSize = props.componentSize,\n      direction = props.direction,\n      space = props.space,\n      virtual = props.virtual,\n      dropdownMatchSelectWidth = props.dropdownMatchSelectWidth,\n      legacyLocale = props.legacyLocale,\n      parentContext = props.parentContext,\n      iconPrefixCls = props.iconPrefixCls;\n  var getPrefixCls = React.useCallback(function (suffixCls, customizePrefixCls) {\n    var prefixCls = props.prefixCls;\n    if (customizePrefixCls) return customizePrefixCls;\n    var mergedPrefixCls = prefixCls || parentContext.getPrefixCls('');\n    return suffixCls ? \"\".concat(mergedPrefixCls, \"-\").concat(suffixCls) : mergedPrefixCls;\n  }, [parentContext.getPrefixCls, props.prefixCls]);\n\n  var config = _extends(_extends({}, parentContext), {\n    csp: csp,\n    autoInsertSpaceInButton: autoInsertSpaceInButton,\n    locale: locale || legacyLocale,\n    direction: direction,\n    space: space,\n    virtual: virtual,\n    dropdownMatchSelectWidth: dropdownMatchSelectWidth,\n    getPrefixCls: getPrefixCls\n  }); // Pass the props used by `useContext` directly with child component.\n  // These props should merged into `config`.\n\n\n  PASSED_PROPS.forEach(function (propName) {\n    var propValue = props[propName];\n\n    if (propValue) {\n      config[propName] = propValue;\n    }\n  }); // https://github.com/ant-design/ant-design/issues/27617\n\n  var memoedConfig = useMemo(function () {\n    return config;\n  }, config, function (prevConfig, currentConfig) {\n    var prevKeys = Object.keys(prevConfig);\n    var currentKeys = Object.keys(currentConfig);\n    return prevKeys.length !== currentKeys.length || prevKeys.some(function (key) {\n      return prevConfig[key] !== currentConfig[key];\n    });\n  });\n  var memoIconContextValue = React.useMemo(function () {\n    return {\n      prefixCls: iconPrefixCls,\n      csp: csp\n    };\n  }, [iconPrefixCls]);\n  var childNode = children; // Additional Form provider\n\n  var validateMessages = {};\n\n  if (locale) {\n    validateMessages = ((_a = locale.Form) === null || _a === void 0 ? void 0 : _a.defaultValidateMessages) || ((_b = defaultLocale.Form) === null || _b === void 0 ? void 0 : _b.defaultValidateMessages) || {};\n  }\n\n  if (form && form.validateMessages) {\n    validateMessages = _extends(_extends({}, validateMessages), form.validateMessages);\n  }\n\n  if (Object.keys(validateMessages).length > 0) {\n    childNode = /*#__PURE__*/React.createElement(RcFormProvider, {\n      validateMessages: validateMessages\n    }, children);\n  }\n\n  if (locale) {\n    childNode = /*#__PURE__*/React.createElement(LocaleProvider, {\n      locale: locale,\n      _ANT_MARK__: ANT_MARK\n    }, childNode);\n  }\n\n  if (iconPrefixCls) {\n    childNode = /*#__PURE__*/React.createElement(IconContext.Provider, {\n      value: memoIconContextValue\n    }, childNode);\n  }\n\n  if (componentSize) {\n    childNode = /*#__PURE__*/React.createElement(SizeContextProvider, {\n      size: componentSize\n    }, childNode);\n  }\n\n  return /*#__PURE__*/React.createElement(ConfigContext.Provider, {\n    value: memoedConfig\n  }, childNode);\n};\n\nvar ConfigProvider = function ConfigProvider(props) {\n  React.useEffect(function () {\n    if (props.direction) {\n      message.config({\n        rtl: props.direction === 'rtl'\n      });\n      notification.config({\n        rtl: props.direction === 'rtl'\n      });\n    }\n  }, [props.direction]);\n  return /*#__PURE__*/React.createElement(LocaleReceiver, null, function (_, __, legacyLocale) {\n    return /*#__PURE__*/React.createElement(ConfigConsumer, null, function (context) {\n      return /*#__PURE__*/React.createElement(ProviderChildren, _extends({\n        parentContext: context,\n        legacyLocale: legacyLocale\n      }, props));\n    });\n  });\n};\n/** @private internal Usage. do not use in your production */\n\n\nConfigProvider.ConfigContext = ConfigContext;\nConfigProvider.SizeContext = SizeContext;\nConfigProvider.config = setGlobalConfig;\nexport default ConfigProvider;","map":{"version":3,"sources":["C:/Users/chena/QbitesReact/my-app/node_modules/antd/es/config-provider/index.js"],"names":["_extends","React","IconContext","FormProvider","RcFormProvider","useMemo","LocaleProvider","ANT_MARK","LocaleReceiver","ConfigConsumer","ConfigContext","SizeContext","SizeContextProvider","message","notification","defaultLocale","configConsumerProps","PASSED_PROPS","defaultPrefixCls","globalPrefixCls","setGlobalConfig","params","prefixCls","undefined","getGlobalPrefixCls","globalConfig","getPrefixCls","suffixCls","customizePrefixCls","concat","getRootPrefixCls","rootPrefixCls","includes","replace","ProviderChildren","props","_a","_b","children","csp","autoInsertSpaceInButton","form","locale","componentSize","direction","space","virtual","dropdownMatchSelectWidth","legacyLocale","parentContext","iconPrefixCls","useCallback","mergedPrefixCls","config","forEach","propName","propValue","memoedConfig","prevConfig","currentConfig","prevKeys","Object","keys","currentKeys","length","some","key","memoIconContextValue","childNode","validateMessages","Form","defaultValidateMessages","createElement","_ANT_MARK__","Provider","value","size","ConfigProvider","useEffect","rtl","_","__","context"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport * as React from 'react';\r\nimport IconContext from \"@ant-design/icons/es/components/Context\";\r\nimport { FormProvider as RcFormProvider } from 'rc-field-form';\r\nimport useMemo from \"rc-util/es/hooks/useMemo\";\r\nimport LocaleProvider, { ANT_MARK } from '../locale-provider';\r\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\r\nimport { ConfigConsumer, ConfigContext } from './context';\r\nimport SizeContext, { SizeContextProvider } from './SizeContext';\r\nimport message from '../message';\r\nimport notification from '../notification';\r\nimport defaultLocale from '../locale/default';\r\nexport { ConfigContext, ConfigConsumer };\r\nexport var configConsumerProps = ['getTargetContainer', 'getPopupContainer', 'rootPrefixCls', 'getPrefixCls', 'renderEmpty', 'csp', 'autoInsertSpaceInButton', 'locale', 'pageHeader']; // These props is used by `useContext` directly in sub component\r\n\r\nvar PASSED_PROPS = ['getTargetContainer', 'getPopupContainer', 'renderEmpty', 'pageHeader', 'input', 'form'];\r\nexport var defaultPrefixCls = 'ant';\r\nvar globalPrefixCls;\r\n\r\nvar setGlobalConfig = function setGlobalConfig(params) {\r\n  if (params.prefixCls !== undefined) {\r\n    globalPrefixCls = params.prefixCls;\r\n  }\r\n};\r\n\r\nfunction getGlobalPrefixCls() {\r\n  return globalPrefixCls || defaultPrefixCls;\r\n}\r\n\r\nexport var globalConfig = function globalConfig() {\r\n  return {\r\n    getPrefixCls: function getPrefixCls(suffixCls, customizePrefixCls) {\r\n      if (customizePrefixCls) return customizePrefixCls;\r\n      return suffixCls ? \"\".concat(getGlobalPrefixCls(), \"-\").concat(suffixCls) : getGlobalPrefixCls();\r\n    },\r\n    getRootPrefixCls: function getRootPrefixCls(rootPrefixCls, customizePrefixCls) {\r\n      // Customize rootPrefixCls is first priority\r\n      if (rootPrefixCls) {\r\n        return rootPrefixCls;\r\n      } // If Global prefixCls provided, use this\r\n\r\n\r\n      if (globalPrefixCls) {\r\n        return globalPrefixCls;\r\n      } // [Legacy] If customize prefixCls provided, we cut it to get the prefixCls\r\n\r\n\r\n      if (customizePrefixCls && customizePrefixCls.includes('-')) {\r\n        return customizePrefixCls.replace(/^(.*)-[^-]*$/, '$1');\r\n      } // Fallback to default prefixCls\r\n\r\n\r\n      return getGlobalPrefixCls();\r\n    }\r\n  };\r\n};\r\n\r\nvar ProviderChildren = function ProviderChildren(props) {\r\n  var _a, _b;\r\n\r\n  var children = props.children,\r\n      csp = props.csp,\r\n      autoInsertSpaceInButton = props.autoInsertSpaceInButton,\r\n      form = props.form,\r\n      locale = props.locale,\r\n      componentSize = props.componentSize,\r\n      direction = props.direction,\r\n      space = props.space,\r\n      virtual = props.virtual,\r\n      dropdownMatchSelectWidth = props.dropdownMatchSelectWidth,\r\n      legacyLocale = props.legacyLocale,\r\n      parentContext = props.parentContext,\r\n      iconPrefixCls = props.iconPrefixCls;\r\n  var getPrefixCls = React.useCallback(function (suffixCls, customizePrefixCls) {\r\n    var prefixCls = props.prefixCls;\r\n    if (customizePrefixCls) return customizePrefixCls;\r\n    var mergedPrefixCls = prefixCls || parentContext.getPrefixCls('');\r\n    return suffixCls ? \"\".concat(mergedPrefixCls, \"-\").concat(suffixCls) : mergedPrefixCls;\r\n  }, [parentContext.getPrefixCls, props.prefixCls]);\r\n\r\n  var config = _extends(_extends({}, parentContext), {\r\n    csp: csp,\r\n    autoInsertSpaceInButton: autoInsertSpaceInButton,\r\n    locale: locale || legacyLocale,\r\n    direction: direction,\r\n    space: space,\r\n    virtual: virtual,\r\n    dropdownMatchSelectWidth: dropdownMatchSelectWidth,\r\n    getPrefixCls: getPrefixCls\r\n  }); // Pass the props used by `useContext` directly with child component.\r\n  // These props should merged into `config`.\r\n\r\n\r\n  PASSED_PROPS.forEach(function (propName) {\r\n    var propValue = props[propName];\r\n\r\n    if (propValue) {\r\n      config[propName] = propValue;\r\n    }\r\n  }); // https://github.com/ant-design/ant-design/issues/27617\r\n\r\n  var memoedConfig = useMemo(function () {\r\n    return config;\r\n  }, config, function (prevConfig, currentConfig) {\r\n    var prevKeys = Object.keys(prevConfig);\r\n    var currentKeys = Object.keys(currentConfig);\r\n    return prevKeys.length !== currentKeys.length || prevKeys.some(function (key) {\r\n      return prevConfig[key] !== currentConfig[key];\r\n    });\r\n  });\r\n  var memoIconContextValue = React.useMemo(function () {\r\n    return {\r\n      prefixCls: iconPrefixCls,\r\n      csp: csp\r\n    };\r\n  }, [iconPrefixCls]);\r\n  var childNode = children; // Additional Form provider\r\n\r\n  var validateMessages = {};\r\n\r\n  if (locale) {\r\n    validateMessages = ((_a = locale.Form) === null || _a === void 0 ? void 0 : _a.defaultValidateMessages) || ((_b = defaultLocale.Form) === null || _b === void 0 ? void 0 : _b.defaultValidateMessages) || {};\r\n  }\r\n\r\n  if (form && form.validateMessages) {\r\n    validateMessages = _extends(_extends({}, validateMessages), form.validateMessages);\r\n  }\r\n\r\n  if (Object.keys(validateMessages).length > 0) {\r\n    childNode = /*#__PURE__*/React.createElement(RcFormProvider, {\r\n      validateMessages: validateMessages\r\n    }, children);\r\n  }\r\n\r\n  if (locale) {\r\n    childNode = /*#__PURE__*/React.createElement(LocaleProvider, {\r\n      locale: locale,\r\n      _ANT_MARK__: ANT_MARK\r\n    }, childNode);\r\n  }\r\n\r\n  if (iconPrefixCls) {\r\n    childNode = /*#__PURE__*/React.createElement(IconContext.Provider, {\r\n      value: memoIconContextValue\r\n    }, childNode);\r\n  }\r\n\r\n  if (componentSize) {\r\n    childNode = /*#__PURE__*/React.createElement(SizeContextProvider, {\r\n      size: componentSize\r\n    }, childNode);\r\n  }\r\n\r\n  return /*#__PURE__*/React.createElement(ConfigContext.Provider, {\r\n    value: memoedConfig\r\n  }, childNode);\r\n};\r\n\r\nvar ConfigProvider = function ConfigProvider(props) {\r\n  React.useEffect(function () {\r\n    if (props.direction) {\r\n      message.config({\r\n        rtl: props.direction === 'rtl'\r\n      });\r\n      notification.config({\r\n        rtl: props.direction === 'rtl'\r\n      });\r\n    }\r\n  }, [props.direction]);\r\n  return /*#__PURE__*/React.createElement(LocaleReceiver, null, function (_, __, legacyLocale) {\r\n    return /*#__PURE__*/React.createElement(ConfigConsumer, null, function (context) {\r\n      return /*#__PURE__*/React.createElement(ProviderChildren, _extends({\r\n        parentContext: context,\r\n        legacyLocale: legacyLocale\r\n      }, props));\r\n    });\r\n  });\r\n};\r\n/** @private internal Usage. do not use in your production */\r\n\r\n\r\nConfigProvider.ConfigContext = ConfigContext;\r\nConfigProvider.SizeContext = SizeContext;\r\nConfigProvider.config = setGlobalConfig;\r\nexport default ConfigProvider;"]},"metadata":{},"sourceType":"module"}