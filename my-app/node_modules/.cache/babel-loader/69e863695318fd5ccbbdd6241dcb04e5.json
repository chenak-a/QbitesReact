{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport RCNotification from 'rc-notification';\nimport LoadingOutlined from \"@ant-design/icons/es/icons/LoadingOutlined\";\nimport ExclamationCircleFilled from \"@ant-design/icons/es/icons/ExclamationCircleFilled\";\nimport CloseCircleFilled from \"@ant-design/icons/es/icons/CloseCircleFilled\";\nimport CheckCircleFilled from \"@ant-design/icons/es/icons/CheckCircleFilled\";\nimport InfoCircleFilled from \"@ant-design/icons/es/icons/InfoCircleFilled\";\nimport createUseMessage from './hooks/useMessage';\nimport { globalConfig } from '../config-provider';\nvar messageInstance;\nvar defaultDuration = 3;\nvar defaultTop;\nvar key = 1;\nvar localPrefixCls = '';\nvar transitionName = 'move-up';\nvar hasTransitionName = false;\nvar getContainer;\nvar maxCount;\nvar rtl = false;\nexport function getKeyThenIncreaseKey() {\n  return key++;\n}\n\nfunction setMessageConfig(options) {\n  if (options.top !== undefined) {\n    defaultTop = options.top;\n    messageInstance = null; // delete messageInstance for new defaultTop\n  }\n\n  if (options.duration !== undefined) {\n    defaultDuration = options.duration;\n  }\n\n  if (options.prefixCls !== undefined) {\n    localPrefixCls = options.prefixCls;\n  }\n\n  if (options.getContainer !== undefined) {\n    getContainer = options.getContainer;\n  }\n\n  if (options.transitionName !== undefined) {\n    transitionName = options.transitionName;\n    messageInstance = null; // delete messageInstance for new transitionName\n\n    hasTransitionName = true;\n  }\n\n  if (options.maxCount !== undefined) {\n    maxCount = options.maxCount;\n    messageInstance = null;\n  }\n\n  if (options.rtl !== undefined) {\n    rtl = options.rtl;\n  }\n}\n\nfunction getRCNotificationInstance(args, callback) {\n  var customizePrefixCls = args.prefixCls;\n\n  var _globalConfig = globalConfig(),\n      getPrefixCls = _globalConfig.getPrefixCls,\n      getRootPrefixCls = _globalConfig.getRootPrefixCls;\n\n  var prefixCls = getPrefixCls('message', customizePrefixCls || localPrefixCls);\n  var rootPrefixCls = getRootPrefixCls(args.rootPrefixCls, prefixCls);\n\n  if (messageInstance) {\n    callback({\n      prefixCls: prefixCls,\n      rootPrefixCls: rootPrefixCls,\n      instance: messageInstance\n    });\n    return;\n  }\n\n  var instanceConfig = {\n    prefixCls: prefixCls,\n    transitionName: hasTransitionName ? transitionName : \"\".concat(rootPrefixCls, \"-\").concat(transitionName),\n    style: {\n      top: defaultTop\n    },\n    getContainer: getContainer,\n    maxCount: maxCount\n  };\n  RCNotification.newInstance(instanceConfig, function (instance) {\n    if (messageInstance) {\n      callback({\n        prefixCls: prefixCls,\n        rootPrefixCls: rootPrefixCls,\n        instance: messageInstance\n      });\n      return;\n    }\n\n    messageInstance = instance;\n\n    if (process.env.NODE_ENV === 'test') {\n      messageInstance.config = instanceConfig;\n    }\n\n    callback({\n      prefixCls: prefixCls,\n      rootPrefixCls: rootPrefixCls,\n      instance: instance\n    });\n  });\n}\n\nvar typeToIcon = {\n  info: InfoCircleFilled,\n  success: CheckCircleFilled,\n  error: CloseCircleFilled,\n  warning: ExclamationCircleFilled,\n  loading: LoadingOutlined\n};\n\nfunction getRCNoticeProps(args, prefixCls) {\n  var _classNames;\n\n  var duration = args.duration !== undefined ? args.duration : defaultDuration;\n  var IconComponent = typeToIcon[args.type];\n  var messageClass = classNames(\"\".concat(prefixCls, \"-custom-content\"), (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-\").concat(args.type), args.type), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), rtl === true), _classNames));\n  return {\n    key: args.key,\n    duration: duration,\n    style: args.style || {},\n    className: args.className,\n    content: /*#__PURE__*/React.createElement(\"div\", {\n      className: messageClass\n    }, args.icon || IconComponent && /*#__PURE__*/React.createElement(IconComponent, null), /*#__PURE__*/React.createElement(\"span\", null, args.content)),\n    onClose: args.onClose,\n    onClick: args.onClick\n  };\n}\n\nfunction notice(args) {\n  var target = args.key || key++;\n  var closePromise = new Promise(function (resolve) {\n    var callback = function callback() {\n      if (typeof args.onClose === 'function') {\n        args.onClose();\n      }\n\n      return resolve(true);\n    };\n\n    getRCNotificationInstance(args, function (_ref) {\n      var prefixCls = _ref.prefixCls,\n          instance = _ref.instance;\n      instance.notice(getRCNoticeProps(_extends(_extends({}, args), {\n        key: target,\n        onClose: callback\n      }), prefixCls));\n    });\n  });\n\n  var result = function result() {\n    if (messageInstance) {\n      messageInstance.removeNotice(target);\n    }\n  };\n\n  result.then = function (filled, rejected) {\n    return closePromise.then(filled, rejected);\n  };\n\n  result.promise = closePromise;\n  return result;\n}\n\nfunction isArgsProps(content) {\n  return Object.prototype.toString.call(content) === '[object Object]' && !!content.content;\n}\n\nvar api = {\n  open: notice,\n  config: setMessageConfig,\n  destroy: function destroy(messageKey) {\n    if (messageInstance) {\n      if (messageKey) {\n        var _messageInstance = messageInstance,\n            removeNotice = _messageInstance.removeNotice;\n        removeNotice(messageKey);\n      } else {\n        var _messageInstance2 = messageInstance,\n            destroy = _messageInstance2.destroy;\n        destroy();\n        messageInstance = null;\n      }\n    }\n  }\n};\nexport function attachTypeApi(originalApi, type) {\n  originalApi[type] = function (content, duration, onClose) {\n    if (isArgsProps(content)) {\n      return originalApi.open(_extends(_extends({}, content), {\n        type: type\n      }));\n    }\n\n    if (typeof duration === 'function') {\n      onClose = duration;\n      duration = undefined;\n    }\n\n    return originalApi.open({\n      content: content,\n      duration: duration,\n      type: type,\n      onClose: onClose\n    });\n  };\n}\n['success', 'info', 'warning', 'error', 'loading'].forEach(function (type) {\n  return attachTypeApi(api, type);\n});\napi.warn = api.warning;\napi.useMessage = createUseMessage(getRCNotificationInstance, getRCNoticeProps);\n/** @private test Only function. Not work on production */\n\nexport var getInstance = function getInstance() {\n  return process.env.NODE_ENV === 'test' ? messageInstance : null;\n};\nexport default api;","map":{"version":3,"sources":["C:/Users/chena/QbitesReact/my-app/node_modules/antd/es/message/index.js"],"names":["_extends","_defineProperty","React","classNames","RCNotification","LoadingOutlined","ExclamationCircleFilled","CloseCircleFilled","CheckCircleFilled","InfoCircleFilled","createUseMessage","globalConfig","messageInstance","defaultDuration","defaultTop","key","localPrefixCls","transitionName","hasTransitionName","getContainer","maxCount","rtl","getKeyThenIncreaseKey","setMessageConfig","options","top","undefined","duration","prefixCls","getRCNotificationInstance","args","callback","customizePrefixCls","_globalConfig","getPrefixCls","getRootPrefixCls","rootPrefixCls","instance","instanceConfig","concat","style","newInstance","process","env","NODE_ENV","config","typeToIcon","info","success","error","warning","loading","getRCNoticeProps","_classNames","IconComponent","type","messageClass","className","content","createElement","icon","onClose","onClick","notice","target","closePromise","Promise","resolve","_ref","result","removeNotice","then","filled","rejected","promise","isArgsProps","Object","prototype","toString","call","api","open","destroy","messageKey","_messageInstance","_messageInstance2","attachTypeApi","originalApi","forEach","warn","useMessage","getInstance"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\r\nimport * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport RCNotification from 'rc-notification';\r\nimport LoadingOutlined from \"@ant-design/icons/es/icons/LoadingOutlined\";\r\nimport ExclamationCircleFilled from \"@ant-design/icons/es/icons/ExclamationCircleFilled\";\r\nimport CloseCircleFilled from \"@ant-design/icons/es/icons/CloseCircleFilled\";\r\nimport CheckCircleFilled from \"@ant-design/icons/es/icons/CheckCircleFilled\";\r\nimport InfoCircleFilled from \"@ant-design/icons/es/icons/InfoCircleFilled\";\r\nimport createUseMessage from './hooks/useMessage';\r\nimport { globalConfig } from '../config-provider';\r\nvar messageInstance;\r\nvar defaultDuration = 3;\r\nvar defaultTop;\r\nvar key = 1;\r\nvar localPrefixCls = '';\r\nvar transitionName = 'move-up';\r\nvar hasTransitionName = false;\r\nvar getContainer;\r\nvar maxCount;\r\nvar rtl = false;\r\nexport function getKeyThenIncreaseKey() {\r\n  return key++;\r\n}\r\n\r\nfunction setMessageConfig(options) {\r\n  if (options.top !== undefined) {\r\n    defaultTop = options.top;\r\n    messageInstance = null; // delete messageInstance for new defaultTop\r\n  }\r\n\r\n  if (options.duration !== undefined) {\r\n    defaultDuration = options.duration;\r\n  }\r\n\r\n  if (options.prefixCls !== undefined) {\r\n    localPrefixCls = options.prefixCls;\r\n  }\r\n\r\n  if (options.getContainer !== undefined) {\r\n    getContainer = options.getContainer;\r\n  }\r\n\r\n  if (options.transitionName !== undefined) {\r\n    transitionName = options.transitionName;\r\n    messageInstance = null; // delete messageInstance for new transitionName\r\n\r\n    hasTransitionName = true;\r\n  }\r\n\r\n  if (options.maxCount !== undefined) {\r\n    maxCount = options.maxCount;\r\n    messageInstance = null;\r\n  }\r\n\r\n  if (options.rtl !== undefined) {\r\n    rtl = options.rtl;\r\n  }\r\n}\r\n\r\nfunction getRCNotificationInstance(args, callback) {\r\n  var customizePrefixCls = args.prefixCls;\r\n\r\n  var _globalConfig = globalConfig(),\r\n      getPrefixCls = _globalConfig.getPrefixCls,\r\n      getRootPrefixCls = _globalConfig.getRootPrefixCls;\r\n\r\n  var prefixCls = getPrefixCls('message', customizePrefixCls || localPrefixCls);\r\n  var rootPrefixCls = getRootPrefixCls(args.rootPrefixCls, prefixCls);\r\n\r\n  if (messageInstance) {\r\n    callback({\r\n      prefixCls: prefixCls,\r\n      rootPrefixCls: rootPrefixCls,\r\n      instance: messageInstance\r\n    });\r\n    return;\r\n  }\r\n\r\n  var instanceConfig = {\r\n    prefixCls: prefixCls,\r\n    transitionName: hasTransitionName ? transitionName : \"\".concat(rootPrefixCls, \"-\").concat(transitionName),\r\n    style: {\r\n      top: defaultTop\r\n    },\r\n    getContainer: getContainer,\r\n    maxCount: maxCount\r\n  };\r\n  RCNotification.newInstance(instanceConfig, function (instance) {\r\n    if (messageInstance) {\r\n      callback({\r\n        prefixCls: prefixCls,\r\n        rootPrefixCls: rootPrefixCls,\r\n        instance: messageInstance\r\n      });\r\n      return;\r\n    }\r\n\r\n    messageInstance = instance;\r\n\r\n    if (process.env.NODE_ENV === 'test') {\r\n      messageInstance.config = instanceConfig;\r\n    }\r\n\r\n    callback({\r\n      prefixCls: prefixCls,\r\n      rootPrefixCls: rootPrefixCls,\r\n      instance: instance\r\n    });\r\n  });\r\n}\r\n\r\nvar typeToIcon = {\r\n  info: InfoCircleFilled,\r\n  success: CheckCircleFilled,\r\n  error: CloseCircleFilled,\r\n  warning: ExclamationCircleFilled,\r\n  loading: LoadingOutlined\r\n};\r\n\r\nfunction getRCNoticeProps(args, prefixCls) {\r\n  var _classNames;\r\n\r\n  var duration = args.duration !== undefined ? args.duration : defaultDuration;\r\n  var IconComponent = typeToIcon[args.type];\r\n  var messageClass = classNames(\"\".concat(prefixCls, \"-custom-content\"), (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-\").concat(args.type), args.type), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), rtl === true), _classNames));\r\n  return {\r\n    key: args.key,\r\n    duration: duration,\r\n    style: args.style || {},\r\n    className: args.className,\r\n    content: /*#__PURE__*/React.createElement(\"div\", {\r\n      className: messageClass\r\n    }, args.icon || IconComponent && /*#__PURE__*/React.createElement(IconComponent, null), /*#__PURE__*/React.createElement(\"span\", null, args.content)),\r\n    onClose: args.onClose,\r\n    onClick: args.onClick\r\n  };\r\n}\r\n\r\nfunction notice(args) {\r\n  var target = args.key || key++;\r\n  var closePromise = new Promise(function (resolve) {\r\n    var callback = function callback() {\r\n      if (typeof args.onClose === 'function') {\r\n        args.onClose();\r\n      }\r\n\r\n      return resolve(true);\r\n    };\r\n\r\n    getRCNotificationInstance(args, function (_ref) {\r\n      var prefixCls = _ref.prefixCls,\r\n          instance = _ref.instance;\r\n      instance.notice(getRCNoticeProps(_extends(_extends({}, args), {\r\n        key: target,\r\n        onClose: callback\r\n      }), prefixCls));\r\n    });\r\n  });\r\n\r\n  var result = function result() {\r\n    if (messageInstance) {\r\n      messageInstance.removeNotice(target);\r\n    }\r\n  };\r\n\r\n  result.then = function (filled, rejected) {\r\n    return closePromise.then(filled, rejected);\r\n  };\r\n\r\n  result.promise = closePromise;\r\n  return result;\r\n}\r\n\r\nfunction isArgsProps(content) {\r\n  return Object.prototype.toString.call(content) === '[object Object]' && !!content.content;\r\n}\r\n\r\nvar api = {\r\n  open: notice,\r\n  config: setMessageConfig,\r\n  destroy: function destroy(messageKey) {\r\n    if (messageInstance) {\r\n      if (messageKey) {\r\n        var _messageInstance = messageInstance,\r\n            removeNotice = _messageInstance.removeNotice;\r\n        removeNotice(messageKey);\r\n      } else {\r\n        var _messageInstance2 = messageInstance,\r\n            destroy = _messageInstance2.destroy;\r\n        destroy();\r\n        messageInstance = null;\r\n      }\r\n    }\r\n  }\r\n};\r\nexport function attachTypeApi(originalApi, type) {\r\n  originalApi[type] = function (content, duration, onClose) {\r\n    if (isArgsProps(content)) {\r\n      return originalApi.open(_extends(_extends({}, content), {\r\n        type: type\r\n      }));\r\n    }\r\n\r\n    if (typeof duration === 'function') {\r\n      onClose = duration;\r\n      duration = undefined;\r\n    }\r\n\r\n    return originalApi.open({\r\n      content: content,\r\n      duration: duration,\r\n      type: type,\r\n      onClose: onClose\r\n    });\r\n  };\r\n}\r\n['success', 'info', 'warning', 'error', 'loading'].forEach(function (type) {\r\n  return attachTypeApi(api, type);\r\n});\r\napi.warn = api.warning;\r\napi.useMessage = createUseMessage(getRCNotificationInstance, getRCNoticeProps);\r\n/** @private test Only function. Not work on production */\r\n\r\nexport var getInstance = function getInstance() {\r\n  return process.env.NODE_ENV === 'test' ? messageInstance : null;\r\n};\r\nexport default api;"]},"metadata":{},"sourceType":"module"}