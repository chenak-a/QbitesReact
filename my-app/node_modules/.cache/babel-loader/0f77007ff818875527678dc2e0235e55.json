{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _utils = require(\"../../utils\");\n\nvar _utils2 = require(\"../utils\");\n\nvar _ChartDataUtil = require(\"../../utils/ChartDataUtil\");\n\nvar _HoverTextNearMouse = require(\"../components/HoverTextNearMouse\");\n\nvar _HoverTextNearMouse2 = _interopRequireDefault(_HoverTextNearMouse);\n\nvar _InteractiveText = require(\"../components/InteractiveText\");\n\nvar _InteractiveText2 = _interopRequireDefault(_InteractiveText);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar EachText = function (_Component) {\n  _inherits(EachText, _Component);\n\n  function EachText(props) {\n    _classCallCheck(this, EachText);\n\n    var _this = _possibleConstructorReturn(this, (EachText.__proto__ || Object.getPrototypeOf(EachText)).call(this, props));\n\n    _this.handleHover = _this.handleHover.bind(_this);\n    _this.handleDragStart = _this.handleDragStart.bind(_this);\n    _this.handleDrag = _this.handleDrag.bind(_this);\n    _this.isHover = _utils2.isHover.bind(_this);\n    _this.saveNodeType = _utils2.saveNodeType.bind(_this);\n    _this.nodes = {};\n    _this.state = {\n      hover: false\n    };\n    return _this;\n  }\n\n  _createClass(EachText, [{\n    key: \"handleDragStart\",\n    value: function handleDragStart(moreProps) {\n      var position = this.props.position;\n      var mouseXY = moreProps.mouseXY;\n      var yScale = moreProps.chartConfig.yScale,\n          xScale = moreProps.xScale;\n\n      var _mouseXY = _slicedToArray(mouseXY, 2),\n          mouseX = _mouseXY[0],\n          mouseY = _mouseXY[1];\n\n      var _position = _slicedToArray(position, 2),\n          textCX = _position[0],\n          textCY = _position[1];\n\n      var dx = mouseX - xScale(textCX);\n      var dy = mouseY - yScale(textCY);\n      this.dragStartPosition = {\n        position: position,\n        dx: dx,\n        dy: dy\n      };\n    }\n  }, {\n    key: \"handleDrag\",\n    value: function handleDrag(moreProps) {\n      var _props = this.props,\n          index = _props.index,\n          onDrag = _props.onDrag;\n\n      var _moreProps$mouseXY = _slicedToArray(moreProps.mouseXY, 2),\n          mouseY = _moreProps$mouseXY[1],\n          yScale = moreProps.chartConfig.yScale,\n          xAccessor = moreProps.xAccessor,\n          mouseXY = moreProps.mouseXY,\n          plotData = moreProps.plotData,\n          xScale = moreProps.xScale;\n\n      var _dragStartPosition = this.dragStartPosition,\n          dx = _dragStartPosition.dx,\n          dy = _dragStartPosition.dy;\n      var xValue = xScale.invert(xScale((0, _ChartDataUtil.getXValue)(xScale, xAccessor, mouseXY, plotData)) - dx); // xScale.invert(xScale(xAccessor(currentItem)) - dx);\n\n      var xyValue = [xValue, yScale.invert(mouseY - dy)];\n      onDrag(index, xyValue);\n    }\n  }, {\n    key: \"handleHover\",\n    value: function handleHover(moreProps) {\n      if (this.state.hover !== moreProps.hovering) {\n        this.setState({\n          hover: moreProps.hovering\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _props2 = this.props,\n          position = _props2.position,\n          bgFill = _props2.bgFill,\n          bgOpacity = _props2.bgOpacity,\n          bgStroke = _props2.bgStroke,\n          bgStrokeWidth = _props2.bgStrokeWidth,\n          textFill = _props2.textFill,\n          fontFamily = _props2.fontFamily,\n          fontSize = _props2.fontSize,\n          fontWeight = _props2.fontWeight,\n          fontStyle = _props2.fontStyle,\n          text = _props2.text,\n          hoverText = _props2.hoverText,\n          selected = _props2.selected,\n          onDragComplete = _props2.onDragComplete;\n      var hover = this.state.hover;\n      var hoverHandler = {\n        onHover: this.handleHover,\n        onUnHover: this.handleHover\n      };\n\n      var hoverTextEnabled = hoverText.enable,\n          hoverTextSelected = hoverText.selectedText,\n          hoverTextUnselected = hoverText.text,\n          restHoverTextProps = _objectWithoutProperties(hoverText, [\"enable\", \"selectedText\", \"text\"]);\n\n      return _react2.default.createElement(\"g\", null, _react2.default.createElement(_InteractiveText2.default, _extends({\n        ref: this.saveNodeType(\"text\"),\n        selected: selected || hover,\n        interactiveCursorClass: \"react-stockcharts-move-cursor\"\n      }, hoverHandler, {\n        onDragStart: this.handleDragStart,\n        onDrag: this.handleDrag,\n        onDragComplete: onDragComplete,\n        position: position,\n        bgFill: bgFill,\n        bgOpacity: bgOpacity,\n        bgStroke: bgStroke || textFill,\n        bgStrokeWidth: bgStrokeWidth,\n        textFill: textFill,\n        fontFamily: fontFamily,\n        fontStyle: fontStyle,\n        fontWeight: fontWeight,\n        fontSize: fontSize,\n        text: text\n      })), _react2.default.createElement(_HoverTextNearMouse2.default, _extends({\n        show: hoverTextEnabled && hover\n      }, restHoverTextProps, {\n        text: selected ? hoverTextSelected : hoverTextUnselected\n      })));\n    }\n  }]);\n\n  return EachText;\n}(_react.Component);\n/*\r\nexport function getNewXY(moreProps, snapTo) {\r\n\tconst { xScale, xAccessor, plotData, mouseXY } = moreProps;\r\n\r\n\tconst currentItem = getCurrentItem(xScale, xAccessor, mouseXY, plotData);\r\n\tconst x = xAccessor(currentItem);\r\n\tconst y = snapTo(currentItem);\r\n\r\n\treturn [x, y];\r\n}\r\n */\n\n\nEachText.propTypes = {\n  index: _propTypes2.default.number,\n  position: _propTypes2.default.array.isRequired,\n  bgFill: _propTypes2.default.string.isRequired,\n  bgOpacity: _propTypes2.default.number.isRequired,\n  bgStrokeWidth: _propTypes2.default.number.isRequired,\n  bgStroke: _propTypes2.default.string,\n  textFill: _propTypes2.default.string.isRequired,\n  fontWeight: _propTypes2.default.string.isRequired,\n  fontFamily: _propTypes2.default.string.isRequired,\n  fontStyle: _propTypes2.default.string.isRequired,\n  fontSize: _propTypes2.default.number.isRequired,\n  text: _propTypes2.default.string.isRequired,\n  selected: _propTypes2.default.bool.isRequired,\n  onDrag: _propTypes2.default.func.isRequired,\n  onDragComplete: _propTypes2.default.func.isRequired,\n  hoverText: _propTypes2.default.object.isRequired\n};\nEachText.defaultProps = {\n  onDrag: _utils.noop,\n  onDragComplete: _utils.noop,\n  bgOpacity: 1,\n  bgStrokeWidth: 1,\n  selected: false,\n  fill: \"#8AAFE2\",\n  hoverText: _extends({}, _HoverTextNearMouse2.default.defaultProps, {\n    enable: true,\n    bgHeight: \"auto\",\n    bgWidth: \"auto\",\n    text: \"Click to select object\"\n  })\n};\nexports.default = EachText;","map":{"version":3,"sources":["../../../../src/lib/interactive/wrapper/EachText.js"],"names":["EachText","hover","moreProps","position","mouseXY","yScale","xScale","mouseX","mouseY","textCX","textCY","dx","dy","index","onDrag","xAccessor","plotData","xValue","xyValue","hovering","bgFill","bgOpacity","bgStroke","bgStrokeWidth","textFill","fontFamily","fontSize","fontWeight","fontStyle","text","hoverText","selected","onDragComplete","hoverHandler","onHover","onUnHover","handleHover","hoverTextEnabled","hoverTextSelected","hoverTextUnselected","restHoverTextProps","isRequired","fill","enable","bgHeight","bgWidth"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { noop } from \"../../utils\";\nimport { saveNodeType, isHover } from \"../utils\";\nimport { getXValue } from \"../../utils/ChartDataUtil\";\n\nimport HoverTextNearMouse from \"../components/HoverTextNearMouse\";\nimport InteractiveText from \"../components/InteractiveText\";\n\nclass EachText extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.handleHover = this.handleHover.bind(this);\n\n\t\tthis.handleDragStart = this.handleDragStart.bind(this);\n\t\tthis.handleDrag = this.handleDrag.bind(this);\n\n\t\tthis.isHover = isHover.bind(this);\n\t\tthis.saveNodeType = saveNodeType.bind(this);\n\t\tthis.nodes = {};\n\n\t\tthis.state = {\n\t\t\thover: false,\n\t\t};\n\t}\n\thandleDragStart(moreProps) {\n\t\tconst {\n\t\t\tposition,\n\t\t} = this.props;\n\t\tconst { mouseXY } = moreProps;\n\t\tconst { chartConfig: { yScale }, xScale } = moreProps;\n\t\tconst [mouseX, mouseY] = mouseXY;\n\n\t\tconst [textCX, textCY] = position;\n\t\tconst dx = mouseX - xScale(textCX);\n\t\tconst dy = mouseY - yScale(textCY);\n\n\t\tthis.dragStartPosition = {\n\t\t\tposition, dx, dy\n\t\t};\n\t}\n\thandleDrag(moreProps) {\n\t\tconst { index, onDrag } = this.props;\n\t\tconst {\n\t\t\tmouseXY: [, mouseY],\n\t\t\tchartConfig: { yScale },\n\t\t\txAccessor,\n\t\t\tmouseXY,\n\t\t\tplotData,\n\t\t\txScale,\n\t\t} = moreProps;\n\n\t\tconst { dx, dy } = this.dragStartPosition;\n\t\tconst xValue = xScale.invert(\n\t\t\txScale(getXValue(xScale, xAccessor, mouseXY, plotData)) - dx\n\t\t);\n\t\t// xScale.invert(xScale(xAccessor(currentItem)) - dx);\n\t\tconst xyValue = [\n\t\t\txValue,\n\t\t\tyScale.invert(mouseY - dy)\n\t\t];\n\n\t\tonDrag(index, xyValue);\n\t}\n\thandleHover(moreProps) {\n\t\tif (this.state.hover !== moreProps.hovering) {\n\t\t\tthis.setState({\n\t\t\t\thover: moreProps.hovering\n\t\t\t});\n\t\t}\n\t}\n\trender() {\n\t\tconst {\n\t\t\tposition,\n\t\t\tbgFill,\n\t\t\tbgOpacity,\n\t\t\tbgStroke,\n\t\t\tbgStrokeWidth,\n\t\t\ttextFill,\n\t\t\tfontFamily,\n\t\t\tfontSize,\n\t\t\tfontWeight,\n\t\t\tfontStyle,\n\t\t\ttext,\n\t\t\thoverText,\n\t\t\tselected,\n\t\t\tonDragComplete,\n\t\t} = this.props;\n\t\tconst { hover } = this.state;\n\n\t\tconst hoverHandler = {\n\t\t\tonHover: this.handleHover,\n\t\t\tonUnHover: this.handleHover\n\t\t};\n\n\t\tconst {\n\t\t\tenable: hoverTextEnabled,\n\t\t\tselectedText: hoverTextSelected,\n\t\t\ttext: hoverTextUnselected,\n\t\t\t...restHoverTextProps\n\t\t} = hoverText;\n\n\t\treturn <g>\n\t\t\t<InteractiveText\n\t\t\t\tref={this.saveNodeType(\"text\")}\n\t\t\t\tselected={selected || hover}\n\t\t\t\tinteractiveCursorClass=\"react-stockcharts-move-cursor\"\n\t\t\t\t{...hoverHandler}\n\n\t\t\t\tonDragStart={this.handleDragStart}\n\t\t\t\tonDrag={this.handleDrag}\n\t\t\t\tonDragComplete={onDragComplete}\n\t\t\t\tposition={position}\n\t\t\t\tbgFill={bgFill}\n\t\t\t\tbgOpacity={bgOpacity}\n\t\t\t\tbgStroke={bgStroke || textFill}\n\t\t\t\tbgStrokeWidth={bgStrokeWidth}\n\t\t\t\ttextFill={textFill}\n\t\t\t\tfontFamily={fontFamily}\n\t\t\t\tfontStyle={fontStyle}\n\t\t\t\tfontWeight={fontWeight}\n\t\t\t\tfontSize={fontSize}\n\t\t\t\ttext={text}\n\t\t\t/>\n\t\t\t<HoverTextNearMouse\n\t\t\t\tshow={hoverTextEnabled && hover}\n\t\t\t\t{...restHoverTextProps}\n\t\t\t\ttext={selected ? hoverTextSelected : hoverTextUnselected}\n\t\t\t/>\n\t\t</g>;\n\t}\n}\n/*\nexport function getNewXY(moreProps, snapTo) {\n\tconst { xScale, xAccessor, plotData, mouseXY } = moreProps;\n\n\tconst currentItem = getCurrentItem(xScale, xAccessor, mouseXY, plotData);\n\tconst x = xAccessor(currentItem);\n\tconst y = snapTo(currentItem);\n\n\treturn [x, y];\n}\n */\nEachText.propTypes = {\n\tindex: PropTypes.number,\n\n\tposition: PropTypes.array.isRequired,\n\tbgFill: PropTypes.string.isRequired,\n\tbgOpacity: PropTypes.number.isRequired,\n\tbgStrokeWidth: PropTypes.number.isRequired,\n\tbgStroke: PropTypes.string,\n\ttextFill: PropTypes.string.isRequired,\n\n\tfontWeight: PropTypes.string.isRequired,\n\tfontFamily: PropTypes.string.isRequired,\n\tfontStyle: PropTypes.string.isRequired,\n\tfontSize: PropTypes.number.isRequired,\n\n\ttext: PropTypes.string.isRequired,\n\tselected: PropTypes.bool.isRequired,\n\n\tonDrag: PropTypes.func.isRequired,\n\tonDragComplete: PropTypes.func.isRequired,\n\n\thoverText: PropTypes.object.isRequired,\n};\n\nEachText.defaultProps = {\n\tonDrag: noop,\n\tonDragComplete: noop,\n\tbgOpacity: 1,\n\tbgStrokeWidth: 1,\n\tselected: false,\n\tfill: \"#8AAFE2\",\n\thoverText: {\n\t\t...HoverTextNearMouse.defaultProps,\n\t\tenable: true,\n\t\tbgHeight: \"auto\",\n\t\tbgWidth: \"auto\",\n\t\ttext: \"Click to select object\",\n\t}\n};\n\nexport default EachText;"]},"metadata":{},"sourceType":"script"}