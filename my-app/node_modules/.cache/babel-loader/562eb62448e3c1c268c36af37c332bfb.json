{"ast":null,"code":"import { top, left, right, bottom, start } from \"../enums.js\";\nimport getBasePlacement from \"../utils/getBasePlacement.js\";\nimport getMainAxisFromPlacement from \"../utils/getMainAxisFromPlacement.js\";\nimport getAltAxis from \"../utils/getAltAxis.js\";\nimport within from \"../utils/within.js\";\nimport getLayoutRect from \"../dom-utils/getLayoutRect.js\";\nimport getOffsetParent from \"../dom-utils/getOffsetParent.js\";\nimport detectOverflow from \"../utils/detectOverflow.js\";\nimport getVariation from \"../utils/getVariation.js\";\nimport getFreshSideObject from \"../utils/getFreshSideObject.js\";\nimport { max as mathMax, min as mathMin } from \"../utils/math.js\";\n\nfunction preventOverflow(_ref) {\n  var state = _ref.state,\n      options = _ref.options,\n      name = _ref.name;\n  var _options$mainAxis = options.mainAxis,\n      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,\n      _options$altAxis = options.altAxis,\n      checkAltAxis = _options$altAxis === void 0 ? false : _options$altAxis,\n      boundary = options.boundary,\n      rootBoundary = options.rootBoundary,\n      altBoundary = options.altBoundary,\n      padding = options.padding,\n      _options$tether = options.tether,\n      tether = _options$tether === void 0 ? true : _options$tether,\n      _options$tetherOffset = options.tetherOffset,\n      tetherOffset = _options$tetherOffset === void 0 ? 0 : _options$tetherOffset;\n  var overflow = detectOverflow(state, {\n    boundary: boundary,\n    rootBoundary: rootBoundary,\n    padding: padding,\n    altBoundary: altBoundary\n  });\n  var basePlacement = getBasePlacement(state.placement);\n  var variation = getVariation(state.placement);\n  var isBasePlacement = !variation;\n  var mainAxis = getMainAxisFromPlacement(basePlacement);\n  var altAxis = getAltAxis(mainAxis);\n  var popperOffsets = state.modifiersData.popperOffsets;\n  var referenceRect = state.rects.reference;\n  var popperRect = state.rects.popper;\n  var tetherOffsetValue = typeof tetherOffset === 'function' ? tetherOffset(Object.assign({}, state.rects, {\n    placement: state.placement\n  })) : tetherOffset;\n  var data = {\n    x: 0,\n    y: 0\n  };\n\n  if (!popperOffsets) {\n    return;\n  }\n\n  if (checkMainAxis || checkAltAxis) {\n    var mainSide = mainAxis === 'y' ? top : left;\n    var altSide = mainAxis === 'y' ? bottom : right;\n    var len = mainAxis === 'y' ? 'height' : 'width';\n    var offset = popperOffsets[mainAxis];\n    var min = popperOffsets[mainAxis] + overflow[mainSide];\n    var max = popperOffsets[mainAxis] - overflow[altSide];\n    var additive = tether ? -popperRect[len] / 2 : 0;\n    var minLen = variation === start ? referenceRect[len] : popperRect[len];\n    var maxLen = variation === start ? -popperRect[len] : -referenceRect[len]; // We need to include the arrow in the calculation so the arrow doesn't go\n    // outside the reference bounds\n\n    var arrowElement = state.elements.arrow;\n    var arrowRect = tether && arrowElement ? getLayoutRect(arrowElement) : {\n      width: 0,\n      height: 0\n    };\n    var arrowPaddingObject = state.modifiersData['arrow#persistent'] ? state.modifiersData['arrow#persistent'].padding : getFreshSideObject();\n    var arrowPaddingMin = arrowPaddingObject[mainSide];\n    var arrowPaddingMax = arrowPaddingObject[altSide]; // If the reference length is smaller than the arrow length, we don't want\n    // to include its full size in the calculation. If the reference is small\n    // and near the edge of a boundary, the popper can overflow even if the\n    // reference is not overflowing as well (e.g. virtual elements with no\n    // width or height)\n\n    var arrowLen = within(0, referenceRect[len], arrowRect[len]);\n    var minOffset = isBasePlacement ? referenceRect[len] / 2 - additive - arrowLen - arrowPaddingMin - tetherOffsetValue : minLen - arrowLen - arrowPaddingMin - tetherOffsetValue;\n    var maxOffset = isBasePlacement ? -referenceRect[len] / 2 + additive + arrowLen + arrowPaddingMax + tetherOffsetValue : maxLen + arrowLen + arrowPaddingMax + tetherOffsetValue;\n    var arrowOffsetParent = state.elements.arrow && getOffsetParent(state.elements.arrow);\n    var clientOffset = arrowOffsetParent ? mainAxis === 'y' ? arrowOffsetParent.clientTop || 0 : arrowOffsetParent.clientLeft || 0 : 0;\n    var offsetModifierValue = state.modifiersData.offset ? state.modifiersData.offset[state.placement][mainAxis] : 0;\n    var tetherMin = popperOffsets[mainAxis] + minOffset - offsetModifierValue - clientOffset;\n    var tetherMax = popperOffsets[mainAxis] + maxOffset - offsetModifierValue;\n\n    if (checkMainAxis) {\n      var preventedOffset = within(tether ? mathMin(min, tetherMin) : min, offset, tether ? mathMax(max, tetherMax) : max);\n      popperOffsets[mainAxis] = preventedOffset;\n      data[mainAxis] = preventedOffset - offset;\n    }\n\n    if (checkAltAxis) {\n      var _mainSide = mainAxis === 'x' ? top : left;\n\n      var _altSide = mainAxis === 'x' ? bottom : right;\n\n      var _offset = popperOffsets[altAxis];\n\n      var _min = _offset + overflow[_mainSide];\n\n      var _max = _offset - overflow[_altSide];\n\n      var _preventedOffset = within(tether ? mathMin(_min, tetherMin) : _min, _offset, tether ? mathMax(_max, tetherMax) : _max);\n\n      popperOffsets[altAxis] = _preventedOffset;\n      data[altAxis] = _preventedOffset - _offset;\n    }\n  }\n\n  state.modifiersData[name] = data;\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'preventOverflow',\n  enabled: true,\n  phase: 'main',\n  fn: preventOverflow,\n  requiresIfExists: ['offset']\n};","map":{"version":3,"names":["top","left","right","bottom","start","getBasePlacement","getMainAxisFromPlacement","getAltAxis","within","getLayoutRect","getOffsetParent","detectOverflow","getVariation","getFreshSideObject","max","mathMax","min","mathMin","preventOverflow","_ref","state","options","name","_options$mainAxis","mainAxis","checkMainAxis","_options$altAxis","altAxis","checkAltAxis","boundary","rootBoundary","altBoundary","padding","_options$tether","tether","_options$tetherOffset","tetherOffset","overflow","basePlacement","placement","variation","isBasePlacement","popperOffsets","modifiersData","referenceRect","rects","reference","popperRect","popper","tetherOffsetValue","Object","assign","data","x","y","mainSide","altSide","len","offset","additive","minLen","maxLen","arrowElement","elements","arrow","arrowRect","width","height","arrowPaddingObject","arrowPaddingMin","arrowPaddingMax","arrowLen","minOffset","maxOffset","arrowOffsetParent","clientOffset","clientTop","clientLeft","offsetModifierValue","tetherMin","tetherMax","preventedOffset","_mainSide","_altSide","_offset","_min","_max","_preventedOffset","enabled","phase","fn","requiresIfExists"],"sources":["/home/chenak/QbitesReact/my-app/node_modules/@popperjs/core/lib/modifiers/preventOverflow.js"],"sourcesContent":["import { top, left, right, bottom, start } from \"../enums.js\";\nimport getBasePlacement from \"../utils/getBasePlacement.js\";\nimport getMainAxisFromPlacement from \"../utils/getMainAxisFromPlacement.js\";\nimport getAltAxis from \"../utils/getAltAxis.js\";\nimport within from \"../utils/within.js\";\nimport getLayoutRect from \"../dom-utils/getLayoutRect.js\";\nimport getOffsetParent from \"../dom-utils/getOffsetParent.js\";\nimport detectOverflow from \"../utils/detectOverflow.js\";\nimport getVariation from \"../utils/getVariation.js\";\nimport getFreshSideObject from \"../utils/getFreshSideObject.js\";\nimport { max as mathMax, min as mathMin } from \"../utils/math.js\";\n\nfunction preventOverflow(_ref) {\n  var state = _ref.state,\n      options = _ref.options,\n      name = _ref.name;\n  var _options$mainAxis = options.mainAxis,\n      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,\n      _options$altAxis = options.altAxis,\n      checkAltAxis = _options$altAxis === void 0 ? false : _options$altAxis,\n      boundary = options.boundary,\n      rootBoundary = options.rootBoundary,\n      altBoundary = options.altBoundary,\n      padding = options.padding,\n      _options$tether = options.tether,\n      tether = _options$tether === void 0 ? true : _options$tether,\n      _options$tetherOffset = options.tetherOffset,\n      tetherOffset = _options$tetherOffset === void 0 ? 0 : _options$tetherOffset;\n  var overflow = detectOverflow(state, {\n    boundary: boundary,\n    rootBoundary: rootBoundary,\n    padding: padding,\n    altBoundary: altBoundary\n  });\n  var basePlacement = getBasePlacement(state.placement);\n  var variation = getVariation(state.placement);\n  var isBasePlacement = !variation;\n  var mainAxis = getMainAxisFromPlacement(basePlacement);\n  var altAxis = getAltAxis(mainAxis);\n  var popperOffsets = state.modifiersData.popperOffsets;\n  var referenceRect = state.rects.reference;\n  var popperRect = state.rects.popper;\n  var tetherOffsetValue = typeof tetherOffset === 'function' ? tetherOffset(Object.assign({}, state.rects, {\n    placement: state.placement\n  })) : tetherOffset;\n  var data = {\n    x: 0,\n    y: 0\n  };\n\n  if (!popperOffsets) {\n    return;\n  }\n\n  if (checkMainAxis || checkAltAxis) {\n    var mainSide = mainAxis === 'y' ? top : left;\n    var altSide = mainAxis === 'y' ? bottom : right;\n    var len = mainAxis === 'y' ? 'height' : 'width';\n    var offset = popperOffsets[mainAxis];\n    var min = popperOffsets[mainAxis] + overflow[mainSide];\n    var max = popperOffsets[mainAxis] - overflow[altSide];\n    var additive = tether ? -popperRect[len] / 2 : 0;\n    var minLen = variation === start ? referenceRect[len] : popperRect[len];\n    var maxLen = variation === start ? -popperRect[len] : -referenceRect[len]; // We need to include the arrow in the calculation so the arrow doesn't go\n    // outside the reference bounds\n\n    var arrowElement = state.elements.arrow;\n    var arrowRect = tether && arrowElement ? getLayoutRect(arrowElement) : {\n      width: 0,\n      height: 0\n    };\n    var arrowPaddingObject = state.modifiersData['arrow#persistent'] ? state.modifiersData['arrow#persistent'].padding : getFreshSideObject();\n    var arrowPaddingMin = arrowPaddingObject[mainSide];\n    var arrowPaddingMax = arrowPaddingObject[altSide]; // If the reference length is smaller than the arrow length, we don't want\n    // to include its full size in the calculation. If the reference is small\n    // and near the edge of a boundary, the popper can overflow even if the\n    // reference is not overflowing as well (e.g. virtual elements with no\n    // width or height)\n\n    var arrowLen = within(0, referenceRect[len], arrowRect[len]);\n    var minOffset = isBasePlacement ? referenceRect[len] / 2 - additive - arrowLen - arrowPaddingMin - tetherOffsetValue : minLen - arrowLen - arrowPaddingMin - tetherOffsetValue;\n    var maxOffset = isBasePlacement ? -referenceRect[len] / 2 + additive + arrowLen + arrowPaddingMax + tetherOffsetValue : maxLen + arrowLen + arrowPaddingMax + tetherOffsetValue;\n    var arrowOffsetParent = state.elements.arrow && getOffsetParent(state.elements.arrow);\n    var clientOffset = arrowOffsetParent ? mainAxis === 'y' ? arrowOffsetParent.clientTop || 0 : arrowOffsetParent.clientLeft || 0 : 0;\n    var offsetModifierValue = state.modifiersData.offset ? state.modifiersData.offset[state.placement][mainAxis] : 0;\n    var tetherMin = popperOffsets[mainAxis] + minOffset - offsetModifierValue - clientOffset;\n    var tetherMax = popperOffsets[mainAxis] + maxOffset - offsetModifierValue;\n\n    if (checkMainAxis) {\n      var preventedOffset = within(tether ? mathMin(min, tetherMin) : min, offset, tether ? mathMax(max, tetherMax) : max);\n      popperOffsets[mainAxis] = preventedOffset;\n      data[mainAxis] = preventedOffset - offset;\n    }\n\n    if (checkAltAxis) {\n      var _mainSide = mainAxis === 'x' ? top : left;\n\n      var _altSide = mainAxis === 'x' ? bottom : right;\n\n      var _offset = popperOffsets[altAxis];\n\n      var _min = _offset + overflow[_mainSide];\n\n      var _max = _offset - overflow[_altSide];\n\n      var _preventedOffset = within(tether ? mathMin(_min, tetherMin) : _min, _offset, tether ? mathMax(_max, tetherMax) : _max);\n\n      popperOffsets[altAxis] = _preventedOffset;\n      data[altAxis] = _preventedOffset - _offset;\n    }\n  }\n\n  state.modifiersData[name] = data;\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'preventOverflow',\n  enabled: true,\n  phase: 'main',\n  fn: preventOverflow,\n  requiresIfExists: ['offset']\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}