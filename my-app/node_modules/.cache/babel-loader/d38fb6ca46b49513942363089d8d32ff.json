{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\"; // TODO: https://www.w3.org/TR/2017/NOTE-wai-aria-practices-1.1-20171214/examples/treeview/treeview-2/treeview-2a.html\n// Fully accessibility support\n\nimport * as React from 'react';\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport warning from \"rc-util/es/warning\";\nimport classNames from 'classnames';\nimport { TreeContext } from './contextTypes';\nimport { getDataAndAria, getDragChildrenKeys, parseCheckedKeys, conductExpandParent, calcSelectedKeys, calcDropPosition, arrAdd, arrDel, posToArr } from './util';\nimport { flattenTreeData, convertTreeToData, convertDataToEntities, warningWithoutKey, convertNodePropsToEventData, getTreeNodeProps } from './utils/treeUtil';\nimport NodeList, { MOTION_KEY, MotionEntity } from './NodeList';\nimport TreeNode from './TreeNode';\nimport { conductCheck } from './utils/conductUtil';\nimport DropIndicator from './DropIndicator';\n\nvar Tree = /*#__PURE__*/function (_React$Component) {\n  _inherits(Tree, _React$Component);\n\n  var _super = _createSuper(Tree);\n\n  function Tree() {\n    var _this;\n\n    _classCallCheck(this, Tree);\n\n    for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {\n      _args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(_args));\n    _this.destroyed = false;\n    _this.delayedDragEnterLogic = void 0;\n    _this.state = {\n      keyEntities: {},\n      indent: null,\n      selectedKeys: [],\n      checkedKeys: [],\n      halfCheckedKeys: [],\n      loadedKeys: [],\n      loadingKeys: [],\n      expandedKeys: [],\n      dragging: false,\n      dragChildrenKeys: [],\n      // dropTargetKey is the key of abstract-drop-node\n      // the abstract-drop-node is the real drop node when drag and drop\n      // not the DOM drag over node\n      dropTargetKey: null,\n      dropPosition: null,\n      dropContainerKey: null,\n      dropLevelOffset: null,\n      dropTargetPos: null,\n      dropAllowed: true,\n      // the abstract-drag-over-node\n      // if mouse is on the bottom of top dom node or no the top of the bottom dom node\n      // abstract-drag-over-node is the top node\n      dragOverNodeKey: null,\n      treeData: [],\n      flattenNodes: [],\n      focused: false,\n      activeKey: null,\n      listChanging: false,\n      prevProps: null\n    };\n    _this.dragStartMousePosition = null;\n    _this.dragNode = void 0;\n    _this.listRef = /*#__PURE__*/React.createRef();\n\n    _this.onNodeDragStart = function (event, node) {\n      var _this$state = _this.state,\n          expandedKeys = _this$state.expandedKeys,\n          keyEntities = _this$state.keyEntities;\n      var onDragStart = _this.props.onDragStart;\n      var eventKey = node.props.eventKey;\n      _this.dragNode = node;\n      _this.dragStartMousePosition = {\n        x: event.clientX,\n        y: event.clientY\n      };\n      var newExpandedKeys = arrDel(expandedKeys, eventKey);\n\n      _this.setState({\n        dragging: true,\n        dragChildrenKeys: getDragChildrenKeys(eventKey, keyEntities),\n        indent: _this.listRef.current.getIndentWidth()\n      });\n\n      _this.setExpandedKeys(newExpandedKeys);\n\n      window.addEventListener('dragend', _this.onWindowDragEnd);\n\n      if (onDragStart) {\n        onDragStart({\n          event: event,\n          node: convertNodePropsToEventData(node.props)\n        });\n      }\n    };\n\n    _this.onNodeDragEnter = function (event, node) {\n      var _this$state2 = _this.state,\n          expandedKeys = _this$state2.expandedKeys,\n          keyEntities = _this$state2.keyEntities,\n          dragChildrenKeys = _this$state2.dragChildrenKeys,\n          flattenNodes = _this$state2.flattenNodes,\n          indent = _this$state2.indent;\n      var _this$props = _this.props,\n          onDragEnter = _this$props.onDragEnter,\n          onExpand = _this$props.onExpand,\n          allowDrop = _this$props.allowDrop,\n          direction = _this$props.direction;\n      var pos = node.props.pos;\n\n      var _assertThisInitialize = _assertThisInitialized(_this),\n          dragNode = _assertThisInitialize.dragNode;\n\n      var _calcDropPosition = calcDropPosition(event, dragNode, node, indent, _this.dragStartMousePosition, allowDrop, flattenNodes, keyEntities, expandedKeys, direction),\n          dropPosition = _calcDropPosition.dropPosition,\n          dropLevelOffset = _calcDropPosition.dropLevelOffset,\n          dropTargetKey = _calcDropPosition.dropTargetKey,\n          dropContainerKey = _calcDropPosition.dropContainerKey,\n          dropTargetPos = _calcDropPosition.dropTargetPos,\n          dropAllowed = _calcDropPosition.dropAllowed,\n          dragOverNodeKey = _calcDropPosition.dragOverNodeKey;\n\n      if (!dragNode || // don't allow drop inside its children\n      dragChildrenKeys.indexOf(dropTargetKey) !== -1 || // don't allow drop when drop is not allowed caculated by calcDropPosition\n      !dropAllowed) {\n        _this.setState({\n          dragOverNodeKey: null,\n          dropPosition: null,\n          dropLevelOffset: null,\n          dropTargetKey: null,\n          dropContainerKey: null,\n          dropTargetPos: null,\n          dropAllowed: false\n        });\n\n        return;\n      } // Side effect for delay drag\n\n\n      if (!_this.delayedDragEnterLogic) {\n        _this.delayedDragEnterLogic = {};\n      }\n\n      Object.keys(_this.delayedDragEnterLogic).forEach(function (key) {\n        clearTimeout(_this.delayedDragEnterLogic[key]);\n      });\n\n      if (dragNode.props.eventKey !== node.props.eventKey) {\n        // hoist expand logic here\n        // since if logic is on the bottom\n        // it will be blocked by abstract dragover node check\n        //   => if you dragenter from top, you mouse will still be consider as in the top node\n        event.persist();\n        _this.delayedDragEnterLogic[pos] = window.setTimeout(function () {\n          if (!_this.state.dragging) return;\n\n          var newExpandedKeys = _toConsumableArray(expandedKeys);\n\n          var entity = keyEntities[node.props.eventKey];\n\n          if (entity && (entity.children || []).length) {\n            newExpandedKeys = arrAdd(expandedKeys, node.props.eventKey);\n          }\n\n          if (!('expandedKeys' in _this.props)) {\n            _this.setExpandedKeys(newExpandedKeys);\n          }\n\n          if (onExpand) {\n            onExpand(newExpandedKeys, {\n              node: convertNodePropsToEventData(node.props),\n              expanded: true,\n              nativeEvent: event.nativeEvent\n            });\n          }\n        }, 800);\n      } // Skip if drag node is self\n\n\n      if (dragNode.props.eventKey === dropTargetKey && dropLevelOffset === 0) {\n        _this.setState({\n          dragOverNodeKey: null,\n          dropPosition: null,\n          dropLevelOffset: null,\n          dropTargetKey: null,\n          dropContainerKey: null,\n          dropTargetPos: null,\n          dropAllowed: false\n        });\n\n        return;\n      } // Update drag over node and drag state\n\n\n      _this.setState({\n        dragOverNodeKey: dragOverNodeKey,\n        dropPosition: dropPosition,\n        dropLevelOffset: dropLevelOffset,\n        dropTargetKey: dropTargetKey,\n        dropContainerKey: dropContainerKey,\n        dropTargetPos: dropTargetPos,\n        dropAllowed: dropAllowed\n      });\n\n      if (onDragEnter) {\n        onDragEnter({\n          event: event,\n          node: convertNodePropsToEventData(node.props),\n          expandedKeys: expandedKeys\n        });\n      }\n    };\n\n    _this.onNodeDragOver = function (event, node) {\n      var _this$state3 = _this.state,\n          dragChildrenKeys = _this$state3.dragChildrenKeys,\n          flattenNodes = _this$state3.flattenNodes,\n          keyEntities = _this$state3.keyEntities,\n          expandedKeys = _this$state3.expandedKeys,\n          indent = _this$state3.indent;\n      var _this$props2 = _this.props,\n          onDragOver = _this$props2.onDragOver,\n          allowDrop = _this$props2.allowDrop,\n          direction = _this$props2.direction;\n\n      var _assertThisInitialize2 = _assertThisInitialized(_this),\n          dragNode = _assertThisInitialize2.dragNode;\n\n      var _calcDropPosition2 = calcDropPosition(event, dragNode, node, indent, _this.dragStartMousePosition, allowDrop, flattenNodes, keyEntities, expandedKeys, direction),\n          dropPosition = _calcDropPosition2.dropPosition,\n          dropLevelOffset = _calcDropPosition2.dropLevelOffset,\n          dropTargetKey = _calcDropPosition2.dropTargetKey,\n          dropContainerKey = _calcDropPosition2.dropContainerKey,\n          dropAllowed = _calcDropPosition2.dropAllowed,\n          dropTargetPos = _calcDropPosition2.dropTargetPos,\n          dragOverNodeKey = _calcDropPosition2.dragOverNodeKey;\n\n      if (!dragNode || dragChildrenKeys.indexOf(dropTargetKey) !== -1 || !dropAllowed) {\n        // don't allow drop inside its children\n        // don't allow drop when drop is not allowed caculated by calcDropPosition\n        return;\n      } // Update drag position\n\n\n      if (dragNode.props.eventKey === dropTargetKey && dropLevelOffset === 0) {\n        if (!(_this.state.dropPosition === null && _this.state.dropLevelOffset === null && _this.state.dropTargetKey === null && _this.state.dropContainerKey === null && _this.state.dropTargetPos === null && _this.state.dropAllowed === false && _this.state.dragOverNodeKey === null)) {\n          _this.setState({\n            dropPosition: null,\n            dropLevelOffset: null,\n            dropTargetKey: null,\n            dropContainerKey: null,\n            dropTargetPos: null,\n            dropAllowed: false,\n            dragOverNodeKey: null\n          });\n        }\n      } else if (!(dropPosition === _this.state.dropPosition && dropLevelOffset === _this.state.dropLevelOffset && dropTargetKey === _this.state.dropTargetKey && dropContainerKey === _this.state.dropContainerKey && dropTargetPos === _this.state.dropTargetPos && dropAllowed === _this.state.dropAllowed && dragOverNodeKey === _this.state.dragOverNodeKey)) {\n        _this.setState({\n          dropPosition: dropPosition,\n          dropLevelOffset: dropLevelOffset,\n          dropTargetKey: dropTargetKey,\n          dropContainerKey: dropContainerKey,\n          dropTargetPos: dropTargetPos,\n          dropAllowed: dropAllowed,\n          dragOverNodeKey: dragOverNodeKey\n        });\n      }\n\n      if (onDragOver) {\n        onDragOver({\n          event: event,\n          node: convertNodePropsToEventData(node.props)\n        });\n      }\n    };\n\n    _this.onNodeDragLeave = function (event, node) {\n      var onDragLeave = _this.props.onDragLeave;\n\n      if (onDragLeave) {\n        onDragLeave({\n          event: event,\n          node: convertNodePropsToEventData(node.props)\n        });\n      }\n    };\n\n    _this.onWindowDragEnd = function (event) {\n      _this.onNodeDragEnd(event, null, true);\n\n      window.removeEventListener('dragend', _this.onWindowDragEnd);\n    };\n\n    _this.onNodeDragEnd = function (event, node) {\n      var outsideTree = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var onDragEnd = _this.props.onDragEnd;\n\n      _this.setState({\n        dragOverNodeKey: null\n      });\n\n      _this.cleanDragState();\n\n      if (onDragEnd && !outsideTree) {\n        onDragEnd({\n          event: event,\n          node: convertNodePropsToEventData(node.props)\n        });\n      }\n\n      _this.dragNode = null;\n    };\n\n    _this.onNodeDrop = function (event, node) {\n      var _this$getActiveItem;\n\n      var outsideTree = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var _this$state4 = _this.state,\n          dragChildrenKeys = _this$state4.dragChildrenKeys,\n          dropPosition = _this$state4.dropPosition,\n          dropTargetKey = _this$state4.dropTargetKey,\n          dropTargetPos = _this$state4.dropTargetPos,\n          dropAllowed = _this$state4.dropAllowed;\n      if (!dropAllowed) return;\n      var onDrop = _this.props.onDrop;\n\n      _this.setState({\n        dragOverNodeKey: null\n      });\n\n      _this.cleanDragState();\n\n      if (dropTargetKey === null) return;\n\n      var abstractDropNodeProps = _objectSpread(_objectSpread({}, getTreeNodeProps(dropTargetKey, _this.getTreeNodeRequiredProps())), {}, {\n        active: ((_this$getActiveItem = _this.getActiveItem()) === null || _this$getActiveItem === void 0 ? void 0 : _this$getActiveItem.data.key) === dropTargetKey,\n        data: _this.state.keyEntities[dropTargetKey].node\n      });\n\n      var dropToChild = dragChildrenKeys.indexOf(dropTargetKey) !== -1;\n      warning(!dropToChild, \"Can not drop to dragNode's children node. This is a bug of rc-tree. Please report an issue.\");\n      var posArr = posToArr(dropTargetPos);\n      var dropResult = {\n        event: event,\n        node: convertNodePropsToEventData(abstractDropNodeProps),\n        dragNode: _this.dragNode ? convertNodePropsToEventData(_this.dragNode.props) : null,\n        dragNodesKeys: [_this.dragNode.props.eventKey].concat(dragChildrenKeys),\n        dropToGap: dropPosition !== 0,\n        dropPosition: dropPosition + Number(posArr[posArr.length - 1])\n      };\n\n      if (onDrop && !outsideTree) {\n        onDrop(dropResult);\n      }\n\n      _this.dragNode = null;\n    };\n\n    _this.cleanDragState = function () {\n      var dragging = _this.state.dragging;\n\n      if (dragging) {\n        _this.setState({\n          dragging: false,\n          dropPosition: null,\n          dropContainerKey: null,\n          dropTargetKey: null,\n          dropLevelOffset: null,\n          dropAllowed: true,\n          dragOverNodeKey: null\n        });\n      }\n\n      _this.dragStartMousePosition = null;\n    };\n\n    _this.onNodeClick = function (e, treeNode) {\n      var onClick = _this.props.onClick;\n\n      if (onClick) {\n        onClick(e, treeNode);\n      }\n    };\n\n    _this.onNodeDoubleClick = function (e, treeNode) {\n      var onDoubleClick = _this.props.onDoubleClick;\n\n      if (onDoubleClick) {\n        onDoubleClick(e, treeNode);\n      }\n    };\n\n    _this.onNodeSelect = function (e, treeNode) {\n      var selectedKeys = _this.state.selectedKeys;\n      var keyEntities = _this.state.keyEntities;\n      var _this$props3 = _this.props,\n          onSelect = _this$props3.onSelect,\n          multiple = _this$props3.multiple;\n      var selected = treeNode.selected,\n          key = treeNode.key;\n      var targetSelected = !selected; // Update selected keys\n\n      if (!targetSelected) {\n        selectedKeys = arrDel(selectedKeys, key);\n      } else if (!multiple) {\n        selectedKeys = [key];\n      } else {\n        selectedKeys = arrAdd(selectedKeys, key);\n      } // [Legacy] Not found related usage in doc or upper libs\n\n\n      var selectedNodes = selectedKeys.map(function (selectedKey) {\n        var entity = keyEntities[selectedKey];\n        if (!entity) return null;\n        return entity.node;\n      }).filter(function (node) {\n        return node;\n      });\n\n      _this.setUncontrolledState({\n        selectedKeys: selectedKeys\n      });\n\n      if (onSelect) {\n        onSelect(selectedKeys, {\n          event: 'select',\n          selected: targetSelected,\n          node: treeNode,\n          selectedNodes: selectedNodes,\n          nativeEvent: e.nativeEvent\n        });\n      }\n    };\n\n    _this.onNodeCheck = function (e, treeNode, checked) {\n      var _this$state5 = _this.state,\n          keyEntities = _this$state5.keyEntities,\n          oriCheckedKeys = _this$state5.checkedKeys,\n          oriHalfCheckedKeys = _this$state5.halfCheckedKeys;\n      var _this$props4 = _this.props,\n          checkStrictly = _this$props4.checkStrictly,\n          onCheck = _this$props4.onCheck;\n      var key = treeNode.key; // Prepare trigger arguments\n\n      var checkedObj;\n      var eventObj = {\n        event: 'check',\n        node: treeNode,\n        checked: checked,\n        nativeEvent: e.nativeEvent\n      };\n\n      if (checkStrictly) {\n        var checkedKeys = checked ? arrAdd(oriCheckedKeys, key) : arrDel(oriCheckedKeys, key);\n        var halfCheckedKeys = arrDel(oriHalfCheckedKeys, key);\n        checkedObj = {\n          checked: checkedKeys,\n          halfChecked: halfCheckedKeys\n        };\n        eventObj.checkedNodes = checkedKeys.map(function (checkedKey) {\n          return keyEntities[checkedKey];\n        }).filter(function (entity) {\n          return entity;\n        }).map(function (entity) {\n          return entity.node;\n        });\n\n        _this.setUncontrolledState({\n          checkedKeys: checkedKeys\n        });\n      } else {\n        // Always fill first\n        var _conductCheck = conductCheck([].concat(_toConsumableArray(oriCheckedKeys), [key]), true, keyEntities),\n            _checkedKeys = _conductCheck.checkedKeys,\n            _halfCheckedKeys = _conductCheck.halfCheckedKeys; // If remove, we do it again to correction\n\n\n        if (!checked) {\n          var keySet = new Set(_checkedKeys);\n          keySet.delete(key);\n\n          var _conductCheck2 = conductCheck(Array.from(keySet), {\n            checked: false,\n            halfCheckedKeys: _halfCheckedKeys\n          }, keyEntities);\n\n          _checkedKeys = _conductCheck2.checkedKeys;\n          _halfCheckedKeys = _conductCheck2.halfCheckedKeys;\n        }\n\n        checkedObj = _checkedKeys; // [Legacy] This is used for `rc-tree-select`\n\n        eventObj.checkedNodes = [];\n        eventObj.checkedNodesPositions = [];\n        eventObj.halfCheckedKeys = _halfCheckedKeys;\n\n        _checkedKeys.forEach(function (checkedKey) {\n          var entity = keyEntities[checkedKey];\n          if (!entity) return;\n          var node = entity.node,\n              pos = entity.pos;\n          eventObj.checkedNodes.push(node);\n          eventObj.checkedNodesPositions.push({\n            node: node,\n            pos: pos\n          });\n        });\n\n        _this.setUncontrolledState({\n          checkedKeys: _checkedKeys\n        }, false, {\n          halfCheckedKeys: _halfCheckedKeys\n        });\n      }\n\n      if (onCheck) {\n        onCheck(checkedObj, eventObj);\n      }\n    };\n\n    _this.onNodeLoad = function (treeNode) {\n      return new Promise(function (resolve, reject) {\n        // We need to get the latest state of loading/loaded keys\n        _this.setState(function (_ref) {\n          var _ref$loadedKeys = _ref.loadedKeys,\n              loadedKeys = _ref$loadedKeys === void 0 ? [] : _ref$loadedKeys,\n              _ref$loadingKeys = _ref.loadingKeys,\n              loadingKeys = _ref$loadingKeys === void 0 ? [] : _ref$loadingKeys;\n          var _this$props5 = _this.props,\n              loadData = _this$props5.loadData,\n              onLoad = _this$props5.onLoad;\n          var key = treeNode.key;\n\n          if (!loadData || loadedKeys.indexOf(key) !== -1 || loadingKeys.indexOf(key) !== -1) {\n            return null;\n          } // Process load data\n\n\n          var promise = loadData(treeNode);\n          promise.then(function () {\n            var _this$state6 = _this.state,\n                currentLoadedKeys = _this$state6.loadedKeys,\n                currentLoadingKeys = _this$state6.loadingKeys;\n            var newLoadedKeys = arrAdd(currentLoadedKeys, key);\n            var newLoadingKeys = arrDel(currentLoadingKeys, key); // onLoad should trigger before internal setState to avoid `loadData` trigger twice.\n            // https://github.com/ant-design/ant-design/issues/12464\n\n            if (onLoad) {\n              onLoad(newLoadedKeys, {\n                event: 'load',\n                node: treeNode\n              });\n            }\n\n            _this.setUncontrolledState({\n              loadedKeys: newLoadedKeys\n            });\n\n            _this.setState({\n              loadingKeys: newLoadingKeys\n            });\n\n            resolve();\n          }).catch(function (e) {\n            var currentLoadingKeys = _this.state.loadingKeys;\n            var newLoadingKeys = arrDel(currentLoadingKeys, key);\n\n            _this.setState({\n              loadingKeys: newLoadingKeys\n            });\n\n            reject(e);\n          });\n          return {\n            loadingKeys: arrAdd(loadingKeys, key)\n          };\n        });\n      });\n    };\n\n    _this.onNodeMouseEnter = function (event, node) {\n      var onMouseEnter = _this.props.onMouseEnter;\n\n      if (onMouseEnter) {\n        onMouseEnter({\n          event: event,\n          node: node\n        });\n      }\n    };\n\n    _this.onNodeMouseLeave = function (event, node) {\n      var onMouseLeave = _this.props.onMouseLeave;\n\n      if (onMouseLeave) {\n        onMouseLeave({\n          event: event,\n          node: node\n        });\n      }\n    };\n\n    _this.onNodeContextMenu = function (event, node) {\n      var onRightClick = _this.props.onRightClick;\n\n      if (onRightClick) {\n        event.preventDefault();\n        onRightClick({\n          event: event,\n          node: node\n        });\n      }\n    };\n\n    _this.onFocus = function () {\n      var onFocus = _this.props.onFocus;\n\n      _this.setState({\n        focused: true\n      });\n\n      if (onFocus) {\n        onFocus.apply(void 0, arguments);\n      }\n    };\n\n    _this.onBlur = function () {\n      var onBlur = _this.props.onBlur;\n\n      _this.setState({\n        focused: false\n      });\n\n      _this.onActiveChange(null);\n\n      if (onBlur) {\n        onBlur.apply(void 0, arguments);\n      }\n    };\n\n    _this.getTreeNodeRequiredProps = function () {\n      var _this$state7 = _this.state,\n          expandedKeys = _this$state7.expandedKeys,\n          selectedKeys = _this$state7.selectedKeys,\n          loadedKeys = _this$state7.loadedKeys,\n          loadingKeys = _this$state7.loadingKeys,\n          checkedKeys = _this$state7.checkedKeys,\n          halfCheckedKeys = _this$state7.halfCheckedKeys,\n          dragOverNodeKey = _this$state7.dragOverNodeKey,\n          dropPosition = _this$state7.dropPosition,\n          keyEntities = _this$state7.keyEntities;\n      return {\n        expandedKeys: expandedKeys || [],\n        selectedKeys: selectedKeys || [],\n        loadedKeys: loadedKeys || [],\n        loadingKeys: loadingKeys || [],\n        checkedKeys: checkedKeys || [],\n        halfCheckedKeys: halfCheckedKeys || [],\n        dragOverNodeKey: dragOverNodeKey,\n        dropPosition: dropPosition,\n        keyEntities: keyEntities\n      };\n    };\n\n    _this.setExpandedKeys = function (expandedKeys) {\n      var treeData = _this.state.treeData;\n      var flattenNodes = flattenTreeData(treeData, expandedKeys);\n\n      _this.setUncontrolledState({\n        expandedKeys: expandedKeys,\n        flattenNodes: flattenNodes\n      }, true);\n    };\n\n    _this.onNodeExpand = function (e, treeNode) {\n      var expandedKeys = _this.state.expandedKeys;\n      var listChanging = _this.state.listChanging;\n      var _this$props6 = _this.props,\n          onExpand = _this$props6.onExpand,\n          loadData = _this$props6.loadData;\n      var key = treeNode.key,\n          expanded = treeNode.expanded; // Do nothing when motion is in progress\n\n      if (listChanging) {\n        return;\n      } // Update selected keys\n\n\n      var index = expandedKeys.indexOf(key);\n      var targetExpanded = !expanded;\n      warning(expanded && index !== -1 || !expanded && index === -1, 'Expand state not sync with index check');\n\n      if (targetExpanded) {\n        expandedKeys = arrAdd(expandedKeys, key);\n      } else {\n        expandedKeys = arrDel(expandedKeys, key);\n      }\n\n      _this.setExpandedKeys(expandedKeys);\n\n      if (onExpand) {\n        onExpand(expandedKeys, {\n          node: treeNode,\n          expanded: targetExpanded,\n          nativeEvent: e.nativeEvent\n        });\n      } // Async Load data\n\n\n      if (targetExpanded && loadData) {\n        var loadPromise = _this.onNodeLoad(treeNode);\n\n        if (loadPromise) {\n          loadPromise.then(function () {\n            // [Legacy] Refresh logic\n            var newFlattenTreeData = flattenTreeData(_this.state.treeData, expandedKeys);\n\n            _this.setUncontrolledState({\n              flattenNodes: newFlattenTreeData\n            });\n          }).catch(function () {\n            var currentExpandedKeys = _this.state.expandedKeys;\n            var expandedKeysToRestore = arrDel(currentExpandedKeys, key);\n\n            _this.setExpandedKeys(expandedKeysToRestore);\n          });\n        }\n      }\n    };\n\n    _this.onListChangeStart = function () {\n      _this.setUncontrolledState({\n        listChanging: true\n      });\n    };\n\n    _this.onListChangeEnd = function () {\n      setTimeout(function () {\n        _this.setUncontrolledState({\n          listChanging: false\n        });\n      });\n    };\n\n    _this.onActiveChange = function (newActiveKey) {\n      var activeKey = _this.state.activeKey;\n      var onActiveChange = _this.props.onActiveChange;\n\n      if (activeKey === newActiveKey) {\n        return;\n      }\n\n      _this.setState({\n        activeKey: newActiveKey\n      });\n\n      if (newActiveKey !== null) {\n        _this.scrollTo({\n          key: newActiveKey\n        });\n      }\n\n      if (onActiveChange) {\n        onActiveChange(newActiveKey);\n      }\n    };\n\n    _this.getActiveItem = function () {\n      var _this$state8 = _this.state,\n          activeKey = _this$state8.activeKey,\n          flattenNodes = _this$state8.flattenNodes;\n\n      if (activeKey === null) {\n        return null;\n      }\n\n      return flattenNodes.find(function (_ref2) {\n        var key = _ref2.data.key;\n        return key === activeKey;\n      }) || null;\n    };\n\n    _this.offsetActiveKey = function (offset) {\n      var _this$state9 = _this.state,\n          flattenNodes = _this$state9.flattenNodes,\n          activeKey = _this$state9.activeKey;\n      var index = flattenNodes.findIndex(function (_ref3) {\n        var key = _ref3.data.key;\n        return key === activeKey;\n      }); // Align with index\n\n      if (index === -1 && offset < 0) {\n        index = flattenNodes.length;\n      }\n\n      index = (index + offset + flattenNodes.length) % flattenNodes.length;\n      var item = flattenNodes[index];\n\n      if (item) {\n        var key = item.data.key;\n\n        _this.onActiveChange(key);\n      } else {\n        _this.onActiveChange(null);\n      }\n    };\n\n    _this.onKeyDown = function (event) {\n      var _this$state10 = _this.state,\n          activeKey = _this$state10.activeKey,\n          expandedKeys = _this$state10.expandedKeys,\n          checkedKeys = _this$state10.checkedKeys;\n      var _this$props7 = _this.props,\n          onKeyDown = _this$props7.onKeyDown,\n          checkable = _this$props7.checkable,\n          selectable = _this$props7.selectable; // >>>>>>>>>> Direction\n\n      switch (event.which) {\n        case KeyCode.UP:\n          {\n            _this.offsetActiveKey(-1);\n\n            event.preventDefault();\n            break;\n          }\n\n        case KeyCode.DOWN:\n          {\n            _this.offsetActiveKey(1);\n\n            event.preventDefault();\n            break;\n          }\n      } // >>>>>>>>>> Expand & Selection\n\n\n      var activeItem = _this.getActiveItem();\n\n      if (activeItem && activeItem.data) {\n        var treeNodeRequiredProps = _this.getTreeNodeRequiredProps();\n\n        var expandable = activeItem.data.isLeaf === false || !!(activeItem.data.children || []).length;\n        var eventNode = convertNodePropsToEventData(_objectSpread(_objectSpread({}, getTreeNodeProps(activeKey, treeNodeRequiredProps)), {}, {\n          data: activeItem.data,\n          active: true\n        }));\n\n        switch (event.which) {\n          // >>> Expand\n          case KeyCode.LEFT:\n            {\n              // Collapse if possible\n              if (expandable && expandedKeys.includes(activeKey)) {\n                _this.onNodeExpand({}, eventNode);\n              } else if (activeItem.parent) {\n                _this.onActiveChange(activeItem.parent.data.key);\n              }\n\n              event.preventDefault();\n              break;\n            }\n\n          case KeyCode.RIGHT:\n            {\n              // Expand if possible\n              if (expandable && !expandedKeys.includes(activeKey)) {\n                _this.onNodeExpand({}, eventNode);\n              } else if (activeItem.children && activeItem.children.length) {\n                _this.onActiveChange(activeItem.children[0].data.key);\n              }\n\n              event.preventDefault();\n              break;\n            }\n          // Selection\n\n          case KeyCode.ENTER:\n          case KeyCode.SPACE:\n            {\n              if (checkable && !eventNode.disabled && eventNode.checkable !== false && !eventNode.disableCheckbox) {\n                _this.onNodeCheck({}, eventNode, !checkedKeys.includes(activeKey));\n              } else if (!checkable && selectable && !eventNode.disabled && eventNode.selectable !== false) {\n                _this.onNodeSelect({}, eventNode);\n              }\n\n              break;\n            }\n        }\n      }\n\n      if (onKeyDown) {\n        onKeyDown(event);\n      }\n    };\n\n    _this.setUncontrolledState = function (state) {\n      var atomic = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var forceState = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n      if (_this.destroyed) {\n        return;\n      }\n\n      var needSync = false;\n      var allPassed = true;\n      var newState = {};\n      Object.keys(state).forEach(function (name) {\n        if (name in _this.props) {\n          allPassed = false;\n          return;\n        }\n\n        needSync = true;\n        newState[name] = state[name];\n      });\n\n      if (needSync && (!atomic || allPassed)) {\n        _this.setState(_objectSpread(_objectSpread({}, newState), forceState));\n      }\n    };\n\n    _this.scrollTo = function (scroll) {\n      _this.listRef.current.scrollTo(scroll);\n    };\n\n    return _this;\n  }\n\n  _createClass(Tree, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener('dragend', this.onWindowDragEnd);\n      this.destroyed = true;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _classNames;\n\n      var _this$state11 = this.state,\n          focused = _this$state11.focused,\n          flattenNodes = _this$state11.flattenNodes,\n          keyEntities = _this$state11.keyEntities,\n          dragging = _this$state11.dragging,\n          activeKey = _this$state11.activeKey,\n          dropLevelOffset = _this$state11.dropLevelOffset,\n          dropContainerKey = _this$state11.dropContainerKey,\n          dropTargetKey = _this$state11.dropTargetKey,\n          dropPosition = _this$state11.dropPosition,\n          dragOverNodeKey = _this$state11.dragOverNodeKey,\n          indent = _this$state11.indent;\n      var _this$props8 = this.props,\n          prefixCls = _this$props8.prefixCls,\n          className = _this$props8.className,\n          style = _this$props8.style,\n          showLine = _this$props8.showLine,\n          focusable = _this$props8.focusable,\n          _this$props8$tabIndex = _this$props8.tabIndex,\n          tabIndex = _this$props8$tabIndex === void 0 ? 0 : _this$props8$tabIndex,\n          selectable = _this$props8.selectable,\n          showIcon = _this$props8.showIcon,\n          icon = _this$props8.icon,\n          switcherIcon = _this$props8.switcherIcon,\n          draggable = _this$props8.draggable,\n          checkable = _this$props8.checkable,\n          checkStrictly = _this$props8.checkStrictly,\n          disabled = _this$props8.disabled,\n          motion = _this$props8.motion,\n          loadData = _this$props8.loadData,\n          filterTreeNode = _this$props8.filterTreeNode,\n          height = _this$props8.height,\n          itemHeight = _this$props8.itemHeight,\n          virtual = _this$props8.virtual,\n          titleRender = _this$props8.titleRender,\n          dropIndicatorRender = _this$props8.dropIndicatorRender,\n          onContextMenu = _this$props8.onContextMenu,\n          direction = _this$props8.direction;\n      var domProps = getDataAndAria(this.props);\n      return /*#__PURE__*/React.createElement(TreeContext.Provider, {\n        value: {\n          prefixCls: prefixCls,\n          selectable: selectable,\n          showIcon: showIcon,\n          icon: icon,\n          switcherIcon: switcherIcon,\n          draggable: draggable,\n          checkable: checkable,\n          checkStrictly: checkStrictly,\n          disabled: disabled,\n          keyEntities: keyEntities,\n          dropLevelOffset: dropLevelOffset,\n          dropContainerKey: dropContainerKey,\n          dropTargetKey: dropTargetKey,\n          dropPosition: dropPosition,\n          dragOverNodeKey: dragOverNodeKey,\n          indent: indent,\n          direction: direction,\n          dropIndicatorRender: dropIndicatorRender,\n          loadData: loadData,\n          filterTreeNode: filterTreeNode,\n          titleRender: titleRender,\n          onNodeClick: this.onNodeClick,\n          onNodeDoubleClick: this.onNodeDoubleClick,\n          onNodeExpand: this.onNodeExpand,\n          onNodeSelect: this.onNodeSelect,\n          onNodeCheck: this.onNodeCheck,\n          onNodeLoad: this.onNodeLoad,\n          onNodeMouseEnter: this.onNodeMouseEnter,\n          onNodeMouseLeave: this.onNodeMouseLeave,\n          onNodeContextMenu: this.onNodeContextMenu,\n          onNodeDragStart: this.onNodeDragStart,\n          onNodeDragEnter: this.onNodeDragEnter,\n          onNodeDragOver: this.onNodeDragOver,\n          onNodeDragLeave: this.onNodeDragLeave,\n          onNodeDragEnd: this.onNodeDragEnd,\n          onNodeDrop: this.onNodeDrop\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: classNames(prefixCls, className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-show-line\"), showLine), _defineProperty(_classNames, \"\".concat(prefixCls, \"-focused\"), focused), _defineProperty(_classNames, \"\".concat(prefixCls, \"-active-focused\"), activeKey !== null), _classNames))\n      }, /*#__PURE__*/React.createElement(NodeList, _extends({\n        ref: this.listRef,\n        prefixCls: prefixCls,\n        style: style,\n        data: flattenNodes,\n        disabled: disabled,\n        selectable: selectable,\n        checkable: !!checkable,\n        motion: motion,\n        dragging: dragging,\n        height: height,\n        itemHeight: itemHeight,\n        virtual: virtual,\n        focusable: focusable,\n        focused: focused,\n        tabIndex: tabIndex,\n        activeItem: this.getActiveItem(),\n        onFocus: this.onFocus,\n        onBlur: this.onBlur,\n        onKeyDown: this.onKeyDown,\n        onActiveChange: this.onActiveChange,\n        onListChangeStart: this.onListChangeStart,\n        onListChangeEnd: this.onListChangeEnd,\n        onContextMenu: onContextMenu\n      }, this.getTreeNodeRequiredProps(), domProps))));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, prevState) {\n      var prevProps = prevState.prevProps;\n      var newState = {\n        prevProps: props\n      };\n\n      function needSync(name) {\n        return !prevProps && name in props || prevProps && prevProps[name] !== props[name];\n      } // ================== Tree Node ==================\n\n\n      var treeData; // Check if `treeData` or `children` changed and save into the state.\n\n      if (needSync('treeData')) {\n        treeData = props.treeData;\n      } else if (needSync('children')) {\n        warning(false, '`children` of Tree is deprecated. Please use `treeData` instead.');\n        treeData = convertTreeToData(props.children);\n      } // Save flatten nodes info and convert `treeData` into keyEntities\n\n\n      if (treeData) {\n        newState.treeData = treeData;\n        var entitiesMap = convertDataToEntities(treeData);\n        newState.keyEntities = _objectSpread(_defineProperty({}, MOTION_KEY, MotionEntity), entitiesMap.keyEntities); // Warning if treeNode not provide key\n\n        if (process.env.NODE_ENV !== 'production') {\n          warningWithoutKey(treeData);\n        }\n      }\n\n      var keyEntities = newState.keyEntities || prevState.keyEntities; // ================ expandedKeys =================\n\n      if (needSync('expandedKeys') || prevProps && needSync('autoExpandParent')) {\n        newState.expandedKeys = props.autoExpandParent || !prevProps && props.defaultExpandParent ? conductExpandParent(props.expandedKeys, keyEntities) : props.expandedKeys;\n      } else if (!prevProps && props.defaultExpandAll) {\n        var cloneKeyEntities = _objectSpread({}, keyEntities);\n\n        delete cloneKeyEntities[MOTION_KEY];\n        newState.expandedKeys = Object.keys(cloneKeyEntities).map(function (key) {\n          return cloneKeyEntities[key].key;\n        });\n      } else if (!prevProps && props.defaultExpandedKeys) {\n        newState.expandedKeys = props.autoExpandParent || props.defaultExpandParent ? conductExpandParent(props.defaultExpandedKeys, keyEntities) : props.defaultExpandedKeys;\n      }\n\n      if (!newState.expandedKeys) {\n        delete newState.expandedKeys;\n      } // ================ flattenNodes =================\n\n\n      if (treeData || newState.expandedKeys) {\n        var flattenNodes = flattenTreeData(treeData || prevState.treeData, newState.expandedKeys || prevState.expandedKeys);\n        newState.flattenNodes = flattenNodes;\n      } // ================ selectedKeys =================\n\n\n      if (props.selectable) {\n        if (needSync('selectedKeys')) {\n          newState.selectedKeys = calcSelectedKeys(props.selectedKeys, props);\n        } else if (!prevProps && props.defaultSelectedKeys) {\n          newState.selectedKeys = calcSelectedKeys(props.defaultSelectedKeys, props);\n        }\n      } // ================= checkedKeys =================\n\n\n      if (props.checkable) {\n        var checkedKeyEntity;\n\n        if (needSync('checkedKeys')) {\n          checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {};\n        } else if (!prevProps && props.defaultCheckedKeys) {\n          checkedKeyEntity = parseCheckedKeys(props.defaultCheckedKeys) || {};\n        } else if (treeData) {\n          // If `treeData` changed, we also need check it\n          checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {\n            checkedKeys: prevState.checkedKeys,\n            halfCheckedKeys: prevState.halfCheckedKeys\n          };\n        }\n\n        if (checkedKeyEntity) {\n          var _checkedKeyEntity = checkedKeyEntity,\n              _checkedKeyEntity$che = _checkedKeyEntity.checkedKeys,\n              checkedKeys = _checkedKeyEntity$che === void 0 ? [] : _checkedKeyEntity$che,\n              _checkedKeyEntity$hal = _checkedKeyEntity.halfCheckedKeys,\n              halfCheckedKeys = _checkedKeyEntity$hal === void 0 ? [] : _checkedKeyEntity$hal;\n\n          if (!props.checkStrictly) {\n            var conductKeys = conductCheck(checkedKeys, true, keyEntities);\n            checkedKeys = conductKeys.checkedKeys;\n            halfCheckedKeys = conductKeys.halfCheckedKeys;\n          }\n\n          newState.checkedKeys = checkedKeys;\n          newState.halfCheckedKeys = halfCheckedKeys;\n        }\n      } // ================= loadedKeys ==================\n\n\n      if (needSync('loadedKeys')) {\n        newState.loadedKeys = props.loadedKeys;\n      }\n\n      return newState;\n    }\n  }]);\n\n  return Tree;\n}(React.Component);\n\nTree.defaultProps = {\n  prefixCls: 'rc-tree',\n  showLine: false,\n  showIcon: true,\n  selectable: true,\n  multiple: false,\n  checkable: false,\n  disabled: false,\n  checkStrictly: false,\n  draggable: false,\n  defaultExpandParent: true,\n  autoExpandParent: false,\n  defaultExpandAll: false,\n  defaultExpandedKeys: [],\n  defaultCheckedKeys: [],\n  defaultSelectedKeys: [],\n  dropIndicatorRender: DropIndicator,\n  allowDrop: function allowDrop() {\n    return true;\n  }\n};\nTree.TreeNode = TreeNode;\nexport default Tree;","map":{"version":3,"names":["_extends","_defineProperty","_objectSpread","_toConsumableArray","_classCallCheck","_createClass","_assertThisInitialized","_inherits","_createSuper","React","KeyCode","warning","classNames","TreeContext","getDataAndAria","getDragChildrenKeys","parseCheckedKeys","conductExpandParent","calcSelectedKeys","calcDropPosition","arrAdd","arrDel","posToArr","flattenTreeData","convertTreeToData","convertDataToEntities","warningWithoutKey","convertNodePropsToEventData","getTreeNodeProps","NodeList","MOTION_KEY","MotionEntity","TreeNode","conductCheck","DropIndicator","Tree","_React$Component","_super","_this","_len","arguments","length","_args","Array","_key","call","apply","concat","destroyed","delayedDragEnterLogic","state","keyEntities","indent","selectedKeys","checkedKeys","halfCheckedKeys","loadedKeys","loadingKeys","expandedKeys","dragging","dragChildrenKeys","dropTargetKey","dropPosition","dropContainerKey","dropLevelOffset","dropTargetPos","dropAllowed","dragOverNodeKey","treeData","flattenNodes","focused","activeKey","listChanging","prevProps","dragStartMousePosition","dragNode","listRef","createRef","onNodeDragStart","event","node","_this$state","onDragStart","props","eventKey","x","clientX","y","clientY","newExpandedKeys","setState","current","getIndentWidth","setExpandedKeys","window","addEventListener","onWindowDragEnd","onNodeDragEnter","_this$state2","_this$props","onDragEnter","onExpand","allowDrop","direction","pos","_assertThisInitialize","_calcDropPosition","indexOf","Object","keys","forEach","key","clearTimeout","persist","setTimeout","entity","children","expanded","nativeEvent","onNodeDragOver","_this$state3","_this$props2","onDragOver","_assertThisInitialize2","_calcDropPosition2","onNodeDragLeave","onDragLeave","onNodeDragEnd","removeEventListener","outsideTree","undefined","onDragEnd","cleanDragState","onNodeDrop","_this$getActiveItem","_this$state4","onDrop","abstractDropNodeProps","getTreeNodeRequiredProps","active","getActiveItem","data","dropToChild","posArr","dropResult","dragNodesKeys","dropToGap","Number","onNodeClick","e","treeNode","onClick","onNodeDoubleClick","onDoubleClick","onNodeSelect","_this$props3","onSelect","multiple","selected","targetSelected","selectedNodes","map","selectedKey","filter","setUncontrolledState","onNodeCheck","checked","_this$state5","oriCheckedKeys","oriHalfCheckedKeys","_this$props4","checkStrictly","onCheck","checkedObj","eventObj","halfChecked","checkedNodes","checkedKey","_conductCheck","_checkedKeys","_halfCheckedKeys","keySet","Set","delete","_conductCheck2","from","checkedNodesPositions","push","onNodeLoad","Promise","resolve","reject","_ref","_ref$loadedKeys","_ref$loadingKeys","_this$props5","loadData","onLoad","promise","then","_this$state6","currentLoadedKeys","currentLoadingKeys","newLoadedKeys","newLoadingKeys","catch","onNodeMouseEnter","onMouseEnter","onNodeMouseLeave","onMouseLeave","onNodeContextMenu","onRightClick","preventDefault","onFocus","onBlur","onActiveChange","_this$state7","onNodeExpand","_this$props6","index","targetExpanded","loadPromise","newFlattenTreeData","currentExpandedKeys","expandedKeysToRestore","onListChangeStart","onListChangeEnd","newActiveKey","scrollTo","_this$state8","find","_ref2","offsetActiveKey","offset","_this$state9","findIndex","_ref3","item","onKeyDown","_this$state10","_this$props7","checkable","selectable","which","UP","DOWN","activeItem","treeNodeRequiredProps","expandable","isLeaf","eventNode","LEFT","includes","parent","RIGHT","ENTER","SPACE","disabled","disableCheckbox","atomic","forceState","needSync","allPassed","newState","name","scroll","value","componentWillUnmount","render","_classNames","_this$state11","_this$props8","prefixCls","className","style","showLine","focusable","_this$props8$tabIndex","tabIndex","showIcon","icon","switcherIcon","draggable","motion","filterTreeNode","height","itemHeight","virtual","titleRender","dropIndicatorRender","onContextMenu","domProps","createElement","Provider","ref","getDerivedStateFromProps","prevState","entitiesMap","process","env","NODE_ENV","autoExpandParent","defaultExpandParent","defaultExpandAll","cloneKeyEntities","defaultExpandedKeys","defaultSelectedKeys","checkedKeyEntity","defaultCheckedKeys","_checkedKeyEntity","_checkedKeyEntity$che","_checkedKeyEntity$hal","conductKeys","Component","defaultProps"],"sources":["/home/chenak/QbitesReact/my-app/node_modules/rc-tree/es/Tree.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\n// TODO: https://www.w3.org/TR/2017/NOTE-wai-aria-practices-1.1-20171214/examples/treeview/treeview-2/treeview-2a.html\n// Fully accessibility support\nimport * as React from 'react';\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport warning from \"rc-util/es/warning\";\nimport classNames from 'classnames';\nimport { TreeContext } from './contextTypes';\nimport { getDataAndAria, getDragChildrenKeys, parseCheckedKeys, conductExpandParent, calcSelectedKeys, calcDropPosition, arrAdd, arrDel, posToArr } from './util';\nimport { flattenTreeData, convertTreeToData, convertDataToEntities, warningWithoutKey, convertNodePropsToEventData, getTreeNodeProps } from './utils/treeUtil';\nimport NodeList, { MOTION_KEY, MotionEntity } from './NodeList';\nimport TreeNode from './TreeNode';\nimport { conductCheck } from './utils/conductUtil';\nimport DropIndicator from './DropIndicator';\n\nvar Tree = /*#__PURE__*/function (_React$Component) {\n  _inherits(Tree, _React$Component);\n\n  var _super = _createSuper(Tree);\n\n  function Tree() {\n    var _this;\n\n    _classCallCheck(this, Tree);\n\n    for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {\n      _args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(_args));\n    _this.destroyed = false;\n    _this.delayedDragEnterLogic = void 0;\n    _this.state = {\n      keyEntities: {},\n      indent: null,\n      selectedKeys: [],\n      checkedKeys: [],\n      halfCheckedKeys: [],\n      loadedKeys: [],\n      loadingKeys: [],\n      expandedKeys: [],\n      dragging: false,\n      dragChildrenKeys: [],\n      // dropTargetKey is the key of abstract-drop-node\n      // the abstract-drop-node is the real drop node when drag and drop\n      // not the DOM drag over node\n      dropTargetKey: null,\n      dropPosition: null,\n      dropContainerKey: null,\n      dropLevelOffset: null,\n      dropTargetPos: null,\n      dropAllowed: true,\n      // the abstract-drag-over-node\n      // if mouse is on the bottom of top dom node or no the top of the bottom dom node\n      // abstract-drag-over-node is the top node\n      dragOverNodeKey: null,\n      treeData: [],\n      flattenNodes: [],\n      focused: false,\n      activeKey: null,\n      listChanging: false,\n      prevProps: null\n    };\n    _this.dragStartMousePosition = null;\n    _this.dragNode = void 0;\n    _this.listRef = /*#__PURE__*/React.createRef();\n\n    _this.onNodeDragStart = function (event, node) {\n      var _this$state = _this.state,\n          expandedKeys = _this$state.expandedKeys,\n          keyEntities = _this$state.keyEntities;\n      var onDragStart = _this.props.onDragStart;\n      var eventKey = node.props.eventKey;\n      _this.dragNode = node;\n      _this.dragStartMousePosition = {\n        x: event.clientX,\n        y: event.clientY\n      };\n      var newExpandedKeys = arrDel(expandedKeys, eventKey);\n\n      _this.setState({\n        dragging: true,\n        dragChildrenKeys: getDragChildrenKeys(eventKey, keyEntities),\n        indent: _this.listRef.current.getIndentWidth()\n      });\n\n      _this.setExpandedKeys(newExpandedKeys);\n\n      window.addEventListener('dragend', _this.onWindowDragEnd);\n\n      if (onDragStart) {\n        onDragStart({\n          event: event,\n          node: convertNodePropsToEventData(node.props)\n        });\n      }\n    };\n\n    _this.onNodeDragEnter = function (event, node) {\n      var _this$state2 = _this.state,\n          expandedKeys = _this$state2.expandedKeys,\n          keyEntities = _this$state2.keyEntities,\n          dragChildrenKeys = _this$state2.dragChildrenKeys,\n          flattenNodes = _this$state2.flattenNodes,\n          indent = _this$state2.indent;\n      var _this$props = _this.props,\n          onDragEnter = _this$props.onDragEnter,\n          onExpand = _this$props.onExpand,\n          allowDrop = _this$props.allowDrop,\n          direction = _this$props.direction;\n      var pos = node.props.pos;\n\n      var _assertThisInitialize = _assertThisInitialized(_this),\n          dragNode = _assertThisInitialize.dragNode;\n\n      var _calcDropPosition = calcDropPosition(event, dragNode, node, indent, _this.dragStartMousePosition, allowDrop, flattenNodes, keyEntities, expandedKeys, direction),\n          dropPosition = _calcDropPosition.dropPosition,\n          dropLevelOffset = _calcDropPosition.dropLevelOffset,\n          dropTargetKey = _calcDropPosition.dropTargetKey,\n          dropContainerKey = _calcDropPosition.dropContainerKey,\n          dropTargetPos = _calcDropPosition.dropTargetPos,\n          dropAllowed = _calcDropPosition.dropAllowed,\n          dragOverNodeKey = _calcDropPosition.dragOverNodeKey;\n\n      if (!dragNode || // don't allow drop inside its children\n      dragChildrenKeys.indexOf(dropTargetKey) !== -1 || // don't allow drop when drop is not allowed caculated by calcDropPosition\n      !dropAllowed) {\n        _this.setState({\n          dragOverNodeKey: null,\n          dropPosition: null,\n          dropLevelOffset: null,\n          dropTargetKey: null,\n          dropContainerKey: null,\n          dropTargetPos: null,\n          dropAllowed: false\n        });\n\n        return;\n      } // Side effect for delay drag\n\n\n      if (!_this.delayedDragEnterLogic) {\n        _this.delayedDragEnterLogic = {};\n      }\n\n      Object.keys(_this.delayedDragEnterLogic).forEach(function (key) {\n        clearTimeout(_this.delayedDragEnterLogic[key]);\n      });\n\n      if (dragNode.props.eventKey !== node.props.eventKey) {\n        // hoist expand logic here\n        // since if logic is on the bottom\n        // it will be blocked by abstract dragover node check\n        //   => if you dragenter from top, you mouse will still be consider as in the top node\n        event.persist();\n        _this.delayedDragEnterLogic[pos] = window.setTimeout(function () {\n          if (!_this.state.dragging) return;\n\n          var newExpandedKeys = _toConsumableArray(expandedKeys);\n\n          var entity = keyEntities[node.props.eventKey];\n\n          if (entity && (entity.children || []).length) {\n            newExpandedKeys = arrAdd(expandedKeys, node.props.eventKey);\n          }\n\n          if (!('expandedKeys' in _this.props)) {\n            _this.setExpandedKeys(newExpandedKeys);\n          }\n\n          if (onExpand) {\n            onExpand(newExpandedKeys, {\n              node: convertNodePropsToEventData(node.props),\n              expanded: true,\n              nativeEvent: event.nativeEvent\n            });\n          }\n        }, 800);\n      } // Skip if drag node is self\n\n\n      if (dragNode.props.eventKey === dropTargetKey && dropLevelOffset === 0) {\n        _this.setState({\n          dragOverNodeKey: null,\n          dropPosition: null,\n          dropLevelOffset: null,\n          dropTargetKey: null,\n          dropContainerKey: null,\n          dropTargetPos: null,\n          dropAllowed: false\n        });\n\n        return;\n      } // Update drag over node and drag state\n\n\n      _this.setState({\n        dragOverNodeKey: dragOverNodeKey,\n        dropPosition: dropPosition,\n        dropLevelOffset: dropLevelOffset,\n        dropTargetKey: dropTargetKey,\n        dropContainerKey: dropContainerKey,\n        dropTargetPos: dropTargetPos,\n        dropAllowed: dropAllowed\n      });\n\n      if (onDragEnter) {\n        onDragEnter({\n          event: event,\n          node: convertNodePropsToEventData(node.props),\n          expandedKeys: expandedKeys\n        });\n      }\n    };\n\n    _this.onNodeDragOver = function (event, node) {\n      var _this$state3 = _this.state,\n          dragChildrenKeys = _this$state3.dragChildrenKeys,\n          flattenNodes = _this$state3.flattenNodes,\n          keyEntities = _this$state3.keyEntities,\n          expandedKeys = _this$state3.expandedKeys,\n          indent = _this$state3.indent;\n      var _this$props2 = _this.props,\n          onDragOver = _this$props2.onDragOver,\n          allowDrop = _this$props2.allowDrop,\n          direction = _this$props2.direction;\n\n      var _assertThisInitialize2 = _assertThisInitialized(_this),\n          dragNode = _assertThisInitialize2.dragNode;\n\n      var _calcDropPosition2 = calcDropPosition(event, dragNode, node, indent, _this.dragStartMousePosition, allowDrop, flattenNodes, keyEntities, expandedKeys, direction),\n          dropPosition = _calcDropPosition2.dropPosition,\n          dropLevelOffset = _calcDropPosition2.dropLevelOffset,\n          dropTargetKey = _calcDropPosition2.dropTargetKey,\n          dropContainerKey = _calcDropPosition2.dropContainerKey,\n          dropAllowed = _calcDropPosition2.dropAllowed,\n          dropTargetPos = _calcDropPosition2.dropTargetPos,\n          dragOverNodeKey = _calcDropPosition2.dragOverNodeKey;\n\n      if (!dragNode || dragChildrenKeys.indexOf(dropTargetKey) !== -1 || !dropAllowed) {\n        // don't allow drop inside its children\n        // don't allow drop when drop is not allowed caculated by calcDropPosition\n        return;\n      } // Update drag position\n\n\n      if (dragNode.props.eventKey === dropTargetKey && dropLevelOffset === 0) {\n        if (!(_this.state.dropPosition === null && _this.state.dropLevelOffset === null && _this.state.dropTargetKey === null && _this.state.dropContainerKey === null && _this.state.dropTargetPos === null && _this.state.dropAllowed === false && _this.state.dragOverNodeKey === null)) {\n          _this.setState({\n            dropPosition: null,\n            dropLevelOffset: null,\n            dropTargetKey: null,\n            dropContainerKey: null,\n            dropTargetPos: null,\n            dropAllowed: false,\n            dragOverNodeKey: null\n          });\n        }\n      } else if (!(dropPosition === _this.state.dropPosition && dropLevelOffset === _this.state.dropLevelOffset && dropTargetKey === _this.state.dropTargetKey && dropContainerKey === _this.state.dropContainerKey && dropTargetPos === _this.state.dropTargetPos && dropAllowed === _this.state.dropAllowed && dragOverNodeKey === _this.state.dragOverNodeKey)) {\n        _this.setState({\n          dropPosition: dropPosition,\n          dropLevelOffset: dropLevelOffset,\n          dropTargetKey: dropTargetKey,\n          dropContainerKey: dropContainerKey,\n          dropTargetPos: dropTargetPos,\n          dropAllowed: dropAllowed,\n          dragOverNodeKey: dragOverNodeKey\n        });\n      }\n\n      if (onDragOver) {\n        onDragOver({\n          event: event,\n          node: convertNodePropsToEventData(node.props)\n        });\n      }\n    };\n\n    _this.onNodeDragLeave = function (event, node) {\n      var onDragLeave = _this.props.onDragLeave;\n\n      if (onDragLeave) {\n        onDragLeave({\n          event: event,\n          node: convertNodePropsToEventData(node.props)\n        });\n      }\n    };\n\n    _this.onWindowDragEnd = function (event) {\n      _this.onNodeDragEnd(event, null, true);\n\n      window.removeEventListener('dragend', _this.onWindowDragEnd);\n    };\n\n    _this.onNodeDragEnd = function (event, node) {\n      var outsideTree = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var onDragEnd = _this.props.onDragEnd;\n\n      _this.setState({\n        dragOverNodeKey: null\n      });\n\n      _this.cleanDragState();\n\n      if (onDragEnd && !outsideTree) {\n        onDragEnd({\n          event: event,\n          node: convertNodePropsToEventData(node.props)\n        });\n      }\n\n      _this.dragNode = null;\n    };\n\n    _this.onNodeDrop = function (event, node) {\n      var _this$getActiveItem;\n\n      var outsideTree = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var _this$state4 = _this.state,\n          dragChildrenKeys = _this$state4.dragChildrenKeys,\n          dropPosition = _this$state4.dropPosition,\n          dropTargetKey = _this$state4.dropTargetKey,\n          dropTargetPos = _this$state4.dropTargetPos,\n          dropAllowed = _this$state4.dropAllowed;\n      if (!dropAllowed) return;\n      var onDrop = _this.props.onDrop;\n\n      _this.setState({\n        dragOverNodeKey: null\n      });\n\n      _this.cleanDragState();\n\n      if (dropTargetKey === null) return;\n\n      var abstractDropNodeProps = _objectSpread(_objectSpread({}, getTreeNodeProps(dropTargetKey, _this.getTreeNodeRequiredProps())), {}, {\n        active: ((_this$getActiveItem = _this.getActiveItem()) === null || _this$getActiveItem === void 0 ? void 0 : _this$getActiveItem.data.key) === dropTargetKey,\n        data: _this.state.keyEntities[dropTargetKey].node\n      });\n\n      var dropToChild = dragChildrenKeys.indexOf(dropTargetKey) !== -1;\n      warning(!dropToChild, \"Can not drop to dragNode's children node. This is a bug of rc-tree. Please report an issue.\");\n      var posArr = posToArr(dropTargetPos);\n      var dropResult = {\n        event: event,\n        node: convertNodePropsToEventData(abstractDropNodeProps),\n        dragNode: _this.dragNode ? convertNodePropsToEventData(_this.dragNode.props) : null,\n        dragNodesKeys: [_this.dragNode.props.eventKey].concat(dragChildrenKeys),\n        dropToGap: dropPosition !== 0,\n        dropPosition: dropPosition + Number(posArr[posArr.length - 1])\n      };\n\n      if (onDrop && !outsideTree) {\n        onDrop(dropResult);\n      }\n\n      _this.dragNode = null;\n    };\n\n    _this.cleanDragState = function () {\n      var dragging = _this.state.dragging;\n\n      if (dragging) {\n        _this.setState({\n          dragging: false,\n          dropPosition: null,\n          dropContainerKey: null,\n          dropTargetKey: null,\n          dropLevelOffset: null,\n          dropAllowed: true,\n          dragOverNodeKey: null\n        });\n      }\n\n      _this.dragStartMousePosition = null;\n    };\n\n    _this.onNodeClick = function (e, treeNode) {\n      var onClick = _this.props.onClick;\n\n      if (onClick) {\n        onClick(e, treeNode);\n      }\n    };\n\n    _this.onNodeDoubleClick = function (e, treeNode) {\n      var onDoubleClick = _this.props.onDoubleClick;\n\n      if (onDoubleClick) {\n        onDoubleClick(e, treeNode);\n      }\n    };\n\n    _this.onNodeSelect = function (e, treeNode) {\n      var selectedKeys = _this.state.selectedKeys;\n      var keyEntities = _this.state.keyEntities;\n      var _this$props3 = _this.props,\n          onSelect = _this$props3.onSelect,\n          multiple = _this$props3.multiple;\n      var selected = treeNode.selected,\n          key = treeNode.key;\n      var targetSelected = !selected; // Update selected keys\n\n      if (!targetSelected) {\n        selectedKeys = arrDel(selectedKeys, key);\n      } else if (!multiple) {\n        selectedKeys = [key];\n      } else {\n        selectedKeys = arrAdd(selectedKeys, key);\n      } // [Legacy] Not found related usage in doc or upper libs\n\n\n      var selectedNodes = selectedKeys.map(function (selectedKey) {\n        var entity = keyEntities[selectedKey];\n        if (!entity) return null;\n        return entity.node;\n      }).filter(function (node) {\n        return node;\n      });\n\n      _this.setUncontrolledState({\n        selectedKeys: selectedKeys\n      });\n\n      if (onSelect) {\n        onSelect(selectedKeys, {\n          event: 'select',\n          selected: targetSelected,\n          node: treeNode,\n          selectedNodes: selectedNodes,\n          nativeEvent: e.nativeEvent\n        });\n      }\n    };\n\n    _this.onNodeCheck = function (e, treeNode, checked) {\n      var _this$state5 = _this.state,\n          keyEntities = _this$state5.keyEntities,\n          oriCheckedKeys = _this$state5.checkedKeys,\n          oriHalfCheckedKeys = _this$state5.halfCheckedKeys;\n      var _this$props4 = _this.props,\n          checkStrictly = _this$props4.checkStrictly,\n          onCheck = _this$props4.onCheck;\n      var key = treeNode.key; // Prepare trigger arguments\n\n      var checkedObj;\n      var eventObj = {\n        event: 'check',\n        node: treeNode,\n        checked: checked,\n        nativeEvent: e.nativeEvent\n      };\n\n      if (checkStrictly) {\n        var checkedKeys = checked ? arrAdd(oriCheckedKeys, key) : arrDel(oriCheckedKeys, key);\n        var halfCheckedKeys = arrDel(oriHalfCheckedKeys, key);\n        checkedObj = {\n          checked: checkedKeys,\n          halfChecked: halfCheckedKeys\n        };\n        eventObj.checkedNodes = checkedKeys.map(function (checkedKey) {\n          return keyEntities[checkedKey];\n        }).filter(function (entity) {\n          return entity;\n        }).map(function (entity) {\n          return entity.node;\n        });\n\n        _this.setUncontrolledState({\n          checkedKeys: checkedKeys\n        });\n      } else {\n        // Always fill first\n        var _conductCheck = conductCheck([].concat(_toConsumableArray(oriCheckedKeys), [key]), true, keyEntities),\n            _checkedKeys = _conductCheck.checkedKeys,\n            _halfCheckedKeys = _conductCheck.halfCheckedKeys; // If remove, we do it again to correction\n\n\n        if (!checked) {\n          var keySet = new Set(_checkedKeys);\n          keySet.delete(key);\n\n          var _conductCheck2 = conductCheck(Array.from(keySet), {\n            checked: false,\n            halfCheckedKeys: _halfCheckedKeys\n          }, keyEntities);\n\n          _checkedKeys = _conductCheck2.checkedKeys;\n          _halfCheckedKeys = _conductCheck2.halfCheckedKeys;\n        }\n\n        checkedObj = _checkedKeys; // [Legacy] This is used for `rc-tree-select`\n\n        eventObj.checkedNodes = [];\n        eventObj.checkedNodesPositions = [];\n        eventObj.halfCheckedKeys = _halfCheckedKeys;\n\n        _checkedKeys.forEach(function (checkedKey) {\n          var entity = keyEntities[checkedKey];\n          if (!entity) return;\n          var node = entity.node,\n              pos = entity.pos;\n          eventObj.checkedNodes.push(node);\n          eventObj.checkedNodesPositions.push({\n            node: node,\n            pos: pos\n          });\n        });\n\n        _this.setUncontrolledState({\n          checkedKeys: _checkedKeys\n        }, false, {\n          halfCheckedKeys: _halfCheckedKeys\n        });\n      }\n\n      if (onCheck) {\n        onCheck(checkedObj, eventObj);\n      }\n    };\n\n    _this.onNodeLoad = function (treeNode) {\n      return new Promise(function (resolve, reject) {\n        // We need to get the latest state of loading/loaded keys\n        _this.setState(function (_ref) {\n          var _ref$loadedKeys = _ref.loadedKeys,\n              loadedKeys = _ref$loadedKeys === void 0 ? [] : _ref$loadedKeys,\n              _ref$loadingKeys = _ref.loadingKeys,\n              loadingKeys = _ref$loadingKeys === void 0 ? [] : _ref$loadingKeys;\n          var _this$props5 = _this.props,\n              loadData = _this$props5.loadData,\n              onLoad = _this$props5.onLoad;\n          var key = treeNode.key;\n\n          if (!loadData || loadedKeys.indexOf(key) !== -1 || loadingKeys.indexOf(key) !== -1) {\n            return null;\n          } // Process load data\n\n\n          var promise = loadData(treeNode);\n          promise.then(function () {\n            var _this$state6 = _this.state,\n                currentLoadedKeys = _this$state6.loadedKeys,\n                currentLoadingKeys = _this$state6.loadingKeys;\n            var newLoadedKeys = arrAdd(currentLoadedKeys, key);\n            var newLoadingKeys = arrDel(currentLoadingKeys, key); // onLoad should trigger before internal setState to avoid `loadData` trigger twice.\n            // https://github.com/ant-design/ant-design/issues/12464\n\n            if (onLoad) {\n              onLoad(newLoadedKeys, {\n                event: 'load',\n                node: treeNode\n              });\n            }\n\n            _this.setUncontrolledState({\n              loadedKeys: newLoadedKeys\n            });\n\n            _this.setState({\n              loadingKeys: newLoadingKeys\n            });\n\n            resolve();\n          }).catch(function (e) {\n            var currentLoadingKeys = _this.state.loadingKeys;\n            var newLoadingKeys = arrDel(currentLoadingKeys, key);\n\n            _this.setState({\n              loadingKeys: newLoadingKeys\n            });\n\n            reject(e);\n          });\n          return {\n            loadingKeys: arrAdd(loadingKeys, key)\n          };\n        });\n      });\n    };\n\n    _this.onNodeMouseEnter = function (event, node) {\n      var onMouseEnter = _this.props.onMouseEnter;\n\n      if (onMouseEnter) {\n        onMouseEnter({\n          event: event,\n          node: node\n        });\n      }\n    };\n\n    _this.onNodeMouseLeave = function (event, node) {\n      var onMouseLeave = _this.props.onMouseLeave;\n\n      if (onMouseLeave) {\n        onMouseLeave({\n          event: event,\n          node: node\n        });\n      }\n    };\n\n    _this.onNodeContextMenu = function (event, node) {\n      var onRightClick = _this.props.onRightClick;\n\n      if (onRightClick) {\n        event.preventDefault();\n        onRightClick({\n          event: event,\n          node: node\n        });\n      }\n    };\n\n    _this.onFocus = function () {\n      var onFocus = _this.props.onFocus;\n\n      _this.setState({\n        focused: true\n      });\n\n      if (onFocus) {\n        onFocus.apply(void 0, arguments);\n      }\n    };\n\n    _this.onBlur = function () {\n      var onBlur = _this.props.onBlur;\n\n      _this.setState({\n        focused: false\n      });\n\n      _this.onActiveChange(null);\n\n      if (onBlur) {\n        onBlur.apply(void 0, arguments);\n      }\n    };\n\n    _this.getTreeNodeRequiredProps = function () {\n      var _this$state7 = _this.state,\n          expandedKeys = _this$state7.expandedKeys,\n          selectedKeys = _this$state7.selectedKeys,\n          loadedKeys = _this$state7.loadedKeys,\n          loadingKeys = _this$state7.loadingKeys,\n          checkedKeys = _this$state7.checkedKeys,\n          halfCheckedKeys = _this$state7.halfCheckedKeys,\n          dragOverNodeKey = _this$state7.dragOverNodeKey,\n          dropPosition = _this$state7.dropPosition,\n          keyEntities = _this$state7.keyEntities;\n      return {\n        expandedKeys: expandedKeys || [],\n        selectedKeys: selectedKeys || [],\n        loadedKeys: loadedKeys || [],\n        loadingKeys: loadingKeys || [],\n        checkedKeys: checkedKeys || [],\n        halfCheckedKeys: halfCheckedKeys || [],\n        dragOverNodeKey: dragOverNodeKey,\n        dropPosition: dropPosition,\n        keyEntities: keyEntities\n      };\n    };\n\n    _this.setExpandedKeys = function (expandedKeys) {\n      var treeData = _this.state.treeData;\n      var flattenNodes = flattenTreeData(treeData, expandedKeys);\n\n      _this.setUncontrolledState({\n        expandedKeys: expandedKeys,\n        flattenNodes: flattenNodes\n      }, true);\n    };\n\n    _this.onNodeExpand = function (e, treeNode) {\n      var expandedKeys = _this.state.expandedKeys;\n      var listChanging = _this.state.listChanging;\n      var _this$props6 = _this.props,\n          onExpand = _this$props6.onExpand,\n          loadData = _this$props6.loadData;\n      var key = treeNode.key,\n          expanded = treeNode.expanded; // Do nothing when motion is in progress\n\n      if (listChanging) {\n        return;\n      } // Update selected keys\n\n\n      var index = expandedKeys.indexOf(key);\n      var targetExpanded = !expanded;\n      warning(expanded && index !== -1 || !expanded && index === -1, 'Expand state not sync with index check');\n\n      if (targetExpanded) {\n        expandedKeys = arrAdd(expandedKeys, key);\n      } else {\n        expandedKeys = arrDel(expandedKeys, key);\n      }\n\n      _this.setExpandedKeys(expandedKeys);\n\n      if (onExpand) {\n        onExpand(expandedKeys, {\n          node: treeNode,\n          expanded: targetExpanded,\n          nativeEvent: e.nativeEvent\n        });\n      } // Async Load data\n\n\n      if (targetExpanded && loadData) {\n        var loadPromise = _this.onNodeLoad(treeNode);\n\n        if (loadPromise) {\n          loadPromise.then(function () {\n            // [Legacy] Refresh logic\n            var newFlattenTreeData = flattenTreeData(_this.state.treeData, expandedKeys);\n\n            _this.setUncontrolledState({\n              flattenNodes: newFlattenTreeData\n            });\n          }).catch(function () {\n            var currentExpandedKeys = _this.state.expandedKeys;\n            var expandedKeysToRestore = arrDel(currentExpandedKeys, key);\n\n            _this.setExpandedKeys(expandedKeysToRestore);\n          });\n        }\n      }\n    };\n\n    _this.onListChangeStart = function () {\n      _this.setUncontrolledState({\n        listChanging: true\n      });\n    };\n\n    _this.onListChangeEnd = function () {\n      setTimeout(function () {\n        _this.setUncontrolledState({\n          listChanging: false\n        });\n      });\n    };\n\n    _this.onActiveChange = function (newActiveKey) {\n      var activeKey = _this.state.activeKey;\n      var onActiveChange = _this.props.onActiveChange;\n\n      if (activeKey === newActiveKey) {\n        return;\n      }\n\n      _this.setState({\n        activeKey: newActiveKey\n      });\n\n      if (newActiveKey !== null) {\n        _this.scrollTo({\n          key: newActiveKey\n        });\n      }\n\n      if (onActiveChange) {\n        onActiveChange(newActiveKey);\n      }\n    };\n\n    _this.getActiveItem = function () {\n      var _this$state8 = _this.state,\n          activeKey = _this$state8.activeKey,\n          flattenNodes = _this$state8.flattenNodes;\n\n      if (activeKey === null) {\n        return null;\n      }\n\n      return flattenNodes.find(function (_ref2) {\n        var key = _ref2.data.key;\n        return key === activeKey;\n      }) || null;\n    };\n\n    _this.offsetActiveKey = function (offset) {\n      var _this$state9 = _this.state,\n          flattenNodes = _this$state9.flattenNodes,\n          activeKey = _this$state9.activeKey;\n      var index = flattenNodes.findIndex(function (_ref3) {\n        var key = _ref3.data.key;\n        return key === activeKey;\n      }); // Align with index\n\n      if (index === -1 && offset < 0) {\n        index = flattenNodes.length;\n      }\n\n      index = (index + offset + flattenNodes.length) % flattenNodes.length;\n      var item = flattenNodes[index];\n\n      if (item) {\n        var key = item.data.key;\n\n        _this.onActiveChange(key);\n      } else {\n        _this.onActiveChange(null);\n      }\n    };\n\n    _this.onKeyDown = function (event) {\n      var _this$state10 = _this.state,\n          activeKey = _this$state10.activeKey,\n          expandedKeys = _this$state10.expandedKeys,\n          checkedKeys = _this$state10.checkedKeys;\n      var _this$props7 = _this.props,\n          onKeyDown = _this$props7.onKeyDown,\n          checkable = _this$props7.checkable,\n          selectable = _this$props7.selectable; // >>>>>>>>>> Direction\n\n      switch (event.which) {\n        case KeyCode.UP:\n          {\n            _this.offsetActiveKey(-1);\n\n            event.preventDefault();\n            break;\n          }\n\n        case KeyCode.DOWN:\n          {\n            _this.offsetActiveKey(1);\n\n            event.preventDefault();\n            break;\n          }\n      } // >>>>>>>>>> Expand & Selection\n\n\n      var activeItem = _this.getActiveItem();\n\n      if (activeItem && activeItem.data) {\n        var treeNodeRequiredProps = _this.getTreeNodeRequiredProps();\n\n        var expandable = activeItem.data.isLeaf === false || !!(activeItem.data.children || []).length;\n        var eventNode = convertNodePropsToEventData(_objectSpread(_objectSpread({}, getTreeNodeProps(activeKey, treeNodeRequiredProps)), {}, {\n          data: activeItem.data,\n          active: true\n        }));\n\n        switch (event.which) {\n          // >>> Expand\n          case KeyCode.LEFT:\n            {\n              // Collapse if possible\n              if (expandable && expandedKeys.includes(activeKey)) {\n                _this.onNodeExpand({}, eventNode);\n              } else if (activeItem.parent) {\n                _this.onActiveChange(activeItem.parent.data.key);\n              }\n\n              event.preventDefault();\n              break;\n            }\n\n          case KeyCode.RIGHT:\n            {\n              // Expand if possible\n              if (expandable && !expandedKeys.includes(activeKey)) {\n                _this.onNodeExpand({}, eventNode);\n              } else if (activeItem.children && activeItem.children.length) {\n                _this.onActiveChange(activeItem.children[0].data.key);\n              }\n\n              event.preventDefault();\n              break;\n            }\n          // Selection\n\n          case KeyCode.ENTER:\n          case KeyCode.SPACE:\n            {\n              if (checkable && !eventNode.disabled && eventNode.checkable !== false && !eventNode.disableCheckbox) {\n                _this.onNodeCheck({}, eventNode, !checkedKeys.includes(activeKey));\n              } else if (!checkable && selectable && !eventNode.disabled && eventNode.selectable !== false) {\n                _this.onNodeSelect({}, eventNode);\n              }\n\n              break;\n            }\n        }\n      }\n\n      if (onKeyDown) {\n        onKeyDown(event);\n      }\n    };\n\n    _this.setUncontrolledState = function (state) {\n      var atomic = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var forceState = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n      if (_this.destroyed) {\n        return;\n      }\n\n      var needSync = false;\n      var allPassed = true;\n      var newState = {};\n      Object.keys(state).forEach(function (name) {\n        if (name in _this.props) {\n          allPassed = false;\n          return;\n        }\n\n        needSync = true;\n        newState[name] = state[name];\n      });\n\n      if (needSync && (!atomic || allPassed)) {\n        _this.setState(_objectSpread(_objectSpread({}, newState), forceState));\n      }\n    };\n\n    _this.scrollTo = function (scroll) {\n      _this.listRef.current.scrollTo(scroll);\n    };\n\n    return _this;\n  }\n\n  _createClass(Tree, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener('dragend', this.onWindowDragEnd);\n      this.destroyed = true;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _classNames;\n\n      var _this$state11 = this.state,\n          focused = _this$state11.focused,\n          flattenNodes = _this$state11.flattenNodes,\n          keyEntities = _this$state11.keyEntities,\n          dragging = _this$state11.dragging,\n          activeKey = _this$state11.activeKey,\n          dropLevelOffset = _this$state11.dropLevelOffset,\n          dropContainerKey = _this$state11.dropContainerKey,\n          dropTargetKey = _this$state11.dropTargetKey,\n          dropPosition = _this$state11.dropPosition,\n          dragOverNodeKey = _this$state11.dragOverNodeKey,\n          indent = _this$state11.indent;\n      var _this$props8 = this.props,\n          prefixCls = _this$props8.prefixCls,\n          className = _this$props8.className,\n          style = _this$props8.style,\n          showLine = _this$props8.showLine,\n          focusable = _this$props8.focusable,\n          _this$props8$tabIndex = _this$props8.tabIndex,\n          tabIndex = _this$props8$tabIndex === void 0 ? 0 : _this$props8$tabIndex,\n          selectable = _this$props8.selectable,\n          showIcon = _this$props8.showIcon,\n          icon = _this$props8.icon,\n          switcherIcon = _this$props8.switcherIcon,\n          draggable = _this$props8.draggable,\n          checkable = _this$props8.checkable,\n          checkStrictly = _this$props8.checkStrictly,\n          disabled = _this$props8.disabled,\n          motion = _this$props8.motion,\n          loadData = _this$props8.loadData,\n          filterTreeNode = _this$props8.filterTreeNode,\n          height = _this$props8.height,\n          itemHeight = _this$props8.itemHeight,\n          virtual = _this$props8.virtual,\n          titleRender = _this$props8.titleRender,\n          dropIndicatorRender = _this$props8.dropIndicatorRender,\n          onContextMenu = _this$props8.onContextMenu,\n          direction = _this$props8.direction;\n      var domProps = getDataAndAria(this.props);\n      return /*#__PURE__*/React.createElement(TreeContext.Provider, {\n        value: {\n          prefixCls: prefixCls,\n          selectable: selectable,\n          showIcon: showIcon,\n          icon: icon,\n          switcherIcon: switcherIcon,\n          draggable: draggable,\n          checkable: checkable,\n          checkStrictly: checkStrictly,\n          disabled: disabled,\n          keyEntities: keyEntities,\n          dropLevelOffset: dropLevelOffset,\n          dropContainerKey: dropContainerKey,\n          dropTargetKey: dropTargetKey,\n          dropPosition: dropPosition,\n          dragOverNodeKey: dragOverNodeKey,\n          indent: indent,\n          direction: direction,\n          dropIndicatorRender: dropIndicatorRender,\n          loadData: loadData,\n          filterTreeNode: filterTreeNode,\n          titleRender: titleRender,\n          onNodeClick: this.onNodeClick,\n          onNodeDoubleClick: this.onNodeDoubleClick,\n          onNodeExpand: this.onNodeExpand,\n          onNodeSelect: this.onNodeSelect,\n          onNodeCheck: this.onNodeCheck,\n          onNodeLoad: this.onNodeLoad,\n          onNodeMouseEnter: this.onNodeMouseEnter,\n          onNodeMouseLeave: this.onNodeMouseLeave,\n          onNodeContextMenu: this.onNodeContextMenu,\n          onNodeDragStart: this.onNodeDragStart,\n          onNodeDragEnter: this.onNodeDragEnter,\n          onNodeDragOver: this.onNodeDragOver,\n          onNodeDragLeave: this.onNodeDragLeave,\n          onNodeDragEnd: this.onNodeDragEnd,\n          onNodeDrop: this.onNodeDrop\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: classNames(prefixCls, className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-show-line\"), showLine), _defineProperty(_classNames, \"\".concat(prefixCls, \"-focused\"), focused), _defineProperty(_classNames, \"\".concat(prefixCls, \"-active-focused\"), activeKey !== null), _classNames))\n      }, /*#__PURE__*/React.createElement(NodeList, _extends({\n        ref: this.listRef,\n        prefixCls: prefixCls,\n        style: style,\n        data: flattenNodes,\n        disabled: disabled,\n        selectable: selectable,\n        checkable: !!checkable,\n        motion: motion,\n        dragging: dragging,\n        height: height,\n        itemHeight: itemHeight,\n        virtual: virtual,\n        focusable: focusable,\n        focused: focused,\n        tabIndex: tabIndex,\n        activeItem: this.getActiveItem(),\n        onFocus: this.onFocus,\n        onBlur: this.onBlur,\n        onKeyDown: this.onKeyDown,\n        onActiveChange: this.onActiveChange,\n        onListChangeStart: this.onListChangeStart,\n        onListChangeEnd: this.onListChangeEnd,\n        onContextMenu: onContextMenu\n      }, this.getTreeNodeRequiredProps(), domProps))));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, prevState) {\n      var prevProps = prevState.prevProps;\n      var newState = {\n        prevProps: props\n      };\n\n      function needSync(name) {\n        return !prevProps && name in props || prevProps && prevProps[name] !== props[name];\n      } // ================== Tree Node ==================\n\n\n      var treeData; // Check if `treeData` or `children` changed and save into the state.\n\n      if (needSync('treeData')) {\n        treeData = props.treeData;\n      } else if (needSync('children')) {\n        warning(false, '`children` of Tree is deprecated. Please use `treeData` instead.');\n        treeData = convertTreeToData(props.children);\n      } // Save flatten nodes info and convert `treeData` into keyEntities\n\n\n      if (treeData) {\n        newState.treeData = treeData;\n        var entitiesMap = convertDataToEntities(treeData);\n        newState.keyEntities = _objectSpread(_defineProperty({}, MOTION_KEY, MotionEntity), entitiesMap.keyEntities); // Warning if treeNode not provide key\n\n        if (process.env.NODE_ENV !== 'production') {\n          warningWithoutKey(treeData);\n        }\n      }\n\n      var keyEntities = newState.keyEntities || prevState.keyEntities; // ================ expandedKeys =================\n\n      if (needSync('expandedKeys') || prevProps && needSync('autoExpandParent')) {\n        newState.expandedKeys = props.autoExpandParent || !prevProps && props.defaultExpandParent ? conductExpandParent(props.expandedKeys, keyEntities) : props.expandedKeys;\n      } else if (!prevProps && props.defaultExpandAll) {\n        var cloneKeyEntities = _objectSpread({}, keyEntities);\n\n        delete cloneKeyEntities[MOTION_KEY];\n        newState.expandedKeys = Object.keys(cloneKeyEntities).map(function (key) {\n          return cloneKeyEntities[key].key;\n        });\n      } else if (!prevProps && props.defaultExpandedKeys) {\n        newState.expandedKeys = props.autoExpandParent || props.defaultExpandParent ? conductExpandParent(props.defaultExpandedKeys, keyEntities) : props.defaultExpandedKeys;\n      }\n\n      if (!newState.expandedKeys) {\n        delete newState.expandedKeys;\n      } // ================ flattenNodes =================\n\n\n      if (treeData || newState.expandedKeys) {\n        var flattenNodes = flattenTreeData(treeData || prevState.treeData, newState.expandedKeys || prevState.expandedKeys);\n        newState.flattenNodes = flattenNodes;\n      } // ================ selectedKeys =================\n\n\n      if (props.selectable) {\n        if (needSync('selectedKeys')) {\n          newState.selectedKeys = calcSelectedKeys(props.selectedKeys, props);\n        } else if (!prevProps && props.defaultSelectedKeys) {\n          newState.selectedKeys = calcSelectedKeys(props.defaultSelectedKeys, props);\n        }\n      } // ================= checkedKeys =================\n\n\n      if (props.checkable) {\n        var checkedKeyEntity;\n\n        if (needSync('checkedKeys')) {\n          checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {};\n        } else if (!prevProps && props.defaultCheckedKeys) {\n          checkedKeyEntity = parseCheckedKeys(props.defaultCheckedKeys) || {};\n        } else if (treeData) {\n          // If `treeData` changed, we also need check it\n          checkedKeyEntity = parseCheckedKeys(props.checkedKeys) || {\n            checkedKeys: prevState.checkedKeys,\n            halfCheckedKeys: prevState.halfCheckedKeys\n          };\n        }\n\n        if (checkedKeyEntity) {\n          var _checkedKeyEntity = checkedKeyEntity,\n              _checkedKeyEntity$che = _checkedKeyEntity.checkedKeys,\n              checkedKeys = _checkedKeyEntity$che === void 0 ? [] : _checkedKeyEntity$che,\n              _checkedKeyEntity$hal = _checkedKeyEntity.halfCheckedKeys,\n              halfCheckedKeys = _checkedKeyEntity$hal === void 0 ? [] : _checkedKeyEntity$hal;\n\n          if (!props.checkStrictly) {\n            var conductKeys = conductCheck(checkedKeys, true, keyEntities);\n            checkedKeys = conductKeys.checkedKeys;\n            halfCheckedKeys = conductKeys.halfCheckedKeys;\n          }\n\n          newState.checkedKeys = checkedKeys;\n          newState.halfCheckedKeys = halfCheckedKeys;\n        }\n      } // ================= loadedKeys ==================\n\n\n      if (needSync('loadedKeys')) {\n        newState.loadedKeys = props.loadedKeys;\n      }\n\n      return newState;\n    }\n  }]);\n\n  return Tree;\n}(React.Component);\n\nTree.defaultProps = {\n  prefixCls: 'rc-tree',\n  showLine: false,\n  showIcon: true,\n  selectable: true,\n  multiple: false,\n  checkable: false,\n  disabled: false,\n  checkStrictly: false,\n  draggable: false,\n  defaultExpandParent: true,\n  autoExpandParent: false,\n  defaultExpandAll: false,\n  defaultExpandedKeys: [],\n  defaultCheckedKeys: [],\n  defaultSelectedKeys: [],\n  dropIndicatorRender: DropIndicator,\n  allowDrop: function allowDrop() {\n    return true;\n  }\n};\nTree.TreeNode = TreeNode;\nexport default Tree;"],"mappings":"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"},"metadata":{},"sourceType":"module"}