{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _d3Shape = require(\"d3-shape\");\n\nvar _GenericChartComponent = require(\"../GenericChartComponent\");\n\nvar _GenericChartComponent2 = _interopRequireDefault(_GenericChartComponent);\n\nvar _GenericComponent = require(\"../GenericComponent\");\n\nvar _utils = require(\"../utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar LineSeries = function (_Component) {\n  _inherits(LineSeries, _Component);\n\n  function LineSeries(props) {\n    _classCallCheck(this, LineSeries);\n\n    var _this = _possibleConstructorReturn(this, (LineSeries.__proto__ || Object.getPrototypeOf(LineSeries)).call(this, props));\n\n    _this.renderSVG = _this.renderSVG.bind(_this);\n    _this.drawOnCanvas = _this.drawOnCanvas.bind(_this);\n    _this.isHover = _this.isHover.bind(_this);\n    return _this;\n  }\n\n  _createClass(LineSeries, [{\n    key: \"isHover\",\n    value: function isHover(moreProps) {\n      // console.log(\"HERE\")\n      var _props = this.props,\n          highlightOnHover = _props.highlightOnHover,\n          yAccessor = _props.yAccessor,\n          hoverTolerance = _props.hoverTolerance;\n      if (!highlightOnHover) return false;\n      var mouseXY = moreProps.mouseXY,\n          currentItem = moreProps.currentItem,\n          xScale = moreProps.xScale,\n          plotData = moreProps.plotData;\n      var _moreProps$chartConfi = moreProps.chartConfig,\n          yScale = _moreProps$chartConfi.yScale,\n          origin = _moreProps$chartConfi.origin;\n      var xAccessor = moreProps.xAccessor;\n\n      var _mouseXY = _slicedToArray(mouseXY, 2),\n          x = _mouseXY[0],\n          y = _mouseXY[1];\n\n      var radius = hoverTolerance;\n\n      var _getClosestItemIndexe = (0, _utils.getClosestItemIndexes)(plotData, xScale.invert(x), xAccessor),\n          left = _getClosestItemIndexe.left,\n          right = _getClosestItemIndexe.right;\n\n      if (left === right) {\n        var cy = yScale(yAccessor(currentItem)) + origin[1];\n        var cx = xScale(xAccessor(currentItem)) + origin[0];\n        var hovering1 = Math.pow(x - cx, 2) + Math.pow(y - cy, 2) < Math.pow(radius, 2);\n        return hovering1;\n      } else {\n        var l = plotData[left];\n        var r = plotData[right];\n        var x1 = xScale(xAccessor(l)) + origin[0];\n        var y1 = yScale(yAccessor(l)) + origin[1];\n        var x2 = xScale(xAccessor(r)) + origin[0];\n        var y2 = yScale(yAccessor(r)) + origin[1]; // y = m * x + b\n\n        var m\n        /* slope */\n        = (y2 - y1) / (x2 - x1);\n        var b\n        /* y intercept */\n        = -1 * m * x1 + y1;\n        var desiredY = Math.round(m * x + b);\n        var hovering2 = y >= desiredY - radius && y <= desiredY + radius;\n        return hovering2;\n      }\n    }\n  }, {\n    key: \"drawOnCanvas\",\n    value: function drawOnCanvas(ctx, moreProps) {\n      var _props2 = this.props,\n          yAccessor = _props2.yAccessor,\n          stroke = _props2.stroke,\n          strokeOpacity = _props2.strokeOpacity,\n          strokeWidth = _props2.strokeWidth,\n          hoverStrokeWidth = _props2.hoverStrokeWidth,\n          defined = _props2.defined,\n          strokeDasharray = _props2.strokeDasharray,\n          interpolation = _props2.interpolation,\n          canvasClip = _props2.canvasClip;\n      var connectNulls = this.props.connectNulls;\n      var xAccessor = moreProps.xAccessor;\n      var xScale = moreProps.xScale,\n          yScale = moreProps.chartConfig.yScale,\n          plotData = moreProps.plotData,\n          hovering = moreProps.hovering;\n\n      if (canvasClip) {\n        ctx.save();\n        canvasClip(ctx, moreProps);\n      }\n\n      ctx.lineWidth = hovering ? hoverStrokeWidth : strokeWidth;\n      ctx.strokeStyle = (0, _utils.hexToRGBA)(stroke, strokeOpacity);\n      ctx.setLineDash((0, _utils.getStrokeDasharray)(strokeDasharray).split(\",\"));\n      var dataSeries = (0, _d3Shape.line)().x(function (d) {\n        return Math.round(xScale(xAccessor(d)));\n      }).y(function (d) {\n        return Math.round(yScale(yAccessor(d)));\n      });\n\n      if ((0, _utils.isDefined)(interpolation)) {\n        dataSeries.curve(interpolation);\n      }\n\n      if (!connectNulls) {\n        dataSeries.defined(function (d) {\n          return defined(yAccessor(d));\n        });\n      }\n\n      ctx.beginPath();\n      dataSeries.context(ctx)(plotData);\n      ctx.stroke();\n\n      if (canvasClip) {\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"renderSVG\",\n    value: function renderSVG(moreProps) {\n      var _props3 = this.props,\n          yAccessor = _props3.yAccessor,\n          stroke = _props3.stroke,\n          strokeOpacity = _props3.strokeOpacity,\n          strokeWidth = _props3.strokeWidth,\n          hoverStrokeWidth = _props3.hoverStrokeWidth,\n          defined = _props3.defined,\n          strokeDasharray = _props3.strokeDasharray;\n      var connectNulls = this.props.connectNulls;\n      var _props4 = this.props,\n          interpolation = _props4.interpolation,\n          style = _props4.style;\n      var xAccessor = moreProps.xAccessor,\n          chartConfig = moreProps.chartConfig;\n      var xScale = moreProps.xScale,\n          plotData = moreProps.plotData,\n          hovering = moreProps.hovering;\n      var yScale = chartConfig.yScale;\n      var dataSeries = (0, _d3Shape.line)().x(function (d) {\n        return Math.round(xScale(xAccessor(d)));\n      }).y(function (d) {\n        return Math.round(yScale(yAccessor(d)));\n      });\n\n      if ((0, _utils.isDefined)(interpolation)) {\n        dataSeries.curve(interpolation);\n      }\n\n      if (!connectNulls) {\n        dataSeries.defined(function (d) {\n          return defined(yAccessor(d));\n        });\n      }\n\n      var d = dataSeries(plotData);\n      var _props5 = this.props,\n          fill = _props5.fill,\n          className = _props5.className;\n      return _react2.default.createElement(\"path\", {\n        style: style,\n        className: className + \" \" + (stroke ? \"\" : \" line-stroke\"),\n        d: d,\n        stroke: stroke,\n        strokeOpacity: strokeOpacity,\n        strokeWidth: hovering ? hoverStrokeWidth : strokeWidth,\n        strokeDasharray: (0, _utils.getStrokeDasharray)(strokeDasharray),\n        fill: fill\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _props6 = this.props,\n          highlightOnHover = _props6.highlightOnHover,\n          onHover = _props6.onHover,\n          onUnHover = _props6.onUnHover;\n      var hoverProps = highlightOnHover || onHover || onUnHover ? {\n        isHover: this.isHover,\n        drawOn: [\"mousemove\", \"pan\"],\n        canvasToDraw: _GenericComponent.getMouseCanvas\n      } : {\n        drawOn: [\"pan\"],\n        canvasToDraw: _GenericComponent.getAxisCanvas\n      };\n      return _react2.default.createElement(_GenericChartComponent2.default, _extends({\n        svgDraw: this.renderSVG,\n        canvasDraw: this.drawOnCanvas,\n        onClickWhenHover: this.props.onClick,\n        onDoubleClickWhenHover: this.props.onDoubleClick,\n        onContextMenuWhenHover: this.props.onContextMenu,\n        onHover: this.props.onHover,\n        onUnHover: this.props.onUnHover\n      }, hoverProps));\n    }\n  }]);\n\n  return LineSeries;\n}(_react.Component);\n/*\nfunction segment(points, ctx) {\n\tctx.beginPath();\n\n\tconst [x, y] = first(points);\n\tctx.moveTo(x, y);\n\tfor (let i = 1; i < points.length; i++) {\n\t\tconst [x1, y1] = points[i];\n\t\tctx.lineTo(x1, y1);\n\t}\n\n\tctx.stroke();\n}\n*/\n\n\nLineSeries.propTypes = {\n  className: _propTypes2.default.string,\n  strokeWidth: _propTypes2.default.number,\n  strokeOpacity: _propTypes2.default.number,\n  stroke: _propTypes2.default.string,\n  hoverStrokeWidth: _propTypes2.default.number,\n  fill: _propTypes2.default.string,\n  defined: _propTypes2.default.func,\n  hoverTolerance: _propTypes2.default.number,\n  strokeDasharray: _propTypes2.default.oneOf(_utils.strokeDashTypes),\n  highlightOnHover: _propTypes2.default.bool,\n  onClick: _propTypes2.default.func,\n  onDoubleClick: _propTypes2.default.func,\n  onHover: _propTypes2.default.func,\n  onUnHover: _propTypes2.default.func,\n  onContextMenu: _propTypes2.default.func,\n  yAccessor: _propTypes2.default.func,\n  connectNulls: _propTypes2.default.bool,\n  interpolation: _propTypes2.default.func,\n  canvasClip: _propTypes2.default.func,\n  style: _propTypes2.default.object\n};\nLineSeries.defaultProps = {\n  className: \"line \",\n  strokeWidth: 1,\n  strokeOpacity: 1,\n  hoverStrokeWidth: 4,\n  fill: \"none\",\n  stroke: \"#4682B4\",\n  strokeDasharray: \"Solid\",\n  defined: function defined(d) {\n    return !isNaN(d);\n  },\n  hoverTolerance: 6,\n  highlightOnHover: false,\n  connectNulls: false,\n  onClick: function onClick(e) {\n    console.log(\"Click\", e);\n  },\n  onDoubleClick: function onDoubleClick(e) {\n    console.log(\"Double Click\", e);\n  },\n  onContextMenu: function onContextMenu(e) {\n    console.log(\"Right Click\", e);\n  }\n};\nexports.default = LineSeries;","map":{"version":3,"mappings":"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","names":["LineSeries","props","_classCallCheck","_this","renderSVG","bind","drawOnCanvas","isHover","moreProps","highlightOnHover","yAccessor","hoverTolerance","mouseXY","currentItem","xScale","plotData","chartConfig","yScale","origin","xAccessor","x","y","radius","invert","left","right","cy","cx","hovering1","Math","pow","l","r","x1","y1","x2","y2","m","b","desiredY","round","hovering2","ctx","stroke","strokeOpacity","strokeWidth","hoverStrokeWidth","defined","strokeDasharray","interpolation","canvasClip","connectNulls","hovering","save","lineWidth","strokeStyle","setLineDash","split","dataSeries","d","curve","beginPath","context","restore","style","fill","className","_react2","onHover","onUnHover","hoverProps","drawOn","canvasToDraw","svgDraw","canvasDraw","onClickWhenHover","onClick","onDoubleClickWhenHover","onDoubleClick","onContextMenuWhenHover","onContextMenu","propTypes","_propTypes2","string","number","func","oneOf","bool","object","defaultProps","isNaN","e","console","log"],"sources":["../../../src/lib/series/LineSeries.js"],"sourcesContent":["\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { line as d3Line } from \"d3-shape\";\n\nimport GenericChartComponent from \"../GenericChartComponent\";\nimport { getAxisCanvas, getMouseCanvas } from \"../GenericComponent\";\n\nimport {\n\tisDefined,\n\tgetClosestItemIndexes,\n\tstrokeDashTypes,\n\tgetStrokeDasharray,\n\thexToRGBA,\n} from \"../utils\";\n\nclass LineSeries extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.renderSVG = this.renderSVG.bind(this);\n\t\tthis.drawOnCanvas = this.drawOnCanvas.bind(this);\n\t\tthis.isHover = this.isHover.bind(this);\n\t}\n\tisHover(moreProps) {\n\t\t// console.log(\"HERE\")\n\t\tconst { highlightOnHover, yAccessor, hoverTolerance } = this.props;\n\n\t\tif (!highlightOnHover) return false;\n\n\t\tconst { mouseXY, currentItem, xScale, plotData } = moreProps;\n\t\tconst { chartConfig: { yScale, origin } } = moreProps;\n\n\t\tconst { xAccessor } = moreProps;\n\n\t\tconst [x, y] = mouseXY;\n\t\tconst radius = hoverTolerance;\n\n\t\tconst { left, right } = getClosestItemIndexes(plotData, xScale.invert(x), xAccessor);\n\t\tif (left === right) {\n\t\t\tconst cy = yScale(yAccessor(currentItem)) + origin[1];\n\t\t\tconst cx = xScale(xAccessor(currentItem)) + origin[0];\n\n\t\t\tconst hovering1 = Math.pow(x - cx, 2) + Math.pow(y - cy, 2) < Math.pow(radius, 2);\n\n\t\t\treturn hovering1;\n\t\t} else {\n\t\t\tconst l = plotData[left];\n\t\t\tconst r = plotData[right];\n\t\t\tconst x1 = xScale(xAccessor(l)) + origin[0];\n\t\t\tconst y1 = yScale(yAccessor(l)) + origin[1];\n\t\t\tconst x2 = xScale(xAccessor(r)) + origin[0];\n\t\t\tconst y2 = yScale(yAccessor(r)) + origin[1];\n\n\t\t\t// y = m * x + b\n\t\t\tconst m /* slope */ = (y2 - y1) / (x2 - x1);\n\t\t\tconst b /* y intercept */ = -1 * m * x1 + y1;\n\n\t\t\tconst desiredY = Math.round(m * x + b);\n\n\t\t\tconst hovering2 = y >= desiredY - radius && y <= desiredY + radius;\n\n\t\t\treturn hovering2;\n\t\t}\n\t}\n\tdrawOnCanvas(ctx, moreProps) {\n\t\tconst {\n\t\t\tyAccessor,\n\t\t\tstroke,\n\t\t\tstrokeOpacity,\n\t\t\tstrokeWidth,\n\t\t\thoverStrokeWidth,\n\t\t\tdefined,\n\t\t\tstrokeDasharray,\n\t\t\tinterpolation,\n\t\t\tcanvasClip,\n\t\t} = this.props;\n\n\t\tconst { connectNulls } = this.props;\n\n\t\tconst { xAccessor } = moreProps;\n\t\tconst { xScale, chartConfig: { yScale }, plotData, hovering } = moreProps;\n\n\t\tif (canvasClip) {\n\t\t\tctx.save();\n\t\t\tcanvasClip(ctx, moreProps);\n\t\t}\n\n\t\tctx.lineWidth = hovering ? hoverStrokeWidth : strokeWidth;\n\n\t\tctx.strokeStyle = hexToRGBA(stroke, strokeOpacity);\n\t\tctx.setLineDash(getStrokeDasharray(strokeDasharray).split(\",\"));\n\n\t\tconst dataSeries = d3Line()\n\t\t\t.x(d => Math.round(xScale(xAccessor(d))))\n\t\t\t.y(d => Math.round(yScale(yAccessor(d))));\n\n\t\tif (isDefined(interpolation)) {\n\t\t\tdataSeries.curve(interpolation);\n\t\t}\n\t\tif (!connectNulls) {\n\t\t\tdataSeries.defined(d => defined(yAccessor(d)));\n\t\t}\n\n\t\tctx.beginPath();\n\t\tdataSeries.context(ctx)(plotData);\n\t\tctx.stroke();\n\n\t\tif (canvasClip) {\n\t\t\tctx.restore();\n\t\t}\n\t}\n\trenderSVG(moreProps) {\n\t\tconst { yAccessor, stroke, strokeOpacity, strokeWidth, hoverStrokeWidth, defined, strokeDasharray } = this.props;\n\t\tconst { connectNulls } = this.props;\n\t\tconst { interpolation, style } = this.props;\n\t\tconst { xAccessor, chartConfig } = moreProps;\n\n\t\tconst { xScale, plotData, hovering } = moreProps;\n\n\t\tconst { yScale } = chartConfig;\n\t\tconst dataSeries = d3Line()\n\t\t\t.x(d => Math.round(xScale(xAccessor(d))))\n\t\t\t.y(d => Math.round(yScale(yAccessor(d))));\n\n\t\tif (isDefined(interpolation)) {\n\t\t\tdataSeries.curve(interpolation);\n\t\t}\n\t\tif (!connectNulls) {\n\t\t\tdataSeries.defined(d => defined(yAccessor(d)));\n\t\t}\n\t\tconst d = dataSeries(plotData);\n\n\t\tconst { fill, className } = this.props;\n\n\t\treturn (\n\t\t\t<path\n\t\t\t\tstyle={style}\n\t\t\t\tclassName={`${className} ${stroke ? \"\" : \" line-stroke\"}`}\n\t\t\t\td={d}\n\t\t\t\tstroke={stroke}\n\t\t\t\tstrokeOpacity={strokeOpacity}\n\t\t\t\tstrokeWidth={hovering ? hoverStrokeWidth : strokeWidth}\n\t\t\t\tstrokeDasharray={getStrokeDasharray(strokeDasharray)}\n\t\t\t\tfill={fill}\n\t\t\t/>\n\t\t);\n\t}\n\trender() {\n\t\tconst { highlightOnHover, onHover, onUnHover } = this.props;\n\t\tconst hoverProps = (highlightOnHover || onHover || onUnHover)\n\t\t\t? {\n\t\t\t\tisHover: this.isHover,\n\t\t\t\tdrawOn: [\"mousemove\", \"pan\"],\n\t\t\t\tcanvasToDraw: getMouseCanvas\n\t\t\t}\n\t\t\t: {\n\t\t\t\tdrawOn: [\"pan\"],\n\t\t\t\tcanvasToDraw: getAxisCanvas\n\t\t\t};\n\n\t\treturn <GenericChartComponent\n\t\t\tsvgDraw={this.renderSVG}\n\n\t\t\tcanvasDraw={this.drawOnCanvas}\n\n\t\t\tonClickWhenHover={this.props.onClick}\n\t\t\tonDoubleClickWhenHover={this.props.onDoubleClick}\n\t\t\tonContextMenuWhenHover={this.props.onContextMenu}\n\t\t\tonHover={this.props.onHover}\n\t\t\tonUnHover={this.props.onUnHover}\n\t\t\t{...hoverProps}\n\t\t/>;\n\t}\n}\n\n/*\nfunction segment(points, ctx) {\n\tctx.beginPath();\n\n\tconst [x, y] = first(points);\n\tctx.moveTo(x, y);\n\tfor (let i = 1; i < points.length; i++) {\n\t\tconst [x1, y1] = points[i];\n\t\tctx.lineTo(x1, y1);\n\t}\n\n\tctx.stroke();\n}\n*/\n\nLineSeries.propTypes = {\n\tclassName: PropTypes.string,\n\tstrokeWidth: PropTypes.number,\n\tstrokeOpacity: PropTypes.number,\n\tstroke: PropTypes.string,\n\thoverStrokeWidth: PropTypes.number,\n\tfill: PropTypes.string,\n\tdefined: PropTypes.func,\n\thoverTolerance: PropTypes.number,\n\tstrokeDasharray: PropTypes.oneOf(strokeDashTypes),\n\thighlightOnHover: PropTypes.bool,\n\tonClick: PropTypes.func,\n\tonDoubleClick: PropTypes.func,\n\tonHover: PropTypes.func,\n\tonUnHover: PropTypes.func,\n\tonContextMenu: PropTypes.func,\n\tyAccessor: PropTypes.func,\n\tconnectNulls: PropTypes.bool,\n\tinterpolation: PropTypes.func,\n\tcanvasClip: PropTypes.func,\n\tstyle: PropTypes.object,\n};\n\nLineSeries.defaultProps = {\n\tclassName: \"line \",\n\tstrokeWidth: 1,\n\tstrokeOpacity: 1,\n\thoverStrokeWidth: 4,\n\tfill: \"none\",\n\tstroke: \"#4682B4\",\n\tstrokeDasharray: \"Solid\",\n\tdefined: d => !isNaN(d),\n\thoverTolerance: 6,\n\thighlightOnHover: false,\n\tconnectNulls: false,\n\tonClick: function(e) { console.log(\"Click\", e); },\n\tonDoubleClick: function(e) { console.log(\"Double Click\", e); },\n\tonContextMenu: function(e) { console.log(\"Right Click\", e); },\n};\n\nexport default LineSeries;\n"]},"metadata":{},"sourceType":"script"}