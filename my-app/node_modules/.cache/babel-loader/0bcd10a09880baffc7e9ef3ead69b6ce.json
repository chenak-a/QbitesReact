{"ast":null,"code":"import ascending from \"./ascending.js\";\nexport default function (f) {\n  let delta = f;\n  let compare = f;\n\n  if (f.length === 1) {\n    delta = (d, x) => f(d) - x;\n\n    compare = ascendingComparator(f);\n  }\n\n  function left(a, x, lo, hi) {\n    if (lo == null) lo = 0;\n    if (hi == null) hi = a.length;\n\n    while (lo < hi) {\n      const mid = lo + hi >>> 1;\n      if (compare(a[mid], x) < 0) lo = mid + 1;else hi = mid;\n    }\n\n    return lo;\n  }\n\n  function right(a, x, lo, hi) {\n    if (lo == null) lo = 0;\n    if (hi == null) hi = a.length;\n\n    while (lo < hi) {\n      const mid = lo + hi >>> 1;\n      if (compare(a[mid], x) > 0) hi = mid;else lo = mid + 1;\n    }\n\n    return lo;\n  }\n\n  function center(a, x, lo, hi) {\n    if (lo == null) lo = 0;\n    if (hi == null) hi = a.length;\n    const i = left(a, x, lo, hi - 1);\n    return i > lo && delta(a[i - 1], x) > -delta(a[i], x) ? i - 1 : i;\n  }\n\n  return {\n    left,\n    center,\n    right\n  };\n}\n\nfunction ascendingComparator(f) {\n  return (d, x) => ascending(f(d), x);\n}","map":{"version":3,"sources":["C:/Users/chena/QbitesReact/my-app/node_modules/d3-array/src/bisector.js"],"names":["ascending","f","delta","compare","length","d","x","ascendingComparator","left","a","lo","hi","mid","right","center","i"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,gBAAtB;AAEA,eAAe,UAASC,CAAT,EAAY;AACzB,MAAIC,KAAK,GAAGD,CAAZ;AACA,MAAIE,OAAO,GAAGF,CAAd;;AAEA,MAAIA,CAAC,CAACG,MAAF,KAAa,CAAjB,EAAoB;AAClBF,IAAAA,KAAK,GAAG,CAACG,CAAD,EAAIC,CAAJ,KAAUL,CAAC,CAACI,CAAD,CAAD,GAAOC,CAAzB;;AACAH,IAAAA,OAAO,GAAGI,mBAAmB,CAACN,CAAD,CAA7B;AACD;;AAED,WAASO,IAAT,CAAcC,CAAd,EAAiBH,CAAjB,EAAoBI,EAApB,EAAwBC,EAAxB,EAA4B;AAC1B,QAAID,EAAE,IAAI,IAAV,EAAgBA,EAAE,GAAG,CAAL;AAChB,QAAIC,EAAE,IAAI,IAAV,EAAgBA,EAAE,GAAGF,CAAC,CAACL,MAAP;;AAChB,WAAOM,EAAE,GAAGC,EAAZ,EAAgB;AACd,YAAMC,GAAG,GAAIF,EAAE,GAAGC,EAAN,KAAc,CAA1B;AACA,UAAIR,OAAO,CAACM,CAAC,CAACG,GAAD,CAAF,EAASN,CAAT,CAAP,GAAqB,CAAzB,EAA4BI,EAAE,GAAGE,GAAG,GAAG,CAAX,CAA5B,KACKD,EAAE,GAAGC,GAAL;AACN;;AACD,WAAOF,EAAP;AACD;;AAED,WAASG,KAAT,CAAeJ,CAAf,EAAkBH,CAAlB,EAAqBI,EAArB,EAAyBC,EAAzB,EAA6B;AAC3B,QAAID,EAAE,IAAI,IAAV,EAAgBA,EAAE,GAAG,CAAL;AAChB,QAAIC,EAAE,IAAI,IAAV,EAAgBA,EAAE,GAAGF,CAAC,CAACL,MAAP;;AAChB,WAAOM,EAAE,GAAGC,EAAZ,EAAgB;AACd,YAAMC,GAAG,GAAIF,EAAE,GAAGC,EAAN,KAAc,CAA1B;AACA,UAAIR,OAAO,CAACM,CAAC,CAACG,GAAD,CAAF,EAASN,CAAT,CAAP,GAAqB,CAAzB,EAA4BK,EAAE,GAAGC,GAAL,CAA5B,KACKF,EAAE,GAAGE,GAAG,GAAG,CAAX;AACN;;AACD,WAAOF,EAAP;AACD;;AAED,WAASI,MAAT,CAAgBL,CAAhB,EAAmBH,CAAnB,EAAsBI,EAAtB,EAA0BC,EAA1B,EAA8B;AAC5B,QAAID,EAAE,IAAI,IAAV,EAAgBA,EAAE,GAAG,CAAL;AAChB,QAAIC,EAAE,IAAI,IAAV,EAAgBA,EAAE,GAAGF,CAAC,CAACL,MAAP;AAChB,UAAMW,CAAC,GAAGP,IAAI,CAACC,CAAD,EAAIH,CAAJ,EAAOI,EAAP,EAAWC,EAAE,GAAG,CAAhB,CAAd;AACA,WAAOI,CAAC,GAAGL,EAAJ,IAAUR,KAAK,CAACO,CAAC,CAACM,CAAC,GAAG,CAAL,CAAF,EAAWT,CAAX,CAAL,GAAqB,CAACJ,KAAK,CAACO,CAAC,CAACM,CAAD,CAAF,EAAOT,CAAP,CAArC,GAAiDS,CAAC,GAAG,CAArD,GAAyDA,CAAhE;AACD;;AAED,SAAO;AAACP,IAAAA,IAAD;AAAOM,IAAAA,MAAP;AAAeD,IAAAA;AAAf,GAAP;AACD;;AAED,SAASN,mBAAT,CAA6BN,CAA7B,EAAgC;AAC9B,SAAO,CAACI,CAAD,EAAIC,CAAJ,KAAUN,SAAS,CAACC,CAAC,CAACI,CAAD,CAAF,EAAOC,CAAP,CAA1B;AACD","sourcesContent":["import ascending from \"./ascending.js\";\r\n\r\nexport default function(f) {\r\n  let delta = f;\r\n  let compare = f;\r\n\r\n  if (f.length === 1) {\r\n    delta = (d, x) => f(d) - x;\r\n    compare = ascendingComparator(f);\r\n  }\r\n\r\n  function left(a, x, lo, hi) {\r\n    if (lo == null) lo = 0;\r\n    if (hi == null) hi = a.length;\r\n    while (lo < hi) {\r\n      const mid = (lo + hi) >>> 1;\r\n      if (compare(a[mid], x) < 0) lo = mid + 1;\r\n      else hi = mid;\r\n    }\r\n    return lo;\r\n  }\r\n\r\n  function right(a, x, lo, hi) {\r\n    if (lo == null) lo = 0;\r\n    if (hi == null) hi = a.length;\r\n    while (lo < hi) {\r\n      const mid = (lo + hi) >>> 1;\r\n      if (compare(a[mid], x) > 0) hi = mid;\r\n      else lo = mid + 1;\r\n    }\r\n    return lo;\r\n  }\r\n\r\n  function center(a, x, lo, hi) {\r\n    if (lo == null) lo = 0;\r\n    if (hi == null) hi = a.length;\r\n    const i = left(a, x, lo, hi - 1);\r\n    return i > lo && delta(a[i - 1], x) > -delta(a[i], x) ? i - 1 : i;\r\n  }\r\n\r\n  return {left, center, right};\r\n}\r\n\r\nfunction ascendingComparator(f) {\r\n  return (d, x) => ascending(f(d), x);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}