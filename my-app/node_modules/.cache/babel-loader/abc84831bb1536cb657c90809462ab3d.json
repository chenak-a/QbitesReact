{"ast":null,"code":"import * as React from 'react';\nexport function isDisabled(dataNode, skipType) {\n  if (!dataNode) {\n    return true;\n  }\n\n  var _dataNode$data = dataNode.data,\n      disabled = _dataNode$data.disabled,\n      disableCheckbox = _dataNode$data.disableCheckbox;\n\n  switch (skipType) {\n    case 'select':\n      return disabled;\n\n    case 'checkbox':\n      return disabled || disableCheckbox;\n  }\n\n  return false;\n}\nexport default function useKeyValueMapping(cacheKeyMap, cacheValueMap) {\n  var getEntityByKey = React.useCallback(function (key) {\n    var skipType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'select';\n    var ignoreDisabledCheck = arguments.length > 2 ? arguments[2] : undefined;\n    var dataNode = cacheKeyMap.get(key);\n\n    if (!ignoreDisabledCheck && isDisabled(dataNode, skipType)) {\n      return null;\n    }\n\n    return dataNode;\n  }, [cacheKeyMap]);\n  var getEntityByValue = React.useCallback(function (value) {\n    var skipType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'select';\n    var ignoreDisabledCheck = arguments.length > 2 ? arguments[2] : undefined;\n    var dataNode = cacheValueMap.get(value);\n\n    if (!ignoreDisabledCheck && isDisabled(dataNode, skipType)) {\n      return null;\n    }\n\n    return dataNode;\n  }, [cacheValueMap]);\n  return [getEntityByKey, getEntityByValue];\n}","map":{"version":3,"sources":["C:/Users/chena/QbitesReact/my-app/node_modules/rc-tree-select/es/hooks/useKeyValueMapping.js"],"names":["React","isDisabled","dataNode","skipType","_dataNode$data","data","disabled","disableCheckbox","useKeyValueMapping","cacheKeyMap","cacheValueMap","getEntityByKey","useCallback","key","arguments","length","undefined","ignoreDisabledCheck","get","getEntityByValue","value"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAO,SAASC,UAAT,CAAoBC,QAApB,EAA8BC,QAA9B,EAAwC;AAC7C,MAAI,CAACD,QAAL,EAAe;AACb,WAAO,IAAP;AACD;;AAED,MAAIE,cAAc,GAAGF,QAAQ,CAACG,IAA9B;AAAA,MACIC,QAAQ,GAAGF,cAAc,CAACE,QAD9B;AAAA,MAEIC,eAAe,GAAGH,cAAc,CAACG,eAFrC;;AAIA,UAAQJ,QAAR;AACE,SAAK,QAAL;AACE,aAAOG,QAAP;;AAEF,SAAK,UAAL;AACE,aAAOA,QAAQ,IAAIC,eAAnB;AALJ;;AAQA,SAAO,KAAP;AACD;AACD,eAAe,SAASC,kBAAT,CAA4BC,WAA5B,EAAyCC,aAAzC,EAAwD;AACrE,MAAIC,cAAc,GAAGX,KAAK,CAACY,WAAN,CAAkB,UAAUC,GAAV,EAAe;AACpD,QAAIV,QAAQ,GAAGW,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,QAAnF;AACA,QAAIG,mBAAmB,GAAGH,SAAS,CAACC,MAAV,GAAmB,CAAnB,GAAuBD,SAAS,CAAC,CAAD,CAAhC,GAAsCE,SAAhE;AACA,QAAId,QAAQ,GAAGO,WAAW,CAACS,GAAZ,CAAgBL,GAAhB,CAAf;;AAEA,QAAI,CAACI,mBAAD,IAAwBhB,UAAU,CAACC,QAAD,EAAWC,QAAX,CAAtC,EAA4D;AAC1D,aAAO,IAAP;AACD;;AAED,WAAOD,QAAP;AACD,GAVoB,EAUlB,CAACO,WAAD,CAVkB,CAArB;AAWA,MAAIU,gBAAgB,GAAGnB,KAAK,CAACY,WAAN,CAAkB,UAAUQ,KAAV,EAAiB;AACxD,QAAIjB,QAAQ,GAAGW,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,QAAnF;AACA,QAAIG,mBAAmB,GAAGH,SAAS,CAACC,MAAV,GAAmB,CAAnB,GAAuBD,SAAS,CAAC,CAAD,CAAhC,GAAsCE,SAAhE;AACA,QAAId,QAAQ,GAAGQ,aAAa,CAACQ,GAAd,CAAkBE,KAAlB,CAAf;;AAEA,QAAI,CAACH,mBAAD,IAAwBhB,UAAU,CAACC,QAAD,EAAWC,QAAX,CAAtC,EAA4D;AAC1D,aAAO,IAAP;AACD;;AAED,WAAOD,QAAP;AACD,GAVsB,EAUpB,CAACQ,aAAD,CAVoB,CAAvB;AAWA,SAAO,CAACC,cAAD,EAAiBQ,gBAAjB,CAAP;AACD","sourcesContent":["import * as React from 'react';\r\nexport function isDisabled(dataNode, skipType) {\r\n  if (!dataNode) {\r\n    return true;\r\n  }\r\n\r\n  var _dataNode$data = dataNode.data,\r\n      disabled = _dataNode$data.disabled,\r\n      disableCheckbox = _dataNode$data.disableCheckbox;\r\n\r\n  switch (skipType) {\r\n    case 'select':\r\n      return disabled;\r\n\r\n    case 'checkbox':\r\n      return disabled || disableCheckbox;\r\n  }\r\n\r\n  return false;\r\n}\r\nexport default function useKeyValueMapping(cacheKeyMap, cacheValueMap) {\r\n  var getEntityByKey = React.useCallback(function (key) {\r\n    var skipType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'select';\r\n    var ignoreDisabledCheck = arguments.length > 2 ? arguments[2] : undefined;\r\n    var dataNode = cacheKeyMap.get(key);\r\n\r\n    if (!ignoreDisabledCheck && isDisabled(dataNode, skipType)) {\r\n      return null;\r\n    }\r\n\r\n    return dataNode;\r\n  }, [cacheKeyMap]);\r\n  var getEntityByValue = React.useCallback(function (value) {\r\n    var skipType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'select';\r\n    var ignoreDisabledCheck = arguments.length > 2 ? arguments[2] : undefined;\r\n    var dataNode = cacheValueMap.get(value);\r\n\r\n    if (!ignoreDisabledCheck && isDisabled(dataNode, skipType)) {\r\n      return null;\r\n    }\r\n\r\n    return dataNode;\r\n  }, [cacheValueMap]);\r\n  return [getEntityByKey, getEntityByValue];\r\n}"]},"metadata":{},"sourceType":"module"}