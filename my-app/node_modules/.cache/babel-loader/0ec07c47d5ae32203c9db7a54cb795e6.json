{"ast":null,"code":"import constant from \"./constant.js\";\nexport default function (radius, x, y) {\n  var nodes,\n      strength = constant(0.1),\n      strengths,\n      radiuses;\n  if (typeof radius !== \"function\") radius = constant(+radius);\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length; i < n; ++i) {\n      var node = nodes[i],\n          dx = node.x - x || 1e-6,\n          dy = node.y - y || 1e-6,\n          r = Math.sqrt(dx * dx + dy * dy),\n          k = (radiuses[i] - r) * strengths[i] * alpha / r;\n      node.vx += dx * k;\n      node.vy += dy * k;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i,\n        n = nodes.length;\n    strengths = new Array(n);\n    radiuses = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      radiuses[i] = +radius(nodes[i], i, nodes);\n      strengths[i] = isNaN(radiuses[i]) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function (_) {\n    nodes = _, initialize();\n  };\n\n  force.strength = function (_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.radius = function (_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  force.x = function (_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function (_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n}","map":{"version":3,"sources":["C:/Users/chena/QbitesReact/my-app/node_modules/d3/node_modules/d3-force/src/radial.js"],"names":["constant","radius","x","y","nodes","strength","strengths","radiuses","force","alpha","i","n","length","node","dx","dy","r","Math","sqrt","k","vx","vy","initialize","Array","isNaN","_","arguments"],"mappings":"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","sourcesContent":["import constant from \"./constant.js\";\r\n\r\nexport default function(radius, x, y) {\r\n  var nodes,\r\n      strength = constant(0.1),\r\n      strengths,\r\n      radiuses;\r\n\r\n  if (typeof radius !== \"function\") radius = constant(+radius);\r\n  if (x == null) x = 0;\r\n  if (y == null) y = 0;\r\n\r\n  function force(alpha) {\r\n    for (var i = 0, n = nodes.length; i < n; ++i) {\r\n      var node = nodes[i],\r\n          dx = node.x - x || 1e-6,\r\n          dy = node.y - y || 1e-6,\r\n          r = Math.sqrt(dx * dx + dy * dy),\r\n          k = (radiuses[i] - r) * strengths[i] * alpha / r;\r\n      node.vx += dx * k;\r\n      node.vy += dy * k;\r\n    }\r\n  }\r\n\r\n  function initialize() {\r\n    if (!nodes) return;\r\n    var i, n = nodes.length;\r\n    strengths = new Array(n);\r\n    radiuses = new Array(n);\r\n    for (i = 0; i < n; ++i) {\r\n      radiuses[i] = +radius(nodes[i], i, nodes);\r\n      strengths[i] = isNaN(radiuses[i]) ? 0 : +strength(nodes[i], i, nodes);\r\n    }\r\n  }\r\n\r\n  force.initialize = function(_) {\r\n    nodes = _, initialize();\r\n  };\r\n\r\n  force.strength = function(_) {\r\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\r\n  };\r\n\r\n  force.radius = function(_) {\r\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\r\n  };\r\n\r\n  force.x = function(_) {\r\n    return arguments.length ? (x = +_, force) : x;\r\n  };\r\n\r\n  force.y = function(_) {\r\n    return arguments.length ? (y = +_, force) : y;\r\n  };\r\n\r\n  return force;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}