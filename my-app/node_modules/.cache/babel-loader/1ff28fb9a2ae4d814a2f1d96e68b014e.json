{"ast":null,"code":"import { slice } from \"./array\";\nimport bisect from \"./bisect\";\nimport constant from \"./constant\";\nimport extent from \"./extent\";\nimport identity from \"./identity\";\nimport range from \"./range\";\nimport { tickStep } from \"./ticks\";\nimport sturges from \"./threshold/sturges\";\nexport default function () {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1); // Convert number of thresholds into uniform thresholds.\n\n    if (!Array.isArray(tz)) {\n      tz = tickStep(x0, x1, tz);\n      tz = range(Math.ceil(x0 / tz) * tz, x1, tz); // exclusive\n    } // Remove any thresholds outside the domain.\n\n\n    var m = tz.length;\n\n    while (tz[0] <= x0) tz.shift(), --m;\n\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin; // Initialize bins.\n\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    } // Assign data to bins by value, ignoring any outside the domain.\n\n\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n\n      if (x0 <= x && x <= x1) {\n        bins[bisect(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function (_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function (_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function (_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n}","map":{"version":3,"names":["slice","bisect","constant","extent","identity","range","tickStep","sturges","value","domain","threshold","histogram","data","i","n","length","x","values","Array","xz","x0","x1","tz","isArray","Math","ceil","m","shift","pop","bins","bin","push","_","arguments","thresholds","call"],"sources":["/home/chenak/QbitesReact/my-app/node_modules/d3-scale/node_modules/d3-array/src/histogram.js"],"sourcesContent":["import {slice} from \"./array\";\nimport bisect from \"./bisect\";\nimport constant from \"./constant\";\nimport extent from \"./extent\";\nimport identity from \"./identity\";\nimport range from \"./range\";\nimport {tickStep} from \"./ticks\";\nimport sturges from \"./threshold/sturges\";\n\nexport default function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      tz = tickStep(x0, x1, tz);\n      tz = range(Math.ceil(x0 / tz) * tz, x1, tz); // exclusive\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisect(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}