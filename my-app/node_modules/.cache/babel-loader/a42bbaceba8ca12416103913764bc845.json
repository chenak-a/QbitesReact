{"ast":null,"code":"import invariant from \"./invariant.mjs\";\nimport nodejsCustomInspectSymbol from \"./nodejsCustomInspectSymbol.mjs\";\n/**\n * The `defineInspect()` function defines `inspect()` prototype method as alias of `toJSON`\n */\n\nexport default function defineInspect(classObject) {\n  var fn = classObject.prototype.toJSON;\n  typeof fn === 'function' || invariant(0);\n  classObject.prototype.inspect = fn; // istanbul ignore else (See: 'https://github.com/graphql/graphql-js/issues/2317')\n\n  if (nodejsCustomInspectSymbol) {\n    classObject.prototype[nodejsCustomInspectSymbol] = fn;\n  }\n}","map":{"version":3,"names":["invariant","nodejsCustomInspectSymbol","defineInspect","classObject","fn","prototype","toJSON","inspect"],"sources":["/home/chenak/QbitesReact/my-app/node_modules/graphql/jsutils/defineInspect.mjs"],"sourcesContent":["import invariant from \"./invariant.mjs\";\nimport nodejsCustomInspectSymbol from \"./nodejsCustomInspectSymbol.mjs\";\n/**\n * The `defineInspect()` function defines `inspect()` prototype method as alias of `toJSON`\n */\n\nexport default function defineInspect(classObject) {\n  var fn = classObject.prototype.toJSON;\n  typeof fn === 'function' || invariant(0);\n  classObject.prototype.inspect = fn; // istanbul ignore else (See: 'https://github.com/graphql/graphql-js/issues/2317')\n\n  if (nodejsCustomInspectSymbol) {\n    classObject.prototype[nodejsCustomInspectSymbol] = fn;\n  }\n}\n"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,iBAAtB;AACA,OAAOC,yBAAP,MAAsC,iCAAtC;AACA;AACA;AACA;;AAEA,eAAe,SAASC,aAAT,CAAuBC,WAAvB,EAAoC;EACjD,IAAIC,EAAE,GAAGD,WAAW,CAACE,SAAZ,CAAsBC,MAA/B;EACA,OAAOF,EAAP,KAAc,UAAd,IAA4BJ,SAAS,CAAC,CAAD,CAArC;EACAG,WAAW,CAACE,SAAZ,CAAsBE,OAAtB,GAAgCH,EAAhC,CAHiD,CAGb;;EAEpC,IAAIH,yBAAJ,EAA+B;IAC7BE,WAAW,CAACE,SAAZ,CAAsBJ,yBAAtB,IAAmDG,EAAnD;EACD;AACF"},"metadata":{},"sourceType":"module"}