{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _utils = require(\"../utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction Triangle(props) {\n  var className = props.className,\n      strokeWidth = props.strokeWidth,\n      opacity = props.opacity,\n      point = props.point,\n      width = props.width;\n  var rotation = getRotationInDegrees(props, point);\n  if (rotation == null) return null;\n  var fillColor = getFillColor(props);\n  var strokeColor = getStrokeColor(props);\n  var w = (0, _utils.functor)(width)(point.datum);\n  var x = point.x,\n      y = point.y;\n\n  var _getTrianglePoints = getTrianglePoints(w),\n      innerOpposite = _getTrianglePoints.innerOpposite,\n      innerHypotenuse = _getTrianglePoints.innerHypotenuse;\n\n  var points = \"\\n\\t\\t\" + x + \" \" + (y - innerHypotenuse) + \",\\n\\t\\t\" + (x + w / 2) + \" \" + (y + innerOpposite) + \",\\n\\t\\t\" + (x - w / 2) + \" \" + (y + innerOpposite) + \"\\n\\t\";\n  return _react2.default.createElement(\"polygon\", {\n    className: className,\n    points: points,\n    stroke: strokeColor,\n    strokeWidth: strokeWidth,\n    fillOpacity: opacity,\n    fill: fillColor,\n    transform: rotation !== 0 ? \"rotate(\" + rotation + \", \" + x + \", \" + y + \")\" : null\n  });\n}\n\nTriangle.propTypes = {\n  direction: _propTypes2.default.oneOfType([_propTypes2.default.oneOf([\"top\", \"bottom\", \"left\", \"right\", \"hide\"]), _propTypes2.default.func]).isRequired,\n  stroke: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func]).isRequired,\n  fill: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func]).isRequired,\n  opacity: _propTypes2.default.number.isRequired,\n  point: _propTypes2.default.shape({\n    x: _propTypes2.default.number.isRequired,\n    y: _propTypes2.default.number.isRequired,\n    datum: _propTypes2.default.object.isRequired\n  }).isRequired,\n  className: _propTypes2.default.string,\n  strokeWidth: _propTypes2.default.number,\n  width: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.func]).isRequired\n};\nTriangle.defaultProps = {\n  direction: \"top\",\n  stroke: \"#4682B4\",\n  strokeWidth: 1,\n  opacity: 0.5,\n  fill: \"#4682B4\",\n  className: \"react-stockcharts-marker-triangle\"\n};\n\nTriangle.drawOnCanvas = function (props, point, ctx) {\n  var stroke = props.stroke,\n      fill = props.fill,\n      opacity = props.opacity,\n      strokeWidth = props.strokeWidth;\n  ctx.strokeStyle = stroke;\n  ctx.lineWidth = strokeWidth;\n\n  if (fill !== \"none\") {\n    ctx.fillStyle = (0, _utils.hexToRGBA)(fill, opacity);\n  }\n\n  Triangle.drawOnCanvasWithNoStateChange(props, point, ctx);\n};\n\nTriangle.drawOnCanvasWithNoStateChange = function (props, point, ctx) {\n  var width = props.width;\n  var w = (0, _utils.functor)(width)(point.datum);\n  var x = point.x,\n      y = point.y;\n\n  var _getTrianglePoints2 = getTrianglePoints(w),\n      innerOpposite = _getTrianglePoints2.innerOpposite,\n      innerHypotenuse = _getTrianglePoints2.innerHypotenuse;\n\n  var rotationDeg = getRotationInDegrees(props, point);\n  ctx.beginPath();\n  ctx.moveTo(x, y - innerHypotenuse);\n  ctx.lineTo(x + w / 2, y + innerOpposite);\n  ctx.lineTo(x - w / 2, y + innerOpposite);\n  ctx.stroke(); // TODO: rotation does not work\n  // example: https://gist.github.com/geoffb/6392450\n\n  if (rotationDeg !== null && rotationDeg !== 0) {\n    ctx.save();\n    ctx.translate(x, y);\n    ctx.rotate(rotationDeg * Math.PI / 180); // 45 degrees\n\n    ctx.fill();\n    ctx.restore();\n  }\n\n  ctx.fill();\n};\n\nexports.default = Triangle;\n\nfunction getTrianglePoints(width) {\n  var innerHypotenuse = width / 2 * (1 / Math.cos(30 * Math.PI / 180));\n  var innerOpposite = width / 2 * (1 / Math.tan(60 * Math.PI / 180));\n  return {\n    innerOpposite: innerOpposite,\n    innerHypotenuse: innerHypotenuse\n  };\n}\n\nfunction getFillColor(props) {\n  var fill = props.fill,\n      point = props.point;\n  return fill instanceof Function ? fill(point.datum) : fill;\n}\n\nfunction getStrokeColor(props) {\n  var stroke = props.stroke,\n      point = props.point;\n  return stroke instanceof Function ? stroke(point.datum) : stroke;\n}\n\nfunction getRotationInDegrees(props, point) {\n  var direction = props.direction;\n  var directionVal = direction instanceof Function ? direction(point.datum) : direction;\n  if (directionVal === \"hide\") return null;\n  var rotate = 0;\n\n  switch (directionVal) {\n    case \"bottom\":\n      rotate = 180;\n      break;\n\n    case \"left\":\n      rotate = -90;\n      break;\n\n    case \"right\":\n      rotate = 90;\n      break;\n  }\n\n  return rotate;\n}","map":{"version":3,"mappings":"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","names":["Triangle","props","className","strokeWidth","opacity","point","width","rotation","getRotationInDegrees","fillColor","getFillColor","strokeColor","getStrokeColor","w","datum","x","y","getTrianglePoints","innerOpposite","innerHypotenuse","points","_react2","stroke","fillOpacity","fill","transform","propTypes","direction","_propTypes2","oneOfType","oneOf","func","isRequired","string","number","shape","object","defaultProps","drawOnCanvas","ctx","strokeStyle","lineWidth","fillStyle","drawOnCanvasWithNoStateChange","rotationDeg","beginPath","moveTo","lineTo","save","translate","rotate","Math","PI","restore","cos","tan","Function","directionVal"],"sources":["../../../src/lib/series/TriangleMarker.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { hexToRGBA, functor } from \"../utils\";\n\nfunction Triangle(props) {\n\n\tconst {\n\t\tclassName, strokeWidth,\n\t\topacity, point, width\n\t} = props;\n\n\tconst rotation = getRotationInDegrees(props, point);\n\tif (rotation == null) return null;\n\n\tconst fillColor = getFillColor(props);\n\tconst strokeColor = getStrokeColor(props);\n\n\tconst w = functor(width)(point.datum);\n\tconst { x, y } = point;\n\tconst { innerOpposite, innerHypotenuse } = getTrianglePoints(w);\n\tconst points = `\n\t\t${x} ${y - innerHypotenuse},\n\t\t${x + (w / 2)} ${y + innerOpposite},\n\t\t${x - (w / 2)} ${y + innerOpposite}\n\t`;\n\n\treturn (\n\t\t<polygon\n\t\t\tclassName={className}\n\t\t\tpoints={points}\n\t\t\tstroke={strokeColor}\n\t\t\tstrokeWidth={strokeWidth}\n\t\t\tfillOpacity={opacity}\n\t\t\tfill={fillColor}\n\t\t\ttransform={rotation !== 0 ? `rotate(${ rotation }, ${ x }, ${ y })` : null}\n\t\t/>\n\t);\n}\nTriangle.propTypes = {\n\tdirection: PropTypes.oneOfType( [\n\t\tPropTypes.oneOf( [\n\t\t\t\"top\",\n\t\t\t\"bottom\",\n\t\t\t\"left\",\n\t\t\t\"right\",\n\t\t\t\"hide\"] ),\n\t\tPropTypes.func\n\t] ).isRequired,\n\tstroke: PropTypes.oneOfType( [\n\t\tPropTypes.string,\n\t\tPropTypes.func\n\t] ).isRequired,\n\tfill: PropTypes.oneOfType( [\n\t\tPropTypes.string,\n\t\tPropTypes.func\n\t] ).isRequired,\n\topacity: PropTypes.number.isRequired,\n\tpoint: PropTypes.shape({\n\t\tx: PropTypes.number.isRequired,\n\t\ty: PropTypes.number.isRequired,\n\t\tdatum: PropTypes.object.isRequired,\n\t}).isRequired,\n\tclassName: PropTypes.string,\n\tstrokeWidth: PropTypes.number,\n\twidth: PropTypes.oneOfType([\n\t\tPropTypes.number,\n\t\tPropTypes.func\n\t]).isRequired\n};\nTriangle.defaultProps = {\n\tdirection: \"top\",\n\tstroke: \"#4682B4\",\n\tstrokeWidth: 1,\n\topacity: 0.5,\n\tfill: \"#4682B4\",\n\tclassName: \"react-stockcharts-marker-triangle\",\n};\nTriangle.drawOnCanvas = (props, point, ctx) => {\n\tconst { stroke, fill, opacity, strokeWidth } = props;\n\tctx.strokeStyle = stroke;\n\tctx.lineWidth = strokeWidth;\n\tif (fill !== \"none\") {\n\t\tctx.fillStyle = hexToRGBA(fill, opacity);\n\t}\n\tTriangle.drawOnCanvasWithNoStateChange(props, point, ctx);\n};\nTriangle.drawOnCanvasWithNoStateChange = (props, point, ctx) => {\n\n\tconst { width } = props;\n\tconst w = functor(width)(point.datum);\n\tconst { x, y } = point;\n\tconst { innerOpposite, innerHypotenuse } = getTrianglePoints(w);\n\tconst rotationDeg = getRotationInDegrees(props, point);\n\n\tctx.beginPath();\n\tctx.moveTo(x, y - innerHypotenuse);\n\tctx.lineTo(x + (w / 2), y + innerOpposite);\n\tctx.lineTo(x - (w / 2), y + innerOpposite);\n\tctx.stroke();\n\n\t// TODO: rotation does not work\n\t// example: https://gist.github.com/geoffb/6392450\n\tif ( rotationDeg !== null && rotationDeg !== 0 ) {\n\t\tctx.save();\n\t\tctx.translate(x, y);\n\t\tctx.rotate(rotationDeg * Math.PI / 180); // 45 degrees\n\t\tctx.fill();\n\t\tctx.restore();\n\t}\n\tctx.fill();\n};\nexport default Triangle;\n\nfunction getTrianglePoints(width) {\n\tconst innerHypotenuse = (width / 2) * (1 / Math.cos(30 * Math.PI / 180));\n\tconst innerOpposite = (width / 2) * (1 / Math.tan(60 * Math.PI / 180));\n\treturn {\n\t\tinnerOpposite,\n\t\tinnerHypotenuse\n\t};\n}\n\nfunction getFillColor( props ) {\n\tconst { fill, point } = props;\n\treturn fill instanceof Function ? fill( point.datum ) : fill;\n}\n\nfunction getStrokeColor( props ) {\n\tconst { stroke, point } = props;\n\treturn stroke instanceof Function ? stroke( point.datum ) : stroke;\n}\n\nfunction getRotationInDegrees( props, point ) {\n\tconst { direction } = props;\n\tconst directionVal = direction instanceof Function ? direction( point.datum ) : direction;\n\tif ( directionVal === \"hide\" ) return null;\n\n\tlet rotate = 0;\n\tswitch ( directionVal ) {\n\t\tcase \"bottom\":\n\t\t\trotate = 180;\n\t\t\tbreak;\n\t\tcase \"left\":\n\t\t\trotate = -90;\n\t\t\tbreak;\n\t\tcase \"right\":\n\t\t\trotate = 90;\n\t\t\tbreak;\n\t}\n\treturn rotate;\n}\n"]},"metadata":{},"sourceType":"script"}