{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { isNotDefined, isDefined, noop, functor, identity } from \"./utils\";\nvar aliases = {\n  mouseleave: \"mousemove\",\n  // to draw interactive after mouse exit\n  panend: \"pan\",\n  pinchzoom: \"pan\",\n  mousedown: \"mousemove\",\n  click: \"mousemove\",\n  contextmenu: \"mousemove\",\n  dblclick: \"mousemove\",\n  dragstart: \"drag\",\n  dragend: \"drag\",\n  dragcancel: \"drag\"\n};\n\nvar GenericComponent = function (_Component) {\n  _inherits(GenericComponent, _Component);\n\n  function GenericComponent(props, context) {\n    _classCallCheck(this, GenericComponent);\n\n    var _this = _possibleConstructorReturn(this, (GenericComponent.__proto__ || Object.getPrototypeOf(GenericComponent)).call(this, props, context));\n\n    _this.drawOnCanvas = _this.drawOnCanvas.bind(_this);\n    _this.getMoreProps = _this.getMoreProps.bind(_this);\n    _this.listener = _this.listener.bind(_this);\n    _this.draw = _this.draw.bind(_this);\n    _this.updateMoreProps = _this.updateMoreProps.bind(_this);\n    _this.evaluateType = _this.evaluateType.bind(_this);\n    _this.isHover = _this.isHover.bind(_this);\n    _this.preCanvasDraw = _this.preCanvasDraw.bind(_this);\n    _this.postCanvasDraw = _this.postCanvasDraw.bind(_this);\n    _this.getPanConditions = _this.getPanConditions.bind(_this);\n    _this.shouldTypeProceed = _this.shouldTypeProceed.bind(_this);\n    _this.preEvaluate = _this.preEvaluate.bind(_this);\n    var generateSubscriptionId = context.generateSubscriptionId;\n    _this.suscriberId = generateSubscriptionId();\n    _this.moreProps = {};\n    _this.state = {\n      updateCount: 0\n    };\n    return _this;\n  }\n\n  _createClass(GenericComponent, [{\n    key: \"updateMoreProps\",\n    value: function updateMoreProps(moreProps) {\n      var _this2 = this;\n\n      Object.keys(moreProps).forEach(function (key) {\n        _this2.moreProps[key] = moreProps[key];\n      });\n    }\n  }, {\n    key: \"shouldTypeProceed\",\n    value: function shouldTypeProceed() {\n      return true;\n    }\n  }, {\n    key: \"preEvaluate\",\n    value: function preEvaluate() {}\n  }, {\n    key: \"listener\",\n    value: function listener(type, moreProps, state, e) {\n      // console.log(e.shiftKey)\n      if (isDefined(moreProps)) {\n        this.updateMoreProps(moreProps);\n      }\n\n      this.evaluationInProgress = true;\n      this.evaluateType(type, e);\n      this.evaluationInProgress = false;\n    }\n  }, {\n    key: \"evaluateType\",\n    value: function evaluateType(type, e) {\n      var newType = aliases[type] || type;\n      var proceed = this.props.drawOn.indexOf(newType) > -1; // console.log(\"type ->\", type, proceed);\n\n      if (!proceed) return; // const moreProps = this.getMoreProps();\n\n      this.preEvaluate(type, this.moreProps, e);\n      if (!this.shouldTypeProceed(type, this.moreProps)) return;\n\n      switch (type) {\n        case \"zoom\":\n        case \"mouseenter\":\n          // DO NOT DRAW FOR THESE EVENTS\n          break;\n\n        case \"mouseleave\":\n          {\n            this.moreProps.hovering = false;\n            var moreProps = this.getMoreProps();\n\n            if (this.props.onUnHover) {\n              this.props.onUnHover(moreProps, e);\n            }\n\n            break;\n          }\n\n        case \"contextmenu\":\n          {\n            if (this.props.onContextMenu) {\n              this.props.onContextMenu(this.getMoreProps(), e);\n            }\n\n            if (this.moreProps.hovering && this.props.onContextMenuWhenHover) {\n              this.props.onContextMenuWhenHover(this.getMoreProps(), e);\n            }\n\n            break;\n          }\n\n        case \"mousedown\":\n          {\n            if (this.props.onMouseDown) {\n              this.props.onMouseDown(this.getMoreProps(), e);\n            }\n\n            break;\n          }\n\n        case \"click\":\n          {\n            var _moreProps = this.getMoreProps();\n\n            if (this.moreProps.hovering) {\n              // console.error(\"TODO use this only for SAR, Line series\")\n              this.props.onClickWhenHover(_moreProps, e);\n            } else {\n              this.props.onClickOutside(_moreProps, e);\n            }\n\n            if (this.props.onClick) {\n              this.props.onClick(_moreProps, e);\n            }\n\n            break;\n          }\n\n        case \"mousemove\":\n          {\n            var prevHover = this.moreProps.hovering;\n            this.moreProps.hovering = this.isHover(e);\n            var _context = this.context,\n                amIOnTop = _context.amIOnTop,\n                setCursorClass = _context.setCursorClass;\n\n            if (this.moreProps.hovering && !this.props.selected\n            /* && !prevHover */\n            && amIOnTop(this.suscriberId) && isDefined(this.props.onHover)) {\n              setCursorClass(\"react-stockcharts-pointer-cursor\");\n              this.iSetTheCursorClass = true;\n            } else if (this.moreProps.hovering && this.props.selected && amIOnTop(this.suscriberId)) {\n              setCursorClass(this.props.interactiveCursorClass);\n              this.iSetTheCursorClass = true;\n            } else if (prevHover && !this.moreProps.hovering && this.iSetTheCursorClass) {\n              this.iSetTheCursorClass = false;\n              setCursorClass(null);\n            }\n\n            var _moreProps2 = this.getMoreProps();\n\n            if (this.moreProps.hovering && !prevHover) {\n              if (this.props.onHover) {\n                this.props.onHover(_moreProps2, e);\n              }\n            }\n\n            if (prevHover && !this.moreProps.hovering) {\n              if (this.props.onUnHover) {\n                this.props.onUnHover(_moreProps2, e);\n              }\n            }\n\n            if (this.props.onMouseMove) {\n              this.props.onMouseMove(_moreProps2, e);\n            }\n\n            break;\n          }\n\n        case \"dblclick\":\n          {\n            var _moreProps3 = this.getMoreProps();\n\n            if (this.props.onDoubleClick) {\n              this.props.onDoubleClick(_moreProps3, e);\n            }\n\n            if (this.moreProps.hovering && this.props.onDoubleClickWhenHover) {\n              this.props.onDoubleClickWhenHover(_moreProps3, e);\n            }\n\n            break;\n          }\n\n        case \"pan\":\n          {\n            this.moreProps.hovering = false;\n\n            if (this.props.onPan) {\n              this.props.onPan(this.getMoreProps(), e);\n            }\n\n            break;\n          }\n\n        case \"panend\":\n          {\n            if (this.props.onPanEnd) {\n              this.props.onPanEnd(this.getMoreProps(), e);\n            }\n\n            break;\n          }\n\n        case \"dragstart\":\n          {\n            if (this.getPanConditions().draggable) {\n              var _amIOnTop = this.context.amIOnTop;\n\n              if (_amIOnTop(this.suscriberId)) {\n                this.dragInProgress = true;\n                this.props.onDragStart(this.getMoreProps(), e);\n              }\n            }\n\n            this.someDragInProgress = true;\n            break;\n          }\n\n        case \"drag\":\n          {\n            if (this.dragInProgress && this.props.onDrag) {\n              this.props.onDrag(this.getMoreProps(), e);\n            }\n\n            break;\n          }\n\n        case \"dragend\":\n          {\n            if (this.dragInProgress && this.props.onDragComplete) {\n              this.props.onDragComplete(this.getMoreProps(), e);\n            }\n\n            this.dragInProgress = false;\n            this.someDragInProgress = false;\n            break;\n          }\n\n        case \"dragcancel\":\n          {\n            if (this.dragInProgress || this.iSetTheCursorClass) {\n              var _setCursorClass = this.context.setCursorClass;\n\n              _setCursorClass(null);\n            }\n\n            break;\n          }\n      }\n    }\n  }, {\n    key: \"isHover\",\n    value: function isHover(e) {\n      return isDefined(this.props.isHover) ? this.props.isHover(this.getMoreProps(), e) : false;\n    }\n  }, {\n    key: \"getPanConditions\",\n    value: function getPanConditions() {\n      var draggable = !!(this.props.selected && this.moreProps.hovering) || this.props.enableDragOnHover && this.moreProps.hovering;\n      return {\n        draggable: draggable,\n        panEnabled: !this.props.disablePan\n      };\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n        force: false\n      },\n          trigger = _ref.trigger,\n          force = _ref.force;\n\n      var type = aliases[trigger] || trigger;\n      var proceed = this.props.drawOn.indexOf(type) > -1;\n\n      if (proceed || this.props.selected\n      /* this is to draw as soon as you select */\n      || force) {\n        var chartCanvasType = this.context.chartCanvasType;\n        var canvasDraw = this.props.canvasDraw;\n\n        if (isNotDefined(canvasDraw) || chartCanvasType === \"svg\") {\n          var updateCount = this.state.updateCount;\n          this.setState({\n            updateCount: updateCount + 1\n          });\n        } else {\n          this.drawOnCanvas();\n        }\n      }\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _context2 = this.context,\n          subscribe = _context2.subscribe,\n          chartId = _context2.chartId;\n      var _props = this.props,\n          clip = _props.clip,\n          edgeClip = _props.edgeClip;\n      subscribe(this.suscriberId, {\n        chartId: chartId,\n        clip: clip,\n        edgeClip: edgeClip,\n        listener: this.listener,\n        draw: this.draw,\n        getPanConditions: this.getPanConditions\n      });\n      this.componentWillReceiveProps(this.props, this.context);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var unsubscribe = this.context.unsubscribe;\n      unsubscribe(this.suscriberId);\n\n      if (this.iSetTheCursorClass) {\n        var setCursorClass = this.context.setCursorClass;\n        setCursorClass(null);\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.componentDidUpdate(this.props);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var chartCanvasType = this.context.chartCanvasType;\n      var _props2 = this.props,\n          canvasDraw = _props2.canvasDraw,\n          selected = _props2.selected,\n          interactiveCursorClass = _props2.interactiveCursorClass;\n\n      if (prevProps.selected !== selected) {\n        var setCursorClass = this.context.setCursorClass;\n\n        if (selected && this.moreProps.hovering) {\n          this.iSetTheCursorClass = true;\n          setCursorClass(interactiveCursorClass);\n        } else {\n          this.iSetTheCursorClass = false;\n          setCursorClass(null);\n        }\n      }\n\n      if (isDefined(canvasDraw) && !this.evaluationInProgress // && !(this.someDragInProgress && this.props.selected)\n\n      /*\n      prevent double draw of interactive elements\n      during dragging / hover / click etc.\n      */\n      && chartCanvasType !== \"svg\") {\n        this.updateMoreProps(this.moreProps);\n        this.drawOnCanvas();\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps, nextContext) {\n      var xScale = nextContext.xScale,\n          plotData = nextContext.plotData,\n          chartConfig = nextContext.chartConfig,\n          getMutableState = nextContext.getMutableState;\n      this.props.debug(nextContext);\n      this.moreProps = _extends({}, this.moreProps, getMutableState(), {\n        /*\n        ^ this is so\n        mouseXY, currentCharts, currentItem are available to\n        newly created components like MouseHoverText which\n        is created right after a new interactive object is drawn\n        */\n        xScale: xScale,\n        plotData: plotData,\n        chartConfig: chartConfig\n      });\n    }\n  }, {\n    key: \"getMoreProps\",\n    value: function getMoreProps() {\n      var _context3 = this.context,\n          xScale = _context3.xScale,\n          plotData = _context3.plotData,\n          chartConfig = _context3.chartConfig,\n          morePropsDecorator = _context3.morePropsDecorator,\n          xAccessor = _context3.xAccessor,\n          displayXAccessor = _context3.displayXAccessor,\n          width = _context3.width,\n          height = _context3.height;\n      var _context4 = this.context,\n          chartId = _context4.chartId,\n          fullData = _context4.fullData;\n\n      var moreProps = _extends({\n        xScale: xScale,\n        plotData: plotData,\n        chartConfig: chartConfig,\n        xAccessor: xAccessor,\n        displayXAccessor: displayXAccessor,\n        width: width,\n        height: height,\n        chartId: chartId,\n        fullData: fullData\n      }, this.moreProps);\n\n      return (morePropsDecorator || identity)(moreProps);\n    }\n  }, {\n    key: \"preCanvasDraw\",\n    value: function preCanvasDraw() {// do nothing\n    }\n  }, {\n    key: \"postCanvasDraw\",\n    value: function postCanvasDraw() {}\n  }, {\n    key: \"drawOnCanvas\",\n    value: function drawOnCanvas() {\n      var _props3 = this.props,\n          canvasDraw = _props3.canvasDraw,\n          canvasToDraw = _props3.canvasToDraw;\n      var getCanvasContexts = this.context.getCanvasContexts;\n      var moreProps = this.getMoreProps();\n      var ctx = canvasToDraw(getCanvasContexts());\n      this.preCanvasDraw(ctx, moreProps);\n      canvasDraw(ctx, moreProps);\n      this.postCanvasDraw(ctx, moreProps);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _context5 = this.context,\n          chartCanvasType = _context5.chartCanvasType,\n          chartId = _context5.chartId;\n      var _props4 = this.props,\n          canvasDraw = _props4.canvasDraw,\n          clip = _props4.clip,\n          svgDraw = _props4.svgDraw;\n\n      if (isDefined(canvasDraw) && chartCanvasType !== \"svg\") {\n        return null;\n      }\n\n      var suffix = isDefined(chartId) ? \"-\" + chartId : \"\";\n      var style = clip ? {\n        \"clipPath\": \"url(#chart-area-clip\" + suffix + \")\"\n      } : null;\n      return React.createElement(\"g\", {\n        style: style\n      }, svgDraw(this.getMoreProps()));\n    }\n  }]);\n\n  return GenericComponent;\n}(Component);\n\nGenericComponent.propTypes = {\n  svgDraw: PropTypes.func.isRequired,\n  canvasDraw: PropTypes.func,\n  drawOn: PropTypes.array.isRequired,\n  clip: PropTypes.bool.isRequired,\n  edgeClip: PropTypes.bool.isRequired,\n  interactiveCursorClass: PropTypes.string,\n  selected: PropTypes.bool.isRequired,\n  enableDragOnHover: PropTypes.bool.isRequired,\n  disablePan: PropTypes.bool.isRequired,\n  canvasToDraw: PropTypes.func.isRequired,\n  isHover: PropTypes.func,\n  onClick: PropTypes.func,\n  onClickWhenHover: PropTypes.func,\n  onClickOutside: PropTypes.func,\n  onPan: PropTypes.func,\n  onPanEnd: PropTypes.func,\n  onDragStart: PropTypes.func,\n  onDrag: PropTypes.func,\n  onDragComplete: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onDoubleClickWhenHover: PropTypes.func,\n  onContextMenu: PropTypes.func,\n  onContextMenuWhenHover: PropTypes.func,\n  onMouseMove: PropTypes.func,\n  onMouseDown: PropTypes.func,\n  onHover: PropTypes.func,\n  onUnHover: PropTypes.func,\n  debug: PropTypes.func // owner: PropTypes.string.isRequired,\n\n};\nGenericComponent.defaultProps = {\n  svgDraw: functor(null),\n  draw: [],\n  canvasToDraw: function canvasToDraw(contexts) {\n    return contexts.mouseCoord;\n  },\n  clip: true,\n  edgeClip: false,\n  selected: false,\n  disablePan: false,\n  enableDragOnHover: false,\n  onClickWhenHover: noop,\n  onClickOutside: noop,\n  onDragStart: noop,\n  onMouseMove: noop,\n  onMouseDown: noop,\n  debug: noop\n};\nGenericComponent.contextTypes = {\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  margin: PropTypes.object.isRequired,\n  chartId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  getCanvasContexts: PropTypes.func,\n  chartCanvasType: PropTypes.string,\n  xScale: PropTypes.func.isRequired,\n  xAccessor: PropTypes.func.isRequired,\n  displayXAccessor: PropTypes.func.isRequired,\n  plotData: PropTypes.array.isRequired,\n  fullData: PropTypes.array.isRequired,\n  chartConfig: PropTypes.oneOfType([PropTypes.array, PropTypes.object]).isRequired,\n  morePropsDecorator: PropTypes.func,\n  generateSubscriptionId: PropTypes.func,\n  getMutableState: PropTypes.func.isRequired,\n  amIOnTop: PropTypes.func.isRequired,\n  subscribe: PropTypes.func.isRequired,\n  unsubscribe: PropTypes.func.isRequired,\n  setCursorClass: PropTypes.func.isRequired\n};\nexport default GenericComponent;\nexport function getAxisCanvas(contexts) {\n  return contexts.axes;\n}\nexport function getMouseCanvas(contexts) {\n  return contexts.mouseCoord;\n}","map":{"version":3,"mappings":"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","names":["React","Component","PropTypes","isNotDefined","isDefined","noop","functor","identity","aliases","mouseleave","panend","pinchzoom","mousedown","click","contextmenu","dblclick","dragstart","dragend","dragcancel","GenericComponent","props","context","_classCallCheck","_this","drawOnCanvas","bind","getMoreProps","listener","draw","updateMoreProps","evaluateType","isHover","preCanvasDraw","postCanvasDraw","getPanConditions","shouldTypeProceed","preEvaluate","generateSubscriptionId","suscriberId","moreProps","state","updateCount","Object","keys","forEach","_this2","key","type","e","evaluationInProgress","newType","proceed","drawOn","indexOf","hovering","onUnHover","onContextMenu","onContextMenuWhenHover","onMouseDown","onClickWhenHover","onClickOutside","onClick","prevHover","amIOnTop","setCursorClass","selected","onHover","iSetTheCursorClass","interactiveCursorClass","onMouseMove","onDoubleClick","onDoubleClickWhenHover","onPan","onPanEnd","draggable","dragInProgress","onDragStart","someDragInProgress","onDrag","onDragComplete","enableDragOnHover","panEnabled","disablePan","force","trigger","chartCanvasType","canvasDraw","setState","subscribe","chartId","clip","edgeClip","componentWillReceiveProps","unsubscribe","componentDidUpdate","prevProps","nextProps","nextContext","xScale","plotData","chartConfig","getMutableState","debug","morePropsDecorator","xAccessor","displayXAccessor","width","height","fullData","canvasToDraw","getCanvasContexts","ctx","svgDraw","suffix","style","propTypes","func","isRequired","array","bool","string","defaultProps","contexts","mouseCoord","contextTypes","number","margin","object","oneOfType","getAxisCanvas","axes","getMouseCanvas"],"sources":["../../../src/lib/GenericComponent.js"],"sourcesContent":["\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport {\n\tisNotDefined,\n\tisDefined,\n\tnoop,\n\tfunctor,\n\tidentity,\n} from \"./utils\";\n\nconst aliases = {\n\tmouseleave: \"mousemove\", // to draw interactive after mouse exit\n\tpanend: \"pan\",\n\tpinchzoom: \"pan\",\n\tmousedown: \"mousemove\",\n\tclick: \"mousemove\",\n\tcontextmenu: \"mousemove\",\n\tdblclick: \"mousemove\",\n\tdragstart: \"drag\",\n\tdragend: \"drag\",\n\tdragcancel: \"drag\",\n};\n\nclass GenericComponent extends Component {\n\tconstructor(props, context) {\n\t\tsuper(props, context);\n\t\tthis.drawOnCanvas = this.drawOnCanvas.bind(this);\n\t\tthis.getMoreProps = this.getMoreProps.bind(this);\n\t\tthis.listener = this.listener.bind(this);\n\t\tthis.draw = this.draw.bind(this);\n\t\tthis.updateMoreProps = this.updateMoreProps.bind(this);\n\t\tthis.evaluateType = this.evaluateType.bind(this);\n\t\tthis.isHover = this.isHover.bind(this);\n\t\tthis.preCanvasDraw = this.preCanvasDraw.bind(this);\n\t\tthis.postCanvasDraw = this.postCanvasDraw.bind(this);\n\t\tthis.getPanConditions = this.getPanConditions.bind(this);\n\t\tthis.shouldTypeProceed = this.shouldTypeProceed.bind(this);\n\t\tthis.preEvaluate = this.preEvaluate.bind(this);\n\n\t\tconst { generateSubscriptionId } = context;\n\t\tthis.suscriberId = generateSubscriptionId();\n\n\t\tthis.moreProps = {};\n\n\t\tthis.state = {\n\t\t\tupdateCount: 0,\n\t\t};\n\t}\n\tupdateMoreProps(moreProps) {\n\t\tObject.keys(moreProps).forEach(key => {\n\t\t\tthis.moreProps[key] = moreProps[key];\n\t\t});\n\t}\n\tshouldTypeProceed() {\n\t\treturn true;\n\t}\n\tpreEvaluate() {\n\t}\n\tlistener(type, moreProps, state, e) {\n\t\t// console.log(e.shiftKey)\n\t\tif (isDefined(moreProps)) {\n\t\t\tthis.updateMoreProps(moreProps);\n\t\t}\n\t\tthis.evaluationInProgress = true;\n\t\tthis.evaluateType(type, e);\n\t\tthis.evaluationInProgress = false;\n\t}\n\tevaluateType(type, e) {\n\t\tconst newType = aliases[type] || type;\n\t\tconst proceed = this.props.drawOn.indexOf(newType) > -1;\n\n\t\t// console.log(\"type ->\", type, proceed);\n\n\t\tif (!proceed) return;\n\t\t// const moreProps = this.getMoreProps();\n\t\tthis.preEvaluate(type, this.moreProps, e);\n\t\tif (!this.shouldTypeProceed(type, this.moreProps)) return;\n\n\t\tswitch (type) {\n\t\t\tcase \"zoom\":\n\t\t\tcase \"mouseenter\":\n\t\t\t// DO NOT DRAW FOR THESE EVENTS\n\t\t\t\tbreak;\n\t\t\tcase \"mouseleave\": {\n\t\t\t\tthis.moreProps.hovering = false;\n\t\t\t\tconst moreProps = this.getMoreProps();\n\n\t\t\t\tif (this.props.onUnHover) {\n\t\t\t\t\tthis.props.onUnHover(moreProps, e);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"contextmenu\": {\n\t\t\t\tif (this.props.onContextMenu) {\n\t\t\t\t\tthis.props.onContextMenu(this.getMoreProps(), e);\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\tthis.moreProps.hovering\n\t\t\t\t&& this.props.onContextMenuWhenHover\n\t\t\t\t) {\n\t\t\t\t\tthis.props.onContextMenuWhenHover(this.getMoreProps(), e);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"mousedown\": {\n\t\t\t\tif (this.props.onMouseDown) {\n\t\t\t\t\tthis.props.onMouseDown(this.getMoreProps(), e);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"click\": {\n\t\t\t\tconst moreProps = this.getMoreProps();\n\t\t\t\tif (this.moreProps.hovering) {\n\t\t\t\t// console.error(\"TODO use this only for SAR, Line series\")\n\t\t\t\t\tthis.props.onClickWhenHover(moreProps, e);\n\t\t\t\t} else {\n\t\t\t\t\tthis.props.onClickOutside(moreProps, e);\n\t\t\t\t}\n\t\t\t\tif (this.props.onClick) {\n\t\t\t\t\tthis.props.onClick(moreProps, e);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"mousemove\": {\n\n\t\t\t\tconst prevHover = this.moreProps.hovering;\n\t\t\t\tthis.moreProps.hovering = this.isHover(e);\n\n\t\t\t\tconst { amIOnTop, setCursorClass } = this.context;\n\n\t\t\t\tif (this.moreProps.hovering\n\t\t\t\t\t&& !this.props.selected\n\t\t\t\t\t/* && !prevHover */\n\t\t\t\t\t&& amIOnTop(this.suscriberId)\n\t\t\t\t\t&& isDefined(this.props.onHover)) {\n\t\t\t\t\tsetCursorClass(\"react-stockcharts-pointer-cursor\");\n\t\t\t\t\tthis.iSetTheCursorClass = true;\n\t\t\t\t} else if (this.moreProps.hovering\n\t\t\t\t\t&& this.props.selected\n\t\t\t\t\t&& amIOnTop(this.suscriberId)) {\n\t\t\t\t\tsetCursorClass(this.props.interactiveCursorClass);\n\t\t\t\t\tthis.iSetTheCursorClass = true;\n\t\t\t\t} else if (prevHover\n\t\t\t\t\t&& !this.moreProps.hovering\n\t\t\t\t\t&& this.iSetTheCursorClass) {\n\t\t\t\t\tthis.iSetTheCursorClass = false;\n\t\t\t\t\tsetCursorClass(null);\n\t\t\t\t}\n\t\t\t\tconst moreProps = this.getMoreProps();\n\n\t\t\t\tif (this.moreProps.hovering && !prevHover) {\n\t\t\t\t\tif (this.props.onHover) {\n\t\t\t\t\t\tthis.props.onHover(moreProps, e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (prevHover && !this.moreProps.hovering) {\n\t\t\t\t\tif (this.props.onUnHover) {\n\t\t\t\t\t\tthis.props.onUnHover(moreProps, e);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this.props.onMouseMove) {\n\t\t\t\t\tthis.props.onMouseMove(moreProps, e);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"dblclick\": {\n\t\t\t\tconst moreProps = this.getMoreProps();\n\n\t\t\t\tif (this.props.onDoubleClick) {\n\t\t\t\t\tthis.props.onDoubleClick(moreProps, e);\n\t\t\t\t}\n\t\t\t\tif (\n\t\t\t\t\tthis.moreProps.hovering\n\t\t\t\t&& this.props.onDoubleClickWhenHover\n\t\t\t\t) {\n\t\t\t\t\tthis.props.onDoubleClickWhenHover(moreProps, e);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"pan\": {\n\t\t\t\tthis.moreProps.hovering = false;\n\t\t\t\tif (this.props.onPan) {\n\t\t\t\t\tthis.props.onPan(this.getMoreProps(), e);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"panend\": {\n\t\t\t\tif (this.props.onPanEnd) {\n\t\t\t\t\tthis.props.onPanEnd(this.getMoreProps(), e);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"dragstart\": {\n\t\t\t\tif (this.getPanConditions().draggable) {\n\t\t\t\t\tconst { amIOnTop } = this.context;\n\t\t\t\t\tif (amIOnTop(this.suscriberId)) {\n\t\t\t\t\t\tthis.dragInProgress = true;\n\t\t\t\t\t\tthis.props.onDragStart(this.getMoreProps(), e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.someDragInProgress = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"drag\": {\n\t\t\t\tif (this.dragInProgress && this.props.onDrag) {\n\t\t\t\t\tthis.props.onDrag(this.getMoreProps(), e);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"dragend\": {\n\t\t\t\tif (this.dragInProgress && this.props.onDragComplete) {\n\t\t\t\t\tthis.props.onDragComplete(this.getMoreProps(), e);\n\t\t\t\t}\n\t\t\t\tthis.dragInProgress = false;\n\t\t\t\tthis.someDragInProgress = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"dragcancel\": {\n\t\t\t\tif (this.dragInProgress || this.iSetTheCursorClass) {\n\t\t\t\t\tconst { setCursorClass } = this.context;\n\t\t\t\t\tsetCursorClass(null);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tisHover(e) {\n\t\treturn isDefined(this.props.isHover)\n\t\t\t? this.props.isHover(this.getMoreProps(), e)\n\t\t\t: false;\n\t}\n\tgetPanConditions() {\n\t\tconst draggable = (\n\t\t\t!!(this.props.selected && this.moreProps.hovering)\n\t\t\t|| (this.props.enableDragOnHover && this.moreProps.hovering)\n\t\t);\n\n\t\treturn {\n\t\t\tdraggable,\n\t\t\tpanEnabled: !this.props.disablePan,\n\t\t};\n\t}\n\tdraw({ trigger, force } = { force: false }) {\n\t\tconst type = aliases[trigger] || trigger;\n\t\tconst proceed = this.props.drawOn.indexOf(type) > -1;\n\n\t\tif (proceed\n\t\t\t|| this.props.selected /* this is to draw as soon as you select */\n\t\t\t|| force\n\t\t) {\n\t\t\tconst { chartCanvasType } = this.context;\n\t\t\tconst { canvasDraw } = this.props;\n\n\t\t\tif (isNotDefined(canvasDraw) || chartCanvasType === \"svg\") {\n\t\t\t\tconst { updateCount } = this.state;\n\t\t\t\tthis.setState({\n\t\t\t\t\tupdateCount: updateCount + 1,\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.drawOnCanvas();\n\t\t\t}\n\t\t}\n\t}\n\tcomponentWillMount() {\n\t\tconst { subscribe, chartId } = this.context;\n\t\tconst { clip, edgeClip } = this.props;\n\n\t\tsubscribe(this.suscriberId,\n\t\t\t{\n\t\t\t\tchartId, clip, edgeClip,\n\t\t\t\tlistener: this.listener,\n\t\t\t\tdraw: this.draw,\n\t\t\t\tgetPanConditions: this.getPanConditions,\n\t\t\t}\n\t\t);\n\t\tthis.componentWillReceiveProps(this.props, this.context);\n\t}\n\tcomponentWillUnmount() {\n\t\tconst { unsubscribe } = this.context;\n\t\tunsubscribe(this.suscriberId);\n\t\tif (this.iSetTheCursorClass) {\n\t\t\tconst { setCursorClass } = this.context;\n\t\t\tsetCursorClass(null);\n\t\t}\n\t}\n\tcomponentDidMount() {\n\t\tthis.componentDidUpdate(this.props);\n\t}\n\tcomponentDidUpdate(prevProps) {\n\t\tconst { chartCanvasType } = this.context;\n\t\tconst { canvasDraw, selected, interactiveCursorClass } = this.props;\n\n\t\tif (prevProps.selected !== selected) {\n\t\t\tconst { setCursorClass } = this.context;\n\t\t\tif (selected && this.moreProps.hovering) {\n\t\t\t\tthis.iSetTheCursorClass = true;\n\t\t\t\tsetCursorClass(interactiveCursorClass);\n\t\t\t} else {\n\t\t\t\tthis.iSetTheCursorClass = false;\n\t\t\t\tsetCursorClass(null);\n\t\t\t}\n\t\t}\n\t\tif (isDefined(canvasDraw)\n\t\t\t\t&& !this.evaluationInProgress\n\t\t\t\t// && !(this.someDragInProgress && this.props.selected)\n\t\t\t\t/*\n\t\t\t\tprevent double draw of interactive elements\n\t\t\t\tduring dragging / hover / click etc.\n\t\t\t\t*/\n\t\t\t\t&& chartCanvasType !== \"svg\") {\n\n\t\t\tthis.updateMoreProps(this.moreProps);\n\t\t\tthis.drawOnCanvas();\n\t\t}\n\t}\n\tcomponentWillReceiveProps(nextProps, nextContext) {\n\t\tconst { xScale, plotData, chartConfig, getMutableState } = nextContext;\n\n\t\tthis.props.debug(nextContext);\n\t\tthis.moreProps = {\n\t\t\t...this.moreProps,\n\t\t\t...getMutableState(),\n\t\t\t/*\n\t\t\t^ this is so\n\t\t\tmouseXY, currentCharts, currentItem are available to\n\t\t\tnewly created components like MouseHoverText which\n\t\t\tis created right after a new interactive object is drawn\n\t\t\t*/\n\t\t\txScale, plotData, chartConfig\n\t\t};\n\t}\n\tgetMoreProps() {\n\t\tconst {\n\t\t\txScale,\n\t\t\tplotData,\n\t\t\tchartConfig,\n\t\t\tmorePropsDecorator,\n\t\t\txAccessor,\n\t\t\tdisplayXAccessor,\n\t\t\twidth,\n\t\t\theight,\n\t\t} = this.context;\n\n\t\tconst { chartId, fullData } = this.context;\n\n\t\tconst moreProps = {\n\t\t\txScale, plotData, chartConfig,\n\t\t\txAccessor, displayXAccessor,\n\t\t\twidth, height,\n\t\t\tchartId,\n\t\t\tfullData,\n\t\t\t...this.moreProps,\n\t\t};\n\n\t\treturn (morePropsDecorator || identity)(moreProps);\n\t}\n\tpreCanvasDraw() {\n\t\t// do nothing\n\t}\n\tpostCanvasDraw() {\n\t}\n\tdrawOnCanvas() {\n\t\tconst { canvasDraw, canvasToDraw } = this.props;\n\t\tconst { getCanvasContexts } = this.context;\n\n\t\tconst moreProps = this.getMoreProps();\n\n\t\tconst ctx = canvasToDraw(getCanvasContexts());\n\n\t\tthis.preCanvasDraw(ctx, moreProps);\n\t\tcanvasDraw(ctx, moreProps);\n\t\tthis.postCanvasDraw(ctx, moreProps);\n\t}\n\trender() {\n\t\tconst { chartCanvasType, chartId } = this.context;\n\t\tconst { canvasDraw, clip, svgDraw } = this.props;\n\n\t\tif (isDefined(canvasDraw) && chartCanvasType !== \"svg\") {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst suffix = isDefined(chartId) ? \"-\" + chartId : \"\";\n\n\t\tconst style = clip ? { \"clipPath\": `url(#chart-area-clip${suffix})` } : null;\n\n\t\treturn <g style={style}>{svgDraw(this.getMoreProps())}</g>;\n\t}\n}\n\nGenericComponent.propTypes = {\n\tsvgDraw: PropTypes.func.isRequired,\n\tcanvasDraw: PropTypes.func,\n\n\tdrawOn: PropTypes.array.isRequired,\n\n\tclip: PropTypes.bool.isRequired,\n\tedgeClip: PropTypes.bool.isRequired,\n\tinteractiveCursorClass: PropTypes.string,\n\n\tselected: PropTypes.bool.isRequired,\n\tenableDragOnHover: PropTypes.bool.isRequired,\n\tdisablePan: PropTypes.bool.isRequired,\n\n\tcanvasToDraw: PropTypes.func.isRequired,\n\n\tisHover: PropTypes.func,\n\n\tonClick: PropTypes.func,\n\tonClickWhenHover: PropTypes.func,\n\tonClickOutside: PropTypes.func,\n\n\tonPan: PropTypes.func,\n\tonPanEnd: PropTypes.func,\n\tonDragStart: PropTypes.func,\n\tonDrag: PropTypes.func,\n\tonDragComplete: PropTypes.func,\n\tonDoubleClick: PropTypes.func,\n\tonDoubleClickWhenHover: PropTypes.func,\n\tonContextMenu: PropTypes.func,\n\tonContextMenuWhenHover: PropTypes.func,\n\tonMouseMove: PropTypes.func,\n\tonMouseDown: PropTypes.func,\n\tonHover: PropTypes.func,\n\tonUnHover: PropTypes.func,\n\n\tdebug: PropTypes.func,\n\t// owner: PropTypes.string.isRequired,\n};\n\nGenericComponent.defaultProps = {\n\tsvgDraw: functor(null),\n\tdraw: [],\n\tcanvasToDraw: contexts => contexts.mouseCoord,\n\tclip: true,\n\tedgeClip: false,\n\tselected: false,\n\tdisablePan: false,\n\tenableDragOnHover: false,\n\n\tonClickWhenHover: noop,\n\tonClickOutside: noop,\n\tonDragStart: noop,\n\tonMouseMove: noop,\n\tonMouseDown: noop,\n\tdebug: noop,\n};\n\nGenericComponent.contextTypes = {\n\twidth: PropTypes.number.isRequired,\n\theight: PropTypes.number.isRequired,\n\tmargin: PropTypes.object.isRequired,\n\tchartId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\tgetCanvasContexts: PropTypes.func,\n\n\tchartCanvasType: PropTypes.string,\n\txScale: PropTypes.func.isRequired,\n\txAccessor: PropTypes.func.isRequired,\n\tdisplayXAccessor: PropTypes.func.isRequired,\n\tplotData: PropTypes.array.isRequired,\n\tfullData: PropTypes.array.isRequired,\n\n\tchartConfig: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.object,\n\t]).isRequired,\n\n\tmorePropsDecorator: PropTypes.func,\n\tgenerateSubscriptionId: PropTypes.func,\n\tgetMutableState: PropTypes.func.isRequired,\n\n\tamIOnTop: PropTypes.func.isRequired,\n\tsubscribe: PropTypes.func.isRequired,\n\tunsubscribe: PropTypes.func.isRequired,\n\tsetCursorClass: PropTypes.func.isRequired,\n};\n\nexport default GenericComponent;\n\nexport function getAxisCanvas(contexts) {\n\treturn contexts.axes;\n}\n\nexport function getMouseCanvas(contexts) {\n\treturn contexts.mouseCoord;\n}\n"]},"metadata":{},"sourceType":"module"}