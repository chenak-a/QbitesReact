{"ast":null,"code":"import { ticks, tickIncrement } from \"d3-array\";\nimport { interpolateNumber as reinterpolate } from \"d3-interpolate\";\nimport { default as continuous, copy, deinterpolateLinear as deinterpolate } from \"./continuous\";\nimport tickFormat from \"./tickFormat\";\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function (count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function (count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function (count) {\n    if (count == null) count = 10;\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\nexport default function linear() {\n  var scale = continuous(deinterpolate, reinterpolate);\n\n  scale.copy = function () {\n    return copy(scale, linear());\n  };\n\n  return linearish(scale);\n}","map":{"version":3,"names":["ticks","tickIncrement","interpolateNumber","reinterpolate","default","continuous","copy","deinterpolateLinear","deinterpolate","tickFormat","linearish","scale","domain","count","d","length","specifier","nice","i0","i1","start","stop","step","Math","floor","ceil","linear"],"sources":["/home/chenak/QbitesReact/my-app/node_modules/d3-scale/src/linear.js"],"sourcesContent":["import {ticks, tickIncrement} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport tickFormat from \"./tickFormat\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous(deinterpolate, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  return linearish(scale);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}