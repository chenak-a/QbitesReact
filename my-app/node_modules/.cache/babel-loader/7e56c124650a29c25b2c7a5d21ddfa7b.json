{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _GenericChartComponent = require(\"../../GenericChartComponent\");\n\nvar _GenericChartComponent2 = _interopRequireDefault(_GenericChartComponent);\n\nvar _GenericComponent = require(\"../../GenericComponent\");\n\nvar _utils = require(\"../../utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ClickableCircle = function (_Component) {\n  _inherits(ClickableCircle, _Component);\n\n  function ClickableCircle(props) {\n    _classCallCheck(this, ClickableCircle);\n\n    var _this = _possibleConstructorReturn(this, (ClickableCircle.__proto__ || Object.getPrototypeOf(ClickableCircle)).call(this, props));\n\n    _this.saveNode = _this.saveNode.bind(_this);\n    _this.renderSVG = _this.renderSVG.bind(_this);\n    _this.drawOnCanvas = _this.drawOnCanvas.bind(_this);\n    _this.isHover = _this.isHover.bind(_this);\n    return _this;\n  }\n\n  _createClass(ClickableCircle, [{\n    key: \"saveNode\",\n    value: function saveNode(node) {\n      this.node = node;\n    }\n  }, {\n    key: \"isHover\",\n    value: function isHover(moreProps) {\n      var mouseXY = moreProps.mouseXY; // const { r } = this.props;\n\n      var r = this.props.r + 7;\n\n      var _helper = helper(this.props, moreProps),\n          _helper2 = _slicedToArray(_helper, 2),\n          x = _helper2[0],\n          y = _helper2[1];\n\n      var _mouseXY = _slicedToArray(mouseXY, 2),\n          mx = _mouseXY[0],\n          my = _mouseXY[1];\n\n      var hover = x - r < mx && mx < x + r && y - r < my && my < y + r; // console.log(\"hover->\", hover);\n\n      return hover;\n    }\n  }, {\n    key: \"drawOnCanvas\",\n    value: function drawOnCanvas(ctx, moreProps) {\n      var _props = this.props,\n          stroke = _props.stroke,\n          strokeWidth = _props.strokeWidth,\n          fill = _props.fill;\n      var _props2 = this.props,\n          fillOpacity = _props2.fillOpacity,\n          strokeOpacity = _props2.strokeOpacity;\n      var r = this.props.r;\n\n      var _helper3 = helper(this.props, moreProps),\n          _helper4 = _slicedToArray(_helper3, 2),\n          x = _helper4[0],\n          y = _helper4[1];\n\n      ctx.lineWidth = strokeWidth;\n      ctx.fillStyle = (0, _utils.hexToRGBA)(fill, fillOpacity);\n      ctx.strokeStyle = (0, _utils.hexToRGBA)(stroke, strokeOpacity);\n      ctx.beginPath();\n      ctx.arc(x, y, r, 0, 2 * Math.PI, false);\n      ctx.fill();\n      ctx.stroke();\n    }\n  }, {\n    key: \"renderSVG\",\n    value: function renderSVG(moreProps) {\n      var _props3 = this.props,\n          stroke = _props3.stroke,\n          strokeWidth = _props3.strokeWidth,\n          fill = _props3.fill;\n      var _props4 = this.props,\n          fillOpacity = _props4.fillOpacity,\n          strokeOpacity = _props4.strokeOpacity;\n      var r = this.props.r;\n\n      var _helper5 = helper(this.props, moreProps),\n          _helper6 = _slicedToArray(_helper5, 2),\n          x = _helper6[0],\n          y = _helper6[1];\n\n      return _react2.default.createElement(\"circle\", {\n        cx: x,\n        cy: y,\n        r: r,\n        strokeWidth: strokeWidth,\n        stroke: stroke,\n        strokeOpacity: strokeOpacity,\n        fill: fill,\n        fillOpacity: fillOpacity\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var interactiveCursorClass = this.props.interactiveCursorClass;\n      var show = this.props.show;\n      var _props5 = this.props,\n          onDragStart = _props5.onDragStart,\n          onDrag = _props5.onDrag,\n          onDragComplete = _props5.onDragComplete;\n      return show ? _react2.default.createElement(_GenericChartComponent2.default, {\n        ref: this.saveNode,\n        interactiveCursorClass: interactiveCursorClass,\n        selected: true,\n        isHover: this.isHover,\n        onDragStart: onDragStart,\n        onDrag: onDrag,\n        onDragComplete: onDragComplete,\n        svgDraw: this.renderSVG,\n        canvasDraw: this.drawOnCanvas,\n        canvasToDraw: _GenericComponent.getMouseCanvas,\n        drawOn: [\"pan\", \"mousemove\", \"drag\"]\n      }) : null;\n    }\n  }]);\n\n  return ClickableCircle;\n}(_react.Component);\n\nfunction helper(props, moreProps) {\n  var xyProvider = props.xyProvider,\n      cx = props.cx,\n      cy = props.cy;\n\n  if ((0, _utils.isDefined)(xyProvider)) {\n    return xyProvider(moreProps);\n  }\n\n  var xScale = moreProps.xScale,\n      yScale = moreProps.chartConfig.yScale;\n  var x = xScale(cx);\n  var y = yScale(cy);\n  return [x, y];\n}\n\nClickableCircle.propTypes = {\n  xyProvider: _propTypes2.default.func,\n  onDragStart: _propTypes2.default.func.isRequired,\n  onDrag: _propTypes2.default.func.isRequired,\n  onDragComplete: _propTypes2.default.func.isRequired,\n  strokeWidth: _propTypes2.default.number.isRequired,\n  stroke: _propTypes2.default.string.isRequired,\n  fill: _propTypes2.default.string.isRequired,\n  r: _propTypes2.default.number.isRequired,\n  cx: _propTypes2.default.number,\n  cy: _propTypes2.default.number,\n  className: _propTypes2.default.string.isRequired,\n  show: _propTypes2.default.bool.isRequired,\n  strokeOpacity: _propTypes2.default.number.isRequired,\n  fillOpacity: _propTypes2.default.number.isRequired,\n  interactiveCursorClass: _propTypes2.default.string\n};\nClickableCircle.defaultProps = {\n  className: \"react-stockcharts-interactive-line-edge\",\n  onDragStart: _utils.noop,\n  onDrag: _utils.noop,\n  onDragComplete: _utils.noop,\n  onMove: _utils.noop,\n  show: false,\n  fillOpacity: 1,\n  strokeOpacity: 1\n};\nexports.default = ClickableCircle;","map":{"version":3,"mappings":"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","names":["ClickableCircle","props","_classCallCheck","_this","saveNode","bind","renderSVG","drawOnCanvas","isHover","node","moreProps","mouseXY","r","helper","x","y","mx","my","hover","ctx","stroke","strokeWidth","fill","fillOpacity","strokeOpacity","lineWidth","fillStyle","strokeStyle","beginPath","arc","Math","PI","_react2","cx","cy","interactiveCursorClass","show","onDragStart","onDrag","onDragComplete","ref","selected","svgDraw","canvasDraw","canvasToDraw","drawOn","xyProvider","xScale","yScale","chartConfig","propTypes","_propTypes2","func","isRequired","number","string","className","bool","defaultProps","onMove"],"sources":["../../../../src/lib/interactive/components/ClickableCircle.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport GenericChartComponent from \"../../GenericChartComponent\";\nimport { getMouseCanvas } from \"../../GenericComponent\";\n\nimport { isDefined, noop, hexToRGBA } from \"../../utils\";\n\nclass ClickableCircle extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.saveNode = this.saveNode.bind(this);\n\t\tthis.renderSVG = this.renderSVG.bind(this);\n\t\tthis.drawOnCanvas = this.drawOnCanvas.bind(this);\n\t\tthis.isHover = this.isHover.bind(this);\n\t}\n\tsaveNode(node) {\n\t\tthis.node = node;\n\t}\n\tisHover(moreProps) {\n\t\tconst { mouseXY } = moreProps;\n\t\t// const { r } = this.props;\n\t\tconst r = this.props.r + 7;\n\t\tconst [x, y] = helper(this.props, moreProps);\n\n\t\tconst [mx, my] = mouseXY;\n\t\tconst hover = (x - r) < mx && mx < (x + r)\n\t\t\t&& (y - r) < my && my < (y + r);\n\n\t\t// console.log(\"hover->\", hover);\n\t\treturn hover;\n\t}\n\tdrawOnCanvas(ctx, moreProps) {\n\t\tconst { stroke, strokeWidth, fill } = this.props;\n\t\tconst { fillOpacity, strokeOpacity } = this.props;\n\t\tconst { r } = this.props;\n\n\t\tconst [x, y] = helper(this.props, moreProps);\n\n\t\tctx.lineWidth = strokeWidth;\n\t\tctx.fillStyle = hexToRGBA(fill, fillOpacity);\n\t\tctx.strokeStyle = hexToRGBA(stroke, strokeOpacity);\n\n\t\tctx.beginPath();\n\t\tctx.arc(x, y, r, 0, 2 * Math.PI, false);\n\t\tctx.fill();\n\t\tctx.stroke();\n\t}\n\trenderSVG(moreProps) {\n\t\tconst { stroke, strokeWidth, fill } = this.props;\n\t\tconst { fillOpacity, strokeOpacity } = this.props;\n\t\tconst { r } = this.props;\n\n\t\tconst [x, y] = helper(this.props, moreProps);\n\n\t\treturn <circle cx={x} cy={y} r={r}\n\t\t\tstrokeWidth={strokeWidth}\n\t\t\tstroke={stroke}\n\t\t\tstrokeOpacity={strokeOpacity}\n\t\t\tfill={fill}\n\t\t\tfillOpacity={fillOpacity}\n\t\t/>;\n\t}\n\trender() {\n\t\tconst { interactiveCursorClass } = this.props;\n\t\tconst { show } = this.props;\n\t\tconst { onDragStart, onDrag, onDragComplete } = this.props;\n\n\t\treturn show\n\t\t\t? <GenericChartComponent ref={this.saveNode}\n\t\t\t\tinteractiveCursorClass={interactiveCursorClass}\n\t\t\t\tselected\n\t\t\t\tisHover={this.isHover}\n\n\t\t\t\tonDragStart={onDragStart}\n\t\t\t\tonDrag={onDrag}\n\t\t\t\tonDragComplete={onDragComplete}\n\n\t\t\t\tsvgDraw={this.renderSVG}\n\n\t\t\t\tcanvasDraw={this.drawOnCanvas}\n\t\t\t\tcanvasToDraw={getMouseCanvas}\n\n\t\t\t\tdrawOn={[\"pan\", \"mousemove\", \"drag\"]}\n\t\t\t/>\n\t\t\t: null;\n\t}\n}\n\nfunction helper(props, moreProps) {\n\tconst { xyProvider, cx, cy } = props;\n\n\tif (isDefined(xyProvider)) {\n\t\treturn xyProvider(moreProps);\n\t}\n\n\tconst { xScale, chartConfig: { yScale } } = moreProps;\n\n\tconst x = xScale(cx);\n\tconst y = yScale(cy);\n\treturn [x, y];\n\n}\nClickableCircle.propTypes = {\n\txyProvider: PropTypes.func,\n\n\tonDragStart: PropTypes.func.isRequired,\n\tonDrag: PropTypes.func.isRequired,\n\tonDragComplete: PropTypes.func.isRequired,\n\tstrokeWidth: PropTypes.number.isRequired,\n\tstroke: PropTypes.string.isRequired,\n\tfill: PropTypes.string.isRequired,\n\tr: PropTypes.number.isRequired,\n\n\tcx: PropTypes.number,\n\tcy: PropTypes.number,\n\n\tclassName: PropTypes.string.isRequired,\n\tshow: PropTypes.bool.isRequired,\n\tstrokeOpacity: PropTypes.number.isRequired,\n\tfillOpacity: PropTypes.number.isRequired,\n\tinteractiveCursorClass: PropTypes.string,\n};\n\n\nClickableCircle.defaultProps = {\n\tclassName: \"react-stockcharts-interactive-line-edge\",\n\tonDragStart: noop,\n\tonDrag: noop,\n\tonDragComplete: noop,\n\tonMove: noop,\n\tshow: false,\n\tfillOpacity: 1,\n\tstrokeOpacity: 1,\n};\n\nexport default ClickableCircle;\n"]},"metadata":{},"sourceType":"script"}