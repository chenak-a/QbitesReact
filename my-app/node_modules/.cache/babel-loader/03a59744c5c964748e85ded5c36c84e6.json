{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _GenericChartComponent = require(\"../GenericChartComponent\");\n\nvar _GenericChartComponent2 = _interopRequireDefault(_GenericChartComponent);\n\nvar _GenericComponent = require(\"../GenericComponent\");\n\nvar _utils = require(\"../utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar SARSeries = function (_Component) {\n  _inherits(SARSeries, _Component);\n\n  function SARSeries(props) {\n    _classCallCheck(this, SARSeries);\n\n    var _this = _possibleConstructorReturn(this, (SARSeries.__proto__ || Object.getPrototypeOf(SARSeries)).call(this, props));\n\n    _this.renderSVG = _this.renderSVG.bind(_this);\n    _this.drawOnCanvas = _this.drawOnCanvas.bind(_this);\n    _this.isHover = _this.isHover.bind(_this);\n    return _this;\n  }\n\n  _createClass(SARSeries, [{\n    key: \"isHover\",\n    value: function isHover(moreProps) {\n      var mouseXY = moreProps.mouseXY,\n          currentItem = moreProps.currentItem,\n          yScale = moreProps.chartConfig.yScale;\n      var yAccessor = this.props.yAccessor;\n      var y = mouseXY[1];\n      var currentY = yScale(yAccessor(currentItem));\n      return y < currentY + 5 && y > currentY - 5;\n    }\n  }, {\n    key: \"drawOnCanvas\",\n    value: function drawOnCanvas(ctx, moreProps) {\n      var _props = this.props,\n          yAccessor = _props.yAccessor,\n          fill = _props.fill,\n          opacity = _props.opacity;\n      var xAccessor = moreProps.xAccessor,\n          plotData = moreProps.plotData,\n          xScale = moreProps.xScale,\n          yScale = moreProps.chartConfig.yScale,\n          hovering = moreProps.hovering;\n      var width = xScale(xAccessor((0, _utils.last)(plotData))) - xScale(xAccessor((0, _utils.first)(plotData)));\n      var d = width / plotData.length * 0.5 / 2;\n      var radius = Math.min(2, Math.max(0.5, d)) + (hovering ? 2 : 0);\n      plotData.forEach(function (each) {\n        var centerX = xScale(xAccessor(each));\n        var centerY = yScale(yAccessor(each));\n        var color = yAccessor(each) > each.close ? fill.falling : fill.rising;\n        ctx.fillStyle = (0, _utils.hexToRGBA)(color, opacity);\n        ctx.strokeStyle = color;\n        ctx.beginPath();\n        ctx.ellipse(centerX, centerY, radius, radius, 0, 0, 2 * Math.PI);\n        ctx.closePath();\n        ctx.fill();\n        ctx.stroke();\n      });\n    }\n  }, {\n    key: \"renderSVG\",\n    value: function renderSVG(moreProps) {\n      var _props2 = this.props,\n          className = _props2.className,\n          yAccessor = _props2.yAccessor;\n      var xAccessor = moreProps.xAccessor,\n          plotData = moreProps.plotData,\n          xScale = moreProps.xScale,\n          yScale = moreProps.chartConfig.yScale; // console.log(moreProps);\n\n      return _react2.default.createElement(\"g\", {\n        className: className\n      }, plotData.filter(function (each) {\n        return (0, _utils.isDefined)(yAccessor(each));\n      }).map(function (each, idx) {\n        return _react2.default.createElement(\"circle\", {\n          key: idx,\n          cx: xScale(xAccessor(each)),\n          cy: yScale(yAccessor(each)),\n          r: 3,\n          fill: \"green\"\n        });\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var highlightOnHover = this.props.highlightOnHover;\n      var hoverProps = highlightOnHover ? {\n        isHover: this.isHover,\n        drawOn: [\"mousemove\", \"pan\"],\n        canvasToDraw: _GenericComponent.getMouseCanvas\n      } : {\n        drawOn: [\"pan\"],\n        canvasToDraw: _GenericComponent.getAxisCanvas\n      };\n      return _react2.default.createElement(_GenericChartComponent2.default, _extends({\n        svgDraw: this.renderSVG,\n        canvasDraw: this.drawOnCanvas,\n        onClickWhenHover: this.props.onClick,\n        onDoubleClickWhenHover: this.props.onDoubleClick,\n        onContextMenuWhenHover: this.props.onContextMenu\n      }, hoverProps));\n    }\n  }]);\n\n  return SARSeries;\n}(_react.Component);\n\nSARSeries.propTypes = {\n  className: _propTypes2.default.string,\n  fill: _propTypes2.default.object.isRequired,\n  yAccessor: _propTypes2.default.func.isRequired,\n  opacity: _propTypes2.default.number.isRequired,\n  onClick: _propTypes2.default.func,\n  onDoubleClick: _propTypes2.default.func,\n  onContextMenu: _propTypes2.default.func,\n  highlightOnHover: _propTypes2.default.bool\n};\nSARSeries.defaultProps = {\n  className: \"react-stockcharts-sar\",\n  fill: {\n    falling: \"#4682B4\",\n    rising: \"#15EC2E\"\n  },\n  highlightOnHover: true,\n  opacity: 0.2,\n  onClick: function onClick(e) {\n    console.log(\"Click\", e);\n  },\n  onDoubleClick: function onDoubleClick(e) {\n    console.log(\"Double Click\", e);\n  },\n  onContextMenu: function onContextMenu(e) {\n    console.log(\"Right Click\", e);\n  }\n};\nexports.default = SARSeries;","map":{"version":3,"sources":["../../../src/lib/series/SARSeries.js"],"names":["SARSeries","moreProps","mouseXY","currentItem","yScale","yAccessor","y","currentY","ctx","fill","opacity","xAccessor","plotData","xScale","hovering","width","d","radius","Math","centerX","centerY","color","each","className","highlightOnHover","hoverProps","isHover","drawOn","canvasToDraw","onContextMenu","onClick","onDoubleClick","bool","falling","rising","console"],"mappings":"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","sourcesContent":["\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport GenericChartComponent from \"../GenericChartComponent\";\nimport { getAxisCanvas, getMouseCanvas } from \"../GenericComponent\";\n\nimport { isDefined, first, last, hexToRGBA } from \"../utils\";\n\nclass SARSeries extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.renderSVG = this.renderSVG.bind(this);\n\t\tthis.drawOnCanvas = this.drawOnCanvas.bind(this);\n\t\tthis.isHover = this.isHover.bind(this);\n\t}\n\tisHover(moreProps) {\n\t\tconst { mouseXY, currentItem, chartConfig: { yScale } } = moreProps;\n\t\tconst { yAccessor } = this.props;\n\t\tconst y = mouseXY[1];\n\t\tconst currentY = yScale(yAccessor(currentItem));\n\t\treturn y <  currentY + 5 && y > currentY - 5;\n\t}\n\tdrawOnCanvas(ctx, moreProps) {\n\t\tconst { yAccessor, fill, opacity } = this.props;\n\t\tconst { xAccessor, plotData, xScale, chartConfig: { yScale }, hovering } = moreProps;\n\n\t\tconst width = xScale(xAccessor(last(plotData))) - xScale(xAccessor(first(plotData)));\n\n\t\tconst d = (width / plotData.length) * 0.5 / 2;\n\t\tconst radius = Math.min(2, Math.max(0.5,  d)) + (hovering ? 2 : 0);\n\n\t\tplotData.forEach(each => {\n\t\t\tconst centerX = xScale(xAccessor(each));\n\t\t\tconst centerY = yScale(yAccessor(each));\n\t\t\tconst color = yAccessor(each) > each.close\n\t\t\t\t? fill.falling\n\t\t\t\t: fill.rising;\n\n\t\t\tctx.fillStyle = hexToRGBA(color, opacity);\n\t\t\tctx.strokeStyle = color;\n\n\t\t\tctx.beginPath();\n\t\t\tctx.ellipse(centerX, centerY, radius, radius, 0, 0, 2 * Math.PI);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tctx.stroke();\n\t\t});\n\t}\n\trenderSVG(moreProps) {\n\t\tconst { className, yAccessor } = this.props;\n\t\tconst { xAccessor, plotData, xScale, chartConfig: { yScale } } = moreProps;\n\t\t// console.log(moreProps);\n\n\t\treturn <g className={className}>\n\t\t\t{plotData\n\t\t\t\t.filter(each => isDefined(yAccessor(each)))\n\t\t\t\t.map((each, idx) => {\n\t\t\t\t\treturn <circle key={idx} cx={xScale(xAccessor(each))}\n\t\t\t\t\t\tcy={yScale(yAccessor(each))} r={3} fill=\"green\" />;\n\t\t\t\t})}\n\t\t</g>;\n\t}\n\n\trender() {\n\t\tconst { highlightOnHover } = this.props;\n\t\tconst hoverProps = highlightOnHover\n\t\t\t? {\n\t\t\t\tisHover: this.isHover,\n\t\t\t\tdrawOn: [\"mousemove\", \"pan\"],\n\t\t\t\tcanvasToDraw: getMouseCanvas\n\t\t\t}\n\t\t\t: {\n\t\t\t\tdrawOn: [\"pan\"],\n\t\t\t\tcanvasToDraw: getAxisCanvas\n\t\t\t};\n\n\t\treturn <GenericChartComponent\n\t\t\tsvgDraw={this.renderSVG}\n\n\t\t\tcanvasDraw={this.drawOnCanvas}\n\n\t\t\tonClickWhenHover={this.props.onClick}\n\t\t\tonDoubleClickWhenHover={this.props.onDoubleClick}\n\t\t\tonContextMenuWhenHover={this.props.onContextMenu}\n\t\t\t{...hoverProps}\n\t\t/>;\n\t}\n}\n\nSARSeries.propTypes = {\n\tclassName: PropTypes.string,\n\tfill: PropTypes.object.isRequired,\n\tyAccessor: PropTypes.func.isRequired,\n\topacity: PropTypes.number.isRequired,\n\tonClick: PropTypes.func,\n\tonDoubleClick: PropTypes.func,\n\tonContextMenu: PropTypes.func,\n\thighlightOnHover: PropTypes.bool,\n};\n\nSARSeries.defaultProps = {\n\tclassName: \"react-stockcharts-sar\",\n\tfill: {\n\t\tfalling: \"#4682B4\",\n\t\trising: \"#15EC2E\",\n\t},\n\thighlightOnHover: true,\n\topacity: 0.2,\n\tonClick: function(e) { console.log(\"Click\", e); },\n\tonDoubleClick: function(e) { console.log(\"Double Click\", e); },\n\tonContextMenu: function(e) { console.log(\"Right Click\", e); },\n};\n\nexport default SARSeries;\n"]},"metadata":{},"sourceType":"script"}