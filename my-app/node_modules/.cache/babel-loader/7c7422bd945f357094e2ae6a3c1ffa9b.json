{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _d3Format = require(\"d3-format\");\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _displayValuesFor = require(\"./displayValuesFor\");\n\nvar _displayValuesFor2 = _interopRequireDefault(_displayValuesFor);\n\nvar _GenericChartComponent = require(\"../GenericChartComponent\");\n\nvar _GenericChartComponent2 = _interopRequireDefault(_GenericChartComponent);\n\nvar _utils = require(\"../utils\");\n\nvar _ToolTipText = require(\"./ToolTipText\");\n\nvar _ToolTipText2 = _interopRequireDefault(_ToolTipText);\n\nvar _ToolTipTSpanLabel = require(\"./ToolTipTSpanLabel\");\n\nvar _ToolTipTSpanLabel2 = _interopRequireDefault(_ToolTipTSpanLabel);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar StochasticTooltip = function (_Component) {\n  _inherits(StochasticTooltip, _Component);\n\n  function StochasticTooltip(props) {\n    _classCallCheck(this, StochasticTooltip);\n\n    var _this = _possibleConstructorReturn(this, (StochasticTooltip.__proto__ || Object.getPrototypeOf(StochasticTooltip)).call(this, props));\n\n    _this.renderSVG = _this.renderSVG.bind(_this);\n    return _this;\n  }\n\n  _createClass(StochasticTooltip, [{\n    key: \"renderSVG\",\n    value: function renderSVG(moreProps) {\n      var _props = this.props,\n          onClick = _props.onClick,\n          fontFamily = _props.fontFamily,\n          fontSize = _props.fontSize,\n          yAccessor = _props.yAccessor,\n          displayFormat = _props.displayFormat,\n          label = _props.label;\n      var _props2 = this.props,\n          className = _props2.className,\n          options = _props2.options,\n          appearance = _props2.appearance,\n          labelFill = _props2.labelFill;\n      var displayValuesFor = this.props.displayValuesFor;\n      var _moreProps$chartConfi = moreProps.chartConfig,\n          width = _moreProps$chartConfi.width,\n          height = _moreProps$chartConfi.height;\n      var currentItem = displayValuesFor(this.props, moreProps);\n      var stroke = appearance.stroke;\n      var stochastic = currentItem && yAccessor(currentItem);\n      var K = stochastic && stochastic.K && displayFormat(stochastic.K) || \"n/a\";\n      var D = stochastic && stochastic.D && displayFormat(stochastic.D) || \"n/a\";\n      var originProp = this.props.origin;\n      var origin = (0, _utils.functor)(originProp);\n\n      var _origin = origin(width, height),\n          _origin2 = _slicedToArray(_origin, 2),\n          x = _origin2[0],\n          y = _origin2[1];\n\n      return _react2.default.createElement(\"g\", {\n        className: className,\n        transform: \"translate(\" + x + \", \" + y + \")\",\n        onClick: onClick\n      }, _react2.default.createElement(_ToolTipText2.default, {\n        x: 0,\n        y: 0,\n        fontFamily: fontFamily,\n        fontSize: fontSize\n      }, _react2.default.createElement(_ToolTipTSpanLabel2.default, {\n        fill: labelFill\n      }, label + \" %K(\"), _react2.default.createElement(\"tspan\", {\n        fill: stroke.kLine\n      }, options.windowSize + \", \" + options.kWindowSize), _react2.default.createElement(_ToolTipTSpanLabel2.default, {\n        fill: labelFill\n      }, \"): \"), _react2.default.createElement(\"tspan\", {\n        fill: stroke.kLine\n      }, K), _react2.default.createElement(_ToolTipTSpanLabel2.default, {\n        fill: labelFill\n      }, \" %D (\"), _react2.default.createElement(\"tspan\", {\n        fill: stroke.dLine\n      }, options.dWindowSize), _react2.default.createElement(_ToolTipTSpanLabel2.default, {\n        fill: labelFill\n      }, \"): \"), _react2.default.createElement(\"tspan\", {\n        fill: stroke.dLine\n      }, D)));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _react2.default.createElement(_GenericChartComponent2.default, {\n        clip: false,\n        svgDraw: this.renderSVG,\n        drawOn: [\"mousemove\"]\n      });\n    }\n  }]);\n\n  return StochasticTooltip;\n}(_react.Component);\n\nStochasticTooltip.propTypes = {\n  origin: _propTypes2.default.oneOfType([_propTypes2.default.array, _propTypes2.default.func]).isRequired,\n  className: _propTypes2.default.string,\n  fontFamily: _propTypes2.default.string,\n  fontSize: _propTypes2.default.number,\n  labelFill: _propTypes2.default.string,\n  onClick: _propTypes2.default.func,\n  yAccessor: _propTypes2.default.func.isRequired,\n  options: _propTypes2.default.shape({\n    windowSize: _propTypes2.default.number.isRequired,\n    kWindowSize: _propTypes2.default.number.isRequired,\n    dWindowSize: _propTypes2.default.number.isRequired\n  }).isRequired,\n  appearance: _propTypes2.default.shape({\n    stroke: {\n      dLine: _propTypes2.default.string.isRequired,\n      kLine: _propTypes2.default.string.isRequired\n    }.isRequired\n  }).isRequired,\n  displayFormat: _propTypes2.default.func.isRequired,\n  displayValuesFor: _propTypes2.default.func,\n  label: _propTypes2.default.string.isRequired\n};\nStochasticTooltip.defaultProps = {\n  displayFormat: (0, _d3Format.format)(\".2f\"),\n  displayValuesFor: _displayValuesFor2.default,\n  origin: [0, 0],\n  className: \"react-stockcharts-tooltip\",\n  label: \"STO\"\n};\nexports.default = StochasticTooltip;","map":{"version":3,"sources":["../../../src/lib/tooltip/StochasticTooltip.js"],"names":["StochasticTooltip","moreProps","onClick","fontFamily","fontSize","yAccessor","displayFormat","label","className","options","appearance","labelFill","displayValuesFor","width","height","currentItem","stroke","stochastic","K","D","originProp","origin","x","y","kWindowSize","dWindowSize","windowSize","isRequired","dLine","kLine"],"mappings":"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","sourcesContent":["\n\nimport { format } from \"d3-format\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport displayValuesFor from \"./displayValuesFor\";\nimport GenericChartComponent from \"../GenericChartComponent\";\n\nimport { functor } from \"../utils\";\n\nimport ToolTipText from \"./ToolTipText\";\nimport ToolTipTSpanLabel from \"./ToolTipTSpanLabel\";\n\nclass StochasticTooltip extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.renderSVG = this.renderSVG.bind(this);\n\t}\n\trenderSVG(moreProps) {\n\t\tconst { onClick, fontFamily, fontSize, yAccessor, displayFormat, label } = this.props;\n\t\tconst { className, options, appearance, labelFill } = this.props;\n\t\tconst { displayValuesFor } = this.props;\n\t\tconst { chartConfig: { width, height } } = moreProps;\n\n\t\tconst currentItem = displayValuesFor(this.props, moreProps);\n\t\tconst { stroke } = appearance;\n\t\tconst stochastic = currentItem && yAccessor(currentItem);\n\n\t\tconst K = (stochastic && stochastic.K && displayFormat(stochastic.K)) || \"n/a\";\n\t\tconst D = (stochastic && stochastic.D && displayFormat(stochastic.D)) || \"n/a\";\n\n\t\tconst { origin: originProp } = this.props;\n\t\tconst origin = functor(originProp);\n\t\tconst [x, y] = origin(width, height);\n\n\t\treturn (\n\t\t\t<g className={className} transform={`translate(${ x }, ${ y })`} onClick={onClick}>\n\t\t\t\t<ToolTipText x={0} y={0} fontFamily={fontFamily} fontSize={fontSize}>\n\t\t\t\t\t<ToolTipTSpanLabel fill={labelFill}>{`${ label } %K(`}</ToolTipTSpanLabel>\n\t\t\t\t\t<tspan fill={stroke.kLine}>{`${options.windowSize}, ${options.kWindowSize}`}</tspan>\n\t\t\t\t\t<ToolTipTSpanLabel fill={labelFill}>): </ToolTipTSpanLabel>\n\t\t\t\t\t<tspan fill={stroke.kLine}>{K}</tspan>\n\t\t\t\t\t<ToolTipTSpanLabel fill={labelFill}> %D (</ToolTipTSpanLabel>\n\t\t\t\t\t<tspan fill={stroke.dLine}>{options.dWindowSize}</tspan>\n\t\t\t\t\t<ToolTipTSpanLabel fill={labelFill}>): </ToolTipTSpanLabel>\n\t\t\t\t\t<tspan fill={stroke.dLine}>{D}</tspan>\n\t\t\t\t</ToolTipText>\n\t\t\t</g>\n\t\t);\n\t}\n\trender() {\n\t\treturn <GenericChartComponent\n\t\t\tclip={false}\n\t\t\tsvgDraw={this.renderSVG}\n\t\t\tdrawOn={[\"mousemove\"]}\n\t\t/>;\n\t}\n}\n\nStochasticTooltip.propTypes = {\n\torigin: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.func\n\t]).isRequired,\n\tclassName: PropTypes.string,\n\tfontFamily: PropTypes.string,\n\tfontSize: PropTypes.number,\n\tlabelFill: PropTypes.string,\n\n\tonClick: PropTypes.func,\n\tyAccessor: PropTypes.func.isRequired,\n\toptions: PropTypes.shape({\n\t\twindowSize: PropTypes.number.isRequired,\n\t\tkWindowSize: PropTypes.number.isRequired,\n\t\tdWindowSize: PropTypes.number.isRequired,\n\t}).isRequired,\n\tappearance: PropTypes.shape({\n\t\tstroke: {\n\t\t\tdLine: PropTypes.string.isRequired,\n\t\t\tkLine: PropTypes.string.isRequired,\n\t\t}.isRequired,\n\t}).isRequired,\n\tdisplayFormat: PropTypes.func.isRequired,\n\tdisplayValuesFor: PropTypes.func,\n\tlabel: PropTypes.string.isRequired,\n};\n\nStochasticTooltip.defaultProps = {\n\tdisplayFormat: format(\".2f\"),\n\tdisplayValuesFor: displayValuesFor,\n\torigin: [0, 0],\n\tclassName: \"react-stockcharts-tooltip\",\n\tlabel: \"STO\",\n};\n\nexport default StochasticTooltip;\n"]},"metadata":{},"sourceType":"script"}