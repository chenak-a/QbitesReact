{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\chena\\\\reactgun\\\\my-app\\\\src\\\\graphh.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from \"prop-types\";\nimport { scaleTime } from \"d3-scale\";\nimport { utcDay } from \"d3-time\";\nimport { ChartCanvas, Chart } from \"react-stockcharts\";\nimport { CandlestickSeries } from \"react-stockcharts/lib/series\";\nimport { XAxis, YAxis } from \"react-stockcharts/lib/axes\";\nimport { fitWidth } from \"react-stockcharts/lib/helper\";\nimport { last, timeIntervalBarWidth } from \"react-stockcharts/lib/utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Graphh(props) {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [loading, setLoding] = useState(false);\n  useEffect(() => {\n    loopData(props.data.data.hcl);\n\n    const xAccessor = data => data.opentime;\n\n    const xExtents = [xAccessor(last(data)), xAccessor(data[data.length - 100])];\n  }, [loading]);\n\n  const loopData = hcl => {\n    var array = [];\n    var OpenLen = hcl.Open.length;\n    console.log(OpenLen);\n\n    for (var i = 0; i < OpenLen; i++) {\n      array.push({\n        opentime: new Date(props.data.data.hcl.opentime[i]),\n        open: hcl.Open[i],\n        High: hcl.High[i],\n        Low: hcl.Low[i],\n        closed: hcl.Close[i],\n        Volume: hcl.Volume[i]\n      });\n    }\n\n    setData(array);\n    setLoding(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ChartCanvas, {\n      height: 400,\n      ratio: 1000,\n      width: 900,\n      margin: {\n        left: 50,\n        right: 50,\n        top: 10,\n        bottom: 30\n      },\n      type: \"svg\",\n      seriesName: \"MSFT\",\n      data: data,\n      xAccessor: xAccessor(data),\n      xScale: scaleTime(),\n      xExtents: xExtents,\n      children: /*#__PURE__*/_jsxDEV(Chart, {\n        id: 1,\n        yExtents: data => [data.High, data.Low],\n        children: [/*#__PURE__*/_jsxDEV(XAxis, {\n          axisAt: \"bottom\",\n          orient: \"bottom\",\n          ticks: 6\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          axisAt: \"left\",\n          orient: \"left\",\n          ticks: 5\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(CandlestickSeries, {\n          width: timeIntervalBarWidth(utcDay)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Graphh, \"s1rsTVnPoIGsGgCJz4vvI0wnkEc=\");\n\n_c = Graphh;\nexport default Graphh;\n\nvar _c;\n\n$RefreshReg$(_c, \"Graphh\");","map":{"version":3,"sources":["c:/Users/chena/reactgun/my-app/src/graphh.js"],"names":["React","useEffect","useState","PropTypes","scaleTime","utcDay","ChartCanvas","Chart","CandlestickSeries","XAxis","YAxis","fitWidth","last","timeIntervalBarWidth","Graphh","props","data","setData","loading","setLoding","loopData","hcl","xAccessor","opentime","xExtents","length","array","OpenLen","Open","console","log","i","push","Date","open","High","Low","closed","Close","Volume","left","right","top","bottom"],"mappings":"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","sourcesContent":["import React, { useEffect ,useState } from 'react';\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { scaleTime } from \"d3-scale\";\r\nimport { utcDay } from \"d3-time\";\r\n\r\nimport { ChartCanvas, Chart } from \"react-stockcharts\";\r\nimport { CandlestickSeries } from \"react-stockcharts/lib/series\";\r\nimport { XAxis, YAxis } from \"react-stockcharts/lib/axes\";\r\nimport { fitWidth } from \"react-stockcharts/lib/helper\";\r\nimport { last, timeIntervalBarWidth } from \"react-stockcharts/lib/utils\";\r\n\r\n\r\nfunction Graphh(props) {\r\n    const [data, setData] = useState([]);\r\n    const [loading ,setLoding] = useState(false)\r\n    useEffect(()=>{\r\n        loopData(props.data.data.hcl);\r\n        const xAccessor = (data) => data.opentime;\r\n        const xExtents = [\r\n            xAccessor(last(data)),\r\n            xAccessor(data[data.length - 100])\r\n        ];\r\n    },[loading])\r\n    \r\n    const loopData = (hcl) => {\r\n        var array = [];\r\n        var OpenLen = hcl.Open.length;\r\n        \r\n        console.log(OpenLen)\r\n        for( var i = 0; i < OpenLen; i++){\r\n            array.push({ opentime:new Date(props.data.data.hcl.opentime[i]),  open : hcl.Open[i], High: hcl.High[i], Low : hcl.Low[i],closed: hcl.Close[i],Volume : hcl.Volume[i], })\r\n        }\r\n        setData(array)\r\n        setLoding(true)\r\n       \r\n       \r\n    }\r\n    \r\n  \r\n    return (\r\n        <div>\r\n       \t    <ChartCanvas height={400}\r\n\t\t\t\t\tratio={1000}\r\n\t\t\t\t\twidth={900}\r\n\t\t\t\t\tmargin={{ left: 50, right: 50, top: 10, bottom: 30 }}\r\n\t\t\t\t\ttype={\"svg\"}\r\n\t\t\t\t\tseriesName=\"MSFT\"\r\n\t\t\t\t\tdata={data}\r\n\t\t\t\t\txAccessor={xAccessor (data)}\r\n\t\t\t\t\txScale={scaleTime()}\r\n\t\t\t\t\txExtents={xExtents}>\r\n\r\n\t\t\t\t<Chart id={1} yExtents={data => [data.High, data.Low]}>\r\n\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={6}/>\r\n\t\t\t\t\t<YAxis axisAt=\"left\" orient=\"left\" ticks={5} />\r\n\t\t\t\t\t<CandlestickSeries width={timeIntervalBarWidth(utcDay)}/>\r\n\t\t\t\t</Chart>\r\n\t\t\t</ChartCanvas>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Graphh\r\n"]},"metadata":{},"sourceType":"module"}