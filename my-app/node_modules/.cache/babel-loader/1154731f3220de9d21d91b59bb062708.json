{"ast":null,"code":"import defaultSource from \"./defaultSource.js\";\nimport beta from \"./beta.js\";\nimport geometric from \"./geometric.js\";\nexport default (function sourceRandomBinomial(source) {\n  var G = geometric.source(source),\n      B = beta.source(source);\n\n  function randomBinomial(n, p) {\n    n = +n;\n    if ((p = +p) >= 1) return () => n;\n    if (p <= 0) return () => 0;\n    return function () {\n      var acc = 0,\n          nn = n,\n          pp = p;\n\n      while (nn * pp > 16 && nn * (1 - pp) > 16) {\n        var i = Math.floor((nn + 1) * pp),\n            y = B(i, nn - i + 1)();\n\n        if (y <= pp) {\n          acc += i;\n          nn -= i;\n          pp = (pp - y) / (1 - y);\n        } else {\n          nn = i - 1;\n          pp /= y;\n        }\n      }\n\n      var sign = pp < 0.5,\n          pFinal = sign ? pp : 1 - pp,\n          g = G(pFinal);\n\n      for (var s = g(), k = 0; s <= nn; ++k) s += g();\n\n      return acc + (sign ? k : nn - k);\n    };\n  }\n\n  randomBinomial.source = sourceRandomBinomial;\n  return randomBinomial;\n})(defaultSource);","map":{"version":3,"names":["defaultSource","beta","geometric","sourceRandomBinomial","source","G","B","randomBinomial","n","p","acc","nn","pp","i","Math","floor","y","sign","pFinal","g","s","k"],"sources":["/home/chenak/QbitesReact/my-app/node_modules/d3-random/src/binomial.js"],"sourcesContent":["import defaultSource from \"./defaultSource.js\";\nimport beta from \"./beta.js\";\nimport geometric from \"./geometric.js\";\n\nexport default (function sourceRandomBinomial(source) {\n  var G = geometric.source(source),\n      B = beta.source(source);\n\n  function randomBinomial(n, p) {\n    n = +n;\n    if ((p = +p) >= 1) return () => n;\n    if (p <= 0) return () => 0;\n    return function() {\n      var acc = 0, nn = n, pp = p;\n      while (nn * pp > 16 && nn * (1 - pp) > 16) {\n        var i = Math.floor((nn + 1) * pp),\n            y = B(i, nn - i + 1)();\n        if (y <= pp) {\n          acc += i;\n          nn -= i;\n          pp = (pp - y) / (1 - y);\n        } else {\n          nn = i - 1;\n          pp /= y;\n        }\n      }\n      var sign = pp < 0.5,\n          pFinal = sign ? pp : 1 - pp,\n          g = G(pFinal);\n      for (var s = g(), k = 0; s <= nn; ++k) s += g();\n      return acc + (sign ? k : nn - k);\n    };\n  }\n\n  randomBinomial.source = sourceRandomBinomial;\n\n  return randomBinomial;\n})(defaultSource);\n"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,oBAA1B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AAEA,eAAe,CAAC,SAASC,oBAAT,CAA8BC,MAA9B,EAAsC;EACpD,IAAIC,CAAC,GAAGH,SAAS,CAACE,MAAV,CAAiBA,MAAjB,CAAR;EAAA,IACIE,CAAC,GAAGL,IAAI,CAACG,MAAL,CAAYA,MAAZ,CADR;;EAGA,SAASG,cAAT,CAAwBC,CAAxB,EAA2BC,CAA3B,EAA8B;IAC5BD,CAAC,GAAG,CAACA,CAAL;IACA,IAAI,CAACC,CAAC,GAAG,CAACA,CAAN,KAAY,CAAhB,EAAmB,OAAO,MAAMD,CAAb;IACnB,IAAIC,CAAC,IAAI,CAAT,EAAY,OAAO,MAAM,CAAb;IACZ,OAAO,YAAW;MAChB,IAAIC,GAAG,GAAG,CAAV;MAAA,IAAaC,EAAE,GAAGH,CAAlB;MAAA,IAAqBI,EAAE,GAAGH,CAA1B;;MACA,OAAOE,EAAE,GAAGC,EAAL,GAAU,EAAV,IAAgBD,EAAE,IAAI,IAAIC,EAAR,CAAF,GAAgB,EAAvC,EAA2C;QACzC,IAAIC,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAW,CAACJ,EAAE,GAAG,CAAN,IAAWC,EAAtB,CAAR;QAAA,IACII,CAAC,GAAGV,CAAC,CAACO,CAAD,EAAIF,EAAE,GAAGE,CAAL,GAAS,CAAb,CAAD,EADR;;QAEA,IAAIG,CAAC,IAAIJ,EAAT,EAAa;UACXF,GAAG,IAAIG,CAAP;UACAF,EAAE,IAAIE,CAAN;UACAD,EAAE,GAAG,CAACA,EAAE,GAAGI,CAAN,KAAY,IAAIA,CAAhB,CAAL;QACD,CAJD,MAIO;UACLL,EAAE,GAAGE,CAAC,GAAG,CAAT;UACAD,EAAE,IAAII,CAAN;QACD;MACF;;MACD,IAAIC,IAAI,GAAGL,EAAE,GAAG,GAAhB;MAAA,IACIM,MAAM,GAAGD,IAAI,GAAGL,EAAH,GAAQ,IAAIA,EAD7B;MAAA,IAEIO,CAAC,GAAGd,CAAC,CAACa,MAAD,CAFT;;MAGA,KAAK,IAAIE,CAAC,GAAGD,CAAC,EAAT,EAAaE,CAAC,GAAG,CAAtB,EAAyBD,CAAC,IAAIT,EAA9B,EAAkC,EAAEU,CAApC,EAAuCD,CAAC,IAAID,CAAC,EAAN;;MACvC,OAAOT,GAAG,IAAIO,IAAI,GAAGI,CAAH,GAAOV,EAAE,GAAGU,CAApB,CAAV;IACD,CAnBD;EAoBD;;EAEDd,cAAc,CAACH,MAAf,GAAwBD,oBAAxB;EAEA,OAAOI,cAAP;AACD,CAjCc,EAiCZP,aAjCY,CAAf"},"metadata":{},"sourceType":"module"}