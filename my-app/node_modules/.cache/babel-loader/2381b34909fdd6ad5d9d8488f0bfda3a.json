{"ast":null,"code":"import constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"node not found: \" + nodeId);\n  return node;\n}\n\nexport default function (links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      random,\n      iterations = 1;\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle(random);\n        y = target.y + target.vy - source.y - source.vy || jiggle(random);\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = new Map(nodes.map((d, i) => [id(d, i, nodes), d])),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function (_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.links = function (_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function (_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function (_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function (_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function (_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n}","map":{"version":3,"names":["constant","jiggle","index","d","find","nodeById","nodeId","node","get","Error","links","id","strength","defaultStrength","strengths","distance","distances","nodes","count","bias","random","iterations","link","Math","min","source","target","force","alpha","k","n","length","i","x","y","l","b","vx","vy","sqrt","initialize","m","Map","map","Array","initializeStrength","initializeDistance","_nodes","_random","_","arguments"],"sources":["/home/chenak/QbitesReact/my-app/node_modules/d3/node_modules/d3-force/src/link.js"],"sourcesContent":["import constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"node not found: \" + nodeId);\n  return node;\n}\n\nexport default function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      random,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle(random);\n        y = target.y + target.vy - source.y - source.vy || jiggle(random);\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = new Map(nodes.map((d, i) => [id(d, i, nodes), d])),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_nodes, _random) {\n    nodes = _nodes;\n    random = _random;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}