{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nexports.getValueFromOverride = getValueFromOverride;\nexports.terminate = terminate;\nexports.saveNodeType = saveNodeType;\nexports.isHoverForInteractiveType = isHoverForInteractiveType;\nexports.isHover = isHover;\nexports.getMorePropsForChart = getMorePropsForChart;\nexports.getSelected = getSelected;\n\nvar _utils = require(\"../utils\");\n\nfunction getValueFromOverride(override, index, key, defaultValue) {\n  if ((0, _utils.isDefined)(override) && override.index === index) return override[key];\n  return defaultValue;\n}\n\nfunction terminate() {\n  this.setState({\n    current: null,\n    override: null\n  });\n}\n\nfunction saveNodeType(type) {\n  var _this = this;\n\n  return function (node) {\n    if ((0, _utils.isNotDefined)(node) && (0, _utils.isDefined)(_this.nodes[type])) {\n      delete _this.nodes[type];\n    } else {\n      _this.nodes[type] = node;\n    } // console.error(this.nodes)\n\n  };\n}\n\nfunction isHoverForInteractiveType(interactiveType) {\n  return function (moreProps) {\n    // this has to be function as it is bound to this\n    if ((0, _utils.isDefined)(this.nodes)) {\n      var selecedNodes = this.nodes.map(function (node) {\n        return node.isHover(moreProps);\n      });\n      var interactive = this.props[interactiveType].map(function (t, idx) {\n        return _extends({}, t, {\n          selected: selecedNodes[idx]\n        });\n      });\n      return interactive;\n    }\n  };\n}\n\nfunction isHover(moreProps) {\n  var hovering = (0, _utils.mapObject)(this.nodes, function (node) {\n    return node.isHover(moreProps);\n  }).reduce(function (a, b) {\n    return a || b;\n  });\n  return hovering;\n}\n\nfunction getMouseXY(moreProps, _ref) {\n  var _ref2 = _slicedToArray(_ref, 2),\n      ox = _ref2[0],\n      oy = _ref2[1];\n\n  if (Array.isArray(moreProps.mouseXY)) {\n    var _moreProps$mouseXY = _slicedToArray(moreProps.mouseXY, 2),\n        x = _moreProps$mouseXY[0],\n        y = _moreProps$mouseXY[1];\n\n    var mouseXY = [x - ox, y - oy];\n    return mouseXY;\n  }\n\n  return moreProps.mouseXY;\n}\n\nfunction getMorePropsForChart(moreProps, chartId) {\n  var chartConfigList = moreProps.chartConfig;\n  var chartConfig = (0, _utils.find)(chartConfigList, function (each) {\n    return each.id === chartId;\n  });\n  var origin = chartConfig.origin;\n  var mouseXY = getMouseXY(moreProps, origin);\n  return _extends({}, moreProps, {\n    chartConfig: chartConfig,\n    mouseXY: mouseXY\n  });\n}\n\nfunction getSelected(interactives) {\n  var selected = interactives.map(function (each) {\n    var objects = each.objects.filter(function (obj) {\n      return obj.selected;\n    });\n    return _extends({}, each, {\n      objects: objects\n    });\n  }).filter(function (each) {\n    return each.objects.length > 0;\n  });\n  return selected;\n}","map":{"version":3,"sources":["../../../src/lib/interactive/utils.js"],"names":["getValueFromOverride","override","terminate","current","saveNodeType","isHoverForInteractiveType","selecedNodes","node","interactive","selected","isHover","hovering","a","ox","oy","Array","moreProps","x","y","mouseXY","getMorePropsForChart","chartConfigList","chartConfig","each","origin","getMouseXY","getSelected","objects","obj"],"mappings":"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","sourcesContent":["import {\n\tisNotDefined,\n\tisDefined,\n\tmapObject,\n\tfind,\n} from \"../utils\";\n\nexport function getValueFromOverride(override, index, key, defaultValue) {\n\tif (isDefined(override) && override.index === index)\n\t\treturn override[key];\n\treturn defaultValue;\n}\n\nexport function terminate() {\n\tthis.setState({\n\t\tcurrent: null,\n\t\toverride: null,\n\t});\n}\n\nexport function saveNodeType(type) {\n\treturn node => {\n\t\tif (isNotDefined(node) && isDefined(this.nodes[type])) {\n\t\t\tdelete this.nodes[type];\n\t\t} else {\n\t\t\tthis.nodes[type] = node;\n\t\t}\n\t\t// console.error(this.nodes)\n\t};\n}\nexport function isHoverForInteractiveType(interactiveType) {\n\treturn function(moreProps) { // this has to be function as it is bound to this\n\n\t\tif (isDefined(this.nodes)) {\n\t\t\tconst selecedNodes = this.nodes\n\t\t\t\t.map(node => node.isHover(moreProps));\n\t\t\tconst interactive = this.props[interactiveType].map((t, idx) => {\n\t\t\t\treturn {\n\t\t\t\t\t...t,\n\t\t\t\t\tselected: selecedNodes[idx]\n\t\t\t\t};\n\t\t\t});\n\t\t\treturn interactive;\n\t\t}\n\t};\n}\n\nexport function isHover(moreProps) {\n\tconst hovering = mapObject(this.nodes, node => node.isHover(moreProps))\n\t\t.reduce((a, b) => {\n\t\t\treturn a || b;\n\t\t});\n\treturn hovering;\n}\n\nfunction getMouseXY(moreProps, [ox, oy]) {\n\tif (Array.isArray(moreProps.mouseXY)) {\n\t\tconst { mouseXY: [x, y] } = moreProps;\n\t\tconst mouseXY = [\n\t\t\tx - ox,\n\t\t\ty - oy\n\t\t];\n\t\treturn mouseXY;\n\t}\n\treturn moreProps.mouseXY;\n}\n\nexport function getMorePropsForChart(moreProps, chartId) {\n\tconst { chartConfig: chartConfigList } = moreProps;\n\tconst chartConfig = find(chartConfigList, each => each.id === chartId);\n\n\tconst { origin } = chartConfig;\n\tconst mouseXY = getMouseXY(moreProps, origin);\n\treturn {\n\t\t...moreProps,\n\t\tchartConfig,\n\t\tmouseXY,\n\t};\n}\n\nexport function getSelected(interactives) {\n\tconst selected = interactives\n\t\t.map(each => {\n\t\t\tconst objects = each.objects.filter(obj => {\n\t\t\t\treturn obj.selected;\n\t\t\t});\n\t\t\treturn {\n\t\t\t\t...each,\n\t\t\t\tobjects,\n\t\t\t};\n\t\t})\n\t\t.filter(each => each.objects.length > 0);\n\treturn selected;\n}\n"]},"metadata":{},"sourceType":"script"}