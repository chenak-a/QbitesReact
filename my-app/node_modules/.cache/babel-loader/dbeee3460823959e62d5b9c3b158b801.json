{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nexports.isHovering2 = isHovering2;\nexports.isHovering = isHovering;\nexports.getSlope = getSlope;\nexports.getYIntercept = getYIntercept;\nexports.generateLine = generateLine;\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _GenericChartComponent = require(\"../../GenericChartComponent\");\n\nvar _GenericChartComponent2 = _interopRequireDefault(_GenericChartComponent);\n\nvar _GenericComponent = require(\"../../GenericComponent\");\n\nvar _utils = require(\"../../utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar StraightLine = function (_Component) {\n  _inherits(StraightLine, _Component);\n\n  function StraightLine(props) {\n    _classCallCheck(this, StraightLine);\n\n    var _this = _possibleConstructorReturn(this, (StraightLine.__proto__ || Object.getPrototypeOf(StraightLine)).call(this, props));\n\n    _this.renderSVG = _this.renderSVG.bind(_this);\n    _this.drawOnCanvas = _this.drawOnCanvas.bind(_this);\n    _this.isHover = _this.isHover.bind(_this);\n    return _this;\n  }\n\n  _createClass(StraightLine, [{\n    key: \"isHover\",\n    value: function isHover(moreProps) {\n      var _props = this.props,\n          tolerance = _props.tolerance,\n          onHover = _props.onHover;\n\n      if ((0, _utils.isDefined)(onHover)) {\n        var _props2 = this.props,\n            x1Value = _props2.x1Value,\n            x2Value = _props2.x2Value,\n            y1Value = _props2.y1Value,\n            y2Value = _props2.y2Value,\n            type = _props2.type;\n        var mouseXY = moreProps.mouseXY,\n            xScale = moreProps.xScale;\n        var yScale = moreProps.chartConfig.yScale;\n        var hovering = isHovering({\n          x1Value: x1Value,\n          y1Value: y1Value,\n          x2Value: x2Value,\n          y2Value: y2Value,\n          mouseXY: mouseXY,\n          type: type,\n          tolerance: tolerance,\n          xScale: xScale,\n          yScale: yScale\n        }); // console.log(\"hovering ->\", hovering);\n\n        return hovering;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"drawOnCanvas\",\n    value: function drawOnCanvas(ctx, moreProps) {\n      var _props3 = this.props,\n          stroke = _props3.stroke,\n          strokeWidth = _props3.strokeWidth,\n          strokeOpacity = _props3.strokeOpacity,\n          strokeDasharray = _props3.strokeDasharray;\n\n      var _helper = helper(this.props, moreProps),\n          x1 = _helper.x1,\n          y1 = _helper.y1,\n          x2 = _helper.x2,\n          y2 = _helper.y2;\n\n      ctx.lineWidth = strokeWidth;\n      ctx.strokeStyle = (0, _utils.hexToRGBA)(stroke, strokeOpacity);\n      ctx.setLineDash((0, _utils.getStrokeDasharray)(strokeDasharray).split(\",\"));\n      ctx.beginPath();\n      ctx.moveTo(x1, y1);\n      ctx.lineTo(x2, y2);\n      ctx.stroke();\n    }\n  }, {\n    key: \"renderSVG\",\n    value: function renderSVG(moreProps) {\n      var _props4 = this.props,\n          stroke = _props4.stroke,\n          strokeWidth = _props4.strokeWidth,\n          strokeOpacity = _props4.strokeOpacity,\n          strokeDasharray = _props4.strokeDasharray;\n      var lineWidth = strokeWidth;\n\n      var _helper2 = helper(this.props, moreProps),\n          x1 = _helper2.x1,\n          y1 = _helper2.y1,\n          x2 = _helper2.x2,\n          y2 = _helper2.y2;\n\n      return _react2.default.createElement(\"line\", {\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        stroke: stroke,\n        strokeWidth: lineWidth,\n        strokeDasharray: (0, _utils.getStrokeDasharray)(strokeDasharray),\n        strokeOpacity: strokeOpacity\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _props5 = this.props,\n          selected = _props5.selected,\n          interactiveCursorClass = _props5.interactiveCursorClass;\n      var _props6 = this.props,\n          onDragStart = _props6.onDragStart,\n          onDrag = _props6.onDrag,\n          onDragComplete = _props6.onDragComplete,\n          onHover = _props6.onHover,\n          onUnHover = _props6.onUnHover;\n      return _react2.default.createElement(_GenericChartComponent2.default, {\n        isHover: this.isHover,\n        svgDraw: this.renderSVG,\n        canvasToDraw: _GenericComponent.getMouseCanvas,\n        canvasDraw: this.drawOnCanvas,\n        interactiveCursorClass: interactiveCursorClass,\n        selected: selected,\n        onDragStart: onDragStart,\n        onDrag: onDrag,\n        onDragComplete: onDragComplete,\n        onHover: onHover,\n        onUnHover: onUnHover,\n        drawOn: [\"mousemove\", \"pan\", \"drag\"]\n      });\n    }\n  }]);\n\n  return StraightLine;\n}(_react.Component);\n\nfunction isHovering2(start, end, _ref, tolerance) {\n  var _ref2 = _slicedToArray(_ref, 2),\n      mouseX = _ref2[0],\n      mouseY = _ref2[1];\n\n  var m = getSlope(start, end);\n\n  if ((0, _utils.isDefined)(m)) {\n    var b = getYIntercept(m, end);\n    var y = m * mouseX + b;\n    return mouseY < y + tolerance && mouseY > y - tolerance && mouseX > Math.min(start[0], end[0]) - tolerance && mouseX < Math.max(start[0], end[0]) + tolerance;\n  } else {\n    return mouseY >= Math.min(start[1], end[1]) && mouseY <= Math.max(start[1], end[1]) && mouseX < start[0] + tolerance && mouseX > start[0] - tolerance;\n  }\n}\n\nfunction isHovering(_ref3) {\n  var x1Value = _ref3.x1Value,\n      y1Value = _ref3.y1Value,\n      x2Value = _ref3.x2Value,\n      y2Value = _ref3.y2Value,\n      mouseXY = _ref3.mouseXY,\n      type = _ref3.type,\n      tolerance = _ref3.tolerance,\n      xScale = _ref3.xScale,\n      yScale = _ref3.yScale;\n  var line = generateLine({\n    type: type,\n    start: [x1Value, y1Value],\n    end: [x2Value, y2Value],\n    xScale: xScale,\n    yScale: yScale\n  });\n  var start = [xScale(line.x1), yScale(line.y1)];\n  var end = [xScale(line.x2), yScale(line.y2)];\n  var m = getSlope(start, end);\n\n  var _mouseXY = _slicedToArray(mouseXY, 2),\n      mouseX = _mouseXY[0],\n      mouseY = _mouseXY[1];\n\n  if ((0, _utils.isDefined)(m)) {\n    var b = getYIntercept(m, end);\n    var y = m * mouseX + b;\n    return mouseY < y + tolerance && mouseY > y - tolerance && mouseX > Math.min(start[0], end[0]) - tolerance && mouseX < Math.max(start[0], end[0]) + tolerance;\n  } else {\n    return mouseY >= Math.min(start[1], end[1]) && mouseY <= Math.max(start[1], end[1]) && mouseX < start[0] + tolerance && mouseX > start[0] - tolerance;\n  }\n}\n\nfunction helper(props, moreProps) {\n  var x1Value = props.x1Value,\n      x2Value = props.x2Value,\n      y1Value = props.y1Value,\n      y2Value = props.y2Value,\n      type = props.type;\n  var xScale = moreProps.xScale,\n      yScale = moreProps.chartConfig.yScale;\n  var modLine = generateLine({\n    type: type,\n    start: [x1Value, y1Value],\n    end: [x2Value, y2Value],\n    xScale: xScale,\n    yScale: yScale\n  });\n  var x1 = xScale(modLine.x1);\n  var y1 = yScale(modLine.y1);\n  var x2 = xScale(modLine.x2);\n  var y2 = yScale(modLine.y2);\n  return {\n    x1: x1,\n    y1: y1,\n    x2: x2,\n    y2: y2\n  };\n}\n\nfunction getSlope(start, end) {\n  var m\n  /* slope */\n  = end[0] === start[0] ? undefined : (end[1] - start[1]) / (end[0] - start[0]);\n  return m;\n}\n\nfunction getYIntercept(m, end) {\n  var b\n  /* y intercept */\n  = -1 * m * end[0] + end[1];\n  return b;\n}\n\nfunction generateLine(_ref4) {\n  var type = _ref4.type,\n      start = _ref4.start,\n      end = _ref4.end,\n      xScale = _ref4.xScale,\n      yScale = _ref4.yScale;\n  var m\n  /* slope */\n  = getSlope(start, end); // console.log(end[0] - start[0], m)\n\n  var b\n  /* y intercept */\n  = getYIntercept(m, start);\n\n  switch (type) {\n    case \"XLINE\":\n      return getXLineCoordinates({\n        type: type,\n        start: start,\n        end: end,\n        xScale: xScale,\n        yScale: yScale,\n        m: m,\n        b: b\n      });\n\n    case \"RAY\":\n      return getRayCoordinates({\n        type: type,\n        start: start,\n        end: end,\n        xScale: xScale,\n        yScale: yScale,\n        m: m,\n        b: b\n      });\n\n    case \"LINE\":\n      return getLineCoordinates({\n        type: type,\n        start: start,\n        end: end,\n        xScale: xScale,\n        yScale: yScale,\n        m: m,\n        b: b\n      });\n  }\n}\n\nfunction getXLineCoordinates(_ref5) {\n  var start = _ref5.start,\n      end = _ref5.end,\n      xScale = _ref5.xScale,\n      yScale = _ref5.yScale,\n      m = _ref5.m,\n      b = _ref5.b;\n\n  var _xScale$domain = xScale.domain(),\n      _xScale$domain2 = _slicedToArray(_xScale$domain, 2),\n      xBegin = _xScale$domain2[0],\n      xFinish = _xScale$domain2[1];\n\n  var _yScale$domain = yScale.domain(),\n      _yScale$domain2 = _slicedToArray(_yScale$domain, 2),\n      yBegin = _yScale$domain2[0],\n      yFinish = _yScale$domain2[1];\n\n  if (end[0] === start[0]) {\n    return {\n      x1: end[0],\n      y1: yBegin,\n      x2: end[0],\n      y2: yFinish\n    };\n  }\n\n  var _ref6 = end[0] > start[0] ? [xBegin, xFinish] : [xFinish, xBegin],\n      _ref7 = _slicedToArray(_ref6, 2),\n      x1 = _ref7[0],\n      x2 = _ref7[1];\n\n  return {\n    x1: x1,\n    y1: m * x1 + b,\n    x2: x2,\n    y2: m * x2 + b\n  };\n}\n\nfunction getRayCoordinates(_ref8) {\n  var start = _ref8.start,\n      end = _ref8.end,\n      xScale = _ref8.xScale,\n      yScale = _ref8.yScale,\n      m = _ref8.m,\n      b = _ref8.b;\n\n  var _xScale$domain3 = xScale.domain(),\n      _xScale$domain4 = _slicedToArray(_xScale$domain3, 2),\n      xBegin = _xScale$domain4[0],\n      xFinish = _xScale$domain4[1];\n\n  var _yScale$domain3 = yScale.domain(),\n      _yScale$domain4 = _slicedToArray(_yScale$domain3, 2),\n      yBegin = _yScale$domain4[0],\n      yFinish = _yScale$domain4[1];\n\n  var x1 = start[0];\n\n  if (end[0] === start[0]) {\n    return {\n      x1: x1,\n      y1: start[1],\n      x2: x1,\n      y2: end[1] > start[1] ? yFinish : yBegin\n    };\n  }\n\n  var x2 = end[0] > start[0] ? xFinish : xBegin;\n  return {\n    x1: x1,\n    y1: m * x1 + b,\n    x2: x2,\n    y2: m * x2 + b\n  };\n}\n\nfunction getLineCoordinates(_ref9) {\n  var start = _ref9.start,\n      end = _ref9.end;\n\n  var _start = _slicedToArray(start, 2),\n      x1 = _start[0],\n      y1 = _start[1];\n\n  var _end = _slicedToArray(end, 2),\n      x2 = _end[0],\n      y2 = _end[1];\n\n  if (end[0] === start[0]) {\n    return {\n      x1: x1,\n      y1: start[1],\n      x2: x1,\n      y2: end[1]\n    };\n  }\n\n  return {\n    x1: x1,\n    y1: y1,\n    x2: x2,\n    y2: y2\n  };\n}\n\nStraightLine.propTypes = {\n  x1Value: _propTypes2.default.any.isRequired,\n  x2Value: _propTypes2.default.any.isRequired,\n  y1Value: _propTypes2.default.any.isRequired,\n  y2Value: _propTypes2.default.any.isRequired,\n  interactiveCursorClass: _propTypes2.default.string,\n  stroke: _propTypes2.default.string.isRequired,\n  strokeWidth: _propTypes2.default.number.isRequired,\n  strokeOpacity: _propTypes2.default.number.isRequired,\n  strokeDasharray: _propTypes2.default.oneOf(_utils.strokeDashTypes),\n  type: _propTypes2.default.oneOf([\"XLINE\", // extends from -Infinity to +Infinity\n  \"RAY\", // extends to +/-Infinity in one direction\n  \"LINE\"] // extends between the set bounds\n  ).isRequired,\n  onEdge1Drag: _propTypes2.default.func.isRequired,\n  onEdge2Drag: _propTypes2.default.func.isRequired,\n  onDragStart: _propTypes2.default.func.isRequired,\n  onDrag: _propTypes2.default.func.isRequired,\n  onDragComplete: _propTypes2.default.func.isRequired,\n  onHover: _propTypes2.default.func,\n  onUnHover: _propTypes2.default.func,\n  defaultClassName: _propTypes2.default.string,\n  r: _propTypes2.default.number.isRequired,\n  edgeFill: _propTypes2.default.string.isRequired,\n  edgeStroke: _propTypes2.default.string.isRequired,\n  edgeStrokeWidth: _propTypes2.default.number.isRequired,\n  withEdge: _propTypes2.default.bool.isRequired,\n  children: _propTypes2.default.func.isRequired,\n  tolerance: _propTypes2.default.number.isRequired,\n  selected: _propTypes2.default.bool.isRequired\n};\nStraightLine.defaultProps = {\n  onEdge1Drag: _utils.noop,\n  onEdge2Drag: _utils.noop,\n  onDragStart: _utils.noop,\n  onDrag: _utils.noop,\n  onDragComplete: _utils.noop,\n  edgeStrokeWidth: 3,\n  edgeStroke: \"#000000\",\n  edgeFill: \"#FFFFFF\",\n  r: 10,\n  withEdge: false,\n  strokeWidth: 1,\n  strokeDasharray: \"Solid\",\n  children: _utils.noop,\n  tolerance: 7,\n  selected: false\n};\nexports.default = StraightLine;","map":{"version":3,"mappings":"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","names":["isHovering2","isHovering","getSlope","getYIntercept","generateLine","StraightLine","props","_classCallCheck","_this","renderSVG","bind","drawOnCanvas","isHover","moreProps","tolerance","onHover","x1Value","x2Value","y1Value","y2Value","type","mouseXY","xScale","yScale","chartConfig","hovering","ctx","stroke","strokeWidth","strokeOpacity","strokeDasharray","helper","x1","y1","x2","y2","lineWidth","strokeStyle","setLineDash","split","beginPath","moveTo","lineTo","_react2","selected","interactiveCursorClass","onDragStart","onDrag","onDragComplete","onUnHover","svgDraw","canvasToDraw","canvasDraw","drawOn","start","end","mouseX","mouseY","m","b","y","Math","min","max","line","modLine","undefined","getXLineCoordinates","getRayCoordinates","getLineCoordinates","domain","xBegin","xFinish","yBegin","yFinish","propTypes","_propTypes2","any","isRequired","string","number","oneOf","onEdge1Drag","func","onEdge2Drag","defaultClassName","r","edgeFill","edgeStroke","edgeStrokeWidth","withEdge","bool","children","defaultProps"],"sources":["../../../../src/lib/interactive/components/StraightLine.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport GenericChartComponent from \"../../GenericChartComponent\";\nimport { getMouseCanvas } from \"../../GenericComponent\";\n\nimport {\n\tisDefined,\n\tnoop,\n\thexToRGBA,\n\tgetStrokeDasharray,\n\tstrokeDashTypes,\n} from \"../../utils\";\n\nclass StraightLine extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.renderSVG = this.renderSVG.bind(this);\n\t\tthis.drawOnCanvas = this.drawOnCanvas.bind(this);\n\t\tthis.isHover = this.isHover.bind(this);\n\t}\n\tisHover(moreProps) {\n\t\tconst { tolerance, onHover } = this.props;\n\n\t\tif (isDefined(onHover)) {\n\t\t\tconst { x1Value, x2Value, y1Value, y2Value, type } = this.props;\n\t\t\tconst { mouseXY, xScale } = moreProps;\n\t\t\tconst { chartConfig: { yScale } } = moreProps;\n\n\t\t\tconst hovering = isHovering({\n\t\t\t\tx1Value, y1Value,\n\t\t\t\tx2Value, y2Value,\n\t\t\t\tmouseXY,\n\t\t\t\ttype,\n\t\t\t\ttolerance,\n\t\t\t\txScale,\n\t\t\t\tyScale,\n\t\t\t});\n\n\t\t\t// console.log(\"hovering ->\", hovering);\n\n\t\t\treturn hovering;\n\t\t}\n\t\treturn false;\n\t}\n\tdrawOnCanvas(ctx, moreProps) {\n\t\tconst { stroke, strokeWidth, strokeOpacity, strokeDasharray } = this.props;\n\t\tconst { x1, y1, x2, y2 } = helper(this.props, moreProps);\n\n\t\tctx.lineWidth = strokeWidth;\n\t\tctx.strokeStyle = hexToRGBA(stroke, strokeOpacity);\n\t\tctx.setLineDash(getStrokeDasharray(strokeDasharray).split(\",\"));\n\n\t\tctx.beginPath();\n\t\tctx.moveTo(x1, y1);\n\t\tctx.lineTo(x2, y2);\n\t\tctx.stroke();\n\t}\n\trenderSVG(moreProps) {\n\t\tconst { stroke, strokeWidth, strokeOpacity, strokeDasharray } = this.props;\n\n\t\tconst lineWidth = strokeWidth;\n\n\t\tconst { x1, y1, x2, y2 } = helper(this.props, moreProps);\n\t\treturn (\n\t\t\t<line\n\t\t\t\tx1={x1} y1={y1} x2={x2} y2={y2}\n\t\t\t\tstroke={stroke} strokeWidth={lineWidth}\n\t\t\t\tstrokeDasharray={getStrokeDasharray(strokeDasharray)}\n\t\t\t\tstrokeOpacity={strokeOpacity} />\n\t\t);\n\t}\n\trender() {\n\t\tconst { selected, interactiveCursorClass } = this.props;\n\t\tconst { onDragStart, onDrag, onDragComplete, onHover, onUnHover } = this.props;\n\n\t\treturn <GenericChartComponent\n\t\t\tisHover={this.isHover}\n\n\t\t\tsvgDraw={this.renderSVG}\n\t\t\tcanvasToDraw={getMouseCanvas}\n\t\t\tcanvasDraw={this.drawOnCanvas}\n\n\t\t\tinteractiveCursorClass={interactiveCursorClass}\n\t\t\tselected={selected}\n\n\t\t\tonDragStart={onDragStart}\n\t\t\tonDrag={onDrag}\n\t\t\tonDragComplete={onDragComplete}\n\t\t\tonHover={onHover}\n\t\t\tonUnHover={onUnHover}\n\n\t\t\tdrawOn={[\"mousemove\", \"pan\", \"drag\"]}\n\t\t/>;\n\t}\n}\n\nexport function isHovering2(start, end, [mouseX, mouseY], tolerance) {\n\tconst m = getSlope(start, end);\n\n\tif (isDefined(m)) {\n\t\tconst b = getYIntercept(m, end);\n\t\tconst y = m * mouseX + b;\n\t\treturn (mouseY < y + tolerance)\n\t\t\t&& mouseY > (y - tolerance)\n\t\t\t&& mouseX > Math.min(start[0], end[0]) - tolerance\n\t\t\t&& mouseX < Math.max(start[0], end[0]) + tolerance;\n\t} else {\n\t\treturn mouseY >= Math.min(start[1], end[1])\n\t\t\t&& mouseY <= Math.max(start[1], end[1])\n\t\t\t&& mouseX < start[0] + tolerance\n\t\t\t&& mouseX > start[0] - tolerance;\n\t}\n}\n\nexport function isHovering({\n\tx1Value, y1Value,\n\tx2Value, y2Value,\n\tmouseXY,\n\ttype,\n\ttolerance,\n\txScale,\n\tyScale,\n}) {\n\n\tconst line = generateLine({\n\t\ttype,\n\t\tstart: [x1Value, y1Value],\n\t\tend: [x2Value, y2Value],\n\t\txScale,\n\t\tyScale,\n\t});\n\n\tconst start = [xScale(line.x1), yScale(line.y1)];\n\tconst end = [xScale(line.x2), yScale(line.y2)];\n\n\tconst m = getSlope(start, end);\n\tconst [mouseX, mouseY] = mouseXY;\n\n\tif (isDefined(m)) {\n\t\tconst b = getYIntercept(m, end);\n\t\tconst y = m * mouseX + b;\n\n\t\treturn mouseY < (y + tolerance)\n\t\t\t&& mouseY > (y - tolerance)\n\t\t\t&& mouseX > Math.min(start[0], end[0]) - tolerance\n\t\t\t&& mouseX < Math.max(start[0], end[0]) + tolerance;\n\t} else {\n\t\treturn mouseY >= Math.min(start[1], end[1])\n\t\t\t&& mouseY <= Math.max(start[1], end[1])\n\t\t\t&& mouseX < start[0] + tolerance\n\t\t\t&& mouseX > start[0] - tolerance;\n\t}\n}\n\nfunction helper(props, moreProps) {\n\tconst { x1Value, x2Value, y1Value, y2Value, type } = props;\n\n\tconst { xScale, chartConfig: { yScale } } = moreProps;\n\n\tconst modLine = generateLine({\n\t\ttype,\n\t\tstart: [x1Value, y1Value],\n\t\tend: [x2Value, y2Value],\n\t\txScale,\n\t\tyScale,\n\t});\n\n\tconst x1 = xScale(modLine.x1);\n\tconst y1 = yScale(modLine.y1);\n\tconst x2 = xScale(modLine.x2);\n\tconst y2 = yScale(modLine.y2);\n\n\treturn {\n\t\tx1, y1, x2, y2\n\t};\n}\n\nexport function getSlope(start, end) {\n\tconst m /* slope */ = end[0] === start[0]\n\t\t? undefined\n\t\t: (end[1] - start[1]) / (end[0] - start[0]);\n\treturn m;\n}\nexport function getYIntercept(m, end) {\n\tconst b /* y intercept */ = -1 * m * end[0] + end[1];\n\treturn b;\n}\n\nexport function generateLine({\n\ttype, start, end, xScale, yScale\n}) {\n\tconst m /* slope */ = getSlope(start, end);\n\t// console.log(end[0] - start[0], m)\n\tconst b /* y intercept */ = getYIntercept(m, start);\n\n\tswitch (type) {\n\t\tcase \"XLINE\":\n\t\t\treturn getXLineCoordinates({\n\t\t\t\ttype, start, end, xScale, yScale, m, b\n\t\t\t});\n\t\tcase \"RAY\":\n\t\t\treturn getRayCoordinates({\n\t\t\t\ttype, start, end, xScale, yScale, m, b\n\t\t\t});\n\t\tcase \"LINE\":\n\t\t\treturn getLineCoordinates({\n\t\t\t\ttype, start, end, xScale, yScale, m, b\n\t\t\t});\n\t}\n}\n\nfunction getXLineCoordinates({\n\tstart, end, xScale, yScale, m, b\n}) {\n\tconst [xBegin, xFinish] = xScale.domain();\n\tconst [yBegin, yFinish] = yScale.domain();\n\n\tif (end[0] === start[0]) {\n\t\treturn {\n\t\t\tx1: end[0], y1: yBegin,\n\t\t\tx2: end[0], y2: yFinish,\n\t\t};\n\t}\n\tconst [x1, x2] = end[0] > start[0]\n\t\t? [xBegin, xFinish]\n\t\t: [xFinish, xBegin];\n\n\treturn {\n\t\tx1, y1: m * x1 + b,\n\t\tx2, y2: m * x2 + b\n\t};\n}\n\nfunction getRayCoordinates({\n\tstart, end, xScale, yScale, m, b\n}) {\n\tconst [xBegin, xFinish] = xScale.domain();\n\tconst [yBegin, yFinish] = yScale.domain();\n\n\tconst x1 = start[0];\n\tif (end[0] === start[0]) {\n\t\treturn {\n\t\t\tx1,\n\t\t\ty1: start[1],\n\t\t\tx2: x1,\n\t\t\ty2: end[1] > start[1] ? yFinish : yBegin,\n\t\t};\n\t}\n\n\tconst x2 = end[0] > start[0]\n\t\t? xFinish\n\t\t: xBegin;\n\n\treturn {\n\t\tx1, y1: m * x1 + b,\n\t\tx2, y2: m * x2 + b\n\t};\n}\n\nfunction getLineCoordinates({\n\tstart, end\n}) {\n\n\tconst [x1, y1] = start;\n\tconst [x2, y2] = end;\n\tif (end[0] === start[0]) {\n\t\treturn {\n\t\t\tx1,\n\t\t\ty1: start[1],\n\t\t\tx2: x1,\n\t\t\ty2: end[1],\n\t\t};\n\t}\n\n\treturn {\n\t\tx1, y1,\n\t\tx2, y2,\n\t};\n}\n\nStraightLine.propTypes = {\n\tx1Value: PropTypes.any.isRequired,\n\tx2Value: PropTypes.any.isRequired,\n\ty1Value: PropTypes.any.isRequired,\n\ty2Value: PropTypes.any.isRequired,\n\n\tinteractiveCursorClass: PropTypes.string,\n\tstroke: PropTypes.string.isRequired,\n\tstrokeWidth: PropTypes.number.isRequired,\n\tstrokeOpacity: PropTypes.number.isRequired,\n\tstrokeDasharray: PropTypes.oneOf(strokeDashTypes),\n\n\ttype: PropTypes.oneOf([\n\t\t\"XLINE\", // extends from -Infinity to +Infinity\n\t\t\"RAY\", // extends to +/-Infinity in one direction\n\t\t\"LINE\", // extends between the set bounds\n\t]).isRequired,\n\n\tonEdge1Drag: PropTypes.func.isRequired,\n\tonEdge2Drag: PropTypes.func.isRequired,\n\tonDragStart: PropTypes.func.isRequired,\n\tonDrag: PropTypes.func.isRequired,\n\tonDragComplete: PropTypes.func.isRequired,\n\tonHover: PropTypes.func,\n\tonUnHover: PropTypes.func,\n\n\tdefaultClassName: PropTypes.string,\n\n\tr: PropTypes.number.isRequired,\n\tedgeFill: PropTypes.string.isRequired,\n\tedgeStroke: PropTypes.string.isRequired,\n\tedgeStrokeWidth: PropTypes.number.isRequired,\n\twithEdge: PropTypes.bool.isRequired,\n\tchildren: PropTypes.func.isRequired,\n\ttolerance: PropTypes.number.isRequired,\n\tselected: PropTypes.bool.isRequired,\n};\n\nStraightLine.defaultProps = {\n\tonEdge1Drag: noop,\n\tonEdge2Drag: noop,\n\tonDragStart: noop,\n\tonDrag: noop,\n\tonDragComplete: noop,\n\n\tedgeStrokeWidth: 3,\n\tedgeStroke: \"#000000\",\n\tedgeFill: \"#FFFFFF\",\n\tr: 10,\n\twithEdge: false,\n\tstrokeWidth: 1,\n\tstrokeDasharray: \"Solid\",\n\tchildren: noop,\n\ttolerance: 7,\n\tselected: false,\n};\n\nexport default StraightLine;\n"]},"metadata":{},"sourceType":"script"}