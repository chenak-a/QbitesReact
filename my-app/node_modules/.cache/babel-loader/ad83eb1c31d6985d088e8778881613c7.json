{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _GenericComponent = require(\"../GenericComponent\");\n\nvar _GenericComponent2 = _interopRequireDefault(_GenericComponent);\n\nvar _d3Array = require(\"d3-array\");\n\nvar _utils = require(\"../utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar HoverTooltip = function (_Component) {\n  _inherits(HoverTooltip, _Component);\n\n  function HoverTooltip(props) {\n    _classCallCheck(this, HoverTooltip);\n\n    var _this = _possibleConstructorReturn(this, (HoverTooltip.__proto__ || Object.getPrototypeOf(HoverTooltip)).call(this, props));\n\n    _this.renderSVG = _this.renderSVG.bind(_this);\n    _this.drawOnCanvas = _this.drawOnCanvas.bind(_this);\n    return _this;\n  }\n\n  _createClass(HoverTooltip, [{\n    key: \"drawOnCanvas\",\n    value: function drawOnCanvas(ctx, moreProps) {\n      var pointer = helper(this.props, moreProps, ctx);\n      var height = moreProps.height;\n      if ((0, _utils.isNotDefined)(pointer)) return null;\n\n      _drawOnCanvas(ctx, this.props, this.context, pointer, height, moreProps);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _react2.default.createElement(_GenericComponent2.default, {\n        svgDraw: this.renderSVG,\n        canvasDraw: this.drawOnCanvas,\n        drawOn: [\"mousemove\", \"pan\"\n        /* , \"mouseleave\" */\n        ]\n      });\n    }\n  }, {\n    key: \"renderSVG\",\n    value: function renderSVG(moreProps) {\n      var pointer = helper(this.props, moreProps);\n      if ((0, _utils.isNotDefined)(pointer)) return null;\n      var _props = this.props,\n          bgFill = _props.bgFill,\n          bgOpacity = _props.bgOpacity,\n          backgroundShapeSVG = _props.backgroundShapeSVG,\n          tooltipSVG = _props.tooltipSVG;\n      var _props2 = this.props,\n          bgheight = _props2.bgheight,\n          bgwidth = _props2.bgwidth;\n      var height = moreProps.height;\n      var x = pointer.x,\n          y = pointer.y,\n          content = pointer.content,\n          centerX = pointer.centerX,\n          pointWidth = pointer.pointWidth,\n          bgSize = pointer.bgSize;\n      var bgShape = (0, _utils.isDefined)(bgwidth) && (0, _utils.isDefined)(bgheight) ? {\n        width: bgwidth,\n        height: bgheight\n      } : bgSize;\n      return _react2.default.createElement(\"g\", null, _react2.default.createElement(\"rect\", {\n        x: centerX - pointWidth / 2,\n        y: 0,\n        width: pointWidth,\n        height: height,\n        fill: bgFill,\n        opacity: bgOpacity\n      }), _react2.default.createElement(\"g\", {\n        className: \"react-stockcharts-tooltip-content\",\n        transform: \"translate(\" + x + \", \" + y + \")\"\n      }, backgroundShapeSVG(this.props, bgShape), tooltipSVG(this.props, content)));\n    }\n  }]);\n\n  return HoverTooltip;\n}(_react.Component);\n\nHoverTooltip.propTypes = {\n  chartId: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  yAccessor: _propTypes2.default.func,\n  tooltipSVG: _propTypes2.default.func,\n  backgroundShapeSVG: _propTypes2.default.func,\n  bgwidth: _propTypes2.default.number,\n  bgheight: _propTypes2.default.number,\n  bgFill: _propTypes2.default.string.isRequired,\n  bgOpacity: _propTypes2.default.number.isRequired,\n  tooltipContent: _propTypes2.default.func.isRequired,\n  origin: _propTypes2.default.oneOfType([_propTypes2.default.array, _propTypes2.default.func]).isRequired,\n  fontFamily: _propTypes2.default.string,\n  fontSize: _propTypes2.default.number\n};\nHoverTooltip.contextTypes = {\n  margin: _propTypes2.default.object.isRequired,\n  ratio: _propTypes2.default.number.isRequired\n};\nHoverTooltip.defaultProps = {\n  // bgwidth: 150,\n  // bgheight: 50,\n  tooltipSVG: tooltipSVG,\n  tooltipCanvas: tooltipCanvas,\n  origin: origin,\n  fill: \"#D4E2FD\",\n  bgFill: \"#D4E2FD\",\n  bgOpacity: 0.5,\n  stroke: \"#9B9BFF\",\n  fontFill: \"#000000\",\n  opacity: 0.8,\n  backgroundShapeSVG: backgroundShapeSVG,\n  backgroundShapeCanvas: backgroundShapeCanvas,\n  fontFamily: \"Helvetica Neue, Helvetica, Arial, sans-serif\",\n  fontSize: 12\n};\nvar PADDING = 5;\nvar X = 10;\nvar Y = 10;\n/* eslint-disable react/prop-types */\n\nfunction backgroundShapeSVG(_ref, _ref2) {\n  var fill = _ref.fill,\n      stroke = _ref.stroke,\n      opacity = _ref.opacity;\n  var height = _ref2.height,\n      width = _ref2.width;\n  return _react2.default.createElement(\"rect\", {\n    height: height,\n    width: width,\n    fill: fill,\n    opacity: opacity,\n    stroke: stroke\n  });\n}\n\nfunction tooltipSVG(_ref3, content) {\n  var fontFamily = _ref3.fontFamily,\n      fontSize = _ref3.fontSize,\n      fontFill = _ref3.fontFill;\n  var tspans = [];\n  var startY = Y + fontSize * 0.9;\n\n  for (var i = 0; i < content.y.length; i++) {\n    var y = content.y[i];\n    var textY = startY + fontSize * (i + 1);\n    tspans.push(_react2.default.createElement(\"tspan\", {\n      key: \"L-\" + i,\n      x: X,\n      y: textY,\n      fill: y.stroke\n    }, y.label));\n    tspans.push(_react2.default.createElement(\"tspan\", {\n      key: i\n    }, \": \"));\n    tspans.push(_react2.default.createElement(\"tspan\", {\n      key: \"V-\" + i\n    }, y.value));\n  }\n\n  return _react2.default.createElement(\"text\", {\n    fontFamily: fontFamily,\n    fontSize: fontSize,\n    fill: fontFill\n  }, _react2.default.createElement(\"tspan\", {\n    x: X,\n    y: startY\n  }, content.x), tspans);\n}\n/* eslint-enable react/prop-types */\n\n\nfunction backgroundShapeCanvas(props, _ref4, ctx) {\n  var width = _ref4.width,\n      height = _ref4.height;\n  var fill = props.fill,\n      stroke = props.stroke,\n      opacity = props.opacity;\n  ctx.fillStyle = (0, _utils.hexToRGBA)(fill, opacity);\n  ctx.strokeStyle = stroke;\n  ctx.beginPath();\n  ctx.rect(0, 0, width, height);\n  ctx.fill();\n  ctx.stroke();\n}\n\nfunction tooltipCanvas(_ref5, content, ctx) {\n  var fontFamily = _ref5.fontFamily,\n      fontSize = _ref5.fontSize,\n      fontFill = _ref5.fontFill;\n  var startY = Y + fontSize * 0.9;\n  ctx.font = fontSize + \"px \" + fontFamily;\n  ctx.fillStyle = fontFill;\n  ctx.textAlign = \"left\";\n  ctx.fillText(content.x, X, startY);\n\n  for (var i = 0; i < content.y.length; i++) {\n    var y = content.y[i];\n    var textY = startY + fontSize * (i + 1);\n    ctx.fillStyle = y.stroke || fontFill;\n    ctx.fillText(y.label, X, textY);\n    ctx.fillStyle = fontFill;\n    ctx.fillText(\": \" + y.value, X + ctx.measureText(y.label).width, textY);\n  }\n}\n\nfunction _drawOnCanvas(ctx, props, context, pointer, height) {\n  var margin = context.margin,\n      ratio = context.ratio;\n  var bgFill = props.bgFill,\n      bgOpacity = props.bgOpacity;\n  var backgroundShapeCanvas = props.backgroundShapeCanvas,\n      tooltipCanvas = props.tooltipCanvas;\n  var originX = 0.5 * ratio + margin.left;\n  var originY = 0.5 * ratio + margin.top;\n  ctx.save();\n  ctx.setTransform(1, 0, 0, 1, 0, 0);\n  ctx.scale(ratio, ratio);\n  ctx.translate(originX, originY);\n  var x = pointer.x,\n      y = pointer.y,\n      content = pointer.content,\n      centerX = pointer.centerX,\n      pointWidth = pointer.pointWidth,\n      bgSize = pointer.bgSize;\n  ctx.fillStyle = (0, _utils.hexToRGBA)(bgFill, bgOpacity);\n  ctx.beginPath();\n  ctx.rect(centerX - pointWidth / 2, 0, pointWidth, height);\n  ctx.fill();\n  ctx.translate(x, y);\n  backgroundShapeCanvas(props, bgSize, ctx);\n  tooltipCanvas(props, content, ctx);\n  ctx.restore();\n}\n\nfunction calculateTooltipSize(_ref6, content, ctx) {\n  var fontFamily = _ref6.fontFamily,\n      fontSize = _ref6.fontSize,\n      fontFill = _ref6.fontFill;\n\n  if ((0, _utils.isNotDefined)(ctx)) {\n    var canvas = document.createElement(\"canvas\");\n    ctx = canvas.getContext(\"2d\");\n  }\n\n  ctx.font = fontSize + \"px \" + fontFamily;\n  ctx.fillStyle = fontFill;\n  ctx.textAlign = \"left\";\n\n  var measureText = function measureText(str) {\n    return {\n      width: ctx.measureText(str).width,\n      height: fontSize\n    };\n  };\n\n  var _content$y$map$reduce = content.y.map(function (_ref7) {\n    var label = _ref7.label,\n        value = _ref7.value;\n    return measureText(label + \": \" + value);\n  }) // Sum all y and x sizes (begin with x label size)\n  .reduce(function (res, size) {\n    return sumSizes(res, size);\n  }, measureText(String(content.x))),\n      width = _content$y$map$reduce.width,\n      height = _content$y$map$reduce.height;\n\n  return {\n    width: width + 2 * X,\n    height: height + 2 * Y\n  };\n}\n\nfunction sumSizes() {\n  for (var _len = arguments.length, sizes = Array(_len), _key = 0; _key < _len; _key++) {\n    sizes[_key] = arguments[_key];\n  }\n\n  return {\n    width: Math.max.apply(Math, _toConsumableArray(sizes.map(function (size) {\n      return size.width;\n    }))),\n    height: (0, _d3Array.sum)(sizes, function (d) {\n      return d.height;\n    })\n  };\n}\n\nfunction normalizeX(x, bgSize, pointWidth, width) {\n  // return x - bgSize.width - pointWidth / 2 - PADDING * 2 < 0\n  return x < width / 2 ? x + pointWidth / 2 + PADDING : x - bgSize.width - pointWidth / 2 - PADDING;\n}\n\nfunction normalizeY(y, bgSize) {\n  return y - bgSize.height <= 0 ? y + PADDING : y - bgSize.height - PADDING;\n}\n\nfunction origin(props, moreProps, bgSize, pointWidth) {\n  var chartId = props.chartId,\n      yAccessor = props.yAccessor;\n  var mouseXY = moreProps.mouseXY,\n      xAccessor = moreProps.xAccessor,\n      currentItem = moreProps.currentItem,\n      xScale = moreProps.xScale,\n      chartConfig = moreProps.chartConfig,\n      width = moreProps.width;\n  var y = (0, _utils.last)(mouseXY);\n  var xValue = xAccessor(currentItem);\n  var x = Math.round(xScale(xValue));\n\n  if ((0, _utils.isDefined)(chartId) && (0, _utils.isDefined)(yAccessor) && (0, _utils.isDefined)(chartConfig) && (0, _utils.isDefined)(chartConfig.findIndex)) {\n    var yValue = yAccessor(currentItem);\n    var chartIndex = chartConfig.findIndex(function (x) {\n      return x.id === chartId;\n    });\n    y = Math.round(chartConfig[chartIndex].yScale(yValue));\n  }\n\n  x = normalizeX(x, bgSize, pointWidth, width);\n  y = normalizeY(y, bgSize);\n  return [x, y];\n}\n\nfunction helper(props, moreProps, ctx) {\n  var show = moreProps.show,\n      xScale = moreProps.xScale,\n      currentItem = moreProps.currentItem,\n      plotData = moreProps.plotData;\n  var origin = props.origin,\n      tooltipContent = props.tooltipContent;\n  var xAccessor = moreProps.xAccessor,\n      displayXAccessor = moreProps.displayXAccessor;\n  if (!show || (0, _utils.isNotDefined)(currentItem)) return;\n  var xValue = xAccessor(currentItem);\n  if (!show || (0, _utils.isNotDefined)(xValue)) return;\n  var content = tooltipContent({\n    currentItem: currentItem,\n    xAccessor: displayXAccessor\n  });\n  var centerX = xScale(xValue);\n  var pointWidth = Math.abs(xScale(xAccessor((0, _utils.last)(plotData))) - xScale(xAccessor((0, _utils.first)(plotData)))) / (plotData.length - 1);\n  var bgSize = calculateTooltipSize(props, content, ctx);\n\n  var _origin = origin(props, moreProps, bgSize, pointWidth),\n      _origin2 = _slicedToArray(_origin, 2),\n      x = _origin2[0],\n      y = _origin2[1];\n\n  return {\n    x: x,\n    y: y,\n    content: content,\n    centerX: centerX,\n    pointWidth: pointWidth,\n    bgSize: bgSize\n  };\n}\n\nexports.default = HoverTooltip;","map":{"version":3,"sources":["../../../src/lib/tooltip/HoverTooltip.js"],"names":["HoverTooltip","ctx","moreProps","pointer","helper","height","drawOnCanvas","bgFill","bgOpacity","backgroundShapeSVG","tooltipSVG","bgheight","bgwidth","x","y","content","centerX","pointWidth","bgSize","bgShape","width","chartId","yAccessor","tooltipContent","origin","fontFamily","fontSize","number","margin","ratio","isRequired","tooltipCanvas","fill","stroke","fontFill","opacity","backgroundShapeCanvas","PADDING","X","Y","tspans","startY","i","textY","label","value","props","context","originX","originY","canvas","document","measureText","sumSizes","String","sizes","size","d","mouseXY","xAccessor","currentItem","xScale","chartConfig","xValue","Math","yValue","chartIndex","normalizeX","normalizeY","show","plotData","displayXAccessor","calculateTooltipSize"],"mappings":"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","sourcesContent":["\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport GenericComponent from \"../GenericComponent\";\nimport { sum } from \"d3-array\";\n\nimport { first, last, isNotDefined, isDefined, hexToRGBA } from \"../utils\";\n\nclass HoverTooltip extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.renderSVG = this.renderSVG.bind(this);\n\t\tthis.drawOnCanvas = this.drawOnCanvas.bind(this);\n\t}\n\tdrawOnCanvas(ctx, moreProps) {\n\t\tconst pointer = helper(this.props, moreProps, ctx);\n\t\tconst { height } = moreProps;\n\n\t\tif (isNotDefined(pointer)) return null;\n\t\tdrawOnCanvas(ctx, this.props, this.context, pointer, height, moreProps);\n\t}\n\trender() {\n\t\treturn <GenericComponent\n\t\t\tsvgDraw={this.renderSVG}\n\t\t\tcanvasDraw={this.drawOnCanvas}\n\t\t\tdrawOn={[\"mousemove\", \"pan\"/* , \"mouseleave\" */]}\n\t\t/>;\n\t}\n\trenderSVG(moreProps) {\n\t\tconst pointer = helper(this.props, moreProps);\n\n\t\tif (isNotDefined(pointer)) return null;\n\n\t\tconst { bgFill, bgOpacity, backgroundShapeSVG, tooltipSVG } = this.props;\n\t\tconst { bgheight, bgwidth } = this.props;\n\t\tconst { height } = moreProps;\n\n\t\tconst { x, y, content, centerX, pointWidth, bgSize } = pointer;\n\n\t\tconst bgShape = isDefined(bgwidth) && isDefined(bgheight)\n\t\t\t? { width: bgwidth, height: bgheight }\n\t\t\t: bgSize;\n\n\t\treturn (\n\t\t\t<g>\n\t\t\t\t<rect x={centerX - pointWidth / 2}\n\t\t\t\t\ty={0}\n\t\t\t\t\twidth={pointWidth}\n\t\t\t\t\theight={height}\n\t\t\t\t\tfill={bgFill}\n\t\t\t\t\topacity={bgOpacity} />\n\t\t\t\t<g className=\"react-stockcharts-tooltip-content\" transform={`translate(${x}, ${y})`}>\n\t\t\t\t\t{backgroundShapeSVG(this.props, bgShape)}\n\t\t\t\t\t{tooltipSVG(this.props, content)}\n\t\t\t\t</g>\n\t\t\t</g>\n\t\t);\n\t}\n}\n\nHoverTooltip.propTypes = {\n\tchartId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\tyAccessor: PropTypes.func,\n\ttooltipSVG: PropTypes.func,\n\tbackgroundShapeSVG: PropTypes.func,\n\tbgwidth: PropTypes.number,\n\tbgheight: PropTypes.number,\n\tbgFill: PropTypes.string.isRequired,\n\tbgOpacity: PropTypes.number.isRequired,\n\ttooltipContent: PropTypes.func.isRequired,\n\torigin: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.func\n\t]).isRequired,\n\tfontFamily: PropTypes.string,\n\tfontSize: PropTypes.number,\n};\n\nHoverTooltip.contextTypes = {\n\tmargin: PropTypes.object.isRequired,\n\tratio: PropTypes.number.isRequired,\n};\n\nHoverTooltip.defaultProps = {\n\t// bgwidth: 150,\n\t// bgheight: 50,\n\ttooltipSVG: tooltipSVG,\n\ttooltipCanvas: tooltipCanvas,\n\torigin: origin,\n\tfill: \"#D4E2FD\",\n\tbgFill: \"#D4E2FD\",\n\tbgOpacity: 0.5,\n\tstroke: \"#9B9BFF\",\n\tfontFill: \"#000000\",\n\topacity: 0.8,\n\tbackgroundShapeSVG: backgroundShapeSVG,\n\tbackgroundShapeCanvas: backgroundShapeCanvas,\n\tfontFamily: \"Helvetica Neue, Helvetica, Arial, sans-serif\",\n\tfontSize: 12,\n};\n\nconst PADDING = 5;\nconst X = 10;\nconst Y = 10;\n\n\n/* eslint-disable react/prop-types */\nfunction backgroundShapeSVG({ fill, stroke, opacity }, { height, width }) {\n\treturn <rect\n\t\theight={height}\n\t\twidth={width}\n\t\tfill={fill}\n\t\topacity={opacity}\n\t\tstroke={stroke} />;\n}\n\nfunction tooltipSVG({ fontFamily, fontSize, fontFill }, content) {\n\tconst tspans = [];\n\tconst startY = Y + fontSize * 0.9;\n\n\tfor (let i = 0; i < content.y.length; i++) {\n\t\tconst y = content.y[i];\n\t\tconst textY = startY + (fontSize * (i + 1));\n\n\t\ttspans.push(<tspan key={`L-${i}`} x={X} y={textY} fill={y.stroke}>{y.label}</tspan>);\n\t\ttspans.push(<tspan key={i}>: </tspan>);\n\t\ttspans.push(<tspan key={`V-${i}`}>{y.value}</tspan>);\n\t}\n\treturn <text fontFamily={fontFamily} fontSize={fontSize} fill={fontFill}>\n\t\t<tspan x={X} y={startY}>{content.x}</tspan>\n\t\t{tspans}\n\t</text>;\n}\n/* eslint-enable react/prop-types */\n\nfunction backgroundShapeCanvas(props, { width, height }, ctx) {\n\tconst { fill, stroke, opacity } = props;\n\n\tctx.fillStyle = hexToRGBA(fill, opacity);\n\tctx.strokeStyle = stroke;\n\tctx.beginPath();\n\tctx.rect(0, 0, width, height);\n\tctx.fill();\n\tctx.stroke();\n}\n\nfunction tooltipCanvas({ fontFamily, fontSize, fontFill }, content, ctx) {\n\tconst startY = Y + fontSize * 0.9;\n\tctx.font = `${fontSize}px ${fontFamily}`;\n\tctx.fillStyle = fontFill;\n\tctx.textAlign = \"left\";\n\tctx.fillText(content.x, X, startY);\n\n\tfor (let i = 0; i < content.y.length; i++) {\n\t\tconst y = content.y[i];\n\t\tconst textY = startY + (fontSize * (i + 1));\n\t\tctx.fillStyle = y.stroke || fontFill;\n\t\tctx.fillText(y.label, X, textY);\n\n\t\tctx.fillStyle = fontFill;\n\t\tctx.fillText(\": \" + y.value, X + ctx.measureText(y.label).width, textY);\n\t}\n}\n\nfunction drawOnCanvas(ctx, props, context, pointer, height) {\n\n\tconst { margin, ratio } = context;\n\tconst { bgFill, bgOpacity } = props;\n\tconst { backgroundShapeCanvas, tooltipCanvas } = props;\n\n\tconst originX = 0.5 * ratio + margin.left;\n\tconst originY = 0.5 * ratio + margin.top;\n\n\tctx.save();\n\n\tctx.setTransform(1, 0, 0, 1, 0, 0);\n\tctx.scale(ratio, ratio);\n\n\tctx.translate(originX, originY);\n\n\tconst { x, y, content, centerX, pointWidth, bgSize } = pointer;\n\n\tctx.fillStyle = hexToRGBA(bgFill, bgOpacity);\n\tctx.beginPath();\n\tctx.rect(centerX - pointWidth / 2, 0, pointWidth, height);\n\tctx.fill();\n\n\tctx.translate(x, y);\n\tbackgroundShapeCanvas(props, bgSize, ctx);\n\ttooltipCanvas(props, content, ctx);\n\n\tctx.restore();\n}\n\nfunction calculateTooltipSize({ fontFamily, fontSize, fontFill }, content, ctx) {\n\tif (isNotDefined(ctx)) {\n\t\tconst canvas = document.createElement(\"canvas\");\n\t\tctx = canvas.getContext(\"2d\");\n\t}\n\n\tctx.font = `${fontSize}px ${fontFamily}`;\n\tctx.fillStyle = fontFill;\n\tctx.textAlign = \"left\";\n\n\tconst measureText = str => ({\n\t\twidth: ctx.measureText(str).width,\n\t\theight: fontSize,\n\t});\n\n\tconst { width, height } = content.y\n\t\t.map(({ label, value }) => measureText(`${label}: ${value}`))\n\t\t// Sum all y and x sizes (begin with x label size)\n\t\t.reduce((res, size) => sumSizes(res, size), measureText(String(content.x)))\n\t;\n\n\treturn {\n\t\twidth: width + 2 * X,\n\t\theight: height + 2 * Y\n\t};\n}\n\nfunction sumSizes(...sizes) {\n\treturn {\n\t\twidth: Math.max(...sizes.map(size => size.width)),\n\t\theight: sum(sizes, d => d.height),\n\t};\n}\n\nfunction normalizeX(x, bgSize, pointWidth, width) {\n\t// return x - bgSize.width - pointWidth / 2 - PADDING * 2 < 0\n\treturn x < width / 2\n\t\t? x + pointWidth / 2 + PADDING\n\t\t: x - bgSize.width - pointWidth / 2 - PADDING;\n}\n\nfunction normalizeY(y, bgSize) {\n\treturn y - bgSize.height <= 0\n\t\t? y + PADDING\n\t\t: y - bgSize.height - PADDING;\n}\n\nfunction origin(props, moreProps, bgSize, pointWidth) {\n\tconst { chartId, yAccessor } = props;\n\tconst { mouseXY, xAccessor, currentItem, xScale, chartConfig, width } = moreProps;\n\tlet y = last(mouseXY);\n\n\tconst xValue = xAccessor(currentItem);\n\tlet x = Math.round(xScale(xValue));\n\n\tif (isDefined(chartId) && isDefined(yAccessor)\n\t\t\t&& isDefined(chartConfig) && isDefined(chartConfig.findIndex)) {\n\t\tconst yValue = yAccessor(currentItem);\n\t\tconst chartIndex = chartConfig.findIndex(x => x.id === chartId);\n\n\t\ty = Math.round(chartConfig[chartIndex].yScale(yValue));\n\t}\n\n\tx = normalizeX(x, bgSize, pointWidth, width);\n\ty = normalizeY(y, bgSize);\n\n\treturn [x, y];\n}\n\nfunction helper(props, moreProps, ctx) {\n\tconst { show, xScale, currentItem, plotData } = moreProps;\n\tconst { origin, tooltipContent } = props;\n\tconst { xAccessor, displayXAccessor } = moreProps;\n\n\tif (!show || isNotDefined(currentItem)) return;\n\n\tconst xValue = xAccessor(currentItem);\n\n\tif (!show || isNotDefined(xValue)) return;\n\n\tconst content = tooltipContent({ currentItem, xAccessor: displayXAccessor });\n\tconst centerX = xScale(xValue);\n\tconst pointWidth = Math.abs(xScale(xAccessor(last(plotData))) - xScale(xAccessor(first(plotData)))) / (plotData.length - 1);\n\n\tconst bgSize = calculateTooltipSize(props, content, ctx);\n\n\tconst [x, y] = origin(props, moreProps, bgSize, pointWidth);\n\n\treturn { x, y, content, centerX, pointWidth, bgSize };\n}\n\nexport default HoverTooltip;\n"]},"metadata":{},"sourceType":"script"}