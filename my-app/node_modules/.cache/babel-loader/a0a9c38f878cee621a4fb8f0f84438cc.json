{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _d3Shape = require(\"d3-shape\");\n\nvar _GenericChartComponent = require(\"../GenericChartComponent\");\n\nvar _GenericChartComponent2 = _interopRequireDefault(_GenericChartComponent);\n\nvar _GenericComponent = require(\"../GenericComponent\");\n\nvar _utils = require(\"../utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar AreaOnlySeries = function (_Component) {\n  _inherits(AreaOnlySeries, _Component);\n\n  function AreaOnlySeries(props) {\n    _classCallCheck(this, AreaOnlySeries);\n\n    var _this = _possibleConstructorReturn(this, (AreaOnlySeries.__proto__ || Object.getPrototypeOf(AreaOnlySeries)).call(this, props));\n\n    _this.renderSVG = _this.renderSVG.bind(_this);\n    _this.drawOnCanvas = _this.drawOnCanvas.bind(_this);\n    return _this;\n  }\n\n  _createClass(AreaOnlySeries, [{\n    key: \"drawOnCanvas\",\n    value: function drawOnCanvas(ctx, moreProps) {\n      var _props = this.props,\n          yAccessor = _props.yAccessor,\n          defined = _props.defined,\n          base = _props.base,\n          canvasGradient = _props.canvasGradient;\n      var _props2 = this.props,\n          fill = _props2.fill,\n          stroke = _props2.stroke,\n          opacity = _props2.opacity,\n          interpolation = _props2.interpolation,\n          canvasClip = _props2.canvasClip;\n      var xScale = moreProps.xScale,\n          yScale = moreProps.chartConfig.yScale,\n          plotData = moreProps.plotData,\n          xAccessor = moreProps.xAccessor;\n\n      if (canvasClip) {\n        ctx.save();\n        canvasClip(ctx, moreProps);\n      }\n\n      if (canvasGradient != null) {\n        ctx.fillStyle = canvasGradient(moreProps, ctx);\n      } else {\n        ctx.fillStyle = (0, _utils.hexToRGBA)(fill, opacity);\n      }\n\n      ctx.strokeStyle = stroke;\n      ctx.beginPath();\n      var newBase = (0, _utils.functor)(base);\n      var areaSeries = (0, _d3Shape.area)().defined(function (d) {\n        return defined(yAccessor(d));\n      }).x(function (d) {\n        return Math.round(xScale(xAccessor(d)));\n      }).y0(function (d) {\n        return newBase(yScale, d, moreProps);\n      }).y1(function (d) {\n        return Math.round(yScale(yAccessor(d)));\n      }).context(ctx);\n\n      if ((0, _utils.isDefined)(interpolation)) {\n        areaSeries.curve(interpolation);\n      }\n\n      areaSeries(plotData);\n      ctx.fill();\n\n      if (canvasClip) {\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"renderSVG\",\n    value: function renderSVG(moreProps) {\n      var _props3 = this.props,\n          yAccessor = _props3.yAccessor,\n          defined = _props3.defined,\n          base = _props3.base,\n          style = _props3.style;\n      var _props4 = this.props,\n          stroke = _props4.stroke,\n          fill = _props4.fill,\n          className = _props4.className,\n          opacity = _props4.opacity,\n          interpolation = _props4.interpolation;\n      var xScale = moreProps.xScale,\n          yScale = moreProps.chartConfig.yScale,\n          plotData = moreProps.plotData,\n          xAccessor = moreProps.xAccessor;\n      var newBase = (0, _utils.functor)(base);\n      var areaSeries = (0, _d3Shape.area)().defined(function (d) {\n        return defined(yAccessor(d));\n      }).x(function (d) {\n        return Math.round(xScale(xAccessor(d)));\n      }).y0(function (d) {\n        return newBase(yScale, d, moreProps);\n      }).y1(function (d) {\n        return Math.round(yScale(yAccessor(d)));\n      });\n\n      if ((0, _utils.isDefined)(interpolation)) {\n        areaSeries.curve(interpolation);\n      }\n\n      var d = areaSeries(plotData);\n      var newClassName = className.concat((0, _utils.isDefined)(stroke) ? \"\" : \" line-stroke\");\n      return _react2.default.createElement(\"path\", {\n        style: style,\n        d: d,\n        stroke: stroke,\n        fill: (0, _utils.hexToRGBA)(fill, opacity),\n        className: newClassName\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _react2.default.createElement(_GenericChartComponent2.default, {\n        svgDraw: this.renderSVG,\n        canvasDraw: this.drawOnCanvas,\n        canvasToDraw: _GenericComponent.getAxisCanvas,\n        drawOn: [\"pan\"]\n      });\n    }\n  }]);\n\n  return AreaOnlySeries;\n}(_react.Component);\n\nAreaOnlySeries.propTypes = {\n  className: _propTypes2.default.string,\n  yAccessor: _propTypes2.default.func.isRequired,\n  stroke: _propTypes2.default.string,\n  fill: _propTypes2.default.string,\n  opacity: _propTypes2.default.number,\n  defined: _propTypes2.default.func,\n  base: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.number]),\n  interpolation: _propTypes2.default.func,\n  canvasClip: _propTypes2.default.func,\n  style: _propTypes2.default.object,\n  canvasGradient: _propTypes2.default.func\n};\nAreaOnlySeries.defaultProps = {\n  className: \"line \",\n  fill: \"none\",\n  opacity: 1,\n  defined: function defined(d) {\n    return !isNaN(d);\n  },\n  base: function base(yScale\n  /* , d, moreProps */\n  ) {\n    return (0, _utils.first)(yScale.range());\n  }\n};\nexports.default = AreaOnlySeries;","map":{"version":3,"sources":["../../../src/lib/series/AreaOnlySeries.js"],"names":["AreaOnlySeries","ctx","moreProps","yAccessor","defined","base","canvasGradient","fill","stroke","opacity","interpolation","canvasClip","xScale","yScale","plotData","xAccessor","newBase","areaSeries","Math","style","className","d","newClassName","func","isNaN"],"mappings":"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","sourcesContent":["\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { area as d3Area } from \"d3-shape\";\n\nimport GenericChartComponent from \"../GenericChartComponent\";\nimport { getAxisCanvas } from \"../GenericComponent\";\n\nimport { hexToRGBA, isDefined, first, functor } from \"../utils\";\n\nclass AreaOnlySeries extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.renderSVG = this.renderSVG.bind(this);\n\t\tthis.drawOnCanvas = this.drawOnCanvas.bind(this);\n\t}\n\tdrawOnCanvas(ctx, moreProps) {\n\t\tconst { yAccessor, defined, base, canvasGradient } = this.props;\n\t\tconst { fill, stroke, opacity, interpolation, canvasClip } = this.props;\n\n\t\tconst { xScale, chartConfig: { yScale }, plotData, xAccessor } = moreProps;\n\n\t\tif (canvasClip) {\n\t\t\tctx.save();\n\t\t\tcanvasClip(ctx, moreProps);\n\t\t}\n\n\t\tif (canvasGradient != null) {\n\t\t\tctx.fillStyle = canvasGradient(moreProps, ctx);\n\t\t} else {\n\t\t\tctx.fillStyle = hexToRGBA(fill, opacity);\n\t\t}\n\t\tctx.strokeStyle = stroke;\n\n\t\tctx.beginPath();\n\t\tconst newBase = functor(base);\n\t\tconst areaSeries = d3Area()\n\t\t\t.defined(d => defined(yAccessor(d)))\n\t\t\t.x((d) => Math.round(xScale(xAccessor(d))))\n\t\t\t.y0((d) => newBase(yScale, d, moreProps))\n\t\t\t.y1((d) => Math.round(yScale(yAccessor(d))))\n\t\t\t.context(ctx);\n\n\t\tif (isDefined(interpolation)) {\n\t\t\tareaSeries.curve(interpolation);\n\t\t}\n\t\tareaSeries(plotData);\n\t\tctx.fill();\n\n\t\tif (canvasClip) {\n\t\t\tctx.restore();\n\t\t}\n\t}\n\trenderSVG(moreProps) {\n\t\tconst { yAccessor, defined, base, style } = this.props;\n\t\tconst { stroke, fill, className, opacity, interpolation } = this.props;\n\n\t\tconst { xScale, chartConfig: { yScale }, plotData, xAccessor } = moreProps;\n\n\t\tconst newBase = functor(base);\n\t\tconst areaSeries = d3Area()\n\t\t\t.defined(d => defined(yAccessor(d)))\n\t\t\t.x((d) => Math.round(xScale(xAccessor(d))))\n\t\t\t.y0((d) => newBase(yScale, d, moreProps))\n\t\t\t.y1((d) => Math.round(yScale(yAccessor(d))));\n\n\t\tif (isDefined(interpolation)) {\n\t\t\tareaSeries.curve(interpolation);\n\t\t}\n\n\t\tconst d = areaSeries(plotData);\n\t\tconst newClassName = className.concat(isDefined(stroke) ? \"\" : \" line-stroke\");\n\t\treturn (\n\t\t\t<path\n\t\t\t\tstyle={style}\n\t\t\t\td={d}\n\t\t\t\tstroke={stroke}\n\t\t\t\tfill={hexToRGBA(fill, opacity)}\n\t\t\t\tclassName={newClassName}\n\n\t\t\t/>\n\t\t);\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<GenericChartComponent\n\t\t\t\tsvgDraw={this.renderSVG}\n\t\t\t\tcanvasDraw={this.drawOnCanvas}\n\t\t\t\tcanvasToDraw={getAxisCanvas}\n\t\t\t\tdrawOn={[\"pan\"]}\n\t\t\t/>\n\t\t);\n\t}\n}\n\nAreaOnlySeries.propTypes = {\n\tclassName: PropTypes.string,\n\tyAccessor: PropTypes.func.isRequired,\n\tstroke: PropTypes.string,\n\tfill: PropTypes.string,\n\topacity: PropTypes.number,\n\tdefined: PropTypes.func,\n\tbase: PropTypes.oneOfType([\n\t\tPropTypes.func, PropTypes.number\n\t]),\n\tinterpolation: PropTypes.func,\n\tcanvasClip: PropTypes.func,\n\tstyle: PropTypes.object,\n\tcanvasGradient: PropTypes.func,\n};\n\nAreaOnlySeries.defaultProps = {\n\tclassName: \"line \",\n\tfill: \"none\",\n\topacity: 1,\n\tdefined: d => !isNaN(d),\n\tbase: (yScale /* , d, moreProps */) => first(yScale.range()),\n};\n\nexport default AreaOnlySeries;\n"]},"metadata":{},"sourceType":"script"}