{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _utils = require(\"../utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction Triangle(props) {\n  var className = props.className,\n      strokeWidth = props.strokeWidth,\n      opacity = props.opacity,\n      point = props.point,\n      width = props.width;\n  var rotation = getRotationInDegrees(props, point);\n  if (rotation == null) return null;\n  var fillColor = getFillColor(props);\n  var strokeColor = getStrokeColor(props);\n  var w = (0, _utils.functor)(width)(point.datum);\n  var x = point.x,\n      y = point.y;\n\n  var _getTrianglePoints = getTrianglePoints(w),\n      innerOpposite = _getTrianglePoints.innerOpposite,\n      innerHypotenuse = _getTrianglePoints.innerHypotenuse;\n\n  var points = \"\\n\\t\\t\" + x + \" \" + (y - innerHypotenuse) + \",\\n\\t\\t\" + (x + w / 2) + \" \" + (y + innerOpposite) + \",\\n\\t\\t\" + (x - w / 2) + \" \" + (y + innerOpposite) + \"\\n\\t\";\n  return _react2.default.createElement(\"polygon\", {\n    className: className,\n    points: points,\n    stroke: strokeColor,\n    strokeWidth: strokeWidth,\n    fillOpacity: opacity,\n    fill: fillColor,\n    transform: rotation !== 0 ? \"rotate(\" + rotation + \", \" + x + \", \" + y + \")\" : null\n  });\n}\n\nTriangle.propTypes = {\n  direction: _propTypes2.default.oneOfType([_propTypes2.default.oneOf([\"top\", \"bottom\", \"left\", \"right\", \"hide\"]), _propTypes2.default.func]).isRequired,\n  stroke: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func]).isRequired,\n  fill: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func]).isRequired,\n  opacity: _propTypes2.default.number.isRequired,\n  point: _propTypes2.default.shape({\n    x: _propTypes2.default.number.isRequired,\n    y: _propTypes2.default.number.isRequired,\n    datum: _propTypes2.default.object.isRequired\n  }).isRequired,\n  className: _propTypes2.default.string,\n  strokeWidth: _propTypes2.default.number,\n  width: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.func]).isRequired\n};\nTriangle.defaultProps = {\n  direction: \"top\",\n  stroke: \"#4682B4\",\n  strokeWidth: 1,\n  opacity: 0.5,\n  fill: \"#4682B4\",\n  className: \"react-stockcharts-marker-triangle\"\n};\n\nTriangle.drawOnCanvas = function (props, point, ctx) {\n  var stroke = props.stroke,\n      fill = props.fill,\n      opacity = props.opacity,\n      strokeWidth = props.strokeWidth;\n  ctx.strokeStyle = stroke;\n  ctx.lineWidth = strokeWidth;\n\n  if (fill !== \"none\") {\n    ctx.fillStyle = (0, _utils.hexToRGBA)(fill, opacity);\n  }\n\n  Triangle.drawOnCanvasWithNoStateChange(props, point, ctx);\n};\n\nTriangle.drawOnCanvasWithNoStateChange = function (props, point, ctx) {\n  var width = props.width;\n  var w = (0, _utils.functor)(width)(point.datum);\n  var x = point.x,\n      y = point.y;\n\n  var _getTrianglePoints2 = getTrianglePoints(w),\n      innerOpposite = _getTrianglePoints2.innerOpposite,\n      innerHypotenuse = _getTrianglePoints2.innerHypotenuse;\n\n  var rotationDeg = getRotationInDegrees(props, point);\n  ctx.beginPath();\n  ctx.moveTo(x, y - innerHypotenuse);\n  ctx.lineTo(x + w / 2, y + innerOpposite);\n  ctx.lineTo(x - w / 2, y + innerOpposite);\n  ctx.stroke(); // TODO: rotation does not work\n  // example: https://gist.github.com/geoffb/6392450\n\n  if (rotationDeg !== null && rotationDeg !== 0) {\n    ctx.save();\n    ctx.translate(x, y);\n    ctx.rotate(rotationDeg * Math.PI / 180); // 45 degrees\n\n    ctx.fill();\n    ctx.restore();\n  }\n\n  ctx.fill();\n};\n\nexports.default = Triangle;\n\nfunction getTrianglePoints(width) {\n  var innerHypotenuse = width / 2 * (1 / Math.cos(30 * Math.PI / 180));\n  var innerOpposite = width / 2 * (1 / Math.tan(60 * Math.PI / 180));\n  return {\n    innerOpposite: innerOpposite,\n    innerHypotenuse: innerHypotenuse\n  };\n}\n\nfunction getFillColor(props) {\n  var fill = props.fill,\n      point = props.point;\n  return fill instanceof Function ? fill(point.datum) : fill;\n}\n\nfunction getStrokeColor(props) {\n  var stroke = props.stroke,\n      point = props.point;\n  return stroke instanceof Function ? stroke(point.datum) : stroke;\n}\n\nfunction getRotationInDegrees(props, point) {\n  var direction = props.direction;\n  var directionVal = direction instanceof Function ? direction(point.datum) : direction;\n  if (directionVal === \"hide\") return null;\n  var rotate = 0;\n\n  switch (directionVal) {\n    case \"bottom\":\n      rotate = 180;\n      break;\n\n    case \"left\":\n      rotate = -90;\n      break;\n\n    case \"right\":\n      rotate = 90;\n      break;\n  }\n\n  return rotate;\n}","map":{"version":3,"sources":["../../../src/lib/series/TriangleMarker.js"],"names":["className","strokeWidth","opacity","point","width","props","rotation","getRotationInDegrees","fillColor","getFillColor","strokeColor","getStrokeColor","w","x","y","innerOpposite","innerHypotenuse","getTrianglePoints","points","Triangle","direction","stroke","fill","datum","isRequired","ctx","rotationDeg","Math","directionVal","rotate"],"mappings":";;;;;;AAAA,IAAA,MAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;;;AACA,IAAA,UAAA,GAAA,OAAA,CAAA,YAAA,CAAA;;;;AACA,IAAA,MAAA,GAAA,OAAA,CAAA,UAAA,CAAA;;;;;;;;AAEA,SAAA,QAAA,CAAA,KAAA,EAAyB;AAAA,MAGvBA,SAHuB,GAKpBK,KALoB,CAAA,SAAA;AAAA,MAGZJ,WAHY,GAKpBI,KALoB,CAAA,WAAA;AAAA,MAIvBH,OAJuB,GAKpBG,KALoB,CAAA,OAAA;AAAA,MAIdF,KAJc,GAKpBE,KALoB,CAAA,KAAA;AAAA,MAIPD,KAJO,GAKpBC,KALoB,CAAA,KAAA;AAOxB,MAAMC,QAAAA,GAAWC,oBAAAA,CAAAA,KAAAA,EAAjB,KAAiBA,CAAjB;AACA,MAAID,QAAAA,IAAJ,IAAA,EAAsB,OAAA,IAAA;AAEtB,MAAME,SAAAA,GAAYC,YAAAA,CAAlB,KAAkBA,CAAlB;AACA,MAAMC,WAAAA,GAAcC,cAAAA,CAApB,KAAoBA,CAApB;AAEA,MAAMC,CAAAA,GAAI,CAAA,GAAA,MAAA,CAAA,OAAA,EAAA,KAAA,EAAeT,KAAAA,CAAzB,KAAU,CAAV;AAbwB,MAchBU,CAdgB,GAcPV,KAdO,CAAA,CAAA;AAAA,MAcbW,CAda,GAcPX,KAdO,CAAA,CAAA;;AAAA,MAAA,kBAAA,GAemBc,iBAAAA,CAfnB,CAemBA,CAfnB;AAAA,MAehBF,aAfgB,GAAA,kBAAA,CAAA,aAAA;AAAA,MAeDC,eAfC,GAAA,kBAAA,CAAA,eAAA;;AAgBxB,MAAME,MAAAA,GAAAA,WAAAA,CAAAA,GAAAA,GAAAA,IACEJ,CAAAA,GADFI,eAAAA,IAAAA,SAAAA,IAEHL,CAAAA,GAAKD,CAAAA,GAFFM,CAAAA,IAAAA,GAAAA,IAEYJ,CAAAA,GAFZI,aAAAA,IAAAA,SAAAA,IAGHL,CAAAA,GAAKD,CAAAA,GAHFM,CAAAA,IAAAA,GAAAA,IAGYJ,CAAAA,GAHZI,aAAAA,IAAN,MAAA;AAMA,SACC,OAAA,CAAA,OAAA,CAAA,aAAA,CAAA,SAAA,EAAA;AACC,IAAA,SAAA,EADD,SAAA;AAEC,IAAA,MAAA,EAFD,MAAA;AAGC,IAAA,MAAA,EAHD,WAAA;AAIC,IAAA,WAAA,EAJD,WAAA;AAKC,IAAA,WAAA,EALD,OAAA;AAMC,IAAA,IAAA,EAND,SAAA;AAOC,IAAA,SAAA,EAAWZ,QAAAA,KAAAA,CAAAA,GAAAA,YAAAA,QAAAA,GAAAA,IAAAA,GAAAA,CAAAA,GAAAA,IAAAA,GAAAA,CAAAA,GAAAA,GAAAA,GAA2D;AAPvE,GAAA,CADD;AAWA;;AACDa,QAAAA,CAAAA,SAAAA,GAAqB;AACpBC,EAAAA,SAAAA,EAAW,WAAA,CAAA,OAAA,CAAA,SAAA,CAAqB,CAC/B,WAAA,CAAA,OAAA,CAAA,KAAA,CAAiB,CAAA,KAAA,EAAA,QAAA,EAAA,MAAA,EAAA,OAAA,EADc,MACd,CAAjB,CAD+B,EAO/B,WAAA,CAAA,OAAA,CAPU,IAAqB,CAArB,EADS,UAAA;AAUpBC,EAAAA,MAAAA,EAAQ,WAAA,CAAA,OAAA,CAAA,SAAA,CAAqB,CAC5B,WAAA,CAAA,OAAA,CAD4B,MAAA,EAE5B,WAAA,CAAA,OAAA,CAFO,IAAqB,CAArB,EAVY,UAAA;AAcpBC,EAAAA,IAAAA,EAAM,WAAA,CAAA,OAAA,CAAA,SAAA,CAAqB,CAC1B,WAAA,CAAA,OAAA,CAD0B,MAAA,EAE1B,WAAA,CAAA,OAAA,CAFK,IAAqB,CAArB,EAdc,UAAA;AAkBpBpB,EAAAA,OAAAA,EAAS,WAAA,CAAA,OAAA,CAAA,MAAA,CAlBW,UAAA;AAmBpBC,EAAAA,KAAAA,EAAO,WAAA,CAAA,OAAA,CAAA,KAAA,CAAgB;AACtBU,IAAAA,CAAAA,EAAG,WAAA,CAAA,OAAA,CAAA,MAAA,CADmB,UAAA;AAEtBC,IAAAA,CAAAA,EAAG,WAAA,CAAA,OAAA,CAAA,MAAA,CAFmB,UAAA;AAGtBS,IAAAA,KAAAA,EAAO,WAAA,CAAA,OAAA,CAAA,MAAA,CAAiBC;AAHF,GAAhB,EAnBa,UAAA;AAwBpBxB,EAAAA,SAAAA,EAAW,WAAA,CAAA,OAAA,CAxBS,MAAA;AAyBpBC,EAAAA,WAAAA,EAAa,WAAA,CAAA,OAAA,CAzBO,MAAA;AA0BpBG,EAAAA,KAAAA,EAAO,WAAA,CAAA,OAAA,CAAA,SAAA,CAAoB,CAC1B,WAAA,CAAA,OAAA,CAD0B,MAAA,EAE1B,WAAA,CAAA,OAAA,CAFM,IAAoB,CAApB,EAGJoB;AA7BiB,CAArBL;AA+BAA,QAAAA,CAAAA,YAAAA,GAAwB;AACvBC,EAAAA,SAAAA,EADuB,KAAA;AAEvBC,EAAAA,MAAAA,EAFuB,SAAA;AAGvBpB,EAAAA,WAAAA,EAHuB,CAAA;AAIvBC,EAAAA,OAAAA,EAJuB,GAAA;AAKvBoB,EAAAA,IAAAA,EALuB,SAAA;AAMvBtB,EAAAA,SAAAA,EAAW;AANY,CAAxBmB;;AAQAA,QAAAA,CAAAA,YAAAA,GAAwB,UAAA,KAAA,EAAA,KAAA,EAAA,GAAA,EAAuB;AAAA,MACtCE,MADsC,GACChB,KADD,CAAA,MAAA;AAAA,MAC9BiB,IAD8B,GACCjB,KADD,CAAA,IAAA;AAAA,MACxBH,OADwB,GACCG,KADD,CAAA,OAAA;AAAA,MACfJ,WADe,GACCI,KADD,CAAA,WAAA;AAE9CoB,EAAAA,GAAAA,CAAAA,WAAAA,GAAAA,MAAAA;AACAA,EAAAA,GAAAA,CAAAA,SAAAA,GAAAA,WAAAA;;AACA,MAAIH,IAAAA,KAAJ,MAAA,EAAqB;AACpBG,IAAAA,GAAAA,CAAAA,SAAAA,GAAgB,CAAA,GAAA,MAAA,CAAA,SAAA,EAAA,IAAA,EAAhBA,OAAgB,CAAhBA;AACA;;AACDN,EAAAA,QAAAA,CAAAA,6BAAAA,CAAAA,KAAAA,EAAAA,KAAAA,EAAAA,GAAAA;AAPDA,CAAAA;;AASAA,QAAAA,CAAAA,6BAAAA,GAAyC,UAAA,KAAA,EAAA,KAAA,EAAA,GAAA,EAAuB;AAAA,MAEvDf,KAFuD,GAE7CC,KAF6C,CAAA,KAAA;AAG/D,MAAMO,CAAAA,GAAI,CAAA,GAAA,MAAA,CAAA,OAAA,EAAA,KAAA,EAAeT,KAAAA,CAAzB,KAAU,CAAV;AAH+D,MAIvDU,CAJuD,GAI9CV,KAJ8C,CAAA,CAAA;AAAA,MAIpDW,CAJoD,GAI9CX,KAJ8C,CAAA,CAAA;;AAAA,MAAA,mBAAA,GAKpBc,iBAAAA,CALoB,CAKpBA,CALoB;AAAA,MAKvDF,aALuD,GAAA,mBAAA,CAAA,aAAA;AAAA,MAKxCC,eALwC,GAAA,mBAAA,CAAA,eAAA;;AAM/D,MAAMU,WAAAA,GAAcnB,oBAAAA,CAAAA,KAAAA,EAApB,KAAoBA,CAApB;AAEAkB,EAAAA,GAAAA,CAAAA,SAAAA;AACAA,EAAAA,GAAAA,CAAAA,MAAAA,CAAAA,CAAAA,EAAcX,CAAAA,GAAdW,eAAAA;AACAA,EAAAA,GAAAA,CAAAA,MAAAA,CAAWZ,CAAAA,GAAKD,CAAAA,GAAhBa,CAAAA,EAAwBX,CAAAA,GAAxBW,aAAAA;AACAA,EAAAA,GAAAA,CAAAA,MAAAA,CAAWZ,CAAAA,GAAKD,CAAAA,GAAhBa,CAAAA,EAAwBX,CAAAA,GAAxBW,aAAAA;AACAA,EAAAA,GAAAA,CAAAA,MAAAA,GAZ+D,CAc/D;AACA;;AACA,MAAKC,WAAAA,KAAAA,IAAAA,IAAwBA,WAAAA,KAA7B,CAAA,EAAiD;AAChDD,IAAAA,GAAAA,CAAAA,IAAAA;AACAA,IAAAA,GAAAA,CAAAA,SAAAA,CAAAA,CAAAA,EAAAA,CAAAA;AACAA,IAAAA,GAAAA,CAAAA,MAAAA,CAAWC,WAAAA,GAAcC,IAAAA,CAAdD,EAAAA,GAHqC,GAGhDD,EAHgD,CAGP;;AACzCA,IAAAA,GAAAA,CAAAA,IAAAA;AACAA,IAAAA,GAAAA,CAAAA,OAAAA;AACA;;AACDA,EAAAA,GAAAA,CAAAA,IAAAA;AAvBDN,CAAAA;;kBAyBeA,Q;;AAEf,SAAA,iBAAA,CAAA,KAAA,EAAkC;AACjC,MAAMH,eAAAA,GAAmBZ,KAAAA,GAAD,CAACA,IAAc,IAAIuB,IAAAA,CAAAA,GAAAA,CAAS,KAAKA,IAAAA,CAAL,EAAA,GAApD,GAA2CA,CAAlBvB,CAAzB;AACA,MAAMW,aAAAA,GAAiBX,KAAAA,GAAD,CAACA,IAAc,IAAIuB,IAAAA,CAAAA,GAAAA,CAAS,KAAKA,IAAAA,CAAL,EAAA,GAAlD,GAAyCA,CAAlBvB,CAAvB;AACA,SAAO;AACNW,IAAAA,aAAAA,EADM,aAAA;AAENC,IAAAA,eAAAA,EAAAA;AAFM,GAAP;AAIA;;AAED,SAAA,YAAA,CAAA,KAAA,EAA+B;AAAA,MACtBM,IADsB,GACNjB,KADM,CAAA,IAAA;AAAA,MAChBF,KADgB,GACNE,KADM,CAAA,KAAA;AAE9B,SAAOiB,IAAAA,YAAAA,QAAAA,GAA2BA,IAAAA,CAAMnB,KAAAA,CAAjCmB,KAA2BA,CAA3BA,GAAP,IAAA;AACA;;AAED,SAAA,cAAA,CAAA,KAAA,EAAiC;AAAA,MACxBD,MADwB,GACNhB,KADM,CAAA,MAAA;AAAA,MAChBF,KADgB,GACNE,KADM,CAAA,KAAA;AAEhC,SAAOgB,MAAAA,YAAAA,QAAAA,GAA6BA,MAAAA,CAAQlB,KAAAA,CAArCkB,KAA6BA,CAA7BA,GAAP,MAAA;AACA;;AAED,SAAA,oBAAA,CAAA,KAAA,EAAA,KAAA,EAA8C;AAAA,MACrCD,SADqC,GACvBf,KADuB,CAAA,SAAA;AAE7C,MAAMuB,YAAAA,GAAeR,SAAAA,YAAAA,QAAAA,GAAgCA,SAAAA,CAAWjB,KAAAA,CAA3CiB,KAAgCA,CAAhCA,GAArB,SAAA;AACA,MAAKQ,YAAAA,KAAL,MAAA,EAA+B,OAAA,IAAA;AAE/B,MAAIC,MAAAA,GAAJ,CAAA;;AACA,UAAA,YAAA;AACC,SAAA,QAAA;AACCA,MAAAA,MAAAA,GAAAA,GAAAA;AACA;;AACD,SAAA,MAAA;AACCA,MAAAA,MAAAA,GAAS,CAATA,EAAAA;AACA;;AACD,SAAA,OAAA;AACCA,MAAAA,MAAAA,GAAAA,EAAAA;AACA;AATF;;AAWA,SAAA,MAAA;AACA","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { hexToRGBA, functor } from \"../utils\";\n\nfunction Triangle(props) {\n\n\tconst {\n\t\tclassName, strokeWidth,\n\t\topacity, point, width\n\t} = props;\n\n\tconst rotation = getRotationInDegrees(props, point);\n\tif (rotation == null) return null;\n\n\tconst fillColor = getFillColor(props);\n\tconst strokeColor = getStrokeColor(props);\n\n\tconst w = functor(width)(point.datum);\n\tconst { x, y } = point;\n\tconst { innerOpposite, innerHypotenuse } = getTrianglePoints(w);\n\tconst points = `\n\t\t${x} ${y - innerHypotenuse},\n\t\t${x + (w / 2)} ${y + innerOpposite},\n\t\t${x - (w / 2)} ${y + innerOpposite}\n\t`;\n\n\treturn (\n\t\t<polygon\n\t\t\tclassName={className}\n\t\t\tpoints={points}\n\t\t\tstroke={strokeColor}\n\t\t\tstrokeWidth={strokeWidth}\n\t\t\tfillOpacity={opacity}\n\t\t\tfill={fillColor}\n\t\t\ttransform={rotation !== 0 ? `rotate(${ rotation }, ${ x }, ${ y })` : null}\n\t\t/>\n\t);\n}\nTriangle.propTypes = {\n\tdirection: PropTypes.oneOfType( [\n\t\tPropTypes.oneOf( [\n\t\t\t\"top\",\n\t\t\t\"bottom\",\n\t\t\t\"left\",\n\t\t\t\"right\",\n\t\t\t\"hide\"] ),\n\t\tPropTypes.func\n\t] ).isRequired,\n\tstroke: PropTypes.oneOfType( [\n\t\tPropTypes.string,\n\t\tPropTypes.func\n\t] ).isRequired,\n\tfill: PropTypes.oneOfType( [\n\t\tPropTypes.string,\n\t\tPropTypes.func\n\t] ).isRequired,\n\topacity: PropTypes.number.isRequired,\n\tpoint: PropTypes.shape({\n\t\tx: PropTypes.number.isRequired,\n\t\ty: PropTypes.number.isRequired,\n\t\tdatum: PropTypes.object.isRequired,\n\t}).isRequired,\n\tclassName: PropTypes.string,\n\tstrokeWidth: PropTypes.number,\n\twidth: PropTypes.oneOfType([\n\t\tPropTypes.number,\n\t\tPropTypes.func\n\t]).isRequired\n};\nTriangle.defaultProps = {\n\tdirection: \"top\",\n\tstroke: \"#4682B4\",\n\tstrokeWidth: 1,\n\topacity: 0.5,\n\tfill: \"#4682B4\",\n\tclassName: \"react-stockcharts-marker-triangle\",\n};\nTriangle.drawOnCanvas = (props, point, ctx) => {\n\tconst { stroke, fill, opacity, strokeWidth } = props;\n\tctx.strokeStyle = stroke;\n\tctx.lineWidth = strokeWidth;\n\tif (fill !== \"none\") {\n\t\tctx.fillStyle = hexToRGBA(fill, opacity);\n\t}\n\tTriangle.drawOnCanvasWithNoStateChange(props, point, ctx);\n};\nTriangle.drawOnCanvasWithNoStateChange = (props, point, ctx) => {\n\n\tconst { width } = props;\n\tconst w = functor(width)(point.datum);\n\tconst { x, y } = point;\n\tconst { innerOpposite, innerHypotenuse } = getTrianglePoints(w);\n\tconst rotationDeg = getRotationInDegrees(props, point);\n\n\tctx.beginPath();\n\tctx.moveTo(x, y - innerHypotenuse);\n\tctx.lineTo(x + (w / 2), y + innerOpposite);\n\tctx.lineTo(x - (w / 2), y + innerOpposite);\n\tctx.stroke();\n\n\t// TODO: rotation does not work\n\t// example: https://gist.github.com/geoffb/6392450\n\tif ( rotationDeg !== null && rotationDeg !== 0 ) {\n\t\tctx.save();\n\t\tctx.translate(x, y);\n\t\tctx.rotate(rotationDeg * Math.PI / 180); // 45 degrees\n\t\tctx.fill();\n\t\tctx.restore();\n\t}\n\tctx.fill();\n};\nexport default Triangle;\n\nfunction getTrianglePoints(width) {\n\tconst innerHypotenuse = (width / 2) * (1 / Math.cos(30 * Math.PI / 180));\n\tconst innerOpposite = (width / 2) * (1 / Math.tan(60 * Math.PI / 180));\n\treturn {\n\t\tinnerOpposite,\n\t\tinnerHypotenuse\n\t};\n}\n\nfunction getFillColor( props ) {\n\tconst { fill, point } = props;\n\treturn fill instanceof Function ? fill( point.datum ) : fill;\n}\n\nfunction getStrokeColor( props ) {\n\tconst { stroke, point } = props;\n\treturn stroke instanceof Function ? stroke( point.datum ) : stroke;\n}\n\nfunction getRotationInDegrees( props, point ) {\n\tconst { direction } = props;\n\tconst directionVal = direction instanceof Function ? direction( point.datum ) : direction;\n\tif ( directionVal === \"hide\" ) return null;\n\n\tlet rotate = 0;\n\tswitch ( directionVal ) {\n\t\tcase \"bottom\":\n\t\t\trotate = 180;\n\t\t\tbreak;\n\t\tcase \"left\":\n\t\t\trotate = -90;\n\t\t\tbreak;\n\t\tcase \"right\":\n\t\t\trotate = 90;\n\t\t\tbreak;\n\t}\n\treturn rotate;\n}\n"]},"metadata":{},"sourceType":"script"}