{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _utils = require(\"../../utils\");\n\nvar _ChartDataUtil = require(\"../../utils/ChartDataUtil\");\n\nvar _utils2 = require(\"../utils\");\n\nvar _EachTrendLine = require(\"./EachTrendLine\");\n\nvar _StraightLine = require(\"../components/StraightLine\");\n\nvar _StraightLine2 = _interopRequireDefault(_StraightLine);\n\nvar _ClickableCircle = require(\"../components/ClickableCircle\");\n\nvar _ClickableCircle2 = _interopRequireDefault(_ClickableCircle);\n\nvar _HoverTextNearMouse = require(\"../components/HoverTextNearMouse\");\n\nvar _HoverTextNearMouse2 = _interopRequireDefault(_HoverTextNearMouse);\n\nvar _Text = require(\"../components/Text\");\n\nvar _Text2 = _interopRequireDefault(_Text);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar EachFibRetracement = function (_Component) {\n  _inherits(EachFibRetracement, _Component);\n\n  function EachFibRetracement(props) {\n    _classCallCheck(this, EachFibRetracement);\n\n    var _this = _possibleConstructorReturn(this, (EachFibRetracement.__proto__ || Object.getPrototypeOf(EachFibRetracement)).call(this, props));\n\n    _this.handleEdge1Drag = _this.handleEdge1Drag.bind(_this);\n    _this.handleEdge2Drag = _this.handleEdge2Drag.bind(_this);\n    _this.handleLineNSResizeTop = _this.handleLineNSResizeTop.bind(_this);\n    _this.handleLineNSResizeBottom = _this.handleLineNSResizeBottom.bind(_this);\n    _this.handleLineMove = _this.handleLineMove.bind(_this);\n    _this.handleLineDragStart = _this.handleLineDragStart.bind(_this);\n    _this.handleHover = _this.handleHover.bind(_this);\n    _this.isHover = _utils2.isHover.bind(_this);\n    _this.saveNodeType = _utils2.saveNodeType.bind(_this);\n    _this.nodes = {};\n    _this.state = {\n      hover: false\n    };\n    return _this;\n  }\n\n  _createClass(EachFibRetracement, [{\n    key: \"handleHover\",\n    value: function handleHover(moreProps) {\n      if (this.state.hover !== moreProps.hovering) {\n        this.setState({\n          hover: moreProps.hovering\n        });\n      }\n    }\n  }, {\n    key: \"handleLineDragStart\",\n    value: function handleLineDragStart() {\n      var _props = this.props,\n          x1 = _props.x1,\n          y1 = _props.y1,\n          x2 = _props.x2,\n          y2 = _props.y2;\n      this.dragStart = {\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2\n      };\n    }\n  }, {\n    key: \"handleLineMove\",\n    value: function handleLineMove(moreProps) {\n      var _props2 = this.props,\n          index = _props2.index,\n          onDrag = _props2.onDrag;\n      var _dragStart = this.dragStart,\n          x1Value = _dragStart.x1,\n          y1Value = _dragStart.y1,\n          x2Value = _dragStart.x2,\n          y2Value = _dragStart.y2;\n      var xScale = moreProps.xScale,\n          yScale = moreProps.chartConfig.yScale,\n          xAccessor = moreProps.xAccessor,\n          fullData = moreProps.fullData;\n      var startPos = moreProps.startPos,\n          mouseXY = moreProps.mouseXY;\n      var x1 = xScale(x1Value);\n      var y1 = yScale(y1Value);\n      var x2 = xScale(x2Value);\n      var y2 = yScale(y2Value);\n      var dx = startPos[0] - mouseXY[0];\n      var dy = startPos[1] - mouseXY[1];\n      var newX1Value = (0, _ChartDataUtil.getXValue)(xScale, xAccessor, [x1 - dx, y1 - dy], fullData);\n      var newY1Value = yScale.invert(y1 - dy);\n      var newX2Value = (0, _ChartDataUtil.getXValue)(xScale, xAccessor, [x2 - dx, y2 - dy], fullData);\n      var newY2Value = yScale.invert(y2 - dy);\n      onDrag(index, {\n        x1: newX1Value,\n        y1: newY1Value,\n        x2: newX2Value,\n        y2: newY2Value\n      });\n    }\n  }, {\n    key: \"handleLineNSResizeTop\",\n    value: function handleLineNSResizeTop(moreProps) {\n      var _props3 = this.props,\n          index = _props3.index,\n          onDrag = _props3.onDrag;\n      var _props4 = this.props,\n          x1 = _props4.x1,\n          x2 = _props4.x2,\n          y2 = _props4.y2;\n\n      var _getNewXY = (0, _EachTrendLine.getNewXY)(moreProps),\n          _getNewXY2 = _slicedToArray(_getNewXY, 2),\n          y1 = _getNewXY2[1];\n\n      onDrag(index, {\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2\n      });\n    }\n  }, {\n    key: \"handleLineNSResizeBottom\",\n    value: function handleLineNSResizeBottom(moreProps) {\n      var _props5 = this.props,\n          index = _props5.index,\n          onDrag = _props5.onDrag;\n      var _props6 = this.props,\n          x1 = _props6.x1,\n          y1 = _props6.y1,\n          x2 = _props6.x2;\n\n      var _getNewXY3 = (0, _EachTrendLine.getNewXY)(moreProps),\n          _getNewXY4 = _slicedToArray(_getNewXY3, 2),\n          y2 = _getNewXY4[1];\n\n      onDrag(index, {\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2\n      });\n    }\n  }, {\n    key: \"handleEdge1Drag\",\n    value: function handleEdge1Drag(moreProps) {\n      var _props7 = this.props,\n          index = _props7.index,\n          onDrag = _props7.onDrag;\n      var _props8 = this.props,\n          y1 = _props8.y1,\n          x2 = _props8.x2,\n          y2 = _props8.y2;\n\n      var _getNewXY5 = (0, _EachTrendLine.getNewXY)(moreProps),\n          _getNewXY6 = _slicedToArray(_getNewXY5, 1),\n          x1 = _getNewXY6[0];\n\n      onDrag(index, {\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2\n      });\n    }\n  }, {\n    key: \"handleEdge2Drag\",\n    value: function handleEdge2Drag(moreProps) {\n      var _props9 = this.props,\n          index = _props9.index,\n          onDrag = _props9.onDrag;\n      var _props10 = this.props,\n          x1 = _props10.x1,\n          y1 = _props10.y1,\n          y2 = _props10.y2;\n\n      var _getNewXY7 = (0, _EachTrendLine.getNewXY)(moreProps),\n          _getNewXY8 = _slicedToArray(_getNewXY7, 1),\n          x2 = _getNewXY8[0];\n\n      onDrag(index, {\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _props11 = this.props,\n          x1 = _props11.x1,\n          x2 = _props11.x2,\n          y1 = _props11.y1,\n          y2 = _props11.y2;\n      var _props12 = this.props,\n          interactive = _props12.interactive,\n          yDisplayFormat = _props12.yDisplayFormat,\n          type = _props12.type,\n          appearance = _props12.appearance;\n      var stroke = appearance.stroke,\n          strokeWidth = appearance.strokeWidth,\n          strokeOpacity = appearance.strokeOpacity;\n      var fontFamily = appearance.fontFamily,\n          fontSize = appearance.fontSize,\n          fontFill = appearance.fontFill;\n      var edgeStroke = appearance.edgeStroke,\n          edgeFill = appearance.edgeFill,\n          nsEdgeFill = appearance.nsEdgeFill,\n          edgeStrokeWidth = appearance.edgeStrokeWidth,\n          r = appearance.r;\n      var _props13 = this.props,\n          hoverText = _props13.hoverText,\n          selected = _props13.selected;\n      var hover = this.state.hover;\n      var onDragComplete = this.props.onDragComplete;\n      var lines = helper({\n        x1: x1,\n        x2: x2,\n        y1: y1,\n        y2: y2\n      });\n\n      var hoverTextEnabled = hoverText.enable,\n          hoverTextSelected = hoverText.selectedText,\n          hoverTextUnselected = hoverText.text,\n          restHoverTextProps = _objectWithoutProperties(hoverText, [\"enable\", \"selectedText\", \"text\"]);\n\n      var lineType = type === \"EXTEND\" ? \"XLINE\" : type === \"BOUND\" ? \"LINE\" : type;\n      var dir = (0, _utils.head)(lines).y1 > (0, _utils.last)(lines).y1 ? 3 : -1.3;\n      return _react2.default.createElement(\"g\", null, lines.map(function (line, j) {\n        var text = yDisplayFormat(line.y) + \" (\" + line.percent.toFixed(2) + \"%)\";\n\n        var xyProvider = function xyProvider(_ref) {\n          var xScale = _ref.xScale,\n              chartConfig = _ref.chartConfig;\n          var yScale = chartConfig.yScale;\n\n          var _generateLine = (0, _StraightLine.generateLine)({\n            type: lineType,\n            start: [line.x1, line.y],\n            end: [line.x2, line.y],\n            xScale: xScale,\n            yScale: yScale\n          }),\n              x1 = _generateLine.x1,\n              y1 = _generateLine.y1,\n              x2 = _generateLine.x2;\n\n          var x = xScale(Math.min(x1, x2)) + 10;\n          var y = yScale(y1) + dir * 4;\n          return [x, y];\n        };\n\n        var firstOrLast = j === 0 || j === lines.length - 1;\n        var interactiveCursorClass = firstOrLast ? \"react-stockcharts-ns-resize-cursor\" : \"react-stockcharts-move-cursor\";\n        var interactiveEdgeCursorClass = firstOrLast ? \"react-stockcharts-ns-resize-cursor\" : \"react-stockcharts-ew-resize-cursor\";\n        var dragHandler = j === 0 ? _this2.handleLineNSResizeTop : j === lines.length - 1 ? _this2.handleLineNSResizeBottom : _this2.handleLineMove;\n        var edge1DragHandler = j === 0 ? _this2.handleLineNSResizeTop : j === lines.length - 1 ? _this2.handleLineNSResizeBottom : _this2.handleEdge1Drag;\n        var edge2DragHandler = j === 0 ? _this2.handleLineNSResizeTop : j === lines.length - 1 ? _this2.handleLineNSResizeBottom : _this2.handleEdge2Drag;\n        var hoverHandler = interactive ? {\n          onHover: _this2.handleHover,\n          onUnHover: _this2.handleHover\n        } : {};\n        return _react2.default.createElement(\"g\", {\n          key: j\n        }, _react2.default.createElement(_StraightLine2.default, _extends({\n          ref: _this2.saveNodeType(\"line_\" + j),\n          selected: selected || hover\n        }, hoverHandler, {\n          type: lineType,\n          x1Value: line.x1,\n          y1Value: line.y,\n          x2Value: line.x2,\n          y2Value: line.y,\n          stroke: stroke,\n          strokeWidth: hover || selected ? strokeWidth + 1 : strokeWidth,\n          strokeOpacity: strokeOpacity,\n          interactiveCursorClass: interactiveCursorClass,\n          onDragStart: _this2.handleLineDragStart,\n          onDrag: dragHandler,\n          onDragComplete: onDragComplete\n        })), _react2.default.createElement(_Text2.default, {\n          selected: selected\n          /* eslint-disable */\n          ,\n          xyProvider: xyProvider\n          /* eslint-enable */\n          ,\n          fontFamily: fontFamily,\n          fontSize: fontSize,\n          fill: fontFill\n        }, text), _react2.default.createElement(_ClickableCircle2.default, {\n          ref: _this2.saveNodeType(\"edge1\"),\n          show: selected || hover,\n          cx: line.x1,\n          cy: line.y,\n          r: r,\n          fill: firstOrLast ? nsEdgeFill : edgeFill,\n          stroke: edgeStroke,\n          strokeWidth: edgeStrokeWidth,\n          interactiveCursorClass: interactiveEdgeCursorClass,\n          onDrag: edge1DragHandler,\n          onDragComplete: onDragComplete\n        }), _react2.default.createElement(_ClickableCircle2.default, {\n          ref: _this2.saveNodeType(\"edge2\"),\n          show: selected || hover,\n          cx: line.x2,\n          cy: line.y,\n          r: r,\n          fill: firstOrLast ? nsEdgeFill : edgeFill,\n          stroke: edgeStroke,\n          strokeWidth: edgeStrokeWidth,\n          interactiveCursorClass: interactiveEdgeCursorClass,\n          onDrag: edge2DragHandler,\n          onDragComplete: onDragComplete\n        }));\n      }), _react2.default.createElement(_HoverTextNearMouse2.default, _extends({\n        show: hoverTextEnabled && hover\n      }, restHoverTextProps, {\n        text: selected ? hoverTextSelected : hoverTextUnselected\n      })));\n    }\n  }]);\n\n  return EachFibRetracement;\n}(_react.Component);\n\nfunction helper(_ref2) {\n  var x1 = _ref2.x1,\n      y1 = _ref2.y1,\n      x2 = _ref2.x2,\n      y2 = _ref2.y2;\n  var dy = y2 - y1;\n  var retracements = [100, 61.8, 50, 38.2, 23.6, 0].map(function (each) {\n    return {\n      percent: each,\n      x1: x1,\n      x2: x2,\n      y: y2 - each / 100 * dy\n    };\n  });\n  return retracements;\n}\n\nEachFibRetracement.propTypes = {\n  x1: _propTypes2.default.any.isRequired,\n  x2: _propTypes2.default.any.isRequired,\n  y1: _propTypes2.default.number.isRequired,\n  y2: _propTypes2.default.number.isRequired,\n  yDisplayFormat: _propTypes2.default.func.isRequired,\n  type: _propTypes2.default.string.isRequired,\n  selected: _propTypes2.default.bool.isRequired,\n  appearance: _propTypes2.default.shape({\n    stroke: _propTypes2.default.string.isRequired,\n    strokeWidth: _propTypes2.default.number.isRequired,\n    strokeOpacity: _propTypes2.default.number.isRequired,\n    fontFamily: _propTypes2.default.string.isRequired,\n    fontSize: _propTypes2.default.number.isRequired,\n    fontFill: _propTypes2.default.string.isRequired,\n    edgeStroke: _propTypes2.default.string.isRequired,\n    edgeFill: _propTypes2.default.string.isRequired,\n    nsEdgeFill: _propTypes2.default.string.isRequired,\n    edgeStrokeWidth: _propTypes2.default.number.isRequired,\n    r: _propTypes2.default.number.isRequired\n  }).isRequired,\n  interactive: _propTypes2.default.bool.isRequired,\n  hoverText: _propTypes2.default.object.isRequired,\n  index: _propTypes2.default.number,\n  onDrag: _propTypes2.default.func.isRequired,\n  onDragComplete: _propTypes2.default.func.isRequired\n};\nEachFibRetracement.defaultProps = {\n  yDisplayFormat: function yDisplayFormat(d) {\n    return d.toFixed(2);\n  },\n  interactive: true,\n  appearance: {\n    stroke: \"#000000\",\n    strokeWidth: 1,\n    strokeOpacity: 1,\n    fontFamily: \"Helvetica Neue, Helvetica, Arial, sans-serif\",\n    fontSize: 10,\n    fontFill: \"#000000\",\n    edgeStroke: \"#000000\",\n    edgeFill: \"#FFFFFF\",\n    nsEdgeFill: \"#000000\",\n    edgeStrokeWidth: 1,\n    r: 5\n  },\n  selected: false,\n  onDrag: _utils.noop,\n  onDragComplete: _utils.noop,\n  hoverText: {\n    enable: false\n  }\n};\nexports.default = EachFibRetracement;","map":{"version":3,"sources":["../../../../src/lib/interactive/wrapper/EachFibRetracement.js"],"names":["EachFibRetracement","hover","moreProps","hovering","x1","y1","x2","y2","index","onDrag","x1Value","y1Value","x2Value","y2Value","xScale","yScale","xAccessor","fullData","startPos","mouseXY","dx","dy","newX1Value","newY1Value","newX2Value","newY2Value","interactive","yDisplayFormat","type","appearance","stroke","strokeWidth","strokeOpacity","fontFamily","fontSize","fontFill","edgeStroke","edgeFill","nsEdgeFill","edgeStrokeWidth","r","hoverText","selected","onDragComplete","lines","helper","hoverTextEnabled","hoverTextSelected","hoverTextUnselected","restHoverTextProps","lineType","dir","text","line","xyProvider","chartConfig","start","end","x","Math","y","firstOrLast","j","interactiveCursorClass","interactiveEdgeCursorClass","dragHandler","edge1DragHandler","edge2DragHandler","hoverHandler","onHover","onUnHover","retracements","percent","each","isRequired","d","enable"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { head, last, noop } from \"../../utils\";\nimport { getXValue } from \"../../utils/ChartDataUtil\";\nimport { saveNodeType, isHover } from \"../utils\";\n\nimport { getNewXY } from \"./EachTrendLine\";\nimport StraightLine, { generateLine } from \"../components/StraightLine\";\nimport ClickableCircle from \"../components/ClickableCircle\";\nimport HoverTextNearMouse from \"../components/HoverTextNearMouse\";\nimport Text from \"../components/Text\";\n\nclass EachFibRetracement extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.handleEdge1Drag = this.handleEdge1Drag.bind(this);\n\t\tthis.handleEdge2Drag = this.handleEdge2Drag.bind(this);\n\n\t\tthis.handleLineNSResizeTop = this.handleLineNSResizeTop.bind(this);\n\t\tthis.handleLineNSResizeBottom = this.handleLineNSResizeBottom.bind(this);\n\t\tthis.handleLineMove = this.handleLineMove.bind(this);\n\n\t\tthis.handleLineDragStart = this.handleLineDragStart.bind(this);\n\n\t\tthis.handleHover = this.handleHover.bind(this);\n\n\t\tthis.isHover = isHover.bind(this);\n\t\tthis.saveNodeType = saveNodeType.bind(this);\n\t\tthis.nodes = {};\n\n\t\tthis.state = {\n\t\t\thover: false,\n\t\t};\n\t}\n\thandleHover(moreProps) {\n\t\tif (this.state.hover !== moreProps.hovering) {\n\t\t\tthis.setState({\n\t\t\t\thover: moreProps.hovering\n\t\t\t});\n\t\t}\n\t}\n\thandleLineDragStart() {\n\t\tconst {\n\t\t\tx1, y1, x2, y2,\n\t\t} = this.props;\n\n\t\tthis.dragStart = {\n\t\t\tx1, y1, x2, y2,\n\t\t};\n\t}\n\thandleLineMove(moreProps) {\n\t\tconst { index, onDrag } = this.props;\n\n\t\tconst {\n\t\t\tx1: x1Value, y1: y1Value, x2: x2Value, y2: y2Value,\n\t\t} = this.dragStart;\n\n\t\tconst { xScale, chartConfig: { yScale }, xAccessor, fullData } = moreProps;\n\t\tconst { startPos, mouseXY } = moreProps;\n\n\t\tconst x1 = xScale(x1Value);\n\t\tconst y1 = yScale(y1Value);\n\t\tconst x2 = xScale(x2Value);\n\t\tconst y2 = yScale(y2Value);\n\n\t\tconst dx = startPos[0] - mouseXY[0];\n\t\tconst dy = startPos[1] - mouseXY[1];\n\n\t\tconst newX1Value = getXValue(xScale, xAccessor, [x1 - dx, y1 - dy], fullData);\n\t\tconst newY1Value = yScale.invert(y1 - dy);\n\t\tconst newX2Value = getXValue(xScale, xAccessor, [x2 - dx, y2 - dy], fullData);\n\t\tconst newY2Value = yScale.invert(y2 - dy);\n\n\t\tonDrag(index, {\n\t\t\tx1: newX1Value,\n\t\t\ty1: newY1Value,\n\t\t\tx2: newX2Value,\n\t\t\ty2: newY2Value,\n\t\t});\n\t}\n\thandleLineNSResizeTop(moreProps) {\n\t\tconst { index, onDrag } = this.props;\n\t\tconst {\n\t\t\tx1, x2, y2,\n\t\t} = this.props;\n\n\t\tconst [, y1] = getNewXY(moreProps);\n\n\t\tonDrag(index, {\n\t\t\tx1,\n\t\t\ty1,\n\t\t\tx2,\n\t\t\ty2,\n\t\t});\n\t}\n\thandleLineNSResizeBottom(moreProps) {\n\t\tconst { index, onDrag } = this.props;\n\t\tconst {\n\t\t\tx1, y1, x2,\n\t\t} = this.props;\n\n\t\tconst [, y2] = getNewXY(moreProps);\n\n\t\tonDrag(index, {\n\t\t\tx1,\n\t\t\ty1,\n\t\t\tx2,\n\t\t\ty2,\n\t\t});\n\t}\n\thandleEdge1Drag(moreProps) {\n\t\tconst { index, onDrag } = this.props;\n\t\tconst {\n\t\t\ty1, x2, y2,\n\t\t} = this.props;\n\n\t\tconst [x1] = getNewXY(moreProps);\n\n\t\tonDrag(index, {\n\t\t\tx1,\n\t\t\ty1,\n\t\t\tx2,\n\t\t\ty2,\n\t\t});\n\t}\n\thandleEdge2Drag(moreProps) {\n\t\tconst { index, onDrag } = this.props;\n\t\tconst {\n\t\t\tx1, y1, y2,\n\t\t} = this.props;\n\n\t\tconst [x2] = getNewXY(moreProps);\n\n\t\tonDrag(index, {\n\t\t\tx1,\n\t\t\ty1,\n\t\t\tx2,\n\t\t\ty2,\n\t\t});\n\t}\n\trender() {\n\t\tconst { x1, x2, y1, y2 } = this.props;\n\t\tconst { interactive, yDisplayFormat, type, appearance } = this.props;\n\t\tconst { stroke, strokeWidth, strokeOpacity } = appearance;\n\t\tconst { fontFamily, fontSize, fontFill } = appearance;\n\t\tconst { edgeStroke, edgeFill, nsEdgeFill, edgeStrokeWidth, r } = appearance;\n\t\tconst { hoverText, selected } = this.props;\n\t\tconst { hover } = this.state;\n\t\tconst { onDragComplete } = this.props;\n\t\tconst lines = helper({ x1, x2, y1, y2 });\n\n\t\tconst {\n\t\t\tenable: hoverTextEnabled,\n\t\t\tselectedText: hoverTextSelected,\n\t\t\ttext: hoverTextUnselected,\n\t\t\t...restHoverTextProps\n\t\t} = hoverText;\n\n\t\tconst lineType = type === \"EXTEND\" ? \"XLINE\" : type === \"BOUND\" ? \"LINE\" : type;\n\t\tconst dir = head(lines).y1 > last(lines).y1 ? 3 : -1.3;\n\n\t\treturn (\n\t\t\t<g>\n\t\t\t\t{lines.map((line, j) => {\n\t\t\t\t\tconst text = `${yDisplayFormat(line.y)} (${line.percent.toFixed(2)}%)`;\n\n\t\t\t\t\tconst xyProvider = ({ xScale, chartConfig }) => {\n\t\t\t\t\t\tconst { yScale } = chartConfig;\n\t\t\t\t\t\tconst { x1, y1, x2 } = generateLine({\n\t\t\t\t\t\t\ttype: lineType,\n\t\t\t\t\t\t\tstart: [line.x1, line.y],\n\t\t\t\t\t\t\tend: [line.x2, line.y],\n\t\t\t\t\t\t\txScale,\n\t\t\t\t\t\t\tyScale,\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tconst x = xScale(Math.min(x1, x2)) + 10;\n\t\t\t\t\t\tconst y = yScale(y1) + dir * 4;\n\t\t\t\t\t\treturn [x, y];\n\t\t\t\t\t};\n\n\t\t\t\t\tconst firstOrLast = (j === 0) || (j === lines.length - 1);\n\n\t\t\t\t\tconst interactiveCursorClass = firstOrLast\n\t\t\t\t\t\t? \"react-stockcharts-ns-resize-cursor\"\n\t\t\t\t\t\t: \"react-stockcharts-move-cursor\";\n\n\t\t\t\t\tconst interactiveEdgeCursorClass = firstOrLast\n\t\t\t\t\t\t? \"react-stockcharts-ns-resize-cursor\"\n\t\t\t\t\t\t: \"react-stockcharts-ew-resize-cursor\";\n\n\t\t\t\t\tconst dragHandler = j === 0\n\t\t\t\t\t\t? this.handleLineNSResizeTop\n\t\t\t\t\t\t: j === lines.length - 1\n\t\t\t\t\t\t\t? this.handleLineNSResizeBottom\n\t\t\t\t\t\t\t: this.handleLineMove;\n\n\t\t\t\t\tconst edge1DragHandler = j === 0\n\t\t\t\t\t\t? this.handleLineNSResizeTop\n\t\t\t\t\t\t: j === lines.length - 1\n\t\t\t\t\t\t\t? this.handleLineNSResizeBottom\n\t\t\t\t\t\t\t: this.handleEdge1Drag;\n\t\t\t\t\tconst edge2DragHandler = j === 0\n\t\t\t\t\t\t? this.handleLineNSResizeTop\n\t\t\t\t\t\t: j === lines.length - 1\n\t\t\t\t\t\t\t? this.handleLineNSResizeBottom\n\t\t\t\t\t\t\t: this.handleEdge2Drag;\n\n\t\t\t\t\tconst hoverHandler = interactive\n\t\t\t\t\t\t? { onHover: this.handleHover, onUnHover: this.handleHover }\n\t\t\t\t\t\t: {};\n\t\t\t\t\treturn <g key={j}>\n\t\t\t\t\t\t<StraightLine\n\t\t\t\t\t\t\tref={this.saveNodeType(`line_${j}`)}\n\t\t\t\t\t\t\tselected={selected || hover}\n\n\t\t\t\t\t\t\t{...hoverHandler}\n\n\t\t\t\t\t\t\ttype={lineType}\n\t\t\t\t\t\t\tx1Value={line.x1}\n\t\t\t\t\t\t\ty1Value={line.y}\n\t\t\t\t\t\t\tx2Value={line.x2}\n\t\t\t\t\t\t\ty2Value={line.y}\n\t\t\t\t\t\t\tstroke={stroke}\n\t\t\t\t\t\t\tstrokeWidth={(hover || selected) ? strokeWidth + 1 : strokeWidth}\n\t\t\t\t\t\t\tstrokeOpacity={strokeOpacity}\n\t\t\t\t\t\t\tinteractiveCursorClass={interactiveCursorClass}\n\n\t\t\t\t\t\t\tonDragStart={this.handleLineDragStart}\n\t\t\t\t\t\t\tonDrag={dragHandler}\n\t\t\t\t\t\t\tonDragComplete={onDragComplete}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\tselected={selected}\n\t\t\t\t\t\t\t/* eslint-disable */\n\t\t\t\t\t\t\txyProvider={xyProvider} \n\t\t\t\t\t\t\t/* eslint-enable */\n\t\t\t\t\t\t\tfontFamily={fontFamily}\n\t\t\t\t\t\t\tfontSize={fontSize}\n\t\t\t\t\t\t\tfill={fontFill}>{text}</Text>\n\t\t\t\t\t\t<ClickableCircle\n\t\t\t\t\t\t\tref={this.saveNodeType(\"edge1\")}\n\t\t\t\t\t\t\tshow={selected || hover}\n\t\t\t\t\t\t\tcx={line.x1}\n\t\t\t\t\t\t\tcy={line.y}\n\t\t\t\t\t\t\tr={r}\n\t\t\t\t\t\t\tfill={firstOrLast ? nsEdgeFill : edgeFill}\n\t\t\t\t\t\t\tstroke={edgeStroke}\n\t\t\t\t\t\t\tstrokeWidth={edgeStrokeWidth}\n\t\t\t\t\t\t\tinteractiveCursorClass={interactiveEdgeCursorClass}\n\t\t\t\t\t\t\tonDrag={edge1DragHandler}\n\t\t\t\t\t\t\tonDragComplete={onDragComplete} />\n\t\t\t\t\t\t<ClickableCircle\n\t\t\t\t\t\t\tref={this.saveNodeType(\"edge2\")}\n\t\t\t\t\t\t\tshow={selected || hover}\n\t\t\t\t\t\t\tcx={line.x2}\n\t\t\t\t\t\t\tcy={line.y}\n\t\t\t\t\t\t\tr={r}\n\t\t\t\t\t\t\tfill={firstOrLast ? nsEdgeFill : edgeFill}\n\t\t\t\t\t\t\tstroke={edgeStroke}\n\t\t\t\t\t\t\tstrokeWidth={edgeStrokeWidth}\n\t\t\t\t\t\t\tinteractiveCursorClass={interactiveEdgeCursorClass}\n\t\t\t\t\t\t\tonDrag={edge2DragHandler}\n\t\t\t\t\t\t\tonDragComplete={onDragComplete} />\n\t\t\t\t\t</g>;\n\t\t\t\t})}\n\t\t\t\t<HoverTextNearMouse\n\t\t\t\t\tshow={hoverTextEnabled && hover}\n\t\t\t\t\t{...restHoverTextProps}\n\t\t\t\t\ttext={selected ? hoverTextSelected : hoverTextUnselected}\n\t\t\t\t/>\n\t\t\t</g>\n\t\t);\n\t}\n}\n\n\nfunction helper({ x1, y1, x2, y2 }) {\n\tconst dy = y2 - y1;\n\tconst retracements = [100, 61.8, 50, 38.2, 23.6, 0]\n\t\t.map(each => ({\n\t\t\tpercent: each,\n\t\t\tx1,\n\t\t\tx2,\n\t\t\ty: (y2 - (each / 100) * dy),\n\t\t}));\n\n\treturn retracements;\n}\n\nEachFibRetracement.propTypes = {\n\tx1: PropTypes.any.isRequired,\n\tx2: PropTypes.any.isRequired,\n\ty1: PropTypes.number.isRequired,\n\ty2: PropTypes.number.isRequired,\n\n\tyDisplayFormat: PropTypes.func.isRequired,\n\ttype: PropTypes.string.isRequired,\n\tselected: PropTypes.bool.isRequired,\n\n\tappearance: PropTypes.shape({\n\t\tstroke: PropTypes.string.isRequired,\n\t\tstrokeWidth: PropTypes.number.isRequired,\n\t\tstrokeOpacity: PropTypes.number.isRequired,\n\t\tfontFamily: PropTypes.string.isRequired,\n\t\tfontSize: PropTypes.number.isRequired,\n\t\tfontFill: PropTypes.string.isRequired,\n\t\tedgeStroke: PropTypes.string.isRequired,\n\t\tedgeFill: PropTypes.string.isRequired,\n\t\tnsEdgeFill: PropTypes.string.isRequired,\n\t\tedgeStrokeWidth: PropTypes.number.isRequired,\n\t\tr: PropTypes.number.isRequired,\n\t}).isRequired,\n\n\tinteractive: PropTypes.bool.isRequired,\n\thoverText: PropTypes.object.isRequired,\n\n\tindex: PropTypes.number,\n\tonDrag: PropTypes.func.isRequired,\n\tonDragComplete: PropTypes.func.isRequired,\n};\n\nEachFibRetracement.defaultProps = {\n\tyDisplayFormat: d => d.toFixed(2),\n\tinteractive: true,\n\n\tappearance: {\n\t\tstroke: \"#000000\",\n\t\tstrokeWidth: 1,\n\t\tstrokeOpacity: 1,\n\t\tfontFamily: \"Helvetica Neue, Helvetica, Arial, sans-serif\",\n\t\tfontSize: 10,\n\t\tfontFill: \"#000000\",\n\t\tedgeStroke: \"#000000\",\n\t\tedgeFill: \"#FFFFFF\",\n\t\tnsEdgeFill: \"#000000\",\n\t\tedgeStrokeWidth: 1,\n\t\tr: 5,\n\t},\n\tselected: false,\n\n\tonDrag: noop,\n\tonDragComplete: noop,\n\n\thoverText: {\n\t\tenable: false,\n\t}\n};\n\nexport default EachFibRetracement;\n"]},"metadata":{},"sourceType":"script"}