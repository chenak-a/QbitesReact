{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nexports.default = function () {\n  var options = _defaultOptionsForComputation.Change;\n\n  function calculator(data) {\n    var _options = options,\n        basePath = _options.basePath,\n        mainKeys = _options.mainKeys,\n        compareKeys = _options.compareKeys;\n    var base = (0, _utils.path)(basePath);\n    var first = (0, _utils.head)(data);\n    var b = base(first); // eslint-disable-next-line prefer-const\n\n    var firsts = {};\n    var compareData = data.map(function (d) {\n      // eslint-disable-next-line prefer-const\n      var result = {};\n      mainKeys.forEach(function (key) {\n        if (_typeof(d[key]) === \"object\") {\n          result[key] = {};\n          Object.keys(d[key]).forEach(function (subkey) {\n            result[key][subkey] = (d[key][subkey] - b) / b;\n          });\n        } else {\n          result[key] = (d[key] - b) / b;\n        }\n      });\n      compareKeys.forEach(function (key) {\n        if ((0, _utils.isDefined)(d[key]) && (0, _utils.isNotDefined)(firsts[key])) {\n          firsts[key] = d[key];\n        }\n\n        if ((0, _utils.isDefined)(d[key]) && (0, _utils.isDefined)(firsts[key])) {\n          result[key] = (d[key] - firsts[key]) / firsts[key];\n        }\n      });\n      return result;\n    }); // console.log(compareData[20]);\n\n    return compareData;\n  }\n\n  calculator.options = function (x) {\n    if (!arguments.length) {\n      return options;\n    }\n\n    options = _extends({}, _defaultOptionsForComputation.Change, x);\n    return calculator;\n  };\n\n  return calculator;\n};\n\nvar _utils = require(\"../utils\");\n\nvar _defaultOptionsForComputation = require(\"./defaultOptionsForComputation\");","map":{"version":3,"sources":["../../../src/lib/calculator/compare.js"],"names":["options","basePath","mainKeys","compareKeys","base","first","b","firsts","compareData","result","d","Object","calculator","arguments"],"mappings":"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","sourcesContent":["\n\nimport { head, path, isDefined, isNotDefined } from \"../utils\";\nimport { Change as defaultOptions } from \"./defaultOptionsForComputation\";\n\nexport default function() {\n\tlet options = defaultOptions;\n\n\tfunction calculator(data) {\n\t\tconst { basePath, mainKeys, compareKeys } = options;\n\t\tconst base = path(basePath);\n\n\t\tconst first = head(data);\n\t\tconst b = base(first);\n\n\t\t// eslint-disable-next-line prefer-const\n\t\tlet firsts = {};\n\n\t\tconst compareData = data.map(d => {\n\t\t\t// eslint-disable-next-line prefer-const\n\t\t\tlet result = {};\n\n\t\t\tmainKeys.forEach(key => {\n\t\t\t\tif (typeof d[key] === \"object\") {\n\t\t\t\t\tresult[key] = {};\n\t\t\t\t\tObject.keys(d[key]).forEach(subkey => {\n\t\t\t\t\t\tresult[key][subkey] = (d[key][subkey] - b) / b;\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tresult[key] = (d[key] - b) / b;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tcompareKeys.forEach(key => {\n\t\t\t\tif (isDefined(d[key]) && isNotDefined(firsts[key])) {\n\t\t\t\t\tfirsts[key] = d[key];\n\t\t\t\t}\n\t\t\t\tif (isDefined(d[key]) && isDefined(firsts[key])) {\n\t\t\t\t\tresult[key] = (d[key] - firsts[key]) / firsts[key];\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn result;\n\t\t});\n\t\t// console.log(compareData[20]);\n\t\treturn compareData;\n\t}\n\tcalculator.options = function(x) {\n\t\tif (!arguments.length) {\n\t\t\treturn options;\n\t\t}\n\t\toptions = { ...defaultOptions, ...x };\n\t\treturn calculator;\n\t};\n\treturn calculator;\n}"]},"metadata":{},"sourceType":"script"}