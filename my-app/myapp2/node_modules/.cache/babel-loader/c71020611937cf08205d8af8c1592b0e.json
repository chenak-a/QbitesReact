{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _d3Collection = require(\"d3-collection\");\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _GenericChartComponent = require(\"../GenericChartComponent\");\n\nvar _GenericChartComponent2 = _interopRequireDefault(_GenericChartComponent);\n\nvar _GenericComponent = require(\"../GenericComponent\");\n\nvar _utils = require(\"../utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar OHLCSeries = function (_Component) {\n  _inherits(OHLCSeries, _Component);\n\n  function OHLCSeries(props) {\n    _classCallCheck(this, OHLCSeries);\n\n    var _this = _possibleConstructorReturn(this, (OHLCSeries.__proto__ || Object.getPrototypeOf(OHLCSeries)).call(this, props));\n\n    _this.renderSVG = _this.renderSVG.bind(_this);\n    _this.drawOnCanvas = _this.drawOnCanvas.bind(_this);\n    return _this;\n  }\n\n  _createClass(OHLCSeries, [{\n    key: \"drawOnCanvas\",\n    value: function drawOnCanvas(ctx, moreProps) {\n      var yAccessor = this.props.yAccessor;\n      var xAccessor = moreProps.xAccessor;\n      var xScale = moreProps.xScale,\n          yScale = moreProps.chartConfig.yScale,\n          plotData = moreProps.plotData;\n      var barData = getOHLCBars(this.props, xAccessor, yAccessor, xScale, yScale, plotData);\n\n      _drawOnCanvas(ctx, barData);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var clip = this.props.clip;\n      return _react2.default.createElement(_GenericChartComponent2.default, {\n        svgDraw: this.renderSVG,\n        canvasToDraw: _GenericComponent.getAxisCanvas,\n        canvasDraw: this.drawOnCanvas,\n        clip: clip,\n        drawOn: [\"pan\"]\n      });\n    }\n  }, {\n    key: \"renderSVG\",\n    value: function renderSVG(moreProps) {\n      var _props = this.props,\n          className = _props.className,\n          yAccessor = _props.yAccessor;\n      var xAccessor = moreProps.xAccessor;\n      var xScale = moreProps.xScale,\n          yScale = moreProps.chartConfig.yScale,\n          plotData = moreProps.plotData;\n      var barData = getOHLCBars(this.props, xAccessor, yAccessor, xScale, yScale, plotData);\n      var strokeWidth = barData.strokeWidth,\n          bars = barData.bars;\n      return _react2.default.createElement(\"g\", {\n        className: className\n      }, bars.map(function (d, idx) {\n        return _react2.default.createElement(\"path\", {\n          key: idx,\n          className: d.className,\n          stroke: d.stroke,\n          strokeWidth: strokeWidth,\n          d: \"M\" + d.openX1 + \" \" + d.openY + \" L\" + d.openX2 + \" \" + d.openY + \" M\" + d.x + \" \" + d.y1 + \" L\" + d.x + \" \" + d.y2 + \" M\" + d.closeX1 + \" \" + d.closeY + \" L\" + d.closeX2 + \" \" + d.closeY\n        });\n      }));\n    }\n  }]);\n\n  return OHLCSeries;\n}(_react.Component);\n\nOHLCSeries.propTypes = {\n  className: _propTypes2.default.string,\n  classNames: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.string]).isRequired,\n  stroke: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.string]).isRequired,\n  yAccessor: _propTypes2.default.func.isRequired,\n  clip: _propTypes2.default.bool.isRequired\n};\nOHLCSeries.defaultProps = {\n  className: \"react-stockcharts-ohlc\",\n  yAccessor: function yAccessor(d) {\n    return {\n      open: d.open,\n      high: d.high,\n      low: d.low,\n      close: d.close\n    };\n  },\n  classNames: function classNames(d) {\n    return (0, _utils.isDefined)(d.absoluteChange) ? d.absoluteChange > 0 ? \"up\" : \"down\" : \"firstbar\";\n  },\n  stroke: function stroke(d) {\n    return (0, _utils.isDefined)(d.absoluteChange) ? d.absoluteChange > 0 ? \"#6BA583\" : \"#FF0000\" : \"#000000\";\n  },\n  clip: true\n};\n\nfunction _drawOnCanvas(ctx, barData) {\n  var strokeWidth = barData.strokeWidth,\n      bars = barData.bars;\n  var wickNest = (0, _d3Collection.nest)().key(function (d) {\n    return d.stroke;\n  }).entries(bars);\n  ctx.lineWidth = strokeWidth;\n  wickNest.forEach(function (outer) {\n    var key = outer.key,\n        values = outer.values;\n    ctx.strokeStyle = key;\n    values.forEach(function (d) {\n      ctx.beginPath();\n      ctx.moveTo(d.x, d.y1);\n      ctx.lineTo(d.x, d.y2);\n      ctx.moveTo(d.openX1, d.openY);\n      ctx.lineTo(d.openX2, d.openY);\n      ctx.moveTo(d.closeX1, d.closeY);\n      ctx.lineTo(d.closeX2, d.closeY);\n      ctx.stroke();\n    });\n  });\n}\n\nfunction getOHLCBars(props, xAccessor, yAccessor, xScale, yScale, plotData) {\n  var classNamesProp = props.classNames,\n      strokeProp = props.stroke;\n  var strokeFunc = (0, _utils.functor)(strokeProp);\n  var classNameFunc = (0, _utils.functor)(classNamesProp);\n  var width = xScale(xAccessor(plotData[plotData.length - 1])) - xScale(xAccessor(plotData[0]));\n  var barWidth = Math.max(1, Math.round(width / (plotData.length - 1) / 2) - 1.5);\n  var strokeWidth = Math.min(barWidth, 6);\n  var bars = plotData.filter(function (d) {\n    return (0, _utils.isDefined)(yAccessor(d).close);\n  }).map(function (d) {\n    var ohlc = yAccessor(d),\n        x = Math.round(xScale(xAccessor(d))),\n        y1 = yScale(ohlc.high),\n        y2 = yScale(ohlc.low),\n        openX1 = x - barWidth,\n        openX2 = x + strokeWidth / 2,\n        openY = yScale(ohlc.open),\n        closeX1 = x - strokeWidth / 2,\n        closeX2 = x + barWidth,\n        closeY = yScale(ohlc.close),\n        className = classNameFunc(d),\n        stroke = strokeFunc(d);\n    return {\n      x: x,\n      y1: y1,\n      y2: y2,\n      openX1: openX1,\n      openX2: openX2,\n      openY: openY,\n      closeX1: closeX1,\n      closeX2: closeX2,\n      closeY: closeY,\n      stroke: stroke,\n      className: className\n    };\n  });\n  return {\n    barWidth: barWidth,\n    strokeWidth: strokeWidth,\n    bars: bars\n  };\n}\n\nexports.default = OHLCSeries;","map":{"version":3,"sources":["../../../src/lib/series/OHLCSeries.js"],"names":["OHLCSeries","ctx","moreProps","yAccessor","xAccessor","xScale","yScale","plotData","barData","getOHLCBars","drawOnCanvas","clip","className","strokeWidth","bars","d","classNames","stroke","isRequired","open","high","low","close","wickNest","key","values","outer","classNamesProp","strokeProp","props","strokeFunc","classNameFunc","width","barWidth","Math","ohlc","x","y1","y2","openX1","openX2","openY","closeX1","closeX2","closeY"],"mappings":"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","sourcesContent":["\n\nimport { nest } from \"d3-collection\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport GenericChartComponent from \"../GenericChartComponent\";\nimport { getAxisCanvas } from \"../GenericComponent\";\n\nimport { isDefined, functor } from \"../utils\";\n\nclass OHLCSeries extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.renderSVG = this.renderSVG.bind(this);\n\t\tthis.drawOnCanvas = this.drawOnCanvas.bind(this);\n\t}\n\tdrawOnCanvas(ctx, moreProps) {\n\t\tconst { yAccessor } = this.props;\n\t\tconst { xAccessor } = moreProps;\n\t\tconst { xScale, chartConfig: { yScale }, plotData } = moreProps;\n\n\t\tconst barData = getOHLCBars(this.props, xAccessor, yAccessor, xScale, yScale, plotData);\n\t\tdrawOnCanvas(ctx, barData);\n\t}\n\trender() {\n\t\tconst { clip } = this.props;\n\n\t\treturn <GenericChartComponent\n\t\t\tsvgDraw={this.renderSVG}\n\t\t\tcanvasToDraw={getAxisCanvas}\n\t\t\tcanvasDraw={this.drawOnCanvas}\n\t\t\tclip={clip}\n\t\t\tdrawOn={[\"pan\"]}\n\t\t/>;\n\t}\n\trenderSVG(moreProps) {\n\t\tconst { className, yAccessor } = this.props;\n\t\tconst { xAccessor } = moreProps;\n\t\tconst { xScale, chartConfig: { yScale }, plotData } = moreProps;\n\n\n\t\tconst barData = getOHLCBars(this.props, xAccessor, yAccessor, xScale, yScale, plotData);\n\n\t\tconst { strokeWidth, bars } = barData;\n\n\t\treturn <g className={className}>\n\t\t\t{bars.map((d, idx) => <path key={idx}\n\t\t\t\tclassName={d.className} stroke={d.stroke} strokeWidth={strokeWidth}\n\t\t\t\td={`M${d.openX1} ${d.openY} L${d.openX2} ${d.openY} M${d.x} ${d.y1} L${d.x} ${d.y2} M${d.closeX1} ${d.closeY} L${d.closeX2} ${d.closeY}`}/>)}\n\t\t</g>;\n\t}\n}\n\nOHLCSeries.propTypes = {\n\tclassName: PropTypes.string,\n\tclassNames: PropTypes.oneOfType([\n\t\tPropTypes.func,\n\t\tPropTypes.string\n\t]).isRequired,\n\tstroke: PropTypes.oneOfType([\n\t\tPropTypes.func,\n\t\tPropTypes.string\n\t]).isRequired,\n\tyAccessor: PropTypes.func.isRequired,\n\tclip: PropTypes.bool.isRequired,\n};\n\nOHLCSeries.defaultProps = {\n\tclassName: \"react-stockcharts-ohlc\",\n\tyAccessor: (d) => ({ open: d.open, high: d.high, low: d.low, close: d.close }),\n\tclassNames: d => isDefined(d.absoluteChange) ? (d.absoluteChange > 0 ? \"up\" : \"down\") : \"firstbar\",\n\tstroke: d => isDefined(d.absoluteChange) ? (d.absoluteChange > 0 ? \"#6BA583\" : \"#FF0000\") : \"#000000\",\n\tclip: true,\n};\n\nfunction drawOnCanvas(ctx, barData) {\n\n\tconst { strokeWidth, bars } = barData;\n\n\tconst wickNest = nest()\n\t\t.key(d => d.stroke)\n\t\t.entries(bars);\n\n\tctx.lineWidth = strokeWidth;\n\n\twickNest.forEach(outer => {\n\t\tconst { key, values } = outer;\n\t\tctx.strokeStyle = key;\n\t\tvalues.forEach(d => {\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(d.x, d.y1);\n\t\t\tctx.lineTo(d.x, d.y2);\n\n\t\t\tctx.moveTo(d.openX1, d.openY);\n\t\t\tctx.lineTo(d.openX2, d.openY);\n\n\t\t\tctx.moveTo(d.closeX1, d.closeY);\n\t\t\tctx.lineTo(d.closeX2, d.closeY);\n\n\t\t\tctx.stroke();\n\t\t});\n\t});\n}\n\nfunction getOHLCBars(props, xAccessor, yAccessor, xScale, yScale, plotData) {\n\tconst { classNames: classNamesProp, stroke: strokeProp } = props;\n\n\tconst strokeFunc = functor(strokeProp);\n\tconst classNameFunc = functor(classNamesProp);\n\n\tconst width = xScale(xAccessor(plotData[plotData.length - 1]))\n\t\t- xScale(xAccessor(plotData[0]));\n\n\tconst barWidth = Math.max(1, Math.round(width / (plotData.length - 1) / 2) - 1.5);\n\tconst strokeWidth = Math.min(barWidth, 6);\n\n\tconst bars = plotData\n\t\t.filter(d => isDefined(yAccessor(d).close))\n\t\t.map(d => {\n\t\t\tconst ohlc = yAccessor(d),\n\t\t\t\tx = Math.round(xScale(xAccessor(d))),\n\t\t\t\ty1 = yScale(ohlc.high),\n\t\t\t\ty2 = yScale(ohlc.low),\n\t\t\t\topenX1 = x - barWidth,\n\t\t\t\topenX2 = x + strokeWidth / 2,\n\t\t\t\topenY = yScale(ohlc.open),\n\t\t\t\tcloseX1 = x - strokeWidth / 2,\n\t\t\t\tcloseX2 = x + barWidth,\n\t\t\t\tcloseY = yScale(ohlc.close),\n\t\t\t\tclassName = classNameFunc(d),\n\t\t\t\tstroke = strokeFunc(d);\n\n\t\t\treturn { x, y1, y2, openX1, openX2, openY, closeX1, closeX2, closeY, stroke, className };\n\t\t});\n\treturn { barWidth, strokeWidth, bars };\n}\n\nexport default OHLCSeries;\n"]},"metadata":{},"sourceType":"script"}