{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\chena\\\\reactgun\\\\my-app\\\\src\\\\graphh.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from \"prop-types\";\nimport { scaleTime } from \"d3-scale\";\nimport { utcDay } from \"d3-time\";\nimport { ChartCanvas, Chart } from \"react-stockcharts\";\nimport { CandlestickSeries } from \"react-stockcharts/lib/series\";\nimport { XAxis, YAxis } from \"react-stockcharts/lib/axes\";\nimport { fitWidth } from \"react-stockcharts/lib/helper\";\nimport { last, timeIntervalBarWidth } from \"react-stockcharts/lib/utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Graphh(props) {\n  _s();\n\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    loopData(props.data.data.hcl);\n    console.log(props.data.data.hcl);\n  });\n\n  const loopData = hcl => {\n    var array = [];\n    var OpenLen = hcl.Open.length;\n    console.log(OpenLen);\n\n    for (var i = 0; i < OpenLen; i++) {\n      array.push({\n        opentime: new Date(props.data.data.hcl.opentime[i]),\n        open: hcl.Open[i],\n        High: hcl.High[i],\n        Low: hcl.Low[i],\n        closed: hcl.Close[i],\n        Volume: hcl.Volume[i]\n      });\n    }\n\n    setData(array);\n    console.log(data);\n  }; // console.log(new Date(props.data.data.hcl.opentime[0]))\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ChartCanvas, {\n      height: 400,\n      ratio: 20,\n      width: 900,\n      margin: {\n        left: 50,\n        right: 50,\n        top: 10,\n        bottom: 30\n      },\n      type: 'svg',\n      seriesName: \"MSFT\",\n      data: data,\n      xAccessor: 200,\n      xScale: scaleTime(),\n      xExtents: 200,\n      children: /*#__PURE__*/_jsxDEV(Chart, {\n        id: 1,\n        yExtents: data => [data.High, data.Low],\n        children: [/*#__PURE__*/_jsxDEV(XAxis, {\n          axisAt: \"bottom\",\n          orient: \"bottom\",\n          ticks: 6\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          axisAt: \"left\",\n          orient: \"left\",\n          ticks: 5\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(CandlestickSeries, {\n          width: timeIntervalBarWidth(utcDay)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Graphh, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n\n_c = Graphh;\nexport default Graphh;\n\nvar _c;\n\n$RefreshReg$(_c, \"Graphh\");","map":{"version":3,"sources":["c:/Users/chena/reactgun/my-app/src/graphh.js"],"names":["React","useEffect","useState","PropTypes","scaleTime","utcDay","ChartCanvas","Chart","CandlestickSeries","XAxis","YAxis","fitWidth","last","timeIntervalBarWidth","Graphh","props","data","setData","loopData","hcl","console","log","array","OpenLen","Open","length","i","push","opentime","Date","open","High","Low","closed","Close","Volume","left","right","top","bottom"],"mappings":"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","sourcesContent":["import React, { useEffect ,useState } from 'react';\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { scaleTime } from \"d3-scale\";\r\nimport { utcDay } from \"d3-time\";\r\n\r\nimport { ChartCanvas, Chart } from \"react-stockcharts\";\r\nimport { CandlestickSeries } from \"react-stockcharts/lib/series\";\r\nimport { XAxis, YAxis } from \"react-stockcharts/lib/axes\";\r\nimport { fitWidth } from \"react-stockcharts/lib/helper\";\r\nimport { last, timeIntervalBarWidth } from \"react-stockcharts/lib/utils\";\r\n\r\n\r\nfunction Graphh(props) {\r\n    const [data, setData] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        loopData(props.data.data.hcl);\r\n        console.log(props.data.data.hcl)\r\n    })\r\n    \r\n    const loopData = (hcl) => {\r\n        var array = [];\r\n        var OpenLen = hcl.Open.length;\r\n        \r\n        console.log(OpenLen)\r\n        for( var i = 0; i < OpenLen; i++){\r\n            array.push({ opentime:new Date(props.data.data.hcl.opentime[i]),  open : hcl.Open[i], High: hcl.High[i], Low : hcl.Low[i],closed: hcl.Close[i],Volume : hcl.Volume[i], })\r\n        }\r\n        setData(array)\r\n        console.log(data)\r\n    }\r\n    // console.log(new Date(props.data.data.hcl.opentime[0]))\r\n\r\n    return (\r\n        <div>\r\n        \t<ChartCanvas height={400}\r\n\t\t\t\t\tratio={20}\r\n\t\t\t\t\twidth={900}\r\n\t\t\t\t\tmargin={{ left: 50, right: 50, top: 10, bottom: 30 }}\r\n\t\t\t\t\ttype={'svg'}\r\n\t\t\t\t\tseriesName=\"MSFT\"\r\n\t\t\t\t\tdata={data}\r\n\t\t\t\t\txAccessor={200}\r\n\t\t\t\t\txScale={scaleTime()}\r\n\t\t\t\t\txExtents={200}>\r\n\r\n\t\t\t\t<Chart id={1} yExtents={data => [data.High, data.Low]}>\r\n\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={6}/>\r\n\t\t\t\t\t<YAxis axisAt=\"left\" orient=\"left\" ticks={5} />\r\n\t\t\t\t\t<CandlestickSeries width={timeIntervalBarWidth(utcDay)}/>\r\n\t\t\t\t</Chart>\r\n\t\t\t</ChartCanvas>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Graphh\r\n"]},"metadata":{},"sourceType":"module"}