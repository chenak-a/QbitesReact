{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chena\\\\reactgun\\\\my-app\\\\src\\\\dasbord.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Card, Button, Alert } from \"react-bootstrap\";\nimport { useAuth } from \"./AuthContexte\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useQuery } from \"urql\";\nimport { client, ssrCache } from \"../src/urqlClient\";\nimport Graphs from \"./graphh\";\nimport { TypeChooser } from \"react-stockcharts/lib/helper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TodosQuery = `\nquery {\n  crypto {\n    name\n    time\n\t\tdata{\n    hcl{\n      opentime\n      Open\n      High\n      Low\n      Close\n    \tVolume\n      \n    }\n      formula{\n        rsi\n        rsiK\n        rsiD\n        aroonu\n        aroond\n        macd\n        histogram\n      }\n      ai{\n        bigmome{\n          BUY2\n          BUY1\n          ambi\n        }\n        sell{\n          amb0\n          amb1\n          amb2\n          amb3\n          amb99\n        }\n        smallmome{\n          amo\n          ci\n        }\n        buy{\n          ambb\n          ambb5\n          ww6\n          ww7\n        }\n        mome{\n          amb14\n          amb15\n          amb13\n          amb55\n        }\n        other{\n          amo\n          amo1\n        }\n      }\n    }\n  }\n}\n`;\nexport default function Dashboard() {\n  _s();\n\n  const [lastdata, setLastdata] = useState();\n  const [result, reexecuteQuery] = useQuery({\n    query: TodosQuery\n  });\n  const {\n    data,\n    fetching,\n    err\n  } = result;\n\n  const refresh = () => {\n    // Refetch the query and skip the cache\n    reexecuteQuery({\n      requestPolicy: 'network-only'\n    });\n  };\n\n  const [error, setError] = useState(\"\");\n  const {\n    currentUser,\n    logout\n  } = useAuth();\n  const history = useHistory();\n\n  async function handleLogout() {\n    setError(\"\");\n\n    try {\n      await logout();\n      history.push(\"/auth\");\n    } catch {\n      setError(\"Failed to log out\");\n    }\n  }\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (data !== lastdata) {\n        setLastdata(data);\n      }\n\n      refresh();\n    }, 10000);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-center mb-4\",\n          children: !fetching ? data.crypto.map(data => data.name + \" \" + data.time) : \"Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), \" \", currentUser.email, /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"link\",\n          onClick: handleLogout,\n          children: \"Log Out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-100 text-center mt-2\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: fetching && !data ? data !== lastdata ? data.crypto.map(data => /*#__PURE__*/_jsxDEV(Graphs, {\n            data: data\n          }, \"{data}\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 87\n          }, this)) : \"\" : data.crypto.map(data => /*#__PURE__*/_jsxDEV(Graphs, {\n            data: data\n          }, \"{data}\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 154\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Dashboard, \"MNtMCTi3dyrFswUJxvZrxzha6A0=\", false, function () {\n  return [useQuery, useAuth, useHistory];\n});\n\n_c = Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["C:/Users/chena/reactgun/my-app/src/dasbord.js"],"names":["React","useState","useEffect","Card","Button","Alert","useAuth","Link","useHistory","useQuery","client","ssrCache","Graphs","TypeChooser","TodosQuery","Dashboard","lastdata","setLastdata","result","reexecuteQuery","query","data","fetching","err","refresh","requestPolicy","error","setError","currentUser","logout","history","handleLogout","push","interval","setInterval","clearInterval","crypto","map","name","time","email"],"mappings":"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","sourcesContent":["import React, { useState ,useEffect } from \"react\"\r\nimport { Card, Button, Alert } from \"react-bootstrap\"\r\nimport { useAuth } from \"./AuthContexte\"\r\nimport { Link, useHistory } from \"react-router-dom\"\r\nimport { useQuery } from \"urql\";\r\nimport { client, ssrCache } from \"../src/urqlClient\";\r\nimport Graphs from \"./graphh\"\r\nimport { TypeChooser } from \"react-stockcharts/lib/helper\";\r\nconst TodosQuery = `\r\nquery {\r\n  crypto {\r\n    name\r\n    time\r\n\t\tdata{\r\n    hcl{\r\n      opentime\r\n      Open\r\n      High\r\n      Low\r\n      Close\r\n    \tVolume\r\n      \r\n    }\r\n      formula{\r\n        rsi\r\n        rsiK\r\n        rsiD\r\n        aroonu\r\n        aroond\r\n        macd\r\n        histogram\r\n      }\r\n      ai{\r\n        bigmome{\r\n          BUY2\r\n          BUY1\r\n          ambi\r\n        }\r\n        sell{\r\n          amb0\r\n          amb1\r\n          amb2\r\n          amb3\r\n          amb99\r\n        }\r\n        smallmome{\r\n          amo\r\n          ci\r\n        }\r\n        buy{\r\n          ambb\r\n          ambb5\r\n          ww6\r\n          ww7\r\n        }\r\n        mome{\r\n          amb14\r\n          amb15\r\n          amb13\r\n          amb55\r\n        }\r\n        other{\r\n          amo\r\n          amo1\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n`;\r\nexport default function Dashboard() {\r\n    const [lastdata, setLastdata] = useState();\r\n    const [result, reexecuteQuery] = useQuery({\r\n        query: TodosQuery,\r\n      });\r\n      const { data, fetching, err } = result;\r\n      const refresh = () => {\r\n        // Refetch the query and skip the cache\r\n        reexecuteQuery({ requestPolicy: 'network-only' });\r\n      };\r\n    \r\n    const [error, setError] = useState(\"\")\r\n    const { currentUser, logout } = useAuth()\r\n    const history = useHistory()\r\n\r\n    async function handleLogout() {\r\n        setError(\"\")\r\n\r\n        try {\r\n            await logout()\r\n            history.push(\"/auth\")\r\n        } catch {\r\n            setError(\"Failed to log out\")\r\n        }\r\n    }\r\n    useEffect(() => {\r\n      const interval = setInterval(() => {\r\n        if(data !== lastdata){\r\n          setLastdata(data)\r\n        }\r\n       \r\n        refresh()\r\n      }, 10000);\r\n      return () => clearInterval(interval);\r\n    }, []);\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h2 className=\"text-center mb-4\">{!fetching ? data.crypto.map(data => data.name + \" \"+data.time) : \"Profile\" }</h2>\r\n                    {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                    <strong>Email:</strong> {currentUser.email}\r\n                    <Button variant=\"link\" onClick={handleLogout}>\r\n                    Log Out\r\n                    \r\n        </Button>\r\n                </Card.Body>\r\n            </Card>\r\n            <div className=\"w-100 text-center mt-2\">\r\n             \r\n      \r\n        <div ><pre >{(fetching && !data)?  data!==lastdata ? data.crypto.map(data =>  <Graphs key=\"{data}\"data ={data} />) :\"\" :data.crypto.map(data =>  <Graphs key=\"{data}\"data ={data} />) }</pre></div>\r\n   \r\n            </div>\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}