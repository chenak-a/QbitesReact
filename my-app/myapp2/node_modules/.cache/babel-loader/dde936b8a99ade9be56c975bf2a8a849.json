{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _GenericChartComponent = require(\"../../GenericChartComponent\");\n\nvar _GenericChartComponent2 = _interopRequireDefault(_GenericChartComponent);\n\nvar _GenericComponent = require(\"../../GenericComponent\");\n\nvar _utils = require(\"../../utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ClickableCircle = function (_Component) {\n  _inherits(ClickableCircle, _Component);\n\n  function ClickableCircle(props) {\n    _classCallCheck(this, ClickableCircle);\n\n    var _this = _possibleConstructorReturn(this, (ClickableCircle.__proto__ || Object.getPrototypeOf(ClickableCircle)).call(this, props));\n\n    _this.saveNode = _this.saveNode.bind(_this);\n    _this.renderSVG = _this.renderSVG.bind(_this);\n    _this.drawOnCanvas = _this.drawOnCanvas.bind(_this);\n    _this.isHover = _this.isHover.bind(_this);\n    return _this;\n  }\n\n  _createClass(ClickableCircle, [{\n    key: \"saveNode\",\n    value: function saveNode(node) {\n      this.node = node;\n    }\n  }, {\n    key: \"isHover\",\n    value: function isHover(moreProps) {\n      var mouseXY = moreProps.mouseXY; // const { r } = this.props;\n\n      var r = this.props.r + 7;\n\n      var _helper = helper(this.props, moreProps),\n          _helper2 = _slicedToArray(_helper, 2),\n          x = _helper2[0],\n          y = _helper2[1];\n\n      var _mouseXY = _slicedToArray(mouseXY, 2),\n          mx = _mouseXY[0],\n          my = _mouseXY[1];\n\n      var hover = x - r < mx && mx < x + r && y - r < my && my < y + r; // console.log(\"hover->\", hover);\n\n      return hover;\n    }\n  }, {\n    key: \"drawOnCanvas\",\n    value: function drawOnCanvas(ctx, moreProps) {\n      var _props = this.props,\n          stroke = _props.stroke,\n          strokeWidth = _props.strokeWidth,\n          fill = _props.fill;\n      var _props2 = this.props,\n          fillOpacity = _props2.fillOpacity,\n          strokeOpacity = _props2.strokeOpacity;\n      var r = this.props.r;\n\n      var _helper3 = helper(this.props, moreProps),\n          _helper4 = _slicedToArray(_helper3, 2),\n          x = _helper4[0],\n          y = _helper4[1];\n\n      ctx.lineWidth = strokeWidth;\n      ctx.fillStyle = (0, _utils.hexToRGBA)(fill, fillOpacity);\n      ctx.strokeStyle = (0, _utils.hexToRGBA)(stroke, strokeOpacity);\n      ctx.beginPath();\n      ctx.arc(x, y, r, 0, 2 * Math.PI, false);\n      ctx.fill();\n      ctx.stroke();\n    }\n  }, {\n    key: \"renderSVG\",\n    value: function renderSVG(moreProps) {\n      var _props3 = this.props,\n          stroke = _props3.stroke,\n          strokeWidth = _props3.strokeWidth,\n          fill = _props3.fill;\n      var _props4 = this.props,\n          fillOpacity = _props4.fillOpacity,\n          strokeOpacity = _props4.strokeOpacity;\n      var r = this.props.r;\n\n      var _helper5 = helper(this.props, moreProps),\n          _helper6 = _slicedToArray(_helper5, 2),\n          x = _helper6[0],\n          y = _helper6[1];\n\n      return _react2.default.createElement(\"circle\", {\n        cx: x,\n        cy: y,\n        r: r,\n        strokeWidth: strokeWidth,\n        stroke: stroke,\n        strokeOpacity: strokeOpacity,\n        fill: fill,\n        fillOpacity: fillOpacity\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var interactiveCursorClass = this.props.interactiveCursorClass;\n      var show = this.props.show;\n      var _props5 = this.props,\n          onDragStart = _props5.onDragStart,\n          onDrag = _props5.onDrag,\n          onDragComplete = _props5.onDragComplete;\n      return show ? _react2.default.createElement(_GenericChartComponent2.default, {\n        ref: this.saveNode,\n        interactiveCursorClass: interactiveCursorClass,\n        selected: true,\n        isHover: this.isHover,\n        onDragStart: onDragStart,\n        onDrag: onDrag,\n        onDragComplete: onDragComplete,\n        svgDraw: this.renderSVG,\n        canvasDraw: this.drawOnCanvas,\n        canvasToDraw: _GenericComponent.getMouseCanvas,\n        drawOn: [\"pan\", \"mousemove\", \"drag\"]\n      }) : null;\n    }\n  }]);\n\n  return ClickableCircle;\n}(_react.Component);\n\nfunction helper(props, moreProps) {\n  var xyProvider = props.xyProvider,\n      cx = props.cx,\n      cy = props.cy;\n\n  if ((0, _utils.isDefined)(xyProvider)) {\n    return xyProvider(moreProps);\n  }\n\n  var xScale = moreProps.xScale,\n      yScale = moreProps.chartConfig.yScale;\n  var x = xScale(cx);\n  var y = yScale(cy);\n  return [x, y];\n}\n\nClickableCircle.propTypes = {\n  xyProvider: _propTypes2.default.func,\n  onDragStart: _propTypes2.default.func.isRequired,\n  onDrag: _propTypes2.default.func.isRequired,\n  onDragComplete: _propTypes2.default.func.isRequired,\n  strokeWidth: _propTypes2.default.number.isRequired,\n  stroke: _propTypes2.default.string.isRequired,\n  fill: _propTypes2.default.string.isRequired,\n  r: _propTypes2.default.number.isRequired,\n  cx: _propTypes2.default.number,\n  cy: _propTypes2.default.number,\n  className: _propTypes2.default.string.isRequired,\n  show: _propTypes2.default.bool.isRequired,\n  strokeOpacity: _propTypes2.default.number.isRequired,\n  fillOpacity: _propTypes2.default.number.isRequired,\n  interactiveCursorClass: _propTypes2.default.string\n};\nClickableCircle.defaultProps = {\n  className: \"react-stockcharts-interactive-line-edge\",\n  onDragStart: _utils.noop,\n  onDrag: _utils.noop,\n  onDragComplete: _utils.noop,\n  onMove: _utils.noop,\n  show: false,\n  fillOpacity: 1,\n  strokeOpacity: 1\n};\nexports.default = ClickableCircle;","map":{"version":3,"sources":["../../../../src/lib/interactive/components/ClickableCircle.js"],"names":["ClickableCircle","node","moreProps","mouseXY","r","x","y","helper","mx","my","hover","ctx","stroke","strokeWidth","fill","fillOpacity","strokeOpacity","Math","interactiveCursorClass","show","onDragStart","onDrag","onDragComplete","xyProvider","cx","cy","props","xScale","yScale","className","string","onMove"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport GenericChartComponent from \"../../GenericChartComponent\";\nimport { getMouseCanvas } from \"../../GenericComponent\";\n\nimport { isDefined, noop, hexToRGBA } from \"../../utils\";\n\nclass ClickableCircle extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.saveNode = this.saveNode.bind(this);\n\t\tthis.renderSVG = this.renderSVG.bind(this);\n\t\tthis.drawOnCanvas = this.drawOnCanvas.bind(this);\n\t\tthis.isHover = this.isHover.bind(this);\n\t}\n\tsaveNode(node) {\n\t\tthis.node = node;\n\t}\n\tisHover(moreProps) {\n\t\tconst { mouseXY } = moreProps;\n\t\t// const { r } = this.props;\n\t\tconst r = this.props.r + 7;\n\t\tconst [x, y] = helper(this.props, moreProps);\n\n\t\tconst [mx, my] = mouseXY;\n\t\tconst hover = (x - r) < mx && mx < (x + r)\n\t\t\t&& (y - r) < my && my < (y + r);\n\n\t\t// console.log(\"hover->\", hover);\n\t\treturn hover;\n\t}\n\tdrawOnCanvas(ctx, moreProps) {\n\t\tconst { stroke, strokeWidth, fill } = this.props;\n\t\tconst { fillOpacity, strokeOpacity } = this.props;\n\t\tconst { r } = this.props;\n\n\t\tconst [x, y] = helper(this.props, moreProps);\n\n\t\tctx.lineWidth = strokeWidth;\n\t\tctx.fillStyle = hexToRGBA(fill, fillOpacity);\n\t\tctx.strokeStyle = hexToRGBA(stroke, strokeOpacity);\n\n\t\tctx.beginPath();\n\t\tctx.arc(x, y, r, 0, 2 * Math.PI, false);\n\t\tctx.fill();\n\t\tctx.stroke();\n\t}\n\trenderSVG(moreProps) {\n\t\tconst { stroke, strokeWidth, fill } = this.props;\n\t\tconst { fillOpacity, strokeOpacity } = this.props;\n\t\tconst { r } = this.props;\n\n\t\tconst [x, y] = helper(this.props, moreProps);\n\n\t\treturn <circle cx={x} cy={y} r={r}\n\t\t\tstrokeWidth={strokeWidth}\n\t\t\tstroke={stroke}\n\t\t\tstrokeOpacity={strokeOpacity}\n\t\t\tfill={fill}\n\t\t\tfillOpacity={fillOpacity}\n\t\t/>;\n\t}\n\trender() {\n\t\tconst { interactiveCursorClass } = this.props;\n\t\tconst { show } = this.props;\n\t\tconst { onDragStart, onDrag, onDragComplete } = this.props;\n\n\t\treturn show\n\t\t\t? <GenericChartComponent ref={this.saveNode}\n\t\t\t\tinteractiveCursorClass={interactiveCursorClass}\n\t\t\t\tselected\n\t\t\t\tisHover={this.isHover}\n\n\t\t\t\tonDragStart={onDragStart}\n\t\t\t\tonDrag={onDrag}\n\t\t\t\tonDragComplete={onDragComplete}\n\n\t\t\t\tsvgDraw={this.renderSVG}\n\n\t\t\t\tcanvasDraw={this.drawOnCanvas}\n\t\t\t\tcanvasToDraw={getMouseCanvas}\n\n\t\t\t\tdrawOn={[\"pan\", \"mousemove\", \"drag\"]}\n\t\t\t/>\n\t\t\t: null;\n\t}\n}\n\nfunction helper(props, moreProps) {\n\tconst { xyProvider, cx, cy } = props;\n\n\tif (isDefined(xyProvider)) {\n\t\treturn xyProvider(moreProps);\n\t}\n\n\tconst { xScale, chartConfig: { yScale } } = moreProps;\n\n\tconst x = xScale(cx);\n\tconst y = yScale(cy);\n\treturn [x, y];\n\n}\nClickableCircle.propTypes = {\n\txyProvider: PropTypes.func,\n\n\tonDragStart: PropTypes.func.isRequired,\n\tonDrag: PropTypes.func.isRequired,\n\tonDragComplete: PropTypes.func.isRequired,\n\tstrokeWidth: PropTypes.number.isRequired,\n\tstroke: PropTypes.string.isRequired,\n\tfill: PropTypes.string.isRequired,\n\tr: PropTypes.number.isRequired,\n\n\tcx: PropTypes.number,\n\tcy: PropTypes.number,\n\n\tclassName: PropTypes.string.isRequired,\n\tshow: PropTypes.bool.isRequired,\n\tstrokeOpacity: PropTypes.number.isRequired,\n\tfillOpacity: PropTypes.number.isRequired,\n\tinteractiveCursorClass: PropTypes.string,\n};\n\n\nClickableCircle.defaultProps = {\n\tclassName: \"react-stockcharts-interactive-line-edge\",\n\tonDragStart: noop,\n\tonDrag: noop,\n\tonDragComplete: noop,\n\tonMove: noop,\n\tshow: false,\n\tfillOpacity: 1,\n\tstrokeOpacity: 1,\n};\n\nexport default ClickableCircle;\n"]},"metadata":{},"sourceType":"script"}