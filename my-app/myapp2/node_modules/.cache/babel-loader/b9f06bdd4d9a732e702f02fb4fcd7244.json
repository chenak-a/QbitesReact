{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chena\\\\reactgun\\\\my-app\\\\src\\\\graphh.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from \"prop-types\";\nimport { scaleTime } from \"d3-scale\";\nimport { utcDay } from \"d3-time\";\nimport { utcHour } from \"d3-time\";\nimport { ChartCanvas, Chart } from \"react-stockcharts\";\nimport { CandlestickSeries } from \"react-stockcharts/lib/series\";\nimport { XAxis, YAxis } from \"react-stockcharts/lib/axes\";\nimport { fitWidth } from \"react-stockcharts/lib/helper\";\nimport { last, timeIntervalBarWidth } from \"react-stockcharts/lib/utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Graphh(props) {\n  _s();\n\n  const [datae, setData] = useState([]);\n  const [loading, setLoding] = useState(false);\n  useEffect(() => {\n    loopData(props.data.data.hcl);\n  }, [loading]);\n\n  const loopData = hcl => {\n    var array = [];\n    var OpenLen = hcl.Open.length;\n\n    for (var i = 0; i < OpenLen; i++) {\n      array.push({\n        date: new Date(props.data.data.hcl.opentime[i]),\n        open: hcl.Open[i],\n        high: hcl.High[i],\n        low: hcl.Low[i],\n        close: hcl.Close[i],\n        volume: hcl.Volume[i]\n      });\n    }\n\n    setData(array);\n    setLoding(true);\n  }; // console.log(new Date(props.data.data.hcl.opentime[0]))\n\n\n  function xAccessor(d) {\n    if (d != null) {\n      console.log(d);\n      return d.date;\n    }\n  }\n\n  const xExtents = [xAccessor(last(datae)), xAccessor(datae[datae.length - 100])];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(ChartCanvas, {\n      height: 400,\n      ratio: 5,\n      width: 800,\n      type: \"svg\",\n      margin: {\n        left: 50,\n        right: 50,\n        top: 10,\n        bottom: 30\n      },\n      data: datae,\n      xAccessor: xAccessor(datae),\n      xScale: scaleTime(),\n      xExtents: xExtents,\n      children: /*#__PURE__*/_jsxDEV(Chart, {\n        id: 1,\n        yExtents: d => [d.high, d.low],\n        children: [/*#__PURE__*/_jsxDEV(XAxis, {\n          axisAt: \"bottom\",\n          orient: \"bottom\",\n          ticks: 10\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          axisAt: \"left\",\n          orient: \"left\",\n          ticks: 10\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(CandlestickSeries, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 23\n    }, this) : \"loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Graphh, \"Usyte5Dbtm8vS6kQWr7xO5vEAOg=\");\n\n_c = Graphh;\nexport default Graphh;\n\nvar _c;\n\n$RefreshReg$(_c, \"Graphh\");","map":{"version":3,"sources":["C:/Users/chena/reactgun/my-app/src/graphh.js"],"names":["React","useEffect","useState","PropTypes","scaleTime","utcDay","utcHour","ChartCanvas","Chart","CandlestickSeries","XAxis","YAxis","fitWidth","last","timeIntervalBarWidth","Graphh","props","datae","setData","loading","setLoding","loopData","data","hcl","array","OpenLen","Open","length","i","push","date","Date","opentime","open","high","High","low","Low","close","Close","volume","Volume","xAccessor","d","console","log","xExtents","left","right","top","bottom"],"mappings":"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","sourcesContent":["import React, { useEffect ,useState } from 'react';\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { scaleTime } from \"d3-scale\";\r\nimport { utcDay } from \"d3-time\";\r\nimport { utcHour  } from \"d3-time\";\r\nimport { ChartCanvas, Chart } from \"react-stockcharts\";\r\nimport { CandlestickSeries } from \"react-stockcharts/lib/series\";\r\nimport { XAxis, YAxis } from \"react-stockcharts/lib/axes\";\r\nimport { fitWidth } from \"react-stockcharts/lib/helper\";\r\nimport { last, timeIntervalBarWidth } from \"react-stockcharts/lib/utils\";\r\n\r\n\r\nfunction Graphh(props) {\r\n    const [datae, setData] = useState([]);\r\n  \r\n    const [loading ,setLoding] = useState(false)\r\n    useEffect(()=>{\r\n        loopData(props.data.data.hcl);\r\n        \r\n    },[loading])\r\n    \r\n    const loopData = (hcl) => {\r\n        var array = [];\r\n        var OpenLen = hcl.Open.length;\r\n        \r\n       \r\n        for( var i = 0; i < OpenLen; i++){\r\n            array.push({ date: new Date(props.data.data.hcl.opentime[i]),  open : hcl.Open[i], high: hcl.High[i], low : hcl.Low[i],close: hcl.Close[i],volume : hcl.Volume[i]})\r\n        }\r\n        setData(array)\r\n        setLoding(true)\r\n     \r\n       \r\n    }\r\n    \r\n    // console.log(new Date(props.data.data.hcl.opentime[0]))\r\n  \r\n    function xAccessor(d) {\r\n        if (d != null){\r\n            console.log(d)\r\n            return d.date\r\n        }\r\n      }\r\n    const xExtents = [\r\n        xAccessor(last(datae)),\r\n        xAccessor(datae[datae.length - 100])\r\n    ];\r\n\r\n    return (\r\n        <div>\r\n       \t   {loading ? <ChartCanvas height={400}\r\n\t\t\t\t\tratio={5}\r\n\t\t\t\t\twidth={800}\r\n\t\t\t\t\t\r\n\t\t\t\t\ttype={\"svg\"}\r\n                    margin={{ left: 50, right: 50, top: 10, bottom: 30 }}\r\n\r\n\t\t\t\t\tdata={datae}\r\n\t\t\t\t\txAccessor={xAccessor (datae)}\r\n\t\t\t\t\txScale={scaleTime()}\r\n                    \r\n\t\t\t\t\txExtents={xExtents}>\r\n\r\n\t\t\t\t<Chart id={1} yExtents={d => [d.high, d.low]}>\r\n\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" ticks={10}/>\r\n\t\t\t\t\t<YAxis axisAt=\"left\" orient=\"left\" ticks={10} />\r\n\t\t\t\t\t<CandlestickSeries />\r\n\t\t\t\t</Chart>\r\n\t\t\t</ChartCanvas> : \"loading\"}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Graphh\r\n"]},"metadata":{},"sourceType":"module"}