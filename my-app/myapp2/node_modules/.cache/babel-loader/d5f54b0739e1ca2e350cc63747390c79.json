{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _d3Collection = require(\"d3-collection\");\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _GenericChartComponent = require(\"../GenericChartComponent\");\n\nvar _GenericChartComponent2 = _interopRequireDefault(_GenericChartComponent);\n\nvar _GenericComponent = require(\"../GenericComponent\");\n\nvar _utils = require(\"../utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar CandlestickSeries = function (_Component) {\n  _inherits(CandlestickSeries, _Component);\n\n  function CandlestickSeries(props) {\n    _classCallCheck(this, CandlestickSeries);\n\n    var _this = _possibleConstructorReturn(this, (CandlestickSeries.__proto__ || Object.getPrototypeOf(CandlestickSeries)).call(this, props));\n\n    _this.renderSVG = _this.renderSVG.bind(_this);\n    _this.drawOnCanvas = _this.drawOnCanvas.bind(_this);\n    return _this;\n  }\n\n  _createClass(CandlestickSeries, [{\n    key: \"drawOnCanvas\",\n    value: function drawOnCanvas(ctx, moreProps) {\n      _drawOnCanvas(ctx, this.props, moreProps);\n    }\n  }, {\n    key: \"renderSVG\",\n    value: function renderSVG(moreProps) {\n      var _props = this.props,\n          className = _props.className,\n          wickClassName = _props.wickClassName,\n          candleClassName = _props.candleClassName;\n      var xScale = moreProps.xScale,\n          yScale = moreProps.chartConfig.yScale,\n          plotData = moreProps.plotData,\n          xAccessor = moreProps.xAccessor;\n      var candleData = getCandleData(this.props, xAccessor, xScale, yScale, plotData);\n      return _react2.default.createElement(\"g\", {\n        className: className\n      }, _react2.default.createElement(\"g\", {\n        className: wickClassName,\n        key: \"wicks\"\n      }, getWicksSVG(candleData)), _react2.default.createElement(\"g\", {\n        className: candleClassName,\n        key: \"candles\"\n      }, getCandlesSVG(this.props, candleData)));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var clip = this.props.clip;\n      return _react2.default.createElement(_GenericChartComponent2.default, {\n        clip: clip,\n        svgDraw: this.renderSVG,\n        canvasDraw: this.drawOnCanvas,\n        canvasToDraw: _GenericComponent.getAxisCanvas,\n        drawOn: [\"pan\"]\n      });\n    }\n  }]);\n\n  return CandlestickSeries;\n}(_react.Component);\n\nCandlestickSeries.propTypes = {\n  className: _propTypes2.default.string,\n  wickClassName: _propTypes2.default.string,\n  candleClassName: _propTypes2.default.string,\n  widthRatio: _propTypes2.default.number,\n  width: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.func]),\n  classNames: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.string]),\n  fill: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.string]),\n  stroke: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.string]),\n  wickStroke: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.string]),\n  yAccessor: _propTypes2.default.func,\n  clip: _propTypes2.default.bool\n};\nCandlestickSeries.defaultProps = {\n  className: \"react-stockcharts-candlestick\",\n  wickClassName: \"react-stockcharts-candlestick-wick\",\n  candleClassName: \"react-stockcharts-candlestick-candle\",\n  yAccessor: function yAccessor(d) {\n    return {\n      open: d.open,\n      high: d.high,\n      low: d.low,\n      close: d.close\n    };\n  },\n  classNames: function classNames(d) {\n    return d.close > d.open ? \"up\" : \"down\";\n  },\n  width: _utils.plotDataLengthBarWidth,\n  wickStroke: \"#000000\",\n  // wickStroke: d => d.close > d.open ? \"#6BA583\" : \"#FF0000\",\n  fill: function fill(d) {\n    return d.close > d.open ? \"#6BA583\" : \"#FF0000\";\n  },\n  // stroke: d => d.close > d.open ? \"#6BA583\" : \"#FF0000\",\n  stroke: \"#000000\",\n  candleStrokeWidth: 0.5,\n  // stroke: \"none\",\n  widthRatio: 0.8,\n  opacity: 0.5,\n  clip: true\n};\n\nfunction getWicksSVG(candleData) {\n  var wicks = candleData.map(function (each, idx) {\n    var d = each.wick;\n    return _react2.default.createElement(\"path\", {\n      key: idx,\n      className: each.className,\n      stroke: d.stroke,\n      d: \"M\" + d.x + \",\" + d.y1 + \" L\" + d.x + \",\" + d.y2 + \" M\" + d.x + \",\" + d.y3 + \" L\" + d.x + \",\" + d.y4\n    });\n  });\n  return wicks;\n}\n\nfunction getCandlesSVG(props, candleData) {\n  /* eslint-disable react/prop-types */\n  var opacity = props.opacity,\n      candleStrokeWidth = props.candleStrokeWidth;\n  /* eslint-enable react/prop-types */\n\n  var candles = candleData.map(function (d, idx) {\n    if (d.width <= 1) return _react2.default.createElement(\"line\", {\n      className: d.className,\n      key: idx,\n      x1: d.x,\n      y1: d.y,\n      x2: d.x,\n      y2: d.y + d.height,\n      stroke: d.fill\n    });else if (d.height === 0) return _react2.default.createElement(\"line\", {\n      key: idx,\n      x1: d.x,\n      y1: d.y,\n      x2: d.x + d.width,\n      y2: d.y + d.height,\n      stroke: d.fill\n    });\n    return _react2.default.createElement(\"rect\", {\n      key: idx,\n      className: d.className,\n      fillOpacity: opacity,\n      x: d.x,\n      y: d.y,\n      width: d.width,\n      height: d.height,\n      fill: d.fill,\n      stroke: d.stroke,\n      strokeWidth: candleStrokeWidth\n    });\n  });\n  return candles;\n}\n\nfunction _drawOnCanvas(ctx, props, moreProps) {\n  var opacity = props.opacity,\n      candleStrokeWidth = props.candleStrokeWidth;\n  var xScale = moreProps.xScale,\n      yScale = moreProps.chartConfig.yScale,\n      plotData = moreProps.plotData,\n      xAccessor = moreProps.xAccessor; // const wickData = getWickData(props, xAccessor, xScale, yScale, plotData);\n\n  var candleData = getCandleData(props, xAccessor, xScale, yScale, plotData);\n  var wickNest = (0, _d3Collection.nest)().key(function (d) {\n    return d.wick.stroke;\n  }).entries(candleData);\n  wickNest.forEach(function (outer) {\n    var key = outer.key,\n        values = outer.values;\n    ctx.strokeStyle = key;\n    ctx.fillStyle = key;\n    values.forEach(function (each) {\n      /*\n      ctx.moveTo(d.x, d.y1);\n      ctx.lineTo(d.x, d.y2);\n      \tctx.beginPath();\n      ctx.moveTo(d.x, d.y3);\n      ctx.lineTo(d.x, d.y4);\n      ctx.stroke(); */\n      var d = each.wick;\n      ctx.fillRect(d.x - 0.5, d.y1, 1, d.y2 - d.y1);\n      ctx.fillRect(d.x - 0.5, d.y3, 1, d.y4 - d.y3);\n    });\n  }); // const candleData = getCandleData(props, xAccessor, xScale, yScale, plotData);\n\n  var candleNest = (0, _d3Collection.nest)().key(function (d) {\n    return d.stroke;\n  }).key(function (d) {\n    return d.fill;\n  }).entries(candleData);\n  candleNest.forEach(function (outer) {\n    var strokeKey = outer.key,\n        strokeValues = outer.values;\n\n    if (strokeKey !== \"none\") {\n      ctx.strokeStyle = strokeKey;\n      ctx.lineWidth = candleStrokeWidth;\n    }\n\n    strokeValues.forEach(function (inner) {\n      var key = inner.key,\n          values = inner.values;\n      var fillStyle = (0, _utils.head)(values).width <= 1 ? key : (0, _utils.hexToRGBA)(key, opacity);\n      ctx.fillStyle = fillStyle;\n      values.forEach(function (d) {\n        if (d.width <= 1) {\n          // <line className={d.className} key={idx} x1={d.x} y1={d.y} x2={d.x} y2={d.y + d.height}/>\n\n          /*\n          ctx.beginPath();\n          ctx.moveTo(d.x, d.y);\n          ctx.lineTo(d.x, d.y + d.height);\n          ctx.stroke();\n          */\n          ctx.fillRect(d.x - 0.5, d.y, 1, d.height);\n        } else if (d.height === 0) {\n          // <line key={idx} x1={d.x} y1={d.y} x2={d.x + d.width} y2={d.y + d.height} />\n\n          /*\n          ctx.beginPath();\n          ctx.moveTo(d.x, d.y);\n          ctx.lineTo(d.x + d.width, d.y + d.height);\n          ctx.stroke();\n          */\n          ctx.fillRect(d.x, d.y - 0.5, d.width, 1);\n        } else {\n          /*\n          ctx.beginPath();\n          ctx.rect(d.x, d.y, d.width, d.height);\n          ctx.closePath();\n          ctx.fill();\n          if (strokeKey !== \"none\") ctx.stroke();\n          */\n          ctx.fillRect(d.x, d.y, d.width, d.height);\n          if (strokeKey !== \"none\") ctx.strokeRect(d.x, d.y, d.width, d.height);\n        }\n      });\n    });\n  });\n}\n/*\nfunction getWickData(props, xAccessor, xScale, yScale, plotData) {\n\n\tconst { classNames: classNameProp, wickStroke: wickStrokeProp, yAccessor } = props;\n\tconst wickStroke = functor(wickStrokeProp);\n\tconst className = functor(classNameProp);\n\tconst wickData = plotData\n\t\t\t.filter(d => isDefined(yAccessor(d).close))\n\t\t\t.map(d => {\n\t\t\t\t// console.log(yAccessor);\n\t\t\t\tconst ohlc = yAccessor(d);\n\n\t\t\t\tconst x = Math.round(xScale(xAccessor(d))),\n\t\t\t\t\ty1 = yScale(ohlc.high),\n\t\t\t\t\ty2 = yScale(Math.max(ohlc.open, ohlc.close)),\n\t\t\t\t\ty3 = yScale(Math.min(ohlc.open, ohlc.close)),\n\t\t\t\t\ty4 = yScale(ohlc.low);\n\n\t\t\t\treturn {\n\t\t\t\t\tx,\n\t\t\t\t\ty1,\n\t\t\t\t\ty2,\n\t\t\t\t\ty3,\n\t\t\t\t\ty4,\n\t\t\t\t\tclassName: className(ohlc),\n\t\t\t\t\tdirection: (ohlc.close - ohlc.open),\n\t\t\t\t\tstroke: wickStroke(ohlc),\n\t\t\t\t};\n\t\t\t});\n\treturn wickData;\n}\n*/\n\n\nfunction getCandleData(props, xAccessor, xScale, yScale, plotData) {\n  var wickStrokeProp = props.wickStroke;\n  var wickStroke = (0, _utils.functor)(wickStrokeProp);\n  var classNames = props.classNames,\n      fillProp = props.fill,\n      strokeProp = props.stroke,\n      yAccessor = props.yAccessor;\n  var className = (0, _utils.functor)(classNames);\n  var fill = (0, _utils.functor)(fillProp);\n  var stroke = (0, _utils.functor)(strokeProp);\n  var widthFunctor = (0, _utils.functor)(props.width);\n  var width = widthFunctor(props, {\n    xScale: xScale,\n    xAccessor: xAccessor,\n    plotData: plotData\n  });\n  /*\n  const candleWidth = Math.round(width);\n  const offset = Math.round(candleWidth === 1 ? 0 : 0.5 * width);\n  */\n\n  var trueOffset = 0.5 * width;\n  var offset = trueOffset > 0.7 ? Math.round(trueOffset) : Math.floor(trueOffset); // eslint-disable-next-line prefer-const\n\n  var candles = [];\n\n  for (var i = 0; i < plotData.length; i++) {\n    var d = plotData[i];\n\n    if ((0, _utils.isDefined)(yAccessor(d).close)) {\n      var x = Math.round(xScale(xAccessor(d))); // const x = Math.round(xScale(xAccessor(d)) - offset);\n\n      var ohlc = yAccessor(d);\n      var y = Math.round(yScale(Math.max(ohlc.open, ohlc.close)));\n      var height = Math.round(Math.abs(yScale(ohlc.open) - yScale(ohlc.close)));\n      candles.push({\n        // type: \"line\"\n        x: x - offset,\n        y: y,\n        wick: {\n          stroke: wickStroke(ohlc),\n          x: x,\n          y1: Math.round(yScale(ohlc.high)),\n          y2: y,\n          y3: y + height,\n          // Math.round(yScale(Math.min(ohlc.open, ohlc.close))),\n          y4: Math.round(yScale(ohlc.low))\n        },\n        height: height,\n        width: offset * 2,\n        className: className(ohlc),\n        fill: fill(ohlc),\n        stroke: stroke(ohlc),\n        direction: ohlc.close - ohlc.open\n      });\n    }\n  }\n\n  return candles;\n}\n\nexports.default = CandlestickSeries;","map":{"version":3,"sources":["../../../src/lib/series/CandlestickSeries.js"],"names":["CandlestickSeries","ctx","moreProps","drawOnCanvas","className","wickClassName","candleClassName","xScale","yScale","plotData","xAccessor","candleData","getCandleData","getWicksSVG","getCandlesSVG","clip","widthRatio","width","classNames","fill","stroke","wickStroke","yAccessor","bool","open","d","high","low","close","candleStrokeWidth","opacity","wicks","each","props","candles","wickNest","key","values","outer","candleNest","strokeKey","strokeValues","inner","fillStyle","wickStrokeProp","fillProp","strokeProp","widthFunctor","trueOffset","offset","Math","i","x","ohlc","y","height","wick","y1","y2","y3","y4","direction"],"mappings":"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","sourcesContent":["\n\nimport { nest } from \"d3-collection\";\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport GenericChartComponent from \"../GenericChartComponent\";\nimport { getAxisCanvas } from \"../GenericComponent\";\n\nimport {\n\thexToRGBA, isDefined, functor, plotDataLengthBarWidth, head\n} from \"../utils\";\n\nclass CandlestickSeries extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.renderSVG = this.renderSVG.bind(this);\n\t\tthis.drawOnCanvas = this.drawOnCanvas.bind(this);\n\t}\n\tdrawOnCanvas(ctx, moreProps) {\n\t\tdrawOnCanvas(ctx, this.props, moreProps);\n\t}\n\trenderSVG(moreProps) {\n\t\tconst { className, wickClassName, candleClassName } = this.props;\n\t\tconst { xScale, chartConfig: { yScale }, plotData, xAccessor } = moreProps;\n\n\t\tconst candleData = getCandleData(this.props, xAccessor, xScale, yScale, plotData);\n\n\t\treturn <g className={className}>\n\t\t\t<g className={wickClassName} key=\"wicks\">\n\t\t\t\t{getWicksSVG(candleData)}\n\t\t\t</g>\n\t\t\t<g className={candleClassName} key=\"candles\">\n\t\t\t\t{getCandlesSVG(this.props, candleData)}\n\t\t\t</g>\n\t\t</g>;\n\t}\n\n\trender() {\n\t\tconst { clip } = this.props;\n\t\treturn <GenericChartComponent\n\t\t\tclip={clip}\n\t\t\tsvgDraw={this.renderSVG}\n\t\t\tcanvasDraw={this.drawOnCanvas}\n\t\t\tcanvasToDraw={getAxisCanvas}\n\t\t\tdrawOn={[\"pan\"]}\n\t\t/>;\n\t}\n}\n\nCandlestickSeries.propTypes = {\n\tclassName: PropTypes.string,\n\twickClassName: PropTypes.string,\n\tcandleClassName: PropTypes.string,\n\twidthRatio: PropTypes.number,\n\twidth: PropTypes.oneOfType([\n\t\tPropTypes.number,\n\t\tPropTypes.func\n\t]),\n\tclassNames: PropTypes.oneOfType([\n\t\tPropTypes.func,\n\t\tPropTypes.string\n\t]),\n\tfill: PropTypes.oneOfType([\n\t\tPropTypes.func,\n\t\tPropTypes.string\n\t]),\n\tstroke: PropTypes.oneOfType([\n\t\tPropTypes.func,\n\t\tPropTypes.string\n\t]),\n\twickStroke: PropTypes.oneOfType([\n\t\tPropTypes.func,\n\t\tPropTypes.string\n\t]),\n\tyAccessor: PropTypes.func,\n\tclip: PropTypes.bool,\n};\n\nCandlestickSeries.defaultProps = {\n\tclassName: \"react-stockcharts-candlestick\",\n\twickClassName: \"react-stockcharts-candlestick-wick\",\n\tcandleClassName: \"react-stockcharts-candlestick-candle\",\n\tyAccessor: d => ({ open: d.open, high: d.high, low: d.low, close: d.close }),\n\tclassNames: d => d.close > d.open ? \"up\" : \"down\",\n\twidth: plotDataLengthBarWidth,\n\twickStroke: \"#000000\",\n\t// wickStroke: d => d.close > d.open ? \"#6BA583\" : \"#FF0000\",\n\tfill: d => d.close > d.open ? \"#6BA583\" : \"#FF0000\",\n\t// stroke: d => d.close > d.open ? \"#6BA583\" : \"#FF0000\",\n\tstroke: \"#000000\",\n\tcandleStrokeWidth: 0.5,\n\t// stroke: \"none\",\n\twidthRatio: 0.8,\n\topacity: 0.5,\n\tclip: true,\n};\n\nfunction getWicksSVG(candleData) {\n\n\tconst wicks = candleData\n\t\t.map((each, idx) => {\n\t\t\tconst d = each.wick;\n\t\t\treturn <path key={idx}\n\t\t\t\tclassName={each.className}\n\t\t\t\tstroke={d.stroke}\n\t\t\t\td={`M${d.x},${d.y1} L${d.x},${d.y2} M${d.x},${d.y3} L${d.x},${d.y4}`} />;\n\t\t});\n\n\treturn wicks;\n}\n\nfunction getCandlesSVG(props, candleData) {\n\n\t/* eslint-disable react/prop-types */\n\tconst { opacity, candleStrokeWidth } = props;\n\t/* eslint-enable react/prop-types */\n\n\tconst candles = candleData.map((d, idx) => {\n\t\tif (d.width <= 1)\n\t\t\treturn (\n\t\t\t\t<line className={d.className} key={idx}\n\t\t\t\t\tx1={d.x} y1={d.y} x2={d.x} y2={d.y + d.height}\n\t\t\t\t\tstroke={d.fill} />\n\t\t\t);\n\t\telse if (d.height === 0)\n\t\t\treturn (\n\t\t\t\t<line key={idx}\n\t\t\t\t\tx1={d.x} y1={d.y} x2={d.x + d.width} y2={d.y + d.height}\n\t\t\t\t\tstroke={d.fill} />\n\t\t\t);\n\t\treturn (\n\t\t\t<rect key={idx} className={d.className}\n\t\t\t\tfillOpacity={opacity}\n\t\t\t\tx={d.x} y={d.y} width={d.width} height={d.height}\n\t\t\t\tfill={d.fill} stroke={d.stroke} strokeWidth={candleStrokeWidth} />\n\t\t);\n\t});\n\treturn candles;\n}\n\nfunction drawOnCanvas(ctx, props, moreProps) {\n\tconst { opacity, candleStrokeWidth } = props;\n\tconst { xScale, chartConfig: { yScale }, plotData, xAccessor } = moreProps;\n\n\t// const wickData = getWickData(props, xAccessor, xScale, yScale, plotData);\n\tconst candleData = getCandleData(props, xAccessor, xScale, yScale, plotData);\n\n\tconst wickNest = nest()\n\t\t.key(d => d.wick.stroke)\n\t\t.entries(candleData);\n\n\twickNest.forEach(outer => {\n\t\tconst { key, values } = outer;\n\t\tctx.strokeStyle = key;\n\t\tctx.fillStyle = key;\n\t\tvalues.forEach(each => {\n\t\t\t/*\n\t\t\tctx.moveTo(d.x, d.y1);\n\t\t\tctx.lineTo(d.x, d.y2);\n\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(d.x, d.y3);\n\t\t\tctx.lineTo(d.x, d.y4);\n\t\t\tctx.stroke(); */\n\t\t\tconst d = each.wick;\n\n\t\t\tctx.fillRect(d.x - 0.5, d.y1, 1, d.y2 - d.y1);\n\t\t\tctx.fillRect(d.x - 0.5, d.y3, 1, d.y4 - d.y3);\n\t\t});\n\t});\n\n\t// const candleData = getCandleData(props, xAccessor, xScale, yScale, plotData);\n\n\tconst candleNest = nest()\n\t\t.key(d => d.stroke)\n\t\t.key(d => d.fill)\n\t\t.entries(candleData);\n\n\n\tcandleNest.forEach(outer => {\n\t\tconst { key: strokeKey, values: strokeValues } = outer;\n\t\tif (strokeKey !== \"none\") {\n\t\t\tctx.strokeStyle = strokeKey;\n\t\t\tctx.lineWidth = candleStrokeWidth;\n\t\t}\n\t\tstrokeValues.forEach(inner => {\n\t\t\tconst { key, values } = inner;\n\t\t\tconst fillStyle = head(values).width <= 1\n\t\t\t\t? key\n\t\t\t\t: hexToRGBA(key, opacity);\n\t\t\tctx.fillStyle = fillStyle;\n\n\t\t\tvalues.forEach(d => {\n\t\t\t\tif (d.width <= 1) {\n\t\t\t\t\t// <line className={d.className} key={idx} x1={d.x} y1={d.y} x2={d.x} y2={d.y + d.height}/>\n\t\t\t\t\t/*\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.moveTo(d.x, d.y);\n\t\t\t\t\tctx.lineTo(d.x, d.y + d.height);\n\t\t\t\t\tctx.stroke();\n\t\t\t\t\t*/\n\t\t\t\t\tctx.fillRect(d.x - 0.5, d.y, 1, d.height);\n\t\t\t\t} else if (d.height === 0) {\n\t\t\t\t\t// <line key={idx} x1={d.x} y1={d.y} x2={d.x + d.width} y2={d.y + d.height} />\n\t\t\t\t\t/*\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.moveTo(d.x, d.y);\n\t\t\t\t\tctx.lineTo(d.x + d.width, d.y + d.height);\n\t\t\t\t\tctx.stroke();\n\t\t\t\t\t*/\n\t\t\t\t\tctx.fillRect(d.x, d.y - 0.5, d.width, 1);\n\t\t\t\t} else {\n\t\t\t\t\t/*\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.rect(d.x, d.y, d.width, d.height);\n\t\t\t\t\tctx.closePath();\n\t\t\t\t\tctx.fill();\n\t\t\t\t\tif (strokeKey !== \"none\") ctx.stroke();\n\t\t\t\t\t*/\n\t\t\t\t\tctx.fillRect(d.x, d.y, d.width, d.height);\n\t\t\t\t\tif (strokeKey !== \"none\") ctx.strokeRect(d.x, d.y, d.width, d.height);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t});\n}\n/*\nfunction getWickData(props, xAccessor, xScale, yScale, plotData) {\n\n\tconst { classNames: classNameProp, wickStroke: wickStrokeProp, yAccessor } = props;\n\tconst wickStroke = functor(wickStrokeProp);\n\tconst className = functor(classNameProp);\n\tconst wickData = plotData\n\t\t\t.filter(d => isDefined(yAccessor(d).close))\n\t\t\t.map(d => {\n\t\t\t\t// console.log(yAccessor);\n\t\t\t\tconst ohlc = yAccessor(d);\n\n\t\t\t\tconst x = Math.round(xScale(xAccessor(d))),\n\t\t\t\t\ty1 = yScale(ohlc.high),\n\t\t\t\t\ty2 = yScale(Math.max(ohlc.open, ohlc.close)),\n\t\t\t\t\ty3 = yScale(Math.min(ohlc.open, ohlc.close)),\n\t\t\t\t\ty4 = yScale(ohlc.low);\n\n\t\t\t\treturn {\n\t\t\t\t\tx,\n\t\t\t\t\ty1,\n\t\t\t\t\ty2,\n\t\t\t\t\ty3,\n\t\t\t\t\ty4,\n\t\t\t\t\tclassName: className(ohlc),\n\t\t\t\t\tdirection: (ohlc.close - ohlc.open),\n\t\t\t\t\tstroke: wickStroke(ohlc),\n\t\t\t\t};\n\t\t\t});\n\treturn wickData;\n}\n*/\n\nfunction getCandleData(props, xAccessor, xScale, yScale, plotData) {\n\n\tconst { wickStroke: wickStrokeProp } = props;\n\tconst wickStroke = functor(wickStrokeProp);\n\n\tconst { classNames, fill: fillProp, stroke: strokeProp, yAccessor } = props;\n\tconst className = functor(classNames);\n\n\tconst fill = functor(fillProp);\n\tconst stroke = functor(strokeProp);\n\n\tconst widthFunctor = functor(props.width);\n\tconst width = widthFunctor(props, {\n\t\txScale,\n\t\txAccessor,\n\t\tplotData\n\t});\n\n\t/*\n\tconst candleWidth = Math.round(width);\n\tconst offset = Math.round(candleWidth === 1 ? 0 : 0.5 * width);\n\t*/\n\tconst trueOffset = 0.5 * width;\n\tconst offset = trueOffset > 0.7\n\t\t? Math.round(trueOffset)\n\t\t: Math.floor(trueOffset);\n\n\t// eslint-disable-next-line prefer-const\n\tlet candles = [];\n\n\tfor (let i = 0; i < plotData.length; i++) {\n\t\tconst d = plotData[i];\n\t\tif (isDefined(yAccessor(d).close)) {\n\t\t\tconst x = Math.round(xScale(xAccessor(d)));\n\t\t\t// const x = Math.round(xScale(xAccessor(d)) - offset);\n\n\t\t\tconst ohlc = yAccessor(d);\n\t\t\tconst y = Math.round(yScale(Math.max(ohlc.open, ohlc.close)));\n\t\t\tconst height = Math.round(Math.abs(yScale(ohlc.open) - yScale(ohlc.close)));\n\n\t\t\tcandles.push({\n\t\t\t\t// type: \"line\"\n\t\t\t\tx: x - offset,\n\t\t\t\ty: y,\n\t\t\t\twick: {\n\t\t\t\t\tstroke: wickStroke(ohlc),\n\t\t\t\t\tx: x,\n\t\t\t\t\ty1: Math.round(yScale(ohlc.high)),\n\t\t\t\t\ty2: y,\n\t\t\t\t\ty3: y + height, // Math.round(yScale(Math.min(ohlc.open, ohlc.close))),\n\t\t\t\t\ty4: Math.round(yScale(ohlc.low)),\n\t\t\t\t},\n\t\t\t\theight: height,\n\t\t\t\twidth: offset * 2,\n\t\t\t\tclassName: className(ohlc),\n\t\t\t\tfill: fill(ohlc),\n\t\t\t\tstroke: stroke(ohlc),\n\t\t\t\tdirection: (ohlc.close - ohlc.open),\n\t\t\t});\n\t\t}\n\t}\n\n\treturn candles;\n}\n\nexport default CandlestickSeries;\n"]},"metadata":{},"sourceType":"script"}