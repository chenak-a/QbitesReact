{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nexports.default = function () {\n  var source = _utils.identity;\n\n  function calculator(data) {\n    var algorithm = (0, _utils.mappedSlidingWindow)().windowSize(2).undefinedValue(function (_ref) {\n      var open = _ref.open,\n          high = _ref.high,\n          low = _ref.low,\n          close = _ref.close;\n      close = (open + high + low + close) / 4;\n      return {\n        open: open,\n        high: high,\n        low: low,\n        close: close\n      };\n    }).accumulator(function (_ref2) {\n      var _ref3 = _slicedToArray(_ref2, 2),\n          prev = _ref3[0],\n          now = _ref3[1]; // console.log(prev, now);\n\n\n      var date = now.date,\n          volume = now.volume;\n      var close = (now.open + now.high + now.low + now.close) / 4;\n      var open = (prev.open + prev.close) / 2;\n      var high = Math.max(open, now.high, close);\n      var low = Math.min(open, now.low, close);\n      return {\n        date: date,\n        open: open,\n        high: high,\n        low: low,\n        close: close,\n        volume: volume\n      };\n    });\n    return algorithm(data);\n  }\n\n  calculator.source = function (x) {\n    if (!arguments.length) {\n      return source;\n    }\n\n    source = x;\n    return calculator;\n  };\n\n  return calculator;\n};\n\nvar _utils = require(\"../utils\");","map":{"version":3,"sources":["../../../src/lib/calculator/heikinAshi.js"],"names":["source","algorithm","open","high","low","close","prev","now","date","volume","Math","calculator","arguments"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kBAIe,YAAW;AAEzB,MAAIA,MAAAA,GAAAA,MAAAA,CAAJ,QAAA;;AAEA,WAAA,UAAA,CAAA,IAAA,EAA0B;AACzB,QAAMC,SAAAA,GAAY,CAAA,GAAA,MAAA,CAAA,mBAAA,IAAA,UAAA,CAAA,CAAA,EAAA,cAAA,CAED,UAAA,IAAA,EAAgC;AAAA,UAA7BC,IAA6B,GAAA,IAAA,CAA7BA,IAA6B;AAAA,UAAvBC,IAAuB,GAAA,IAAA,CAAvBA,IAAuB;AAAA,UAAjBC,GAAiB,GAAA,IAAA,CAAjBA,GAAiB;AAAA,UAAZC,KAAY,GAAA,IAAA,CAAZA,KAAY;AAC/CA,MAAAA,KAAAA,GAAQ,CAACH,IAAAA,GAAAA,IAAAA,GAAAA,GAAAA,GAAD,KAAA,IAARG,CAAAA;AACA,aAAO;AAAEH,QAAAA,IAAAA,EAAF,IAAA;AAAQC,QAAAA,IAAAA,EAAR,IAAA;AAAcC,QAAAA,GAAAA,EAAd,GAAA;AAAmBC,QAAAA,KAAAA,EAA1B;AAAO,OAAP;AAJgB,KAAA,EAAA,WAAA,CAMJ,UAAA,KAAA,EAAiB;AAAA,UAAA,KAAA,GAAA,cAAA,CAAA,KAAA,EAAA,CAAA,CAAA;AAAA,UAAfC,IAAe,GAAA,KAAA,CAAA,CAAA,CAAA;AAAA,UAATC,GAAS,GAAA,KAAA,CAAA,CAAA,CAAA,CAAA,CAC7B;;;AAD6B,UAErBC,IAFqB,GAEJD,GAFI,CAAA,IAAA;AAAA,UAEfE,MAFe,GAEJF,GAFI,CAAA,MAAA;AAG7B,UAAMF,KAAAA,GAAQ,CAACE,GAAAA,CAAAA,IAAAA,GAAWA,GAAAA,CAAXA,IAAAA,GAAsBA,GAAAA,CAAtBA,GAAAA,GAAgCA,GAAAA,CAAjC,KAAA,IAAd,CAAA;AACA,UAAML,IAAAA,GAAO,CAACI,IAAAA,CAAAA,IAAAA,GAAYA,IAAAA,CAAb,KAAA,IAAb,CAAA;AACA,UAAMH,IAAAA,GAAOO,IAAAA,CAAAA,GAAAA,CAAAA,IAAAA,EAAeH,GAAAA,CAAfG,IAAAA,EAAb,KAAaA,CAAb;AACA,UAAMN,GAAAA,GAAMM,IAAAA,CAAAA,GAAAA,CAAAA,IAAAA,EAAeH,GAAAA,CAAfG,GAAAA,EAAZ,KAAYA,CAAZ;AACA,aAAO;AAAEF,QAAAA,IAAAA,EAAF,IAAA;AAAQN,QAAAA,IAAAA,EAAR,IAAA;AAAcC,QAAAA,IAAAA,EAAd,IAAA;AAAoBC,QAAAA,GAAAA,EAApB,GAAA;AAAyBC,QAAAA,KAAAA,EAAzB,KAAA;AAAgCI,QAAAA,MAAAA,EAAvC;AAAO,OAAP;AAbF,KAAkB,CAAlB;AAgBA,WAAOR,SAAAA,CAAP,IAAOA,CAAP;AACA;;AACDU,EAAAA,UAAAA,CAAAA,MAAAA,GAAoB,UAAA,CAAA,EAAY;AAC/B,QAAI,CAACC,SAAAA,CAAL,MAAA,EAAuB;AACtB,aAAA,MAAA;AACA;;AACDZ,IAAAA,MAAAA,GAAAA,CAAAA;AACA,WAAA,UAAA;AALDW,GAAAA;;AAQA,SAAA,UAAA;;;AAjCD,IAAA,MAAA,GAAA,OAAA,CAAA,UAAA,CAAA","sourcesContent":["\n\nimport { mappedSlidingWindow, identity } from \"../utils\";\n\nexport default function() {\n\n\tlet source = identity;\n\n\tfunction calculator(data) {\n\t\tconst algorithm = mappedSlidingWindow()\n\t\t\t.windowSize(2)\n\t\t\t.undefinedValue(({ open, high, low, close }) => {\n\t\t\t\tclose = (open + high + low + close) / 4;\n\t\t\t\treturn { open, high, low, close };\n\t\t\t})\n\t\t\t.accumulator(([prev, now]) => {\n\t\t\t\t// console.log(prev, now);\n\t\t\t\tconst { date, volume } = now;\n\t\t\t\tconst close = (now.open + now.high + now.low + now.close) / 4;\n\t\t\t\tconst open = (prev.open + prev.close) / 2;\n\t\t\t\tconst high = Math.max(open, now.high, close);\n\t\t\t\tconst low = Math.min(open, now.low, close);\n\t\t\t\treturn { date, open, high, low, close, volume };\n\t\t\t});\n\n\t\treturn algorithm(data);\n\t}\n\tcalculator.source = function(x) {\n\t\tif (!arguments.length) {\n\t\t\treturn source;\n\t\t}\n\t\tsource = x;\n\t\treturn calculator;\n\t};\n\n\treturn calculator;\n}"]},"metadata":{},"sourceType":"script"}