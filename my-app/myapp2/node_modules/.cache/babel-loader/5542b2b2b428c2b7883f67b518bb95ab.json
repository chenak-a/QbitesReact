{"ast":null,"code":"// copied from https://github.com/d3fc/d3fc-rebind/blob/master/src/rebind.js\nfunction createReboundMethod(target, source, name) {\n  var method = source[name];\n\n  if (typeof method !== \"function\") {\n    throw new Error(\"Attempt to rebind \" + name + \" which isn't a function on the source object\");\n  }\n\n  return function () {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var value = method.apply(source, args);\n    return value === source ? target : value;\n  };\n}\n\nexport default function rebind(target, source) {\n  for (var _len2 = arguments.length, names = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n    names[_key2 - 2] = arguments[_key2];\n  }\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = names[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var name = _step.value;\n      target[name] = createReboundMethod(target, source, name);\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return target;\n}","map":{"version":3,"sources":["../../../../src/lib/utils/rebind.js"],"names":["method","source","args","value","names","name","target","createReboundMethod"],"mappings":"AAAA;AAEA,SAAA,mBAAA,CAAA,MAAA,EAAA,MAAA,EAAA,IAAA,EAAmD;AAClD,MAAMA,MAAAA,GAASC,MAAAA,CAAf,IAAeA,CAAf;;AACA,MAAI,OAAA,MAAA,KAAJ,UAAA,EAAkC;AACjC,UAAM,IAAA,KAAA,CAAA,uBAAA,IAAA,GAAN,8CAAM,CAAN;AACA;;AACD,SAAO,YAAa;AAAA,SAAA,IAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EAATC,IAAS,GAAA,KAAA,CAAA,IAAA,CAAA,EAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA;AAATA,MAAAA,IAAS,CAAA,IAAA,CAATA,GAAS,SAAA,CAAA,IAAA,CAATA;AAAS;;AACnB,QAAMC,KAAAA,GAAQH,MAAAA,CAAAA,KAAAA,CAAAA,MAAAA,EAAd,IAAcA,CAAd;AACA,WAAOG,KAAAA,KAAAA,MAAAA,GAAAA,MAAAA,GAAP,KAAA;AAFD,GAAA;AAIA;;AAED,eAAe,SAAA,MAAA,CAAA,MAAA,EAAA,MAAA,EAA0C;AAAA,OAAA,IAAA,KAAA,GAAA,SAAA,CAAA,MAAA,EAAPC,KAAO,GAAA,KAAA,CAAA,KAAA,GAAA,CAAA,GAAA,KAAA,GAAA,CAAA,GAAA,CAAA,CAAA,EAAA,KAAA,GAAA,CAAA,EAAA,KAAA,GAAA,KAAA,EAAA,KAAA,EAAA,EAAA;AAAPA,IAAAA,KAAO,CAAA,KAAA,GAAA,CAAA,CAAPA,GAAO,SAAA,CAAA,KAAA,CAAPA;AAAO;;AAAA,MAAA,yBAAA,GAAA,IAAA;AAAA,MAAA,iBAAA,GAAA,KAAA;AAAA,MAAA,cAAA,GAAA,SAAA;;AAAA,MAAA;AACxD,SAAA,IAAA,SAAA,GAAmBA,KAAnB,CAAA,MAAA,CAAA,QAAA,CAAmBA,EAAnB,EAAA,KAAA,EAAA,EAAA,yBAAA,GAAA,CAAA,KAAA,GAAA,SAAA,CAAA,IAAA,EAAA,EAAA,IAAA,CAAA,EAAA,yBAAA,GAAA,IAAA,EAA0B;AAAA,UAAfC,IAAe,GAAA,KAAA,CAAA,KAAA;AACzBC,MAAAA,MAAAA,CAAAA,IAAAA,CAAAA,GAAeC,mBAAAA,CAAAA,MAAAA,EAAAA,MAAAA,EAAfD,IAAeC,CAAfD;AACA;AAHuD,GAAA,CAAA,OAAA,GAAA,EAAA;AAAA,IAAA,iBAAA,GAAA,IAAA;AAAA,IAAA,cAAA,GAAA,GAAA;AAAA,GAAA,SAAA;AAAA,QAAA;AAAA,UAAA,CAAA,yBAAA,IAAA,SAAA,CAAA,MAAA,EAAA;AAAA,QAAA,SAAA,CAAA,MAAA;AAAA;AAAA,KAAA,SAAA;AAAA,UAAA,iBAAA,EAAA;AAAA,cAAA,cAAA;AAAA;AAAA;AAAA;;AAIxD,SAAA,MAAA;AACA","sourcesContent":["// copied from https://github.com/d3fc/d3fc-rebind/blob/master/src/rebind.js\n\nfunction createReboundMethod(target, source, name) {\n\tconst method = source[name];\n\tif (typeof method !== \"function\") {\n\t\tthrow new Error(`Attempt to rebind ${name} which isn't a function on the source object`);\n\t}\n\treturn (...args) => {\n\t\tconst value = method.apply(source, args);\n\t\treturn value === source ? target : value;\n\t};\n}\n\nexport default function rebind(target, source, ...names) {\n\tfor (const name of names) {\n\t\ttarget[name] = createReboundMethod(target, source, name);\n\t}\n\treturn target;\n}\n"]},"metadata":{},"sourceType":"module"}