{"ast":null,"code":"var _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport PureComponent from \"./utils/PureComponent\";\nimport { hexToRGBA, isDefined } from \"./utils\";\n\nvar BackgroundText = function (_PureComponent) {\n  _inherits(BackgroundText, _PureComponent);\n\n  function BackgroundText() {\n    _classCallCheck(this, BackgroundText);\n\n    return _possibleConstructorReturn(this, (BackgroundText.__proto__ || Object.getPrototypeOf(BackgroundText)).apply(this, arguments));\n  }\n\n  _createClass(BackgroundText, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.context.chartCanvasType !== \"svg\" && isDefined(this.context.getCanvasContexts)) {\n        var contexts = this.context.getCanvasContexts();\n        if (contexts) BackgroundText.drawOnCanvas(contexts.bg, this.props, this.context, this.props.children);\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.componentDidMount();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var chartCanvasType = this.context.chartCanvasType;\n      if (chartCanvasType !== \"svg\") return null;\n      var _props = this.props,\n          x = _props.x,\n          y = _props.y,\n          fill = _props.fill,\n          opacity = _props.opacity,\n          stroke = _props.stroke,\n          strokeOpacity = _props.strokeOpacity,\n          fontFamily = _props.fontFamily,\n          fontSize = _props.fontSize,\n          textAnchor = _props.textAnchor;\n      var props = {\n        x: x,\n        y: y,\n        fill: fill,\n        opacity: opacity,\n        stroke: stroke,\n        strokeOpacity: strokeOpacity,\n        fontFamily: fontFamily,\n        fontSize: fontSize,\n        textAnchor: textAnchor\n      };\n      return React.createElement(\"text\", props, \"this.props.children(interval)\");\n    }\n  }]);\n\n  return BackgroundText;\n}(PureComponent);\n\nBackgroundText.drawOnCanvas = function (ctx, props, _ref, getText) {\n  var interval = _ref.interval;\n  ctx.clearRect(-1, -1, ctx.canvas.width + 2, ctx.canvas.height + 2);\n  ctx.save();\n  ctx.setTransform(1, 0, 0, 1, 0, 0);\n  ctx.translate(0.5, 0.5);\n  var x = props.x,\n      y = props.y,\n      fill = props.fill,\n      opacity = props.opacity,\n      stroke = props.stroke,\n      strokeOpacity = props.strokeOpacity,\n      fontFamily = props.fontFamily,\n      fontSize = props.fontSize,\n      textAnchor = props.textAnchor;\n  var text = getText(interval);\n  ctx.strokeStyle = hexToRGBA(stroke, strokeOpacity);\n  ctx.font = fontSize + \"px \" + fontFamily;\n  ctx.fillStyle = hexToRGBA(fill, opacity);\n  ctx.textAlign = textAnchor === \"middle\" ? \"center\" : textAnchor;\n  if (stroke !== \"none\") ctx.strokeText(text, x, y);\n  ctx.fillText(text, x, y);\n  ctx.restore();\n};\n\nBackgroundText.propTypes = {\n  x: PropTypes.number.isRequired,\n  y: PropTypes.number.isRequired,\n  fontFamily: PropTypes.string,\n  fontSize: PropTypes.number.isRequired,\n  fill: PropTypes.string,\n  stroke: PropTypes.string,\n  opacity: PropTypes.number,\n  strokeOpacity: PropTypes.number,\n  textAnchor: PropTypes.string,\n  children: PropTypes.func\n};\nBackgroundText.defaultProps = {\n  opacity: 0.3,\n  fill: \"#9E7523\",\n  stroke: \"#9E7523\",\n  strokeOpacity: 1,\n  fontFamily: \"Helvetica Neue, Helvetica, Arial, sans-serif\",\n  fontSize: 12,\n  textAnchor: \"middle\"\n};\nBackgroundText.contextTypes = {\n  interval: PropTypes.string.isRequired,\n  getCanvasContexts: PropTypes.func,\n  chartCanvasType: PropTypes.string\n};\nexport default BackgroundText;","map":{"version":3,"sources":["../../../src/lib/BackgroundText.js"],"names":["BackgroundText","PureComponent","isDefined","contexts","chartCanvasType","x","y","fill","opacity","stroke","strokeOpacity","fontFamily","fontSize","textAnchor","props","interval","ctx","text","getText","hexToRGBA","PropTypes","children","func","getCanvasContexts","string"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport PureComponent from \"./utils/PureComponent\";\n\nimport { hexToRGBA, isDefined } from \"./utils\";\n\nclass BackgroundText extends PureComponent {\n\tcomponentDidMount() {\n\t\tif (this.context.chartCanvasType !== \"svg\" && isDefined(this.context.getCanvasContexts)) {\n\t\t\tconst contexts = this.context.getCanvasContexts();\n\t\t\tif (contexts) BackgroundText.drawOnCanvas(contexts.bg, this.props, this.context, this.props.children);\n\t\t}\n\t}\n\tcomponentDidUpdate() {\n\t\tthis.componentDidMount();\n\t}\n\trender() {\n\t\tconst { chartCanvasType } = this.context;\n\n\t\tif (chartCanvasType !== \"svg\") return null;\n\n\t\tconst { x, y, fill, opacity, stroke, strokeOpacity, fontFamily, fontSize, textAnchor } = this.props;\n\t\tconst props = { x, y, fill, opacity, stroke, strokeOpacity, fontFamily, fontSize, textAnchor };\n\t\treturn (\n\t\t\t<text {...props}>this.props.children(interval)</text>\n\t\t);\n\t}\n}\n\nBackgroundText.drawOnCanvas = (ctx, props, { interval }, getText) => {\n\tctx.clearRect(-1, -1, ctx.canvas.width + 2, ctx.canvas.height + 2);\n\tctx.save();\n\n\tctx.setTransform(1, 0, 0, 1, 0, 0);\n\tctx.translate(0.5, 0.5);\n\n\tconst { x, y, fill, opacity, stroke, strokeOpacity, fontFamily, fontSize, textAnchor } = props;\n\n\tconst text = getText(interval);\n\n\tctx.strokeStyle = hexToRGBA(stroke, strokeOpacity);\n\n\tctx.font = `${ fontSize }px ${ fontFamily }`;\n\tctx.fillStyle = hexToRGBA(fill, opacity);\n\tctx.textAlign = textAnchor === \"middle\" ? \"center\" : textAnchor;\n\n\tif (stroke !== \"none\") ctx.strokeText(text, x, y);\n\tctx.fillText(text, x, y);\n\n\tctx.restore();\n};\n\nBackgroundText.propTypes = {\n\tx: PropTypes.number.isRequired,\n\ty: PropTypes.number.isRequired,\n\tfontFamily: PropTypes.string,\n\tfontSize: PropTypes.number.isRequired,\n\tfill: PropTypes.string,\n\tstroke: PropTypes.string,\n\topacity: PropTypes.number,\n\tstrokeOpacity: PropTypes.number,\n\ttextAnchor: PropTypes.string,\n\tchildren: PropTypes.func,\n};\n\nBackgroundText.defaultProps = {\n\topacity: 0.3,\n\tfill: \"#9E7523\",\n\tstroke: \"#9E7523\",\n\tstrokeOpacity: 1,\n\tfontFamily: \"Helvetica Neue, Helvetica, Arial, sans-serif\",\n\tfontSize: 12,\n\ttextAnchor: \"middle\",\n};\n\nBackgroundText.contextTypes = {\n\tinterval: PropTypes.string.isRequired,\n\tgetCanvasContexts: PropTypes.func,\n\tchartCanvasType: PropTypes.string,\n};\n\nexport default BackgroundText;"]},"metadata":{},"sourceType":"module"}