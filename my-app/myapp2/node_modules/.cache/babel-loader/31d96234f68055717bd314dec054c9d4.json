{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _utils = require(\"../utils\");\n\nvar _utils2 = require(\"./utils\");\n\nvar _EachTrendLine = require(\"./wrapper/EachTrendLine\");\n\nvar _EachTrendLine2 = _interopRequireDefault(_EachTrendLine);\n\nvar _StraightLine = require(\"./components/StraightLine\");\n\nvar _StraightLine2 = _interopRequireDefault(_StraightLine);\n\nvar _MouseLocationIndicator = require(\"./components/MouseLocationIndicator\");\n\nvar _MouseLocationIndicator2 = _interopRequireDefault(_MouseLocationIndicator);\n\nvar _HoverTextNearMouse = require(\"./components/HoverTextNearMouse\");\n\nvar _HoverTextNearMouse2 = _interopRequireDefault(_HoverTextNearMouse);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar TrendLine = function (_Component) {\n  _inherits(TrendLine, _Component);\n\n  function TrendLine(props) {\n    _classCallCheck(this, TrendLine);\n\n    var _this = _possibleConstructorReturn(this, (TrendLine.__proto__ || Object.getPrototypeOf(TrendLine)).call(this, props));\n\n    _this.handleStart = _this.handleStart.bind(_this);\n    _this.handleEnd = _this.handleEnd.bind(_this);\n    _this.handleDrawLine = _this.handleDrawLine.bind(_this);\n    _this.handleDragLine = _this.handleDragLine.bind(_this);\n    _this.handleDragLineComplete = _this.handleDragLineComplete.bind(_this);\n    _this.terminate = _utils2.terminate.bind(_this);\n    _this.saveNodeType = _utils2.saveNodeType.bind(_this);\n    _this.getSelectionState = (0, _utils2.isHoverForInteractiveType)(\"trends\").bind(_this);\n    _this.state = {};\n    _this.nodes = [];\n    return _this;\n  }\n\n  _createClass(TrendLine, [{\n    key: \"handleDragLine\",\n    value: function handleDragLine(index, newXYValue) {\n      this.setState({\n        override: _extends({\n          index: index\n        }, newXYValue)\n      });\n    }\n  }, {\n    key: \"handleDragLineComplete\",\n    value: function handleDragLineComplete(moreProps) {\n      var _this2 = this;\n\n      var override = this.state.override;\n\n      if ((0, _utils.isDefined)(override)) {\n        var trends = this.props.trends;\n        var newTrends = trends.map(function (each, idx) {\n          return idx === override.index ? _extends({}, each, {\n            start: [override.x1Value, override.y1Value],\n            end: [override.x2Value, override.y2Value],\n            selected: true\n          }) : _extends({}, each, {\n            selected: false\n          });\n        });\n        this.setState({\n          override: null\n        }, function () {\n          _this2.props.onComplete(newTrends, moreProps);\n        });\n      }\n    }\n  }, {\n    key: \"handleDrawLine\",\n    value: function handleDrawLine(xyValue) {\n      var current = this.state.current;\n\n      if ((0, _utils.isDefined)(current) && (0, _utils.isDefined)(current.start)) {\n        this.mouseMoved = true;\n        this.setState({\n          current: {\n            start: current.start,\n            end: xyValue\n          }\n        });\n      }\n    }\n  }, {\n    key: \"handleStart\",\n    value: function handleStart(xyValue, moreProps, e) {\n      var _this3 = this;\n\n      var current = this.state.current;\n\n      if ((0, _utils.isNotDefined)(current) || (0, _utils.isNotDefined)(current.start)) {\n        this.mouseMoved = false;\n        this.setState({\n          current: {\n            start: xyValue,\n            end: null\n          }\n        }, function () {\n          _this3.props.onStart(moreProps, e);\n        });\n      }\n    }\n  }, {\n    key: \"handleEnd\",\n    value: function handleEnd(xyValue, moreProps, e) {\n      var _this4 = this;\n\n      var current = this.state.current;\n      var _props = this.props,\n          trends = _props.trends,\n          appearance = _props.appearance,\n          type = _props.type;\n\n      if (this.mouseMoved && (0, _utils.isDefined)(current) && (0, _utils.isDefined)(current.start)) {\n        var newTrends = [].concat(_toConsumableArray(trends.map(function (d) {\n          return _extends({}, d, {\n            selected: false\n          });\n        })), [{\n          start: current.start,\n          end: xyValue,\n          selected: true,\n          appearance: appearance,\n          type: type\n        }]);\n        this.setState({\n          current: null,\n          trends: newTrends\n        }, function () {\n          _this4.props.onComplete(newTrends, moreProps, e);\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var appearance = this.props.appearance;\n      var _props2 = this.props,\n          enabled = _props2.enabled,\n          snap = _props2.snap,\n          shouldDisableSnap = _props2.shouldDisableSnap,\n          snapTo = _props2.snapTo,\n          type = _props2.type;\n      var _props3 = this.props,\n          currentPositionRadius = _props3.currentPositionRadius,\n          currentPositionStroke = _props3.currentPositionStroke;\n      var _props4 = this.props,\n          currentPositionstrokeOpacity = _props4.currentPositionstrokeOpacity,\n          currentPositionStrokeWidth = _props4.currentPositionStrokeWidth;\n      var _props5 = this.props,\n          hoverText = _props5.hoverText,\n          trends = _props5.trends;\n      var _state = this.state,\n          current = _state.current,\n          override = _state.override;\n      var tempLine = (0, _utils.isDefined)(current) && (0, _utils.isDefined)(current.end) ? _react2.default.createElement(_StraightLine2.default, {\n        type: type,\n        noHover: true,\n        x1Value: current.start[0],\n        y1Value: current.start[1],\n        x2Value: current.end[0],\n        y2Value: current.end[1],\n        stroke: appearance.stroke,\n        strokeWidth: appearance.strokeWidth,\n        strokeOpacity: appearance.strokeOpacity\n      }) : null;\n      return _react2.default.createElement(\"g\", null, trends.map(function (each, idx) {\n        var eachAppearance = (0, _utils.isDefined)(each.appearance) ? _extends({}, appearance, each.appearance) : appearance;\n\n        var hoverTextWithDefault = _extends({}, TrendLine.defaultProps.hoverText, hoverText);\n\n        return _react2.default.createElement(_EachTrendLine2.default, {\n          key: idx,\n          ref: _this5.saveNodeType(idx),\n          index: idx,\n          type: each.type,\n          selected: each.selected,\n          x1Value: (0, _utils2.getValueFromOverride)(override, idx, \"x1Value\", each.start[0]),\n          y1Value: (0, _utils2.getValueFromOverride)(override, idx, \"y1Value\", each.start[1]),\n          x2Value: (0, _utils2.getValueFromOverride)(override, idx, \"x2Value\", each.end[0]),\n          y2Value: (0, _utils2.getValueFromOverride)(override, idx, \"y2Value\", each.end[1]),\n          stroke: eachAppearance.stroke,\n          strokeWidth: eachAppearance.strokeWidth,\n          strokeOpacity: eachAppearance.strokeOpacity,\n          strokeDasharray: eachAppearance.strokeDasharray,\n          edgeStroke: eachAppearance.edgeStroke,\n          edgeFill: eachAppearance.edgeFill,\n          edgeStrokeWidth: eachAppearance.edgeStrokeWidth,\n          r: eachAppearance.r,\n          hoverText: hoverTextWithDefault,\n          onDrag: _this5.handleDragLine,\n          onDragComplete: _this5.handleDragLineComplete,\n          edgeInteractiveCursor: \"react-stockcharts-move-cursor\",\n          lineInteractiveCursor: \"react-stockcharts-move-cursor\"\n        });\n      }), tempLine, _react2.default.createElement(_MouseLocationIndicator2.default, {\n        enabled: enabled,\n        snap: snap,\n        shouldDisableSnap: shouldDisableSnap,\n        snapTo: snapTo,\n        r: currentPositionRadius,\n        stroke: currentPositionStroke,\n        strokeOpacity: currentPositionstrokeOpacity,\n        strokeWidth: currentPositionStrokeWidth,\n        onMouseDown: this.handleStart,\n        onClick: this.handleEnd,\n        onMouseMove: this.handleDrawLine\n      }));\n    }\n  }]);\n\n  return TrendLine;\n}(_react.Component);\n\nTrendLine.propTypes = {\n  snap: _propTypes2.default.bool.isRequired,\n  enabled: _propTypes2.default.bool.isRequired,\n  snapTo: _propTypes2.default.func,\n  shouldDisableSnap: _propTypes2.default.func.isRequired,\n  onStart: _propTypes2.default.func.isRequired,\n  onComplete: _propTypes2.default.func.isRequired,\n  onSelect: _propTypes2.default.func,\n  currentPositionStroke: _propTypes2.default.string,\n  currentPositionStrokeWidth: _propTypes2.default.number,\n  currentPositionstrokeOpacity: _propTypes2.default.number,\n  currentPositionRadius: _propTypes2.default.number,\n  type: _propTypes2.default.oneOf([\"XLINE\", // extends from -Infinity to +Infinity\n  \"RAY\", // extends to +/-Infinity in one direction\n  \"LINE\"] // extends between the set bounds\n  ),\n  hoverText: _propTypes2.default.object.isRequired,\n  trends: _propTypes2.default.array.isRequired,\n  appearance: _propTypes2.default.shape({\n    stroke: _propTypes2.default.string.isRequired,\n    strokeOpacity: _propTypes2.default.number.isRequired,\n    strokeWidth: _propTypes2.default.number.isRequired,\n    strokeDasharray: _propTypes2.default.oneOf(_utils.strokeDashTypes),\n    edgeStrokeWidth: _propTypes2.default.number.isRequired,\n    edgeFill: _propTypes2.default.string.isRequired,\n    edgeStroke: _propTypes2.default.string.isRequired\n  }).isRequired\n};\nTrendLine.defaultProps = {\n  type: \"XLINE\",\n  onStart: _utils.noop,\n  onComplete: _utils.noop,\n  onSelect: _utils.noop,\n  currentPositionStroke: \"#000000\",\n  currentPositionstrokeOpacity: 1,\n  currentPositionStrokeWidth: 3,\n  currentPositionRadius: 0,\n  shouldDisableSnap: function shouldDisableSnap(e) {\n    return e.button === 2 || e.shiftKey;\n  },\n  hoverText: _extends({}, _HoverTextNearMouse2.default.defaultProps, {\n    enable: true,\n    bgHeight: \"auto\",\n    bgWidth: \"auto\",\n    text: \"Click to select object\",\n    selectedText: \"\"\n  }),\n  trends: [],\n  appearance: {\n    stroke: \"#000000\",\n    strokeOpacity: 1,\n    strokeWidth: 1,\n    strokeDasharray: \"Solid\",\n    edgeStrokeWidth: 1,\n    edgeFill: \"#FFFFFF\",\n    edgeStroke: \"#000000\",\n    r: 6\n  }\n};\nexports.default = TrendLine;","map":{"version":3,"sources":["../../../src/lib/interactive/TrendLine.js"],"names":["TrendLine","index","newXYValue","override","moreProps","trends","newTrends","start","end","selected","xyValue","current","e","appearance","type","enabled","snap","shouldDisableSnap","snapTo","currentPositionRadius","currentPositionStroke","currentPositionstrokeOpacity","currentPositionStrokeWidth","hoverText","tempLine","eachAppearance","each","hoverTextWithDefault","handleDrawLine","onStart","onComplete","onSelect","stroke","strokeOpacity","strokeWidth","strokeDasharray","edgeStrokeWidth","edgeFill","edgeStroke","isRequired","enable","bgHeight","bgWidth","text","selectedText","r"],"mappings":"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","sourcesContent":["\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { isDefined, isNotDefined, noop, strokeDashTypes } from \"../utils\";\n\nimport {\n\tgetValueFromOverride,\n\tterminate,\n\tsaveNodeType,\n\tisHoverForInteractiveType,\n} from \"./utils\";\n\nimport EachTrendLine from \"./wrapper/EachTrendLine\";\nimport StraightLine from \"./components/StraightLine\";\nimport MouseLocationIndicator from \"./components/MouseLocationIndicator\";\nimport HoverTextNearMouse from \"./components/HoverTextNearMouse\";\n\nclass TrendLine extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.handleStart = this.handleStart.bind(this);\n\t\tthis.handleEnd = this.handleEnd.bind(this);\n\t\tthis.handleDrawLine = this.handleDrawLine.bind(this);\n\t\tthis.handleDragLine = this.handleDragLine.bind(this);\n\t\tthis.handleDragLineComplete = this.handleDragLineComplete.bind(this);\n\n\t\tthis.terminate = terminate.bind(this);\n\t\tthis.saveNodeType = saveNodeType.bind(this);\n\n\t\tthis.getSelectionState = isHoverForInteractiveType(\"trends\")\n\t\t\t.bind(this);\n\n\t\tthis.state = {\n\t\t};\n\t\tthis.nodes = [];\n\t}\n\thandleDragLine(index, newXYValue) {\n\t\tthis.setState({\n\t\t\toverride: {\n\t\t\t\tindex,\n\t\t\t\t...newXYValue\n\t\t\t}\n\t\t});\n\t}\n\thandleDragLineComplete(moreProps) {\n\t\tconst { override } = this.state;\n\t\tif (isDefined(override)) {\n\t\t\tconst { trends } = this.props;\n\t\t\tconst newTrends = trends\n\t\t\t\t.map((each, idx) => idx === override.index\n\t\t\t\t\t? {\n\t\t\t\t\t\t...each,\n\t\t\t\t\t\tstart: [override.x1Value, override.y1Value],\n\t\t\t\t\t\tend: [override.x2Value, override.y2Value],\n\t\t\t\t\t\tselected: true,\n\t\t\t\t\t}\n\t\t\t\t\t: {\n\t\t\t\t\t\t...each,\n\t\t\t\t\t\tselected: false,\n\t\t\t\t\t});\n\n\t\t\tthis.setState({\n\t\t\t\toverride: null,\n\t\t\t}, () => {\n\t\t\t\tthis.props.onComplete(newTrends, moreProps);\n\t\t\t});\n\t\t}\n\t}\n\thandleDrawLine(xyValue) {\n\t\tconst { current } = this.state;\n\t\tif (isDefined(current) && isDefined(current.start)) {\n\t\t\tthis.mouseMoved = true;\n\t\t\tthis.setState({\n\t\t\t\tcurrent: {\n\t\t\t\t\tstart: current.start,\n\t\t\t\t\tend: xyValue,\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\thandleStart(xyValue, moreProps, e) {\n\t\tconst { current } = this.state;\n\n\t\tif (isNotDefined(current) || isNotDefined(current.start)) {\n\t\t\tthis.mouseMoved = false;\n\n\t\t\tthis.setState({\n\t\t\t\tcurrent: {\n\t\t\t\t\tstart: xyValue,\n\t\t\t\t\tend: null,\n\t\t\t\t},\n\t\t\t}, () => {\n\t\t\t\tthis.props.onStart(moreProps, e);\n\t\t\t});\n\t\t}\n\t}\n\thandleEnd(xyValue, moreProps, e) {\n\t\tconst { current } = this.state;\n\t\tconst { trends, appearance, type } = this.props;\n\n\t\tif (this.mouseMoved\n\t\t\t&& isDefined(current)\n\t\t\t&& isDefined(current.start)\n\t\t) {\n\t\t\tconst newTrends = [\n\t\t\t\t...trends.map(d => ({ ...d, selected: false })),\n\t\t\t\t{\n\t\t\t\t\tstart: current.start,\n\t\t\t\t\tend: xyValue,\n\t\t\t\t\tselected: true,\n\t\t\t\t\tappearance,\n\t\t\t\t\ttype,\n\t\t\t\t}\n\t\t\t];\n\t\t\tthis.setState({\n\t\t\t\tcurrent: null,\n\t\t\t\ttrends: newTrends\n\t\t\t}, () => {\n\t\t\t\tthis.props.onComplete(newTrends, moreProps, e);\n\t\t\t});\n\t\t}\n\t}\n\trender() {\n\t\tconst { appearance } = this.props;\n\t\tconst { enabled, snap, shouldDisableSnap, snapTo, type } = this.props;\n\t\tconst { currentPositionRadius, currentPositionStroke } = this.props;\n\t\tconst { currentPositionstrokeOpacity, currentPositionStrokeWidth } = this.props;\n\t\tconst { hoverText, trends } = this.props;\n\t\tconst { current, override } = this.state;\n\n\t\tconst tempLine = isDefined(current) && isDefined(current.end)\n\t\t\t? <StraightLine type={type}\n\t\t\t\tnoHover\n\t\t\t\tx1Value={current.start[0]}\n\t\t\t\ty1Value={current.start[1]}\n\t\t\t\tx2Value={current.end[0]}\n\t\t\t\ty2Value={current.end[1]}\n\t\t\t\tstroke={appearance.stroke}\n\t\t\t\tstrokeWidth={appearance.strokeWidth}\n\t\t\t\tstrokeOpacity={appearance.strokeOpacity} />\n\t\t\t: null;\n\n\t\treturn <g>\n\t\t\t{trends.map((each, idx) => {\n\t\t\t\tconst eachAppearance = isDefined(each.appearance)\n\t\t\t\t\t? { ...appearance, ...each.appearance }\n\t\t\t\t\t: appearance;\n\n\t\t\t\tconst hoverTextWithDefault = {\n\t\t\t\t\t...TrendLine.defaultProps.hoverText,\n\t\t\t\t\t...hoverText\n\t\t\t\t};\n\n\t\t\t\treturn <EachTrendLine key={idx}\n\t\t\t\t\tref={this.saveNodeType(idx)}\n\t\t\t\t\tindex={idx}\n\t\t\t\t\ttype={each.type}\n\t\t\t\t\tselected={each.selected}\n\t\t\t\t\tx1Value={getValueFromOverride(override, idx, \"x1Value\", each.start[0])}\n\t\t\t\t\ty1Value={getValueFromOverride(override, idx, \"y1Value\", each.start[1])}\n\t\t\t\t\tx2Value={getValueFromOverride(override, idx, \"x2Value\", each.end[0])}\n\t\t\t\t\ty2Value={getValueFromOverride(override, idx, \"y2Value\", each.end[1])}\n\t\t\t\t\tstroke={eachAppearance.stroke}\n\t\t\t\t\tstrokeWidth={eachAppearance.strokeWidth}\n\t\t\t\t\tstrokeOpacity={eachAppearance.strokeOpacity}\n\t\t\t\t\tstrokeDasharray={eachAppearance.strokeDasharray}\n\t\t\t\t\tedgeStroke={eachAppearance.edgeStroke}\n\t\t\t\t\tedgeFill={eachAppearance.edgeFill}\n\t\t\t\t\tedgeStrokeWidth={eachAppearance.edgeStrokeWidth}\n\t\t\t\t\tr={eachAppearance.r}\n\t\t\t\t\thoverText={hoverTextWithDefault}\n\t\t\t\t\tonDrag={this.handleDragLine}\n\t\t\t\t\tonDragComplete={this.handleDragLineComplete}\n\t\t\t\t\tedgeInteractiveCursor=\"react-stockcharts-move-cursor\"\n\t\t\t\t\tlineInteractiveCursor=\"react-stockcharts-move-cursor\"\n\t\t\t\t/>;\n\t\t\t})}\n\t\t\t{tempLine}\n\t\t\t<MouseLocationIndicator\n\t\t\t\tenabled={enabled}\n\t\t\t\tsnap={snap}\n\t\t\t\tshouldDisableSnap={shouldDisableSnap}\n\t\t\t\tsnapTo={snapTo}\n\t\t\t\tr={currentPositionRadius}\n\t\t\t\tstroke={currentPositionStroke}\n\t\t\t\tstrokeOpacity={currentPositionstrokeOpacity}\n\t\t\t\tstrokeWidth={currentPositionStrokeWidth}\n\t\t\t\tonMouseDown={this.handleStart}\n\t\t\t\tonClick={this.handleEnd}\n\t\t\t\tonMouseMove={this.handleDrawLine}\n\t\t\t/>\n\t\t</g>;\n\t}\n}\n\n\nTrendLine.propTypes = {\n\tsnap: PropTypes.bool.isRequired,\n\tenabled: PropTypes.bool.isRequired,\n\tsnapTo: PropTypes.func,\n\tshouldDisableSnap: PropTypes.func.isRequired,\n\n\tonStart: PropTypes.func.isRequired,\n\tonComplete: PropTypes.func.isRequired,\n\tonSelect: PropTypes.func,\n\n\tcurrentPositionStroke: PropTypes.string,\n\tcurrentPositionStrokeWidth: PropTypes.number,\n\tcurrentPositionstrokeOpacity: PropTypes.number,\n\tcurrentPositionRadius: PropTypes.number,\n\ttype: PropTypes.oneOf([\n\t\t\"XLINE\", // extends from -Infinity to +Infinity\n\t\t\"RAY\", // extends to +/-Infinity in one direction\n\t\t\"LINE\", // extends between the set bounds\n\t]),\n\thoverText: PropTypes.object.isRequired,\n\n\ttrends: PropTypes.array.isRequired,\n\n\tappearance: PropTypes.shape({\n\t\tstroke: PropTypes.string.isRequired,\n\t\tstrokeOpacity: PropTypes.number.isRequired,\n\t\tstrokeWidth: PropTypes.number.isRequired,\n\t\tstrokeDasharray: PropTypes.oneOf(strokeDashTypes),\n\t\tedgeStrokeWidth: PropTypes.number.isRequired,\n\t\tedgeFill: PropTypes.string.isRequired,\n\t\tedgeStroke: PropTypes.string.isRequired,\n\t}).isRequired\n};\n\nTrendLine.defaultProps = {\n\ttype: \"XLINE\",\n\n\tonStart: noop,\n\tonComplete: noop,\n\tonSelect: noop,\n\n\tcurrentPositionStroke: \"#000000\",\n\tcurrentPositionstrokeOpacity: 1,\n\tcurrentPositionStrokeWidth: 3,\n\tcurrentPositionRadius: 0,\n\n\tshouldDisableSnap: e => (e.button === 2 || e.shiftKey),\n\thoverText: {\n\t\t...HoverTextNearMouse.defaultProps,\n\t\tenable: true,\n\t\tbgHeight: \"auto\",\n\t\tbgWidth: \"auto\",\n\t\ttext: \"Click to select object\",\n\t\tselectedText: \"\",\n\t},\n\ttrends: [],\n\n\tappearance: {\n\t\tstroke: \"#000000\",\n\t\tstrokeOpacity: 1,\n\t\tstrokeWidth: 1,\n\t\tstrokeDasharray: \"Solid\",\n\t\tedgeStrokeWidth: 1,\n\t\tedgeFill: \"#FFFFFF\",\n\t\tedgeStroke: \"#000000\",\n\t\tr: 6,\n\t}\n};\n\nexport default TrendLine;\n"]},"metadata":{},"sourceType":"script"}