{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _utils = require(\"../utils\");\n\nvar _GenericChartComponent = require(\"../GenericChartComponent\");\n\nvar _GenericChartComponent2 = _interopRequireDefault(_GenericChartComponent);\n\nvar _GenericComponent = require(\"../GenericComponent\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar StraightLine = function (_Component) {\n  _inherits(StraightLine, _Component);\n\n  function StraightLine(props) {\n    _classCallCheck(this, StraightLine);\n\n    var _this = _possibleConstructorReturn(this, (StraightLine.__proto__ || Object.getPrototypeOf(StraightLine)).call(this, props));\n\n    _this.renderSVG = _this.renderSVG.bind(_this);\n    _this.drawOnCanvas = _this.drawOnCanvas.bind(_this);\n    return _this;\n  }\n\n  _createClass(StraightLine, [{\n    key: \"drawOnCanvas\",\n    value: function drawOnCanvas(ctx, moreProps) {\n      var _props = this.props,\n          type = _props.type,\n          stroke = _props.stroke,\n          strokeWidth = _props.strokeWidth,\n          opacity = _props.opacity,\n          strokeDasharray = _props.strokeDasharray;\n      var _props2 = this.props,\n          yValue = _props2.yValue,\n          xValue = _props2.xValue;\n      var xScale = moreProps.xScale;\n      var _moreProps$chartConfi = moreProps.chartConfig,\n          yScale = _moreProps$chartConfi.yScale,\n          width = _moreProps$chartConfi.width,\n          height = _moreProps$chartConfi.height;\n      ctx.beginPath();\n      ctx.strokeStyle = (0, _utils.hexToRGBA)(stroke, opacity);\n      ctx.lineWidth = strokeWidth;\n\n      var _getLineCoordinates = getLineCoordinates(type, xScale, yScale, xValue, yValue, width, height),\n          x1 = _getLineCoordinates.x1,\n          y1 = _getLineCoordinates.y1,\n          x2 = _getLineCoordinates.x2,\n          y2 = _getLineCoordinates.y2;\n\n      ctx.setLineDash((0, _utils.getStrokeDasharray)(strokeDasharray).split(\",\"));\n      ctx.moveTo(x1, y1);\n      ctx.lineTo(x2, y2);\n      ctx.stroke();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _react2.default.createElement(_GenericChartComponent2.default, {\n        svgDraw: this.renderSVG,\n        canvasDraw: this.drawOnCanvas,\n        canvasToDraw: _GenericComponent.getAxisCanvas,\n        drawOn: [\"pan\"]\n      });\n    }\n  }, {\n    key: \"renderSVG\",\n    value: function renderSVG(moreProps) {\n      var width = moreProps.width,\n          height = moreProps.height;\n      var xScale = moreProps.xScale,\n          yScale = moreProps.chartConfig.yScale;\n      var className = this.props.className;\n      var _props3 = this.props,\n          type = _props3.type,\n          stroke = _props3.stroke,\n          strokeWidth = _props3.strokeWidth,\n          opacity = _props3.opacity,\n          strokeDasharray = _props3.strokeDasharray;\n      var _props4 = this.props,\n          yValue = _props4.yValue,\n          xValue = _props4.xValue;\n      var lineCoordinates = getLineCoordinates(type, xScale, yScale, xValue, yValue, width, height);\n      return _react2.default.createElement(\"line\", _extends({\n        className: className,\n        strokeDasharray: (0, _utils.getStrokeDasharray)(strokeDasharray),\n        stroke: stroke,\n        strokeWidth: strokeWidth,\n        strokeOpacity: opacity\n      }, lineCoordinates));\n    }\n  }]);\n\n  return StraightLine;\n}(_react.Component);\n\nfunction getLineCoordinates(type, xScale, yScale, xValue, yValue, width, height) {\n  return type === \"horizontal\" ? {\n    x1: 0,\n    y1: Math.round(yScale(yValue)),\n    x2: width,\n    y2: Math.round(yScale(yValue))\n  } : {\n    x1: Math.round(xScale(xValue)),\n    y1: 0,\n    x2: Math.round(xScale(xValue)),\n    y2: height\n  };\n}\n\nStraightLine.propTypes = {\n  className: _propTypes2.default.string,\n  type: _propTypes2.default.oneOf([\"vertical\", \"horizontal\"]),\n  stroke: _propTypes2.default.string,\n  strokeWidth: _propTypes2.default.number,\n  strokeDasharray: _propTypes2.default.oneOf(_utils.strokeDashTypes),\n  opacity: _propTypes2.default.number.isRequired,\n  yValue: function yValue(props, propName\n  /* , componentName */\n  ) {\n    if (props.type === \"vertical\" && (0, _utils.isDefined)(props[propName])) return new Error(\"Do not define `yValue` when type is `vertical`, define the `xValue` prop\");\n    if (props.type === \"horizontal\" && (0, _utils.isNotDefined)(props[propName])) return new Error(\"when type = `horizontal` `yValue` is required\"); // if (isDefined(props[propName]) && typeof props[propName] !== \"number\") return new Error(\"prop `yValue` accepts a number\");\n  },\n  xValue: function xValue(props, propName\n  /* , componentName */\n  ) {\n    if (props.type === \"horizontal\" && (0, _utils.isDefined)(props[propName])) return new Error(\"Do not define `xValue` when type is `horizontal`, define the `yValue` prop\");\n    if (props.type === \"vertical\" && (0, _utils.isNotDefined)(props[propName])) return new Error(\"when type = `vertical` `xValue` is required\"); // if (isDefined(props[propName]) && typeof props[propName] !== \"number\") return new Error(\"prop `xValue` accepts a number\");\n  }\n};\nStraightLine.defaultProps = {\n  className: \"line \",\n  type: \"horizontal\",\n  stroke: \"#000000\",\n  opacity: 0.5,\n  strokeWidth: 1,\n  strokeDasharray: \"Solid\"\n};\nexports.default = StraightLine;","map":{"version":3,"sources":["../../../src/lib/series/StraightLine.js"],"names":["StraightLine","ctx","moreProps","type","stroke","strokeWidth","opacity","strokeDasharray","yValue","xValue","xScale","yScale","width","height","x1","y1","x2","y2","getLineCoordinates","className","lineCoordinates","Math","props"],"mappings":"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","sourcesContent":["\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { hexToRGBA, isDefined, isNotDefined, strokeDashTypes, getStrokeDasharray } from \"../utils\";\n\nimport GenericChartComponent from \"../GenericChartComponent\";\nimport { getAxisCanvas } from \"../GenericComponent\";\n\nclass StraightLine extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.renderSVG = this.renderSVG.bind(this);\n\t\tthis.drawOnCanvas = this.drawOnCanvas.bind(this);\n\t}\n\tdrawOnCanvas(ctx, moreProps) {\n\t\tconst { type, stroke, strokeWidth, opacity, strokeDasharray } = this.props;\n\t\tconst { yValue, xValue } = this.props;\n\t\tconst { xScale } = moreProps;\n\t\tconst { chartConfig: { yScale, width, height } } = moreProps;\n\n\t\tctx.beginPath();\n\n\t\tctx.strokeStyle = hexToRGBA(stroke, opacity);\n\t\tctx.lineWidth = strokeWidth;\n\n\t\tconst { x1, y1, x2, y2 } = getLineCoordinates(type, xScale, yScale, xValue, yValue, width, height);\n\n\t\tctx.setLineDash(getStrokeDasharray(strokeDasharray).split(\",\"));\n\t\tctx.moveTo(x1, y1);\n\t\tctx.lineTo(x2, y2);\n\t\tctx.stroke();\n\t}\n\trender() {\n\t\treturn <GenericChartComponent\n\t\t\tsvgDraw={this.renderSVG}\n\t\t\tcanvasDraw={this.drawOnCanvas}\n\t\t\tcanvasToDraw={getAxisCanvas}\n\t\t\tdrawOn={[\"pan\"]}\n\t\t/>;\n\t}\n\trenderSVG(moreProps) {\n\t\tconst { width, height } = moreProps;\n\t\tconst { xScale, chartConfig: { yScale } } = moreProps;\n\n\t\tconst { className } = this.props;\n\t\tconst { type, stroke, strokeWidth, opacity, strokeDasharray } = this.props;\n\t\tconst { yValue, xValue } = this.props;\n\n\t\tconst lineCoordinates = getLineCoordinates(type, xScale, yScale, xValue, yValue, width, height);\n\n\t\treturn (\n\t\t\t<line\n\t\t\t\tclassName={className}\n\t\t\t\tstrokeDasharray={getStrokeDasharray(strokeDasharray)}\n\t\t\t\tstroke={stroke}\n\t\t\t\tstrokeWidth={strokeWidth}\n\t\t\t\tstrokeOpacity={opacity}\n\t\t\t\t{...lineCoordinates}\n\t\t\t/>\n\t\t);\n\t}\n}\n\nfunction getLineCoordinates(type, xScale, yScale, xValue, yValue, width, height) {\n\treturn type === \"horizontal\"\n\t\t? { x1: 0, y1: Math.round(yScale(yValue)), x2: width, y2: Math.round(yScale(yValue)) }\n\t\t: { x1: Math.round(xScale(xValue)), y1: 0, x2: Math.round(xScale(xValue)), y2: height };\n}\n\nStraightLine.propTypes = {\n\tclassName: PropTypes.string,\n\ttype: PropTypes.oneOf([\"vertical\", \"horizontal\"]),\n\tstroke: PropTypes.string,\n\tstrokeWidth: PropTypes.number,\n\tstrokeDasharray: PropTypes.oneOf(strokeDashTypes),\n\topacity: PropTypes.number.isRequired,\n\tyValue: function(props, propName/* , componentName */) {\n\t\tif (props.type === \"vertical\" && isDefined(props[propName])) return new Error(\"Do not define `yValue` when type is `vertical`, define the `xValue` prop\");\n\t\tif (props.type === \"horizontal\" && isNotDefined(props[propName])) return new Error(\"when type = `horizontal` `yValue` is required\");\n\t\t// if (isDefined(props[propName]) && typeof props[propName] !== \"number\") return new Error(\"prop `yValue` accepts a number\");\n\t},\n\txValue: function(props, propName/* , componentName */) {\n\t\tif (props.type === \"horizontal\" && isDefined(props[propName])) return new Error(\"Do not define `xValue` when type is `horizontal`, define the `yValue` prop\");\n\t\tif (props.type === \"vertical\" && isNotDefined(props[propName])) return new Error(\"when type = `vertical` `xValue` is required\");\n\t\t// if (isDefined(props[propName]) && typeof props[propName] !== \"number\") return new Error(\"prop `xValue` accepts a number\");\n\t},\n};\n\nStraightLine.defaultProps = {\n\tclassName: \"line \",\n\ttype: \"horizontal\",\n\tstroke: \"#000000\",\n\topacity: 0.5,\n\tstrokeWidth: 1,\n\tstrokeDasharray: \"Solid\",\n};\n\nexport default StraightLine;\n"]},"metadata":{},"sourceType":"script"}