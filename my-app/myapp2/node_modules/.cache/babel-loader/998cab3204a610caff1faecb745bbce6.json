{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nexports.default = function () {\n  var options = _defaultOptionsForComputation.PointAndFigure;\n\n  var dateAccessor = function dateAccessor(d) {\n    return d.date;\n  };\n\n  var dateMutator = function dateMutator(d, date) {\n    d.date = date;\n  };\n\n  function calculator(rawData) {\n    var _options = options,\n        reversal = _options.reversal,\n        boxSize = _options.boxSize,\n        sourcePath = _options.sourcePath;\n    var source = sourcePath === \"high/low\" ? function (d) {\n      return {\n        high: d.high,\n        low: d.low\n      };\n    } : function (d) {\n      return {\n        high: d.close,\n        low: d.close\n      };\n    };\n    var pricingMethod = source;\n    var columnData = [];\n    var column = {\n      boxes: [],\n      open: rawData[0].open\n    },\n        box = createBox(rawData[0], dateAccessor, dateMutator);\n    columnData.push(column);\n    rawData.forEach(function (d) {\n      column.volume = (column.volume || 0) + d.volume;\n\n      if (!box.startOfYear) {\n        box.startOfYear = d.startOfYear;\n\n        if (box.startOfYear) {\n          dateMutator(box, dateAccessor(d)); // box.displayDate = d.displayDate;\n        }\n      }\n\n      if (!box.startOfYear && !box.startOfQuarter) {\n        box.startOfQuarter = d.startOfQuarter;\n\n        if (box.startOfQuarter && !box.startOfYear) {\n          dateMutator(box, dateAccessor(d)); // box.displayDate = d.displayDate;\n        }\n      }\n\n      if (!box.startOfQuarter && !box.startOfMonth) {\n        box.startOfMonth = d.startOfMonth;\n\n        if (box.startOfMonth && !box.startOfQuarter) {\n          dateMutator(box, dateAccessor(d)); // box.displayDate = d.displayDate;\n        }\n      }\n\n      if (!box.startOfMonth && !box.startOfWeek) {\n        box.startOfWeek = d.startOfWeek;\n\n        if (box.startOfWeek && !box.startOfMonth) {\n          dateMutator(box, dateAccessor(d)); // box.displayDate = d.displayDate;\n        }\n      }\n\n      if (columnData.length === 1 && column.boxes.length === 0) {\n        var upwardMovement = Math.max(pricingMethod(d).high - column.open, 0); // upward movement\n\n        var downwardMovement = Math.abs(Math.min(column.open - pricingMethod(d).low, 0)); // downward movement\n\n        column.direction = upwardMovement > downwardMovement ? 1 : -1;\n\n        if (boxSize * reversal < upwardMovement || boxSize * reversal < downwardMovement) {\n          // enough movement to trigger a reversal\n          box.toDate = dateAccessor(d);\n          box.open = column.open;\n          var noOfBoxes = column.direction > 0 ? Math.floor(upwardMovement / boxSize) : Math.floor(downwardMovement / boxSize);\n\n          for (var i = 0; i < noOfBoxes; i++) {\n            box.close = box.open + column.direction * boxSize;\n            var prevBoxClose = box.close;\n            column.boxes.push(box);\n            box = createBox(box, dateAccessor, dateMutator); // box = cloneMe(box);\n\n            box.open = prevBoxClose;\n          }\n\n          box.fromDate = dateAccessor(d);\n          box.date = dateAccessor(d);\n        }\n      } else {\n        // one or more boxes already formed in the current column\n        var _upwardMovement = Math.max(pricingMethod(d).high - box.open, 0); // upward movement\n\n\n        var _downwardMovement = Math.abs(Math.min(pricingMethod(d).low - box.open, 0)); // downward movement\n\n\n        if (column.direction > 0 && _upwardMovement > boxSize ||\n        /* rising column AND box can be formed */\n        column.direction < 0 && _downwardMovement > boxSize\n        /* falling column AND box can be formed */\n        ) {\n            // form another box\n            box.close = box.open + column.direction * boxSize;\n            box.toDate = dateAccessor(d);\n            var _prevBoxClose = box.close;\n            column.boxes.push(box);\n            box = createBox(d, dateAccessor, dateMutator);\n            box.open = _prevBoxClose;\n            box.fromDate = dateAccessor(d);\n            dateMutator(box, dateAccessor(d));\n          } else if (column.direction > 0 && _downwardMovement > boxSize * reversal ||\n        /* rising column and there is downward movement to trigger a reversal */\n        column.direction < 0 && _upwardMovement > boxSize * reversal\n        /* falling column and there is downward movement to trigger a reversal */\n        ) {\n            // reversal\n            box.open = box.open + -1 * column.direction * boxSize;\n            box.toDate = dateAccessor(d); // box.displayDate = d.displayDate;\n\n            dateMutator(box, dateAccessor(d)); // box.startOfYear = d.startOfYear;\n            // box.startOfQuarter = d.startOfQuarter;\n            // box.startOfMonth = d.startOfMonth;\n            // box.startOfWeek = d.startOfWeek;\n            // console.table(column.boxes);\n            // var idx = index + 1;\n\n            column = {\n              boxes: [],\n              volume: 0,\n              direction: -1 * column.direction\n            };\n\n            var _noOfBoxes = column.direction > 0 ? Math.floor(_upwardMovement / boxSize) : Math.floor(_downwardMovement / boxSize);\n\n            for (var _i = 0; _i < _noOfBoxes; _i++) {\n              box.close = box.open + column.direction * boxSize;\n              var _prevBoxClose2 = box.close;\n              column.boxes.push(box);\n              box = createBox(d, dateAccessor, dateMutator);\n              box.open = _prevBoxClose2;\n            }\n\n            columnData.push(column);\n          }\n      }\n    });\n    updateColumns(columnData, dateAccessor, dateMutator);\n    return columnData;\n  }\n\n  calculator.options = function (x) {\n    if (!arguments.length) {\n      return options;\n    }\n\n    options = _extends({}, _defaultOptionsForComputation.PointAndFigure, x);\n    return calculator;\n  };\n\n  calculator.dateMutator = function (x) {\n    if (!arguments.length) return dateMutator;\n    dateMutator = x;\n    return calculator;\n  };\n\n  calculator.dateAccessor = function (x) {\n    if (!arguments.length) return dateAccessor;\n    dateAccessor = x;\n    return calculator;\n  };\n\n  return calculator;\n};\n\nvar _utils = require(\"../utils\");\n\nvar _defaultOptionsForComputation = require(\"./defaultOptionsForComputation\");\n\nfunction createBox(d, dateAccessor, dateMutator) {\n  var box = {\n    open: d.open,\n    fromDate: dateAccessor(d),\n    toDate: dateAccessor(d),\n    startOfYear: d.startOfYear,\n    startOfQuarter: d.startOfQuarter,\n    startOfMonth: d.startOfMonth,\n    startOfWeek: d.startOfWeek\n  };\n  dateMutator(box, dateAccessor(d));\n  return box;\n}\n\nfunction updateColumns(columnData, dateAccessor, dateMutator) {\n  columnData.forEach(function (d) {\n    // var lastBox = d.boxes[d.boxes.length - 1];\n    d.startOfYear = false;\n    d.startOfQuarter = false;\n    d.startOfMonth = false;\n    d.startOfWeek = false;\n    d.boxes.forEach(function (eachBox) {\n      if ((0, _utils.isNotDefined)(d.open)) d.open = eachBox.open;\n      d.close = eachBox.close;\n      d.high = Math.max(d.open, d.close);\n      d.low = Math.min(d.open, d.close);\n      if ((0, _utils.isNotDefined)(d.fromDate)) d.fromDate = eachBox.fromDate;\n      if ((0, _utils.isNotDefined)(d.date)) d.date = eachBox.date;\n      d.toDate = eachBox.toDate;\n\n      if (eachBox.startOfYear) {\n        d.startOfYear = d.startOfYear || eachBox.startOfYear;\n        d.startOfQuarter = eachBox.startOfQuarter;\n        d.startOfMonth = eachBox.startOfMonth;\n        d.startOfWeek = eachBox.startOfWeek;\n        dateMutator(d, dateAccessor(eachBox));\n      }\n\n      if (d.startOfQuarter !== true && eachBox.startOfQuarter) {\n        d.startOfQuarter = eachBox.startOfQuarter;\n        d.startOfMonth = eachBox.startOfMonth;\n        d.startOfWeek = eachBox.startOfWeek; // d.displayDate = eachBox.displayDate;\n\n        dateMutator(d, dateAccessor(eachBox));\n      }\n\n      if (d.startOfMonth !== true && eachBox.startOfMonth) {\n        d.startOfMonth = eachBox.startOfMonth;\n        d.startOfWeek = eachBox.startOfWeek; // d.displayDate = eachBox.displayDate;\n\n        dateMutator(d, dateAccessor(eachBox));\n      }\n\n      if (d.startOfWeek !== true && eachBox.startOfWeek) {\n        d.startOfWeek = eachBox.startOfWeek; // d.displayDate = eachBox.displayDate;\n\n        dateMutator(d, dateAccessor(eachBox));\n      }\n    });\n  }); // console.table(columnData);\n  // console.table(rawData);\n\n  return columnData;\n}","map":{"version":3,"sources":["../../../src/lib/calculator/pointAndFigure.js"],"names":["box","open","d","fromDate","dateAccessor","toDate","startOfYear","startOfQuarter","startOfMonth","startOfWeek","dateMutator","columnData","eachBox","Math","options","reversal","boxSize","sourcePath","source","high","low","pricingMethod","column","boxes","rawData","createBox","upwardMovement","downwardMovement","noOfBoxes","i","prevBoxClose","volume","direction","updateColumns","calculator","arguments"],"mappings":"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","sourcesContent":["\n\nimport { isNotDefined } from \"../utils\";\nimport { PointAndFigure as defaultOptions } from \"./defaultOptionsForComputation\";\n\nfunction createBox(d, dateAccessor, dateMutator) {\n\tconst box = {\n\t\topen: d.open,\n\t\tfromDate: dateAccessor(d),\n\t\ttoDate: dateAccessor(d),\n\t\tstartOfYear: d.startOfYear,\n\t\tstartOfQuarter: d.startOfQuarter,\n\t\tstartOfMonth: d.startOfMonth,\n\t\tstartOfWeek: d.startOfWeek\n\t};\n\tdateMutator(box, dateAccessor(d));\n\treturn box;\n}\n\nfunction updateColumns(columnData, dateAccessor, dateMutator) {\n\tcolumnData.forEach(function(d) {\n\t\t// var lastBox = d.boxes[d.boxes.length - 1];\n\n\t\td.startOfYear = false;\n\t\td.startOfQuarter = false;\n\t\td.startOfMonth = false;\n\t\td.startOfWeek = false;\n\n\t\td.boxes.forEach(function(eachBox) {\n\t\t\tif (isNotDefined(d.open)) d.open = eachBox.open;\n\t\t\td.close = eachBox.close;\n\t\t\td.high = Math.max(d.open, d.close);\n\t\t\td.low = Math.min(d.open, d.close);\n\n\t\t\tif (isNotDefined(d.fromDate)) d.fromDate = eachBox.fromDate;\n\t\t\tif (isNotDefined(d.date)) d.date = eachBox.date;\n\t\t\td.toDate = eachBox.toDate;\n\n\t\t\tif (eachBox.startOfYear) {\n\t\t\t\td.startOfYear = d.startOfYear || eachBox.startOfYear;\n\t\t\t\td.startOfQuarter = eachBox.startOfQuarter;\n\t\t\t\td.startOfMonth = eachBox.startOfMonth;\n\t\t\t\td.startOfWeek = eachBox.startOfWeek;\n\n\t\t\t\tdateMutator(d, dateAccessor(eachBox));\n\t\t\t}\n\t\t\tif (d.startOfQuarter !== true && eachBox.startOfQuarter) {\n\t\t\t\td.startOfQuarter = eachBox.startOfQuarter;\n\t\t\t\td.startOfMonth = eachBox.startOfMonth;\n\t\t\t\td.startOfWeek = eachBox.startOfWeek;\n\t\t\t\t// d.displayDate = eachBox.displayDate;\n\t\t\t\tdateMutator(d, dateAccessor(eachBox));\n\t\t\t}\n\t\t\tif (d.startOfMonth !== true && eachBox.startOfMonth) {\n\t\t\t\td.startOfMonth = eachBox.startOfMonth;\n\t\t\t\td.startOfWeek = eachBox.startOfWeek;\n\t\t\t\t// d.displayDate = eachBox.displayDate;\n\t\t\t\tdateMutator(d, dateAccessor(eachBox));\n\t\t\t}\n\t\t\tif (d.startOfWeek !== true && eachBox.startOfWeek) {\n\t\t\t\td.startOfWeek = eachBox.startOfWeek;\n\t\t\t\t// d.displayDate = eachBox.displayDate;\n\t\t\t\tdateMutator(d, dateAccessor(eachBox));\n\t\t\t}\n\t\t});\n\n\t});\n\n\t// console.table(columnData);\n\t// console.table(rawData);\n\treturn columnData;\n}\n\n\nexport default function() {\n\tlet options = defaultOptions;\n\tlet dateAccessor = d => d.date;\n\tlet dateMutator = (d, date) => { d.date = date; };\n\n\tfunction calculator(rawData) {\n\t\tconst { reversal, boxSize, sourcePath } = options;\n\n\t\tconst source = sourcePath === \"high/low\"\n\t\t\t? d => { return { high: d.high, low: d.low }; }\n\t\t\t: d => { return { high: d.close, low: d.close }; };\n\n\n\t\tconst pricingMethod = source;\n\t\tconst columnData = [];\n\n\t\tlet column = {\n\t\t\t\tboxes: [],\n\t\t\t\topen: rawData[0].open\n\t\t\t}, box = createBox(rawData[0], dateAccessor, dateMutator);\n\n\t\tcolumnData.push(column);\n\n\t\trawData.forEach(function(d) {\n\t\t\tcolumn.volume = (column.volume || 0) + d.volume;\n\n\t\t\tif (!box.startOfYear) {\n\t\t\t\tbox.startOfYear = d.startOfYear;\n\t\t\t\tif (box.startOfYear) {\n\t\t\t\t\tdateMutator(box, dateAccessor(d));\n\t\t\t\t\t// box.displayDate = d.displayDate;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!box.startOfYear && !box.startOfQuarter) {\n\t\t\t\tbox.startOfQuarter = d.startOfQuarter;\n\t\t\t\tif (box.startOfQuarter && !box.startOfYear) {\n\t\t\t\t\tdateMutator(box, dateAccessor(d));\n\t\t\t\t\t// box.displayDate = d.displayDate;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!box.startOfQuarter && !box.startOfMonth) {\n\t\t\t\tbox.startOfMonth = d.startOfMonth;\n\t\t\t\tif (box.startOfMonth && !box.startOfQuarter) {\n\t\t\t\t\tdateMutator(box, dateAccessor(d));\n\t\t\t\t\t// box.displayDate = d.displayDate;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!box.startOfMonth && !box.startOfWeek) {\n\t\t\t\tbox.startOfWeek = d.startOfWeek;\n\t\t\t\tif (box.startOfWeek && !box.startOfMonth) {\n\t\t\t\t\tdateMutator(box, dateAccessor(d));\n\t\t\t\t\t// box.displayDate = d.displayDate;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (columnData.length === 1 && column.boxes.length === 0) {\n\t\t\t\tconst upwardMovement = (Math.max((pricingMethod(d).high - column.open), 0)); // upward movement\n\t\t\t\tconst downwardMovement = Math.abs(Math.min((column.open - pricingMethod(d).low), 0)); // downward movement\n\t\t\t\tcolumn.direction = upwardMovement > downwardMovement ? 1 : -1;\n\t\t\t\tif (boxSize * reversal < upwardMovement\n\t\t\t\t\t|| boxSize * reversal < downwardMovement) {\n\t\t\t\t\t// enough movement to trigger a reversal\n\t\t\t\t\tbox.toDate = dateAccessor(d);\n\t\t\t\t\tbox.open = column.open;\n\t\t\t\t\tconst noOfBoxes = column.direction > 0\n\t\t\t\t\t\t? Math.floor(upwardMovement / boxSize)\n\t\t\t\t\t\t: Math.floor(downwardMovement / boxSize);\n\t\t\t\t\tfor (let i = 0; i < noOfBoxes; i++) {\n\t\t\t\t\t\tbox.close = box.open + column.direction * boxSize;\n\t\t\t\t\t\tconst prevBoxClose = box.close;\n\t\t\t\t\t\tcolumn.boxes.push(box);\n\t\t\t\t\t\tbox = createBox(box, dateAccessor, dateMutator);\n\t\t\t\t\t\t// box = cloneMe(box);\n\t\t\t\t\t\tbox.open = prevBoxClose;\n\t\t\t\t\t}\n\t\t\t\t\tbox.fromDate = dateAccessor(d);\n\t\t\t\t\tbox.date = dateAccessor(d);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// one or more boxes already formed in the current column\n\t\t\t\tconst upwardMovement = (Math.max((pricingMethod(d).high - box.open), 0)); // upward movement\n\t\t\t\tconst downwardMovement = Math.abs(Math.min((pricingMethod(d).low - box.open), 0)); // downward movement\n\n\t\t\t\tif ((column.direction > 0 && upwardMovement > boxSize) /* rising column AND box can be formed */\n\t\t\t\t\t\t|| (column.direction < 0 && downwardMovement > boxSize) /* falling column AND box can be formed */ ) {\n\t\t\t\t\t// form another box\n\t\t\t\t\tbox.close = box.open + column.direction * boxSize;\n\t\t\t\t\tbox.toDate = dateAccessor(d);\n\t\t\t\t\tconst prevBoxClose = box.close;\n\t\t\t\t\tcolumn.boxes.push(box);\n\t\t\t\t\tbox = createBox(d, dateAccessor, dateMutator);\n\t\t\t\t\tbox.open = prevBoxClose;\n\t\t\t\t\tbox.fromDate = dateAccessor(d);\n\t\t\t\t\tdateMutator(box, dateAccessor(d));\n\t\t\t\t} else if ((column.direction > 0 && downwardMovement > boxSize * reversal) /* rising column and there is downward movement to trigger a reversal */\n\t\t\t\t\t\t|| (column.direction < 0 && upwardMovement > boxSize * reversal)/* falling column and there is downward movement to trigger a reversal */) {\n\t\t\t\t\t// reversal\n\n\t\t\t\t\tbox.open = box.open + -1 * column.direction * boxSize;\n\t\t\t\t\tbox.toDate = dateAccessor(d);\n\t\t\t\t\t// box.displayDate = d.displayDate;\n\t\t\t\t\tdateMutator(box, dateAccessor(d));\n\t\t\t\t\t// box.startOfYear = d.startOfYear;\n\t\t\t\t\t// box.startOfQuarter = d.startOfQuarter;\n\t\t\t\t\t// box.startOfMonth = d.startOfMonth;\n\t\t\t\t\t// box.startOfWeek = d.startOfWeek;\n\t\t\t\t\t// console.table(column.boxes);\n\t\t\t\t\t// var idx = index + 1;\n\t\t\t\t\tcolumn = {\n\t\t\t\t\t\tboxes: [],\n\t\t\t\t\t\tvolume: 0,\n\t\t\t\t\t\tdirection: -1 * column.direction\n\t\t\t\t\t};\n\t\t\t\t\tconst noOfBoxes = column.direction > 0\n\t\t\t\t\t\t? Math.floor(upwardMovement / boxSize)\n\t\t\t\t\t\t: Math.floor(downwardMovement / boxSize);\n\t\t\t\t\tfor (let i = 0; i < noOfBoxes; i++) {\n\t\t\t\t\t\tbox.close = box.open + column.direction * boxSize;\n\t\t\t\t\t\tconst prevBoxClose = box.close;\n\t\t\t\t\t\tcolumn.boxes.push(box);\n\t\t\t\t\t\tbox = createBox(d, dateAccessor, dateMutator);\n\t\t\t\t\t\tbox.open = prevBoxClose;\n\t\t\t\t\t}\n\n\t\t\t\t\tcolumnData.push(column);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tupdateColumns(columnData, dateAccessor, dateMutator);\n\n\t\treturn columnData;\n\t}\n\tcalculator.options = function(x) {\n\t\tif (!arguments.length) {\n\t\t\treturn options;\n\t\t}\n\t\toptions = { ...defaultOptions, ...x };\n\t\treturn calculator;\n\t};\n\tcalculator.dateMutator = function(x) {\n\t\tif (!arguments.length) return dateMutator;\n\t\tdateMutator = x;\n\t\treturn calculator;\n\t};\n\tcalculator.dateAccessor = function(x) {\n\t\tif (!arguments.length) return dateAccessor;\n\t\tdateAccessor = x;\n\t\treturn calculator;\n\t};\n\n\treturn calculator;\n}\n"]},"metadata":{},"sourceType":"script"}