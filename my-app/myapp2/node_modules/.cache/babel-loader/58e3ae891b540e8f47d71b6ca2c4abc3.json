{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nexports.default = function () {\n  var options = _defaultOptionsForComputation.WMA;\n\n  function calculator(data) {\n    var _options = options,\n        windowSize = _options.windowSize,\n        sourcePath = _options.sourcePath;\n    var weight = windowSize * (windowSize + 1) / 2;\n    var waverage = (0, _utils.slidingWindow)().windowSize(windowSize).sourcePath(sourcePath).accumulator(function (values) {\n      var total = (0, _d3Array.sum)(values, function (v, i) {\n        return (i + 1) * v;\n      });\n      return total / weight;\n    });\n    return waverage(data);\n  }\n\n  calculator.undefinedLength = function () {\n    var _options2 = options,\n        windowSize = _options2.windowSize;\n    return windowSize - 1;\n  };\n\n  calculator.options = function (x) {\n    if (!arguments.length) {\n      return options;\n    }\n\n    options = _extends({}, _defaultOptionsForComputation.WMA, x);\n    return calculator;\n  };\n\n  return calculator;\n};\n\nvar _d3Array = require(\"d3-array\");\n\nvar _utils = require(\"../utils\");\n\nvar _defaultOptionsForComputation = require(\"./defaultOptionsForComputation\");","map":{"version":3,"sources":["../../../src/lib/calculator/wma.js"],"names":["options","windowSize","sourcePath","weight","waverage","total","i","calculator","arguments"],"mappings":";;;;;;;;;;;;;;;;;;;;kBAOe,YAAW;AAEzB,MAAIA,OAAAA,GAAAA,6BAAAA,CAAJ,GAAA;;AAEA,WAAA,UAAA,CAAA,IAAA,EAA6B;AAAA,QAAA,QAAA,GAAA,OAAA;AAAA,QACpBC,UADoB,GAAA,QAAA,CAAA,UAAA;AAAA,QACRC,UADQ,GAAA,QAAA,CAAA,UAAA;AAG5B,QAAMC,MAAAA,GAASF,UAAAA,IAAcA,UAAAA,GAAdA,CAAAA,CAAAA,GAAf,CAAA;AAEA,QAAMG,QAAAA,GAAW,CAAA,GAAA,MAAA,CAAA,aAAA,IAAA,UAAA,CAAA,UAAA,EAAA,UAAA,CAAA,UAAA,EAAA,WAAA,CAGH,UAAA,MAAA,EAAU;AACtB,UAAMC,KAAAA,GAAQ,CAAA,GAAA,QAAA,CAAA,GAAA,EAAA,MAAA,EAAY,UAAA,CAAA,EAAA,CAAA,EAAU;AACnC,eAAO,CAACC,CAAAA,GAAD,CAAA,IAAP,CAAA;AADD,OAAc,CAAd;AAGA,aAAOD,KAAAA,GAAP,MAAA;AAPF,KAAiB,CAAjB;AAUA,WAAOD,QAAAA,CAAP,IAAOA,CAAP;AACA;;AACDG,EAAAA,UAAAA,CAAAA,eAAAA,GAA6B,YAAW;AAAA,QAAA,SAAA,GAAA,OAAA;AAAA,QAC/BN,UAD+B,GAAA,SAAA,CAAA,UAAA;AAGvC,WAAOA,UAAAA,GAAP,CAAA;AAHDM,GAAAA;;AAKAA,EAAAA,UAAAA,CAAAA,OAAAA,GAAqB,UAAA,CAAA,EAAY;AAChC,QAAI,CAACC,SAAAA,CAAL,MAAA,EAAuB;AACtB,aAAA,OAAA;AACA;;AACDR,IAAAA,OAAAA,GAAAA,QAAAA,CAAAA,EAAAA,EAAAA,6BAAAA,CAAAA,GAAAA,EAAAA,CAAAA,CAAAA;AACA,WAAA,UAAA;AALDO,GAAAA;;AAQA,SAAA,UAAA;;;AAvCD,IAAA,QAAA,GAAA,OAAA,CAAA,UAAA,CAAA;;AAEA,IAAA,MAAA,GAAA,OAAA,CAAA,UAAA,CAAA;;AACA,IAAA,6BAAA,GAAA,OAAA,CAAA,gCAAA,CAAA","sourcesContent":["\n\nimport { sum } from \"d3-array\";\n\nimport { slidingWindow } from \"../utils\";\nimport { WMA as defaultOptions } from \"./defaultOptionsForComputation\";\n\nexport default function() {\n\n\tlet options = defaultOptions;\n\n\tfunction calculator(data)    {\n\t\tconst { windowSize, sourcePath } = options;\n\n\t\tconst weight = windowSize * (windowSize + 1) / 2;\n\n\t\tconst waverage = slidingWindow()\n\t\t\t.windowSize(windowSize)\n\t\t\t.sourcePath(sourcePath)\n\t\t\t.accumulator(values => {\n\t\t\t\tconst total = sum(values, (v, i) => {\n\t\t\t\t\treturn (i + 1) * v;\n\t\t\t\t});\n\t\t\t\treturn total / weight;\n\t\t\t});\n\n\t\treturn waverage(data);\n\t}\n\tcalculator.undefinedLength = function() {\n\t\tconst { windowSize } = options;\n\n\t\treturn windowSize - 1;\n\t};\n\tcalculator.options = function(x) {\n\t\tif (!arguments.length) {\n\t\t\treturn options;\n\t\t}\n\t\toptions = { ...defaultOptions, ...x };\n\t\treturn calculator;\n\t};\n\n\treturn calculator;\n}\n"]},"metadata":{},"sourceType":"script"}