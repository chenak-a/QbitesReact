{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _d3Array = require(\"d3-array\");\n\nvar _d3Path = require(\"d3-path\");\n\nvar _GenericChartComponent = require(\"../../GenericChartComponent\");\n\nvar _GenericChartComponent2 = _interopRequireDefault(_GenericChartComponent);\n\nvar _GenericComponent = require(\"../../GenericComponent\");\n\nvar _StraightLine = require(\"./StraightLine\");\n\nvar _utils = require(\"../../utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar GannFan = function (_Component) {\n  _inherits(GannFan, _Component);\n\n  function GannFan(props) {\n    _classCallCheck(this, GannFan);\n\n    var _this = _possibleConstructorReturn(this, (GannFan.__proto__ || Object.getPrototypeOf(GannFan)).call(this, props));\n\n    _this.renderSVG = _this.renderSVG.bind(_this);\n    _this.drawOnCanvas = _this.drawOnCanvas.bind(_this);\n    _this.isHover = _this.isHover.bind(_this);\n    return _this;\n  }\n\n  _createClass(GannFan, [{\n    key: \"isHover\",\n    value: function isHover(moreProps) {\n      var _props = this.props,\n          tolerance = _props.tolerance,\n          onHover = _props.onHover;\n      var mouseXY = moreProps.mouseXY;\n\n      var _mouseXY = _slicedToArray(mouseXY, 2),\n          mouseX = _mouseXY[0],\n          mouseY = _mouseXY[1];\n\n      var hovering = false;\n\n      if ((0, _utils.isDefined)(onHover)) {\n        var lines = helper(this.props, moreProps);\n\n        for (var i = 0; i < lines.length; i++) {\n          var line1 = lines[i];\n          var left = Math.min(line1.x1, line1.x2);\n          var right = Math.max(line1.x1, line1.x2);\n          var top = Math.min(line1.y1, line1.y2);\n          var bottom = Math.max(line1.y1, line1.y2);\n          var isWithinLineBounds = mouseX >= left && mouseX <= right && mouseY >= top && mouseY <= bottom;\n          hovering = isWithinLineBounds && (0, _StraightLine.isHovering2)([line1.x1, line1.y1], [line1.x2, line1.y2], mouseXY, tolerance);\n          if (hovering) break;\n        }\n      }\n\n      return hovering;\n    }\n  }, {\n    key: \"drawOnCanvas\",\n    value: function drawOnCanvas(ctx, moreProps) {\n      var _props2 = this.props,\n          stroke = _props2.stroke,\n          strokeWidth = _props2.strokeWidth,\n          strokeOpacity = _props2.strokeOpacity,\n          fill = _props2.fill,\n          fillOpacity = _props2.fillOpacity,\n          fontFamily = _props2.fontFamily,\n          fontSize = _props2.fontSize,\n          fontFill = _props2.fontFill;\n      var lines = helper(this.props, moreProps);\n      ctx.lineWidth = strokeWidth;\n      ctx.strokeStyle = (0, _utils.hexToRGBA)(stroke, strokeOpacity);\n      ctx.font = fontSize + \"px \" + fontFamily;\n      ctx.fillStyle = fontFill;\n      lines.forEach(function (line) {\n        var x1 = line.x1,\n            y1 = line.y1,\n            x2 = line.x2,\n            y2 = line.y2,\n            label = line.label;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.beginPath();\n        ctx.fillText(label.text, label.x, label.y);\n      });\n      var pairsOfLines = (0, _d3Array.pairs)(lines);\n      pairsOfLines.forEach(function (_ref, idx) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            line1 = _ref2[0],\n            line2 = _ref2[1];\n\n        ctx.fillStyle = (0, _utils.hexToRGBA)(fill[idx], fillOpacity);\n        ctx.beginPath();\n        ctx.moveTo(line1.x1, line1.y1);\n        ctx.lineTo(line1.x2, line1.y2);\n        ctx.lineTo(line2.x2, line2.y2);\n        ctx.closePath();\n        ctx.fill();\n      });\n    }\n  }, {\n    key: \"renderSVG\",\n    value: function renderSVG(moreProps) {\n      var _props3 = this.props,\n          stroke = _props3.stroke,\n          strokeWidth = _props3.strokeWidth,\n          fillOpacity = _props3.fillOpacity,\n          fill = _props3.fill,\n          strokeOpacity = _props3.strokeOpacity;\n      var lines = helper(this.props, moreProps);\n      var pairsOfLines = (0, _d3Array.pairs)(lines);\n      return _react2.default.createElement(\"g\", null, lines.map(function (each, idx) {\n        var x1 = each.x1,\n            y1 = each.y1,\n            x2 = each.x2,\n            y2 = each.y2;\n        return _react2.default.createElement(\"line\", {\n          key: idx,\n          strokeWidth: strokeWidth,\n          stroke: stroke,\n          strokeOpacity: strokeOpacity,\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2\n        });\n      }), pairsOfLines.map(function (_ref3, idx) {\n        var _ref4 = _slicedToArray(_ref3, 2),\n            line1 = _ref4[0],\n            line2 = _ref4[1];\n\n        var ctx = (0, _d3Path.path)();\n        ctx.moveTo(line1.x1, line1.y1);\n        ctx.lineTo(line1.x2, line1.y2);\n        ctx.lineTo(line2.x2, line2.y2);\n        ctx.closePath();\n        return _react2.default.createElement(\"path\", {\n          key: idx,\n          stroke: \"none\",\n          fill: fill[idx],\n          fillOpacity: fillOpacity,\n          d: ctx.toString()\n        });\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _props4 = this.props,\n          selected = _props4.selected,\n          interactiveCursorClass = _props4.interactiveCursorClass;\n      var _props5 = this.props,\n          onDragStart = _props5.onDragStart,\n          onDrag = _props5.onDrag,\n          onDragComplete = _props5.onDragComplete,\n          onHover = _props5.onHover,\n          onUnHover = _props5.onUnHover;\n      return _react2.default.createElement(_GenericChartComponent2.default, {\n        isHover: this.isHover,\n        svgDraw: this.renderSVG,\n        canvasToDraw: _GenericComponent.getMouseCanvas,\n        canvasDraw: this.drawOnCanvas,\n        interactiveCursorClass: interactiveCursorClass,\n        selected: selected,\n        onDragStart: onDragStart,\n        onDrag: onDrag,\n        onDragComplete: onDragComplete,\n        onHover: onHover,\n        onUnHover: onUnHover,\n        drawOn: [\"mousemove\", \"mouseleave\", \"pan\", \"drag\"]\n      });\n    }\n  }]);\n\n  return GannFan;\n}(_react.Component);\n\nfunction getLineCoordinates(start, endX, endY, text) {\n  var end = [endX, endY];\n  return {\n    start: start,\n    end: end,\n    text: text\n  };\n}\n\nfunction helper(props, moreProps) {\n  var startXY = props.startXY,\n      endXY = props.endXY;\n  var xScale = moreProps.xScale,\n      yScale = moreProps.chartConfig.yScale;\n\n  if ((0, _utils.isNotDefined)(startXY) || (0, _utils.isNotDefined)(endXY)) {\n    return [];\n  }\n\n  var _startXY = _slicedToArray(startXY, 2),\n      x1 = _startXY[0],\n      y1 = _startXY[1];\n\n  var _endXY = _slicedToArray(endXY, 2),\n      x2 = _endXY[0],\n      y2 = _endXY[1];\n\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n\n  if (dx !== 0 && dy !== 0) {\n    // console.log(\"modLine ->\", startXY, modLine, dx1, dy1)\n    var halfY = getLineCoordinates(startXY, x2, y1 + dy / 2, \"2/1\");\n    var oneThirdY = getLineCoordinates(startXY, x2, y1 + dy / 3, \"3/1\");\n    var oneFourthY = getLineCoordinates(startXY, x2, y1 + dy / 4, \"4/1\");\n    var oneEighthY = getLineCoordinates(startXY, x2, y1 + dy / 8, \"8/1\");\n    var halfX = getLineCoordinates(startXY, x1 + dx / 2, y2, \"1/2\");\n    var oneThirdX = getLineCoordinates(startXY, x1 + dx / 3, y2, \"1/3\");\n    var oneFourthX = getLineCoordinates(startXY, x1 + dx / 4, y2, \"1/4\");\n    var oneEighthX = getLineCoordinates(startXY, x1 + dx / 8, y2, \"1/8\");\n    var lines = [oneEighthX, oneFourthX, oneThirdX, halfX, {\n      start: startXY,\n      end: endXY,\n      text: \"1/1\"\n    }, halfY, oneThirdY, oneFourthY, oneEighthY];\n    var lineCoods = lines.map(function (line) {\n      var _generateLine = (0, _StraightLine.generateLine)({\n        type: \"RAY\",\n        start: line.start,\n        end: line.end,\n        xScale: xScale,\n        yScale: yScale\n      }),\n          x1 = _generateLine.x1,\n          y1 = _generateLine.y1,\n          x2 = _generateLine.x2,\n          y2 = _generateLine.y2;\n\n      return {\n        x1: xScale(x1),\n        y1: yScale(y1),\n        x2: xScale(x2),\n        y2: yScale(y2),\n        label: {\n          x: xScale(line.end[0]),\n          y: yScale(line.end[1]),\n          text: line.text\n        }\n      };\n    });\n    return lineCoods;\n  }\n\n  return [];\n}\n\nGannFan.propTypes = {\n  interactiveCursorClass: _propTypes2.default.string,\n  stroke: _propTypes2.default.string.isRequired,\n  strokeWidth: _propTypes2.default.number.isRequired,\n  fill: _propTypes2.default.arrayOf(_propTypes2.default.string).isRequired,\n  strokeOpacity: _propTypes2.default.number.isRequired,\n  fillOpacity: _propTypes2.default.number.isRequired,\n  fontFamily: _propTypes2.default.string.isRequired,\n  fontSize: _propTypes2.default.number.isRequired,\n  fontFill: _propTypes2.default.string.isRequired,\n  onDragStart: _propTypes2.default.func.isRequired,\n  onDrag: _propTypes2.default.func.isRequired,\n  onDragComplete: _propTypes2.default.func.isRequired,\n  onHover: _propTypes2.default.func,\n  onUnHover: _propTypes2.default.func,\n  defaultClassName: _propTypes2.default.string,\n  tolerance: _propTypes2.default.number.isRequired,\n  selected: _propTypes2.default.bool.isRequired\n};\nGannFan.defaultProps = {\n  onDragStart: _utils.noop,\n  onDrag: _utils.noop,\n  onDragComplete: _utils.noop,\n  strokeWidth: 1,\n  tolerance: 4,\n  selected: false\n};\nexports.default = GannFan;","map":{"version":3,"sources":["../../../../src/lib/interactive/components/GannFan.js"],"names":["GannFan","moreProps","tolerance","onHover","mouseXY","mouseX","mouseY","hovering","lines","helper","i","line1","left","Math","right","top","bottom","isWithinLineBounds","ctx","stroke","strokeWidth","strokeOpacity","fill","fillOpacity","fontFamily","fontSize","fontFill","x1","y1","x2","y2","label","line","pairsOfLines","line2","each","selected","interactiveCursorClass","onDragStart","onDrag","onDragComplete","onUnHover","end","start","text","startXY","endXY","props","xScale","yScale","dx","dy","halfY","getLineCoordinates","oneThirdY","oneFourthY","oneEighthY","halfX","oneThirdX","oneFourthX","oneEighthX","lineCoods","type","x","y","defaultClassName","isRequired"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;;;AACA,IAAA,UAAA,GAAA,OAAA,CAAA,YAAA,CAAA;;;;AAEA,IAAA,QAAA,GAAA,OAAA,CAAA,UAAA,CAAA;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;AAEA,IAAA,sBAAA,GAAA,OAAA,CAAA,6BAAA,CAAA;;;;AACA,IAAA,iBAAA,GAAA,OAAA,CAAA,wBAAA,CAAA;;AACA,IAAA,aAAA,GAAA,OAAA,CAAA,gBAAA,CAAA;;AAEA,IAAA,MAAA,GAAA,OAAA,CAAA,aAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAKMA,O;;;AACL,WAAA,OAAA,CAAA,KAAA,EAAmB;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,OAAA,CAAA;;AAAA,QAAA,KAAA,GAAA,0BAAA,CAAA,IAAA,EAAA,CAAA,OAAA,CAAA,SAAA,IAAA,MAAA,CAAA,cAAA,CAAA,OAAA,CAAA,EAAA,IAAA,CAAA,IAAA,EAAA,KAAA,CAAA,CAAA;;AAGlB,IAAA,KAAA,CAAA,SAAA,GAAiB,KAAA,CAAA,SAAA,CAAA,IAAA,CAAjB,KAAiB,CAAjB;AACA,IAAA,KAAA,CAAA,YAAA,GAAoB,KAAA,CAAA,YAAA,CAAA,IAAA,CAApB,KAAoB,CAApB;AACA,IAAA,KAAA,CAAA,OAAA,GAAe,KAAA,CAAA,OAAA,CAAA,IAAA,CAAf,KAAe,CAAf;AALkB,WAAA,KAAA;AAMlB;;;;4BACOC,S,EAAW;AAAA,UAAA,MAAA,GACa,KADb,KAAA;AAAA,UACVC,SADU,GAAA,MAAA,CAAA,SAAA;AAAA,UACCC,OADD,GAAA,MAAA,CAAA,OAAA;AAAA,UAEVC,OAFU,GAEEH,SAFF,CAAA,OAAA;;AAAA,UAAA,QAAA,GAAA,cAAA,CAAA,OAAA,EAAA,CAAA,CAAA;AAAA,UAGXI,MAHW,GAAA,QAAA,CAAA,CAAA,CAAA;AAAA,UAGHC,MAHG,GAAA,QAAA,CAAA,CAAA,CAAA;;AAKlB,UAAIC,QAAAA,GAAJ,KAAA;;AACA,UAAI,CAAA,GAAA,MAAA,CAAA,SAAA,EAAJ,OAAI,CAAJ,EAAwB;AAEvB,YAAMC,KAAAA,GAAQC,MAAAA,CAAO,KAAPA,KAAAA,EAAd,SAAcA,CAAd;;AAEA,aAAK,IAAIC,CAAAA,GAAT,CAAA,EAAgBA,CAAAA,GAAIF,KAAAA,CAApB,MAAA,EAAkCE,CAAlC,EAAA,EAAuC;AACtC,cAAMC,KAAAA,GAAQH,KAAAA,CAAd,CAAcA,CAAd;AAEA,cAAMI,IAAAA,GAAOC,IAAAA,CAAAA,GAAAA,CAASF,KAAAA,CAATE,EAAAA,EAAmBF,KAAAA,CAAhC,EAAaE,CAAb;AACA,cAAMC,KAAAA,GAAQD,IAAAA,CAAAA,GAAAA,CAASF,KAAAA,CAATE,EAAAA,EAAmBF,KAAAA,CAAjC,EAAcE,CAAd;AACA,cAAME,GAAAA,GAAMF,IAAAA,CAAAA,GAAAA,CAASF,KAAAA,CAATE,EAAAA,EAAmBF,KAAAA,CAA/B,EAAYE,CAAZ;AACA,cAAMG,MAAAA,GAASH,IAAAA,CAAAA,GAAAA,CAASF,KAAAA,CAATE,EAAAA,EAAmBF,KAAAA,CAAlC,EAAeE,CAAf;AAEA,cAAMI,kBAAAA,GAAqBZ,MAAAA,IAAAA,IAAAA,IAAkBA,MAAAA,IAAlBA,KAAAA,IACvBC,MAAAA,IADuBD,GAAAA,IACNC,MAAAA,IADrB,MAAA;AAGAC,UAAAA,QAAAA,GAAWU,kBAAAA,IACP,CAAA,GAAA,aAAA,CAAA,WAAA,EACF,CAACN,KAAAA,CAAD,EAAA,EAAWA,KAAAA,CADT,EACF,CADE,EAEF,CAACA,KAAAA,CAAD,EAAA,EAAWA,KAAAA,CAFT,EAEF,CAFE,EAAA,OAAA,EADJJ,SACI,CADJA;AAOA,cAAA,QAAA,EAAc;AACd;AACD;;AACD,aAAA,QAAA;AACA;;;iCACYW,G,EAAKjB,S,EAAW;AAAA,UAAA,OAAA,GAKxB,KALwB,KAAA;AAAA,UAE3BkB,MAF2B,GAAA,OAAA,CAAA,MAAA;AAAA,UAEnBC,WAFmB,GAAA,OAAA,CAAA,WAAA;AAAA,UAENC,aAFM,GAAA,OAAA,CAAA,aAAA;AAAA,UAG3BC,IAH2B,GAAA,OAAA,CAAA,IAAA;AAAA,UAGrBC,WAHqB,GAAA,OAAA,CAAA,WAAA;AAAA,UAI3BC,UAJ2B,GAAA,OAAA,CAAA,UAAA;AAAA,UAIfC,QAJe,GAAA,OAAA,CAAA,QAAA;AAAA,UAILC,QAJK,GAAA,OAAA,CAAA,QAAA;AAQ5B,UAAMlB,KAAAA,GAAQC,MAAAA,CAAO,KAAPA,KAAAA,EAAd,SAAcA,CAAd;AAEAS,MAAAA,GAAAA,CAAAA,SAAAA,GAAAA,WAAAA;AACAA,MAAAA,GAAAA,CAAAA,WAAAA,GAAkB,CAAA,GAAA,MAAA,CAAA,SAAA,EAAA,MAAA,EAAlBA,aAAkB,CAAlBA;AAEAA,MAAAA,GAAAA,CAAAA,IAAAA,GAAeO,QAAfP,GAAAA,KAAeO,GAAfP,UAAAA;AACAA,MAAAA,GAAAA,CAAAA,SAAAA,GAAAA,QAAAA;AAEAV,MAAAA,KAAAA,CAAAA,OAAAA,CAAc,UAAA,IAAA,EAAQ;AAAA,YAEpBmB,EAFoB,GAGjBK,IAHiB,CAAA,EAAA;AAAA,YAEhBJ,EAFgB,GAGjBI,IAHiB,CAAA,EAAA;AAAA,YAEZH,EAFY,GAGjBG,IAHiB,CAAA,EAAA;AAAA,YAERF,EAFQ,GAGjBE,IAHiB,CAAA,EAAA;AAAA,YAEJD,KAFI,GAGjBC,IAHiB,CAAA,KAAA;AAKrBd,QAAAA,GAAAA,CAAAA,SAAAA;AACAA,QAAAA,GAAAA,CAAAA,MAAAA,CAAAA,EAAAA,EAAAA,EAAAA;AACAA,QAAAA,GAAAA,CAAAA,MAAAA,CAAAA,EAAAA,EAAAA,EAAAA;AACAA,QAAAA,GAAAA,CAAAA,MAAAA;AACAA,QAAAA,GAAAA,CAAAA,SAAAA;AACAA,QAAAA,GAAAA,CAAAA,QAAAA,CAAaa,KAAAA,CAAbb,IAAAA,EAAyBa,KAAAA,CAAzBb,CAAAA,EAAkCa,KAAAA,CAAlCb,CAAAA;AAVDV,OAAAA;AAYA,UAAMyB,YAAAA,GAAe,CAAA,GAAA,QAAA,CAAA,KAAA,EAArB,KAAqB,CAArB;AAEAA,MAAAA,YAAAA,CAAAA,OAAAA,CAAqB,UAAA,IAAA,EAAA,GAAA,EAAyB;AAAA,YAAA,KAAA,GAAA,cAAA,CAAA,IAAA,EAAA,CAAA,CAAA;AAAA,YAAvBtB,KAAuB,GAAA,KAAA,CAAA,CAAA,CAAA;AAAA,YAAhBuB,KAAgB,GAAA,KAAA,CAAA,CAAA,CAAA;;AAC7ChB,QAAAA,GAAAA,CAAAA,SAAAA,GAAgB,CAAA,GAAA,MAAA,CAAA,SAAA,EAAUI,IAAAA,CAAV,GAAUA,CAAV,EAAhBJ,WAAgB,CAAhBA;AAEAA,QAAAA,GAAAA,CAAAA,SAAAA;AACAA,QAAAA,GAAAA,CAAAA,MAAAA,CAAWP,KAAAA,CAAXO,EAAAA,EAAqBP,KAAAA,CAArBO,EAAAA;AACAA,QAAAA,GAAAA,CAAAA,MAAAA,CAAWP,KAAAA,CAAXO,EAAAA,EAAqBP,KAAAA,CAArBO,EAAAA;AACAA,QAAAA,GAAAA,CAAAA,MAAAA,CAAWgB,KAAAA,CAAXhB,EAAAA,EAAqBgB,KAAAA,CAArBhB,EAAAA;AACAA,QAAAA,GAAAA,CAAAA,SAAAA;AACAA,QAAAA,GAAAA,CAAAA,IAAAA;AARDe,OAAAA;AAUA;;;8BACShC,S,EAAW;AAAA,UAAA,OAAA,GAC8C,KAD9C,KAAA;AAAA,UACZkB,MADY,GAAA,OAAA,CAAA,MAAA;AAAA,UACJC,WADI,GAAA,OAAA,CAAA,WAAA;AAAA,UACSG,WADT,GAAA,OAAA,CAAA,WAAA;AAAA,UACsBD,IADtB,GAAA,OAAA,CAAA,IAAA;AAAA,UAC4BD,aAD5B,GAAA,OAAA,CAAA,aAAA;AAGpB,UAAMb,KAAAA,GAAQC,MAAAA,CAAO,KAAPA,KAAAA,EAAd,SAAcA,CAAd;AACA,UAAMwB,YAAAA,GAAe,CAAA,GAAA,QAAA,CAAA,KAAA,EAArB,KAAqB,CAArB;AAEA,aACC,OAAA,CAAA,OAAA,CAAA,aAAA,CAAA,GAAA,EAAA,IAAA,EACEzB,KAAAA,CAAAA,GAAAA,CAAU,UAAA,IAAA,EAAA,GAAA,EAAe;AAAA,YACjBmB,EADiB,GACEQ,IADF,CAAA,EAAA;AAAA,YACbP,EADa,GACEO,IADF,CAAA,EAAA;AAAA,YACTN,EADS,GACEM,IADF,CAAA,EAAA;AAAA,YACLL,EADK,GACEK,IADF,CAAA,EAAA;AAEzB,eACC,OAAA,CAAA,OAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,UAAA,GAAA,EAAN,GAAA;AACC,UAAA,WAAA,EADD,WAAA;AAEC,UAAA,MAAA,EAFD,MAAA;AAGC,UAAA,aAAA,EAHD,aAAA;AAIC,UAAA,EAAA,EAJD,EAAA;AAKC,UAAA,EAAA,EALD,EAAA;AAMC,UAAA,EAAA,EAND,EAAA;AAOC,UAAA,EAAA,EAAIL;AAPL,SAAA,CADD;AAHF,OACEtB,CADF,EAeEyB,YAAAA,CAAAA,GAAAA,CAAiB,UAAA,KAAA,EAAA,GAAA,EAAyB;AAAA,YAAA,KAAA,GAAA,cAAA,CAAA,KAAA,EAAA,CAAA,CAAA;AAAA,YAAvBtB,KAAuB,GAAA,KAAA,CAAA,CAAA,CAAA;AAAA,YAAhBuB,KAAgB,GAAA,KAAA,CAAA,CAAA,CAAA;;AAC1C,YAAMhB,GAAAA,GAAM,CAAA,GAAA,OAAA,CAAZ,IAAY,GAAZ;AACAA,QAAAA,GAAAA,CAAAA,MAAAA,CAAWP,KAAAA,CAAXO,EAAAA,EAAqBP,KAAAA,CAArBO,EAAAA;AACAA,QAAAA,GAAAA,CAAAA,MAAAA,CAAWP,KAAAA,CAAXO,EAAAA,EAAqBP,KAAAA,CAArBO,EAAAA;AACAA,QAAAA,GAAAA,CAAAA,MAAAA,CAAWgB,KAAAA,CAAXhB,EAAAA,EAAqBgB,KAAAA,CAArBhB,EAAAA;AACAA,QAAAA,GAAAA,CAAAA,SAAAA;AACA,eACC,OAAA,CAAA,OAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,UAAA,GAAA,EAAN,GAAA;AACC,UAAA,MAAA,EADD,MAAA;AAEC,UAAA,IAAA,EAAMI,IAAAA,CAFP,GAEOA,CAFP;AAGC,UAAA,WAAA,EAHD,WAAA;AAIC,UAAA,CAAA,EAAGJ,GAAAA,CAAAA,QAAAA;AAJJ,SAAA,CADD;AANAe,OAAAA,CAfF,CADD;AAiCA;;;6BACQ;AAAA,UAAA,OAAA,GACqC,KADrC,KAAA;AAAA,UACAG,QADA,GAAA,OAAA,CAAA,QAAA;AAAA,UACUC,sBADV,GAAA,OAAA,CAAA,sBAAA;AAAA,UAAA,OAAA,GAE4D,KAF5D,KAAA;AAAA,UAEAC,WAFA,GAAA,OAAA,CAAA,WAAA;AAAA,UAEaC,MAFb,GAAA,OAAA,CAAA,MAAA;AAAA,UAEqBC,cAFrB,GAAA,OAAA,CAAA,cAAA;AAAA,UAEqCrC,OAFrC,GAAA,OAAA,CAAA,OAAA;AAAA,UAE8CsC,SAF9C,GAAA,OAAA,CAAA,SAAA;AAIR,aAAO,OAAA,CAAA,OAAA,CAAA,aAAA,CAAA,uBAAA,CAAA,OAAA,EAAA;AACN,QAAA,OAAA,EAAS,KADH,OAAA;AAGN,QAAA,OAAA,EAAS,KAHH,SAAA;AAIN,QAAA,YAAA,EAAA,iBAAA,CAJM,cAAA;AAKN,QAAA,UAAA,EAAY,KALN,YAAA;AAON,QAAA,sBAAA,EAPM,sBAAA;AAQN,QAAA,QAAA,EARM,QAAA;AAUN,QAAA,WAAA,EAVM,WAAA;AAWN,QAAA,MAAA,EAXM,MAAA;AAYN,QAAA,cAAA,EAZM,cAAA;AAaN,QAAA,OAAA,EAbM,OAAA;AAcN,QAAA,SAAA,EAdM,SAAA;AAgBN,QAAA,MAAA,EAAQ,CAAA,WAAA,EAAA,YAAA,EAAA,KAAA,EAAA,MAAA;AAhBF,OAAA,CAAP;AAkBA;;;;;;AAGF,SAAA,kBAAA,CAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAqD;AACpD,MAAMC,GAAAA,GAAM,CAAA,IAAA,EAAZ,IAAY,CAAZ;AAIA,SAAO;AACNC,IAAAA,KAAAA,EADM,KAAA;AACCD,IAAAA,GAAAA,EADD,GAAA;AACME,IAAAA,IAAAA,EAAAA;AADN,GAAP;AAGA;;AAED,SAAA,MAAA,CAAA,KAAA,EAAA,SAAA,EAAkC;AAAA,MACzBC,OADyB,GACNE,KADM,CAAA,OAAA;AAAA,MAChBD,KADgB,GACNC,KADM,CAAA,KAAA;AAAA,MAIhCC,MAJgC,GAM7B/C,SAN6B,CAAA,MAAA;AAAA,MAKjBgD,MALiB,GAM7BhD,SAN6B,CAAA,WAM7BA,CAN6B,MAAA;;AAOjC,MAAI,CAAA,GAAA,MAAA,CAAA,YAAA,EAAA,OAAA,KAAyB,CAAA,GAAA,MAAA,CAAA,YAAA,EAA7B,KAA6B,CAA7B,EAAkD;AACjD,WAAA,EAAA;AACA;;AATgC,MAAA,QAAA,GAAA,cAAA,CAAA,OAAA,EAAA,CAAA,CAAA;AAAA,MAU1B0B,EAV0B,GAAA,QAAA,CAAA,CAAA,CAAA;AAAA,MAUtBC,EAVsB,GAAA,QAAA,CAAA,CAAA,CAAA;;AAAA,MAAA,MAAA,GAAA,cAAA,CAAA,KAAA,EAAA,CAAA,CAAA;AAAA,MAW1BC,EAX0B,GAAA,MAAA,CAAA,CAAA,CAAA;AAAA,MAWtBC,EAXsB,GAAA,MAAA,CAAA,CAAA,CAAA;;AAajC,MAAMoB,EAAAA,GAAKrB,EAAAA,GAAX,EAAA;AACA,MAAMsB,EAAAA,GAAKrB,EAAAA,GAAX,EAAA;;AAEA,MAAIoB,EAAAA,KAAAA,CAAAA,IAAYC,EAAAA,KAAhB,CAAA,EAA0B;AACzB;AACA,QAAMC,KAAAA,GAAQC,kBAAAA,CAAAA,OAAAA,EAAAA,EAAAA,EAGbzB,EAAAA,GAAKuB,EAAAA,GAHQE,CAAAA,EAAd,KAAcA,CAAd;AAMA,QAAMC,SAAAA,GAAYD,kBAAAA,CAAAA,OAAAA,EAAAA,EAAAA,EAGjBzB,EAAAA,GAAKuB,EAAAA,GAHYE,CAAAA,EAAlB,KAAkBA,CAAlB;AAMA,QAAME,UAAAA,GAAaF,kBAAAA,CAAAA,OAAAA,EAAAA,EAAAA,EAGlBzB,EAAAA,GAAKuB,EAAAA,GAHaE,CAAAA,EAAnB,KAAmBA,CAAnB;AAMA,QAAMG,UAAAA,GAAaH,kBAAAA,CAAAA,OAAAA,EAAAA,EAAAA,EAGlBzB,EAAAA,GAAKuB,EAAAA,GAHaE,CAAAA,EAAnB,KAAmBA,CAAnB;AAMA,QAAMI,KAAAA,GAAQJ,kBAAAA,CAAAA,OAAAA,EAEb1B,EAAAA,GAAKuB,EAAAA,GAFQG,CAAAA,EAAAA,EAAAA,EAAd,KAAcA,CAAd;AAMA,QAAMK,SAAAA,GAAYL,kBAAAA,CAAAA,OAAAA,EAEjB1B,EAAAA,GAAKuB,EAAAA,GAFYG,CAAAA,EAAAA,EAAAA,EAAlB,KAAkBA,CAAlB;AAMA,QAAMM,UAAAA,GAAaN,kBAAAA,CAAAA,OAAAA,EAElB1B,EAAAA,GAAKuB,EAAAA,GAFaG,CAAAA,EAAAA,EAAAA,EAAnB,KAAmBA,CAAnB;AAMA,QAAMO,UAAAA,GAAaP,kBAAAA,CAAAA,OAAAA,EAElB1B,EAAAA,GAAKuB,EAAAA,GAFaG,CAAAA,EAAAA,EAAAA,EAAnB,KAAmBA,CAAnB;AAMA,QAAM7C,KAAAA,GAAQ,CAAA,UAAA,EAAA,UAAA,EAAA,SAAA,EAAA,KAAA,EAKb;AAAEmC,MAAAA,KAAAA,EAAF,OAAA;AAAkBD,MAAAA,GAAAA,EAAlB,KAAA;AAA8BE,MAAAA,IAAAA,EALjB;AAKb,KALa,EAAA,KAAA,EAAA,SAAA,EAAA,UAAA,EAAd,UAAc,CAAd;AAWA,QAAMiB,SAAAA,GAAY,KAAA,CAAA,GAAA,CAAU,UAAA,IAAA,EAAQ;AAAA,UAAA,aAAA,GACR,CAAA,GAAA,aAAA,CAAA,YAAA,EAAa;AACvCC,QAAAA,IAAAA,EADuC,KAAA;AAEvCnB,QAAAA,KAAAA,EAAOX,IAAAA,CAFgC,KAAA;AAGvCU,QAAAA,GAAAA,EAAKV,IAAAA,CAHkC,GAAA;AAIvCgB,QAAAA,MAAAA,EAJuC,MAAA;AAKvCC,QAAAA,MAAAA,EAAAA;AALuC,OAAb,CADQ;AAAA,UAC3BtB,EAD2B,GAAA,aAAA,CAAA,EAAA;AAAA,UACvBC,EADuB,GAAA,aAAA,CAAA,EAAA;AAAA,UACnBC,EADmB,GAAA,aAAA,CAAA,EAAA;AAAA,UACfC,EADe,GAAA,aAAA,CAAA,EAAA;;AAQnC,aAAO;AACNH,QAAAA,EAAAA,EAAIqB,MAAAA,CADE,EACFA,CADE;AAENpB,QAAAA,EAAAA,EAAIqB,MAAAA,CAFE,EAEFA,CAFE;AAGNpB,QAAAA,EAAAA,EAAImB,MAAAA,CAHE,EAGFA,CAHE;AAINlB,QAAAA,EAAAA,EAAImB,MAAAA,CAJE,EAIFA,CAJE;AAKNlB,QAAAA,KAAAA,EAAO;AACNgC,UAAAA,CAAAA,EAAGf,MAAAA,CAAOhB,IAAAA,CAAAA,GAAAA,CADJ,CACIA,CAAPgB,CADG;AAENgB,UAAAA,CAAAA,EAAGf,MAAAA,CAAOjB,IAAAA,CAAAA,GAAAA,CAFJ,CAEIA,CAAPiB,CAFG;AAGNL,UAAAA,IAAAA,EAAMZ,IAAAA,CAAKY;AAHL;AALD,OAAP;AARD,KAAkB,CAAlB;AAoBA,WAAA,SAAA;AACA;;AACD,SAAA,EAAA;AACA;;AAGD5C,OAAAA,CAAAA,SAAAA,GAAoB;AACnBqC,EAAAA,sBAAAA,EAAwB,WAAA,CAAA,OAAA,CADL,MAAA;AAEnBlB,EAAAA,MAAAA,EAAQ,WAAA,CAAA,OAAA,CAAA,MAAA,CAFW,UAAA;AAGnBC,EAAAA,WAAAA,EAAa,WAAA,CAAA,OAAA,CAAA,MAAA,CAHM,UAAA;AAInBE,EAAAA,IAAAA,EAAM,WAAA,CAAA,OAAA,CAAA,OAAA,CAAkB,WAAA,CAAA,OAAA,CAAlB,MAAA,EAJa,UAAA;AAKnBD,EAAAA,aAAAA,EAAe,WAAA,CAAA,OAAA,CAAA,MAAA,CALI,UAAA;AAMnBE,EAAAA,WAAAA,EAAa,WAAA,CAAA,OAAA,CAAA,MAAA,CANM,UAAA;AAQnBC,EAAAA,UAAAA,EAAY,WAAA,CAAA,OAAA,CAAA,MAAA,CARO,UAAA;AASnBC,EAAAA,QAAAA,EAAU,WAAA,CAAA,OAAA,CAAA,MAAA,CATS,UAAA;AAUnBC,EAAAA,QAAAA,EAAU,WAAA,CAAA,OAAA,CAAA,MAAA,CAVS,UAAA;AAYnBY,EAAAA,WAAAA,EAAa,WAAA,CAAA,OAAA,CAAA,IAAA,CAZM,UAAA;AAanBC,EAAAA,MAAAA,EAAQ,WAAA,CAAA,OAAA,CAAA,IAAA,CAbW,UAAA;AAcnBC,EAAAA,cAAAA,EAAgB,WAAA,CAAA,OAAA,CAAA,IAAA,CAdG,UAAA;AAenBrC,EAAAA,OAAAA,EAAS,WAAA,CAAA,OAAA,CAfU,IAAA;AAgBnBsC,EAAAA,SAAAA,EAAW,WAAA,CAAA,OAAA,CAhBQ,IAAA;AAkBnBwB,EAAAA,gBAAAA,EAAkB,WAAA,CAAA,OAAA,CAlBC,MAAA;AAoBnB/D,EAAAA,SAAAA,EAAW,WAAA,CAAA,OAAA,CAAA,MAAA,CApBQ,UAAA;AAqBnBkC,EAAAA,QAAAA,EAAU,WAAA,CAAA,OAAA,CAAA,IAAA,CAAe8B;AArBN,CAApBlE;AAwBAA,OAAAA,CAAAA,YAAAA,GAAuB;AACtBsC,EAAAA,WAAAA,EAAAA,MAAAA,CADsB,IAAA;AAEtBC,EAAAA,MAAAA,EAAAA,MAAAA,CAFsB,IAAA;AAGtBC,EAAAA,cAAAA,EAAAA,MAAAA,CAHsB,IAAA;AAKtBpB,EAAAA,WAAAA,EALsB,CAAA;AAMtBlB,EAAAA,SAAAA,EANsB,CAAA;AAOtBkC,EAAAA,QAAAA,EAAU;AAPY,CAAvBpC;kBAUeA,O","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { pairs } from \"d3-array\";\nimport { path as d3Path } from \"d3-path\";\n\nimport GenericChartComponent from \"../../GenericChartComponent\";\nimport { getMouseCanvas } from \"../../GenericComponent\";\nimport { generateLine, isHovering2 } from \"./StraightLine\";\n\nimport {\n\tisDefined, isNotDefined,\n\tnoop, hexToRGBA,\n} from \"../../utils\";\n\nclass GannFan extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.renderSVG = this.renderSVG.bind(this);\n\t\tthis.drawOnCanvas = this.drawOnCanvas.bind(this);\n\t\tthis.isHover = this.isHover.bind(this);\n\t}\n\tisHover(moreProps) {\n\t\tconst { tolerance, onHover } = this.props;\n\t\tconst { mouseXY } = moreProps;\n\t\tconst [mouseX, mouseY] = mouseXY;\n\n\t\tlet hovering = false;\n\t\tif (isDefined(onHover)) {\n\n\t\t\tconst lines = helper(this.props, moreProps);\n\n\t\t\tfor (let i = 0; i < lines.length; i++) {\n\t\t\t\tconst line1 = lines[i];\n\n\t\t\t\tconst left = Math.min(line1.x1, line1.x2);\n\t\t\t\tconst right = Math.max(line1.x1, line1.x2);\n\t\t\t\tconst top = Math.min(line1.y1, line1.y2);\n\t\t\t\tconst bottom = Math.max(line1.y1, line1.y2);\n\n\t\t\t\tconst isWithinLineBounds = mouseX >= left && mouseX <= right\n\t\t\t\t\t&& mouseY >= top && mouseY <= bottom;\n\n\t\t\t\thovering = isWithinLineBounds\n\t\t\t\t\t&& isHovering2(\n\t\t\t\t\t\t[line1.x1, line1.y1],\n\t\t\t\t\t\t[line1.x2, line1.y2],\n\t\t\t\t\t\tmouseXY,\n\t\t\t\t\t\ttolerance);\n\n\t\t\t\tif (hovering) break;\n\t\t\t}\n\t\t}\n\t\treturn hovering;\n\t}\n\tdrawOnCanvas(ctx, moreProps) {\n\t\tconst {\n\t\t\tstroke, strokeWidth, strokeOpacity,\n\t\t\tfill, fillOpacity,\n\t\t\tfontFamily, fontSize, fontFill\n\t\t} = this.props;\n\n\n\t\tconst lines = helper(this.props, moreProps);\n\n\t\tctx.lineWidth = strokeWidth;\n\t\tctx.strokeStyle = hexToRGBA(stroke, strokeOpacity);\n\n\t\tctx.font = `${ fontSize }px ${fontFamily}`;\n\t\tctx.fillStyle = fontFill;\n\n\t\tlines.forEach(line => {\n\t\t\tconst {\n\t\t\t\tx1, y1, x2, y2, label\n\t\t\t} = line;\n\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x1, y1);\n\t\t\tctx.lineTo(x2, y2);\n\t\t\tctx.stroke();\n\t\t\tctx.beginPath();\n\t\t\tctx.fillText(label.text, label.x, label.y);\n\t\t});\n\t\tconst pairsOfLines = pairs(lines);\n\n\t\tpairsOfLines.forEach(([line1, line2], idx) => {\n\t\t\tctx.fillStyle = hexToRGBA(fill[idx], fillOpacity);\n\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(line1.x1, line1.y1);\n\t\t\tctx.lineTo(line1.x2, line1.y2);\n\t\t\tctx.lineTo(line2.x2, line2.y2);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t});\n\t}\n\trenderSVG(moreProps) {\n\t\tconst { stroke, strokeWidth, fillOpacity, fill, strokeOpacity } = this.props;\n\n\t\tconst lines = helper(this.props, moreProps);\n\t\tconst pairsOfLines = pairs(lines);\n\n\t\treturn (\n\t\t\t<g>\n\t\t\t\t{lines.map((each, idx) => {\n\t\t\t\t\tconst { x1, y1, x2, y2 } = each;\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<line key={idx}\n\t\t\t\t\t\t\tstrokeWidth={strokeWidth}\n\t\t\t\t\t\t\tstroke={stroke}\n\t\t\t\t\t\t\tstrokeOpacity={strokeOpacity}\n\t\t\t\t\t\t\tx1={x1}\n\t\t\t\t\t\t\ty1={y1}\n\t\t\t\t\t\t\tx2={x2}\n\t\t\t\t\t\t\ty2={y2}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t\t{pairsOfLines.map(([line1, line2], idx) => {\n\t\t\t\t\tconst ctx = d3Path();\n\t\t\t\t\tctx.moveTo(line1.x1, line1.y1);\n\t\t\t\t\tctx.lineTo(line1.x2, line1.y2);\n\t\t\t\t\tctx.lineTo(line2.x2, line2.y2);\n\t\t\t\t\tctx.closePath();\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<path key={idx}\n\t\t\t\t\t\t\tstroke=\"none\"\n\t\t\t\t\t\t\tfill={fill[idx]}\n\t\t\t\t\t\t\tfillOpacity={fillOpacity}\n\t\t\t\t\t\t\td={ctx.toString()}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</g>\n\t\t);\n\t}\n\trender() {\n\t\tconst { selected, interactiveCursorClass } = this.props;\n\t\tconst { onDragStart, onDrag, onDragComplete, onHover, onUnHover } = this.props;\n\n\t\treturn <GenericChartComponent\n\t\t\tisHover={this.isHover}\n\n\t\t\tsvgDraw={this.renderSVG}\n\t\t\tcanvasToDraw={getMouseCanvas}\n\t\t\tcanvasDraw={this.drawOnCanvas}\n\n\t\t\tinteractiveCursorClass={interactiveCursorClass}\n\t\t\tselected={selected}\n\n\t\t\tonDragStart={onDragStart}\n\t\t\tonDrag={onDrag}\n\t\t\tonDragComplete={onDragComplete}\n\t\t\tonHover={onHover}\n\t\t\tonUnHover={onUnHover}\n\n\t\t\tdrawOn={[\"mousemove\", \"mouseleave\", \"pan\", \"drag\"]}\n\t\t/>;\n\t}\n}\n\nfunction getLineCoordinates(start, endX, endY, text) {\n\tconst end = [\n\t\tendX,\n\t\tendY\n\t];\n\treturn {\n\t\tstart, end, text\n\t};\n}\n\nfunction helper(props, moreProps) {\n\tconst { startXY, endXY } = props;\n\n\tconst {\n\t\txScale,\n\t\tchartConfig: { yScale }\n\t} = moreProps;\n\tif (isNotDefined(startXY) || isNotDefined(endXY)) {\n\t\treturn [];\n\t}\n\tconst [x1, y1] = startXY;\n\tconst [x2, y2] = endXY;\n\n\tconst dx = x2 - x1;\n\tconst dy = y2 - y1;\n\n\tif (dx !== 0 && dy !== 0) {\n\t\t// console.log(\"modLine ->\", startXY, modLine, dx1, dy1)\n\t\tconst halfY = getLineCoordinates(\n\t\t\tstartXY,\n\t\t\tx2,\n\t\t\ty1 + dy / 2,\n\t\t\t\"2/1\"\n\t\t);\n\t\tconst oneThirdY = getLineCoordinates(\n\t\t\tstartXY,\n\t\t\tx2,\n\t\t\ty1 + dy / 3,\n\t\t\t\"3/1\"\n\t\t);\n\t\tconst oneFourthY = getLineCoordinates(\n\t\t\tstartXY,\n\t\t\tx2,\n\t\t\ty1 + dy / 4,\n\t\t\t\"4/1\"\n\t\t);\n\t\tconst oneEighthY = getLineCoordinates(\n\t\t\tstartXY,\n\t\t\tx2,\n\t\t\ty1 + dy / 8,\n\t\t\t\"8/1\"\n\t\t);\n\t\tconst halfX = getLineCoordinates(\n\t\t\tstartXY,\n\t\t\tx1 + dx / 2,\n\t\t\ty2,\n\t\t\t\"1/2\"\n\t\t);\n\t\tconst oneThirdX = getLineCoordinates(\n\t\t\tstartXY,\n\t\t\tx1 + dx / 3,\n\t\t\ty2,\n\t\t\t\"1/3\"\n\t\t);\n\t\tconst oneFourthX = getLineCoordinates(\n\t\t\tstartXY,\n\t\t\tx1 + dx / 4,\n\t\t\ty2,\n\t\t\t\"1/4\"\n\t\t);\n\t\tconst oneEighthX = getLineCoordinates(\n\t\t\tstartXY,\n\t\t\tx1 + dx / 8,\n\t\t\ty2,\n\t\t\t\"1/8\"\n\t\t);\n\t\tconst lines = [\n\t\t\toneEighthX,\n\t\t\toneFourthX,\n\t\t\toneThirdX,\n\t\t\thalfX,\n\t\t\t{ start: startXY, end: endXY, text: \"1/1\" },\n\t\t\thalfY,\n\t\t\toneThirdY,\n\t\t\toneFourthY,\n\t\t\toneEighthY,\n\t\t];\n\t\tconst lineCoods = lines.map(line => {\n\t\t\tconst { x1, y1, x2, y2 } = generateLine({\n\t\t\t\ttype: \"RAY\",\n\t\t\t\tstart: line.start,\n\t\t\t\tend: line.end,\n\t\t\t\txScale,\n\t\t\t\tyScale,\n\t\t\t});\n\t\t\treturn {\n\t\t\t\tx1: xScale(x1),\n\t\t\t\ty1: yScale(y1),\n\t\t\t\tx2: xScale(x2),\n\t\t\t\ty2: yScale(y2),\n\t\t\t\tlabel: {\n\t\t\t\t\tx: xScale(line.end[0]),\n\t\t\t\t\ty: yScale(line.end[1]),\n\t\t\t\t\ttext: line.text\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t\treturn lineCoods;\n\t}\n\treturn [];\n}\n\n\nGannFan.propTypes = {\n\tinteractiveCursorClass: PropTypes.string,\n\tstroke: PropTypes.string.isRequired,\n\tstrokeWidth: PropTypes.number.isRequired,\n\tfill: PropTypes.arrayOf(PropTypes.string).isRequired,\n\tstrokeOpacity: PropTypes.number.isRequired,\n\tfillOpacity: PropTypes.number.isRequired,\n\n\tfontFamily: PropTypes.string.isRequired,\n\tfontSize: PropTypes.number.isRequired,\n\tfontFill: PropTypes.string.isRequired,\n\n\tonDragStart: PropTypes.func.isRequired,\n\tonDrag: PropTypes.func.isRequired,\n\tonDragComplete: PropTypes.func.isRequired,\n\tonHover: PropTypes.func,\n\tonUnHover: PropTypes.func,\n\n\tdefaultClassName: PropTypes.string,\n\n\ttolerance: PropTypes.number.isRequired,\n\tselected: PropTypes.bool.isRequired,\n};\n\nGannFan.defaultProps = {\n\tonDragStart: noop,\n\tonDrag: noop,\n\tonDragComplete: noop,\n\n\tstrokeWidth: 1,\n\ttolerance: 4,\n\tselected: false,\n};\n\nexport default GannFan;\n"]},"metadata":{},"sourceType":"script"}